#void VidRec_yuv2rgb_blend(char* srcbuf,int src_w,int src_h,char* desbuf,char*backbuf,int padding);
#function: convert yuv422 image to RGB565 format and blend with background image,for LCD display
#
#2009/08/27 added notation by liyongian.	

#include "regdef.h"

	.data	
	.half	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	.half	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
blue_clip:	
	.half	0x0000,0x0001,0x0002,0x0003,0x0004,0x0005,0x0006,0x0007,0x0008,0x0009,0x000a,0x000b,0x000c,0x000d,0x000e,0x000f
	.half	0x0010,0x0011,0x0012,0x0013,0x0014,0x0015,0x0016,0x0017,0x0018,0x0019,0x001a,0x001b,0x001c,0x001d,0x001e,0x001f
	.half	0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f,0x001f
	.half	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	.half	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
green_clip:	
	.half	0x0000,0x0020,0x0040,0x0060,0x0080,0x00a0,0x00c0,0x00e0,0x0100,0x0120,0x0140,0x0160,0x0180,0x01a0,0x01c0,0x01e0
	.half	0x0200,0x0220,0x0240,0x0260,0x0280,0x02a0,0x02c0,0x02e0,0x0300,0x0320,0x0340,0x0360,0x0380,0x03a0,0x03c0,0x03e0
	.half	0x0400,0x0420,0x0440,0x0460,0x0480,0x04a0,0x04c0,0x04e0,0x0500,0x0520,0x0540,0x0560,0x0580,0x05a0,0x05c0,0x05e0
	.half	0x0600,0x0620,0x0640,0x0660,0x0680,0x06a0,0x06c0,0x06e0,0x0700,0x0720,0x0740,0x0760,0x0780,0x07a0,0x07c0,0x07e0
	.half	0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0
	.half	0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0,0x07e0
	.half	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
red_clip:	
	.half	0x0000,0x0800,0x1000,0x1800,0x2000,0x2800,0x3000,0x3800,0x4000,0x4800,0x5000,0x5800,0x6000,0x6800,0x7000,0x7800
	.half	0x8000,0x8800,0x9000,0x9800,0xa000,0xa800,0xb000,0xb800,0xc000,0xc800,0xd000,0xd800,0xe000,0xe800,0xf000,0xf800
	.half	0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800,0xf800

	.text
	.globl VidRec_yuv2rgb_blend
	.ent VidRec_yuv2rgb_blend
	.set noreorder	
	
	#VidRec_yuv2rgb_blend(char* srcbuf,int src_w,int src_h,char* desbuf,char*backbuf,int padding)
		
VidRec_yuv2rgb_blend:	
	subu 	sp, 	sp, 	64 	
	sw 	ra, 	60(sp)
	sw 	fp, 	56(sp)
	sw 	s0, 	52(sp)
	sw 	s1, 	48(sp)
	sw 	s2, 	44(sp)
	sw 	s3, 	40(sp)
	sw 	s4, 	36(sp)
	sw 	s5, 	32(sp)
	sw 	s6, 	28(sp)
	sw 	s7, 	24(sp)	
	li	s0,	454
	li	s1,	88
	li	s2,	183
	li	s3,	359
	la	s4,	blue_clip
	la	s5,	green_clip
	la	s6,	red_clip
	li	t0,	0xdfffffff
	sw	a1,	68(sp)	
	lw	s7,	80(sp)
	lw	v1,	84(sp)
	and	a0,	a0,	t0
	and	s7,	s7,	t0	
	cache 	2,	0
	nop
	nop
	nop
		
loop_height:
loop_width:
	lbu	t0,	0(a0)
	lbu	t1,	1(a0)
	lbu	t3,	3(a0)
	sub	t1,	t1,	128
	sub	t3,	t3,	128

	mult	t1,	s0
	lbu	t2,	2(a0)		#remove nop
	mflo	t4
	
	mult 	t1,	s1
	sra	t4,	t4,	0x8	#t4 = U*454>>8
	madd	t3,	s2
	add	t7,	t0,	t4
	mflo	t5
	sra	t5,	t5,	0x8	#t4 = (U*88+V*183)>>8
	
	mult	t3,	s3
	sub	t8,	t0,	t5
	lh	v0,	0(s7)	
	mflo	t6

	bnez	v0,	back_not_trans1			
	sra	t6,	t6,	0x8	#t6 = V*359>>8
	
	addi	t7,	t7,	0x4	#B
	sra	t7,	t7,	0x3
	sll	t7,	t7,	0x1
	add	t7,	t7,	s4
	lh	t7,	0(t7)
	
	addi	t8,	t8,	0x2	#G
	sra	t8,	t8,	0x2
	sll	t8,	t8,	0x1
	add	t8,	t8,	s5
	lh	t8,	0(t8)
	
	add	t9,	t0,	t6
	addi	t9,	t9,	0x4	#R
	sra	t9,	t9,	0x3
	sll	t9,	t9,	0x1
	add	t9,	t9,	s6
	lh	t9,	0(t9)
	
	or	v0,	t7,	t8
	or	v0,	v0,	t9
	
back_not_trans1:	
	sh	v0,	0(a3)

	add	t7,	t2,	t4
	
	lh	v0,	2(s7)
		
	sra	t7,	t7,	0x3
	
	bnez	v0,	back_not_trans2		
	addi	s7,	s7,	0x4
		
	sll	t7,	t7,	0x1
	add	t7,	t7,	s4
	lh	t7,	0(t7)
	
	sub	t8,	t2,	t5
	sra	t8,	t8,	0x2
	sll	t8,	t8,	0x1
	add	t8,	t8,	s5
	lh	t8,	0(t8)
	
	add	t9,	t2,	t6
	sra	t9,	t9,	0x3
	sll	t9,	t9,	0x1
	add	t9,	t9,	s6
	lh	t9,	0(t9)
	
	or	v0,	t7,	t8
	or	v0,	v0,	t9
	
back_not_trans2:	
	sh	v0,	2(a3)
		
	addi	a0,	a0,	0x4
	sub	a1,	a1,	0x2
	bne	a1,	zero,	loop_width
	addi	a3,	a3,	0x4
	add	a3,	a3,	v1
	add	s7,	s7,	v1	
	sub	a2,	a2,	1	
	bne	a2,	zero,	loop_height	
	lw	a1,	68(sp)
		
	lw 	ra, 	60(sp)	
	lw 	fp, 	56(sp)	
	lw 	s0, 	52(sp)	
	lw 	s1, 	48(sp)	
	lw 	s2, 	44(sp)	
	lw 	s3, 	40(sp)	
	lw 	s4, 	36(sp)	
	lw 	s5, 	32(sp)	
	lw 	s6, 	28(sp)	
	lw 	s7, 	24(sp)	
	jr 	ra 			
	addu 	sp, 	sp, 	64 	
	.set reorder
	.end VidRec_yuv2rgb_blend

