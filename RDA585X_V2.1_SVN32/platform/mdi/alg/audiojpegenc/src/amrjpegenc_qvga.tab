		//0x0100		VoC_code_section_1
		//0x0100		COOLSAND_ENCODE_AMRRING
0xDFE977F8,	//0x0100		VoC_push16(RA,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)
0xE02077F9,	//0x0102		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0xE2047005,	//0x0104		VoC_lw16i_short(REG4,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x000C1794,	//0x0106		VoC_cfg_lg(0xc,)
0x000C1792,	//0x0108		VoC_cfg_lg(0xc,)
0x40101582,	//0x010a		VoC_sw32_d(REG45,0x4010)
0x400E1500,	//0x010c		VoC_sw16_d(REG0,0x400e)
0x40016C0C,	//0x010e		VoC_bez16_d(LABLE_VOC_INIT_FINISH,0x4001)
0xF01CF002,	//0x0110		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xF01EF01D,	//0x0112		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0x1542F01F,	//0x0114		VoC_sw16_d(REG2,0xffc1)(lo)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x0A967FC1,	//0x0116		VoC_lw16i(STATUS,0x3f)(lo)	|	VoC_sw16_d(REG2,0xffc1)(hi)
0xF01B003F,	//0x0118		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw16i(STATUS,0x3f)(hi)
		//0x011a		LABLE_VOC_INIT_FINISH
0x00100A87,	//0x011a		VoC_lw16i(REG7,0x10)
0xE506790F,	//0x011c		VoC_lw16i_short(REG6,0x50,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0x1,DEFAULT)
0x40021485,	//0x011e		VoC_lw32_d(ACC1,0x4002)
0x7FC215C3,	//0x0120		VoC_sw32_d(REG67,0xffc2)
0x7FC415C5,	//0x0122		VoC_sw32_d(ACC1,0xffc4)
0xFFC0DE80,	//0x0124		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0126		VoC_cfg_lg(0x8,)
0x40261402,	//0x0128		VoC_lw16_d(REG2,0x4026)
0x00101804,	//0x012a		VoC_lw16i_set_inc(REG0,0x10,0x1)
0x2D40F6D8,	//0x012c		VoC_loop_i(0x0,0xa0)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffff6,DEFAULT)
0x8C830132,	//0x012e		VoC_multf16_rp(REG3,REG2,REG0,DEFAULT)	|	VoC_loop_i(0x0,0xa0)(hi)
0xFFC0FFC0,	//0x0130		VoC_NOP	|	VoC_NOP
		//0x0132		VoC_endloop0
0xF7F8DC83,	//0x0132		VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0x40011402,	//0x0134		VoC_lw16_d(REG2,0x4001)
0x3182F003,	//0x0136		VoC_bez16_r(NO_SECTION_RESET,REG2)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xF023013A,	//0x0138		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bez16_r(NO_SECTION_RESET,REG2)(hi)
		//0x013a		NO_SECTION_RESET
0x40292882,	//0x013a		VoC_or16_rd(REG2,0x4029)
0x40291503,	//0x013c		VoC_sw16_d(REG3,0x4029)
0x00100A80,	//0x013e		VoC_lw16i(REG0,0x10)
0x09E72B80,	//0x0140		VoC_jal(CII_AMR_Encode)
0xE0077102,	//0x0142		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0x40041485,	//0x0144		VoC_lw32_d(ACC1,0x4004)
0x7FC215C1,	//0x0146		VoC_sw32_d(REG23,0xffc2)
0x7FC415C5,	//0x0148		VoC_sw32_d(ACC1,0xffc4)
0x01400A86,	//0x014a		VoC_lw16i(REG6,0x140)
0xDFA97F44,	//0x014c		VoC_pop16(RA,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x40121583,	//0x014e		VoC_sw32_d(REG67,0x4012)
0x40011508,	//0x0150		VoC_sw16_d(ACC0_LO,0x4001)
0xFFC0DE80,	//0x0152		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0154		VoC_cfg_lg(0x8,)
0xFFC0E580,	//0x0156		VoC_NAD	|	VoC_return
		//0x0158		COOLSAND_RGB2JPEG
0xDFE97002,	//0x0158		VoC_push16(RA,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xE016701C,	//0x015a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF01EF01D,	//0x015c		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0x1542F01F,	//0x015e		VoC_sw16_d(REG2,0xffc1)(lo)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x0A967FC1,	//0x0160		VoC_lw16i(STATUS,0x3f)(lo)	|	VoC_sw16_d(REG2,0xffc1)(hi)
0xF01B003F,	//0x0162		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw16i(STATUS,0x3f)(hi)
0x40094036,	//0x0164		VoC_be16_rd(LABLE_RESET_QUALITY_1,REG6,0x4009)
0x447A0A86,	//0x0166		VoC_lw16i(REG6,0x447a)
0xFFC0E5C4,	//0x0168		VoC_NAD	|	VoC_jump(LABLE_RESET_QUALITY_END)
		//0x016a		LABLE_RESET_QUALITY_1
0x44FA0A86,	//0x016a		VoC_lw16i(REG6,0x44fa)
		//0x016c		LABLE_RESET_QUALITY_END
0xFF44700B,	//0x016c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
0x025F0A8A,	//0x016e		VoC_lw16i(ACC1_LO,0x25f)
0x10F11506,	//0x0170		VoC_sw16_d(REG6,0x10f1)
0x40101585,	//0x0172		VoC_sw32_d(ACC1,0x4010)
0x10E91508,	//0x0174		VoC_sw16_d(ACC0_LO,0x10e9)
0x10EA1584,	//0x0176		VoC_sw32_d(ACC0,0x10ea)
0x1584F108,	//0x0178		VoC_sw32_d(ACC0,0x10ec)(lo)	|	VoC_lw16i_short(ACC0_LO,0x8,DEFAULT)
0x158410EC,	//0x017a		VoC_sw32_d(ACC0,0x10ee)(lo)	|	VoC_sw32_d(ACC0,0x10ec)(hi)
0x780710EE,	//0x017c		VoC_bez32_d(LABLE_STANDARD_JPEG,0x4006)(lo)	|	VoC_sw32_d(ACC0,0x10ee)(hi)
0x2B804006,	//0x017e		VoC_jal(COOLSAND_ZOOM_JpgeEnc)(lo)	|	VoC_bez32_d(LABLE_STANDARD_JPEG,0x4006)(hi)
0xDFA92167,	//0x0180		VoC_pop16(RA,DEFAULT)	|	VoC_jal(COOLSAND_ZOOM_JpgeEnc)(hi)
0xE580FFC0,	//0x0182		VoC_return	|	VoC_NOP
		//0x0184		LABLE_STANDARD_JPEG
0x05000A84,	//0x0184		VoC_lw16i(REG4,0x500)
0x04000A85,	//0x0186		VoC_lw16i(REG5,0x400)
0x400A5D02,	//0x0188		VoC_bne32_rd(LABLE_NONE_1280BY1024,REG45,0x400a)
0x400C6C08,	//0x018a		VoC_bez16_d(LABLE_JPEG_RGB,0x400c)
0x1D742B80,	//0x018c		VoC_jal(COOLSAND_1280BY1024_YUV422_JPEG)
0xFFC0DFA9,	//0x018e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x0190		VoC_NAD	|	VoC_return
		//0x0192		LABLE_JPEG_RGB
0x05002B80,	//0x0192		VoC_jal(COOLSAND_1280BY1024_JPEG)
0xFFC0DFA9,	//0x0194		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x0196		VoC_NAD	|	VoC_return
		//0x0198		LABLE_NONE_1280BY1024
0x400A1482,	//0x0198		VoC_lw32_d(REG45,0x400a)
0x015E0A86,	//0x019a		VoC_lw16i(REG6,0x15e)
0x02BC0A87,	//0x019c		VoC_lw16i(REG7,0x2bc)
0x400A4906,	//0x019e		VoC_blt16_rd(LABLE_JPEG_4222,REG6,0x400a)
0x400C6C08,	//0x01a0		VoC_bez16_d(LABLE_JPEG_RGB_411,0x400c)
0x1BF02B80,	//0x01a2		VoC_jal(COOLSAND_YUV2JPEG411)
0xFFC0DFA9,	//0x01a4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x01a6		VoC_NAD	|	VoC_return
		//0x01a8		LABLE_JPEG_RGB_411
0x01BC2B80,	//0x01a8		VoC_jal(COOLSAND_RGB2JPEG411)
0xFFC0DFA9,	//0x01aa		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x01ac		VoC_NAD	|	VoC_return
		//0x01ae		LABLE_JPEG_4222
0x400A4897,	//0x01ae		VoC_blt16_rd(LABLE_WRONG_SIZE,REG7,0x400a)
0x400C6C06,	//0x01b0		VoC_bez16_d(LABLE_JPEG_RGB_422,0x400c)
0x1A5E2B80,	//0x01b2		VoC_jal(COOLSAND_YUVJPEG422)
0xFFC0E5C4,	//0x01b4		VoC_NAD	|	VoC_jump(LABLE_WRONG_SIZE)
		//0x01b6		LABLE_JPEG_RGB_422
0x02D82B80,	//0x01b6		VoC_jal(COOLSAND_RGB2JPEG422)
		//0x01b8		LABLE_WRONG_SIZE
0xFFC0DFA9,	//0x01b8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x01ba		VoC_NAD	|	VoC_return
		//0x01bc		COOLSAND_RGB2JPEG411
0x400A1482,	//0x01bc		VoC_lw32_d(REG45,0x400a)
0xFF135FE9,	//0x01be		VoC_movreg32(REG67,REG45,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE00578DC,	//0x01c0		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffb,DEFAULT)
0x000F1606,	//0x01c2		VoC_and16_ri(REG6,0xf)
0x000F1607,	//0x01c4		VoC_and16_ri(REG7,0xf)
0x40151505,	//0x01c6		VoC_sw16_d(REG5,0x4015)
0x0E6A1582,	//0x01c8		VoC_sw32_d(REG45,0xe6a)
0x400A1482,	//0x01ca		VoC_lw32_d(REG45,0x400a)
0x01DA3186,	//0x01cc		VoC_bez16_r(LABLE_WIDTH_MULTIPLE16,REG6)
0xE01071E6,	//0x01ce		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xf,DEFAULT)
0x400D1504,	//0x01d0		VoC_sw16_d(REG4,0x400d)
0x1644C134,	//0x01d2		VoC_and16_ri(REG4,0xfff0)(lo)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x15007FF0,	//0x01d4		VoC_sw16_d(REG0,0x4015)(lo)	|	VoC_and16_ri(REG4,0xfff0)(hi)
0x15044015,	//0x01d6		VoC_sw16_d(REG4,0x400a)(lo)	|	VoC_sw16_d(REG0,0x4015)(hi)
0xFFC0400A,	//0x01d8		VoC_NAD	|	VoC_sw16_d(REG4,0x400a)(hi)
		//0x01da		LABLE_WIDTH_MULTIPLE16
0x01E43187,	//0x01da		VoC_bez16_r(LABLE_WIDTH_HEIGHT_MULTIPLE16,REG7)
0x0D40072D,	//0x01dc		VoC_add16_rd(REG5,REG5,0xd40)
0x7FF01645,	//0x01de		VoC_and16_ri(REG5,0xfff0)
0x1505FFC0,	//0x01e0		VoC_sw16_d(REG5,0x400b)(lo)	|	VoC_NOP
0xFFC0400B,	//0x01e2		VoC_NAD	|	VoC_sw16_d(REG5,0x400b)(hi)
		//0x01e4		LABLE_WIDTH_HEIGHT_MULTIPLE16
0x0D180726,	//0x01e4		VoC_add16_rd(REG6,REG4,0xd18)
0x0D1807A7,	//0x01e6		VoC_sub16_rd(REG7,REG4,0xd18)
0xE00178EC,	//0x01e8		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)
0x0D180725,	//0x01ea		VoC_add16_rd(REG5,REG4,0xd18)
0x0E6C1583,	//0x01ec		VoC_sw32_d(REG67,0xe6c)
0x0E6E1582,	//0x01ee		VoC_sw32_d(REG45,0xe6e)
		//0x01f0		LABLE_REG2JPEG_LOOP_HEIGHT_411
0xFFC0F780,	//0x01f0		VoC_NAD	|	VoC_lw16i_short(REG0,0xfffffffc,DEFAULT)
0x07822B80,	//0x01f2		VoC_jal(DEMAI_READ_RGBDATA)
0x10F21804,	//0x01f4		VoC_lw16i_set_inc(REG0,0x10f2,0x1)
0xFFC0F005,	//0x01f6		VoC_NAD	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x01f8		LABLE_REG2JPEG_LOOP_WIDTH_411
0xF4017030,	//0x01f8		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x0F681806,	//0x01fa		VoC_lw16i_set_inc(REG2,0xf68,0x1)
0x10681807,	//0x01fc		VoC_lw16i_set_inc(REG3,0x1068,0x1)
0xDFC55F40,	//0x01fe		VoC_push16(REG5,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x5C401805,	//0x0200		VoC_lw16i_set_inc(REG1,0x5c40,0x1)
0x02692B80,	//0x0202		VoC_jal(MCU_QUA_RGB2YUV411)
0x0700D908,	//0x0204		VoC_add16_rd(REG0,REG0,0xd18)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x18050D18,	//0x0206		VoC_lw16i_set_inc(REG1,0x5c40,0x1)(lo)	|	VoC_add16_rd(REG0,REG0,0xd18)(hi)
0x18065C40,	//0x0208		VoC_lw16i_set_inc(REG2,0xfa8,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x5c40,0x1)(hi)
0x18070FA8,	//0x020a		VoC_lw16i_set_inc(REG3,0x106c,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0xfa8,0x1)(hi)
0x2B80106C,	//0x020c		VoC_jal(MCU_QUA_RGB2YUV411)(lo)	|	VoC_lw16i_set_inc(REG3,0x106c,0x1)(hi)
0xD9080269,	//0x020e		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(MCU_QUA_RGB2YUV411)(hi)
0x0E6E0700,	//0x0210		VoC_add16_rd(REG0,REG0,0xe6e)
0x5C401805,	//0x0212		VoC_lw16i_set_inc(REG1,0x5c40,0x1)
0x0FE81806,	//0x0214		VoC_lw16i_set_inc(REG2,0xfe8,0x1)
0x10881807,	//0x0216		VoC_lw16i_set_inc(REG3,0x1088,0x1)
0x02692B80,	//0x0218		VoC_jal(MCU_QUA_RGB2YUV411)
0x0700D908,	//0x021a		VoC_add16_rd(REG0,REG0,0xe6f)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x18050E6F,	//0x021c		VoC_lw16i_set_inc(REG1,0x5c40,0x1)(lo)	|	VoC_add16_rd(REG0,REG0,0xe6f)(hi)
0x18065C40,	//0x021e		VoC_lw16i_set_inc(REG2,0x1028,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x5c40,0x1)(hi)
0x18071028,	//0x0220		VoC_lw16i_set_inc(REG3,0x108c,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x1028,0x1)(hi)
0xFFC0108C,	//0x0222		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x108c,0x1)(hi)
0x02692B80,	//0x0224		VoC_jal(MCU_QUA_RGB2YUV411)
0x10E91806,	//0x0226		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0F681804,	//0x0228		VoC_lw16i_set_inc(REG0,0xf68,0x1)
0xFFC0F004,	//0x022a		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x022c		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x022e		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FA81804,	//0x0230		VoC_lw16i_set_inc(REG0,0xfa8,0x1)
0xFFC0F004,	//0x0232		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x0234		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x0236		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FE81804,	//0x0238		VoC_lw16i_set_inc(REG0,0xfe8,0x1)
0xFFC0F004,	//0x023a		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x023c		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x023e		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x10281804,	//0x0240		VoC_lw16i_set_inc(REG0,0x1028,0x1)
0xFFC0F004,	//0x0242		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x0244		VoC_jal(COOLSAND_encode_block)
0x10EA1806,	//0x0246		VoC_lw16i_set_inc(REG2,0x10ea,0x1)
0x10681804,	//0x0248		VoC_lw16i_set_inc(REG0,0x1068,0x1)
0xFFC0F024,	//0x024a		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x024c		VoC_jal(COOLSAND_encode_block)
0x10EB1806,	//0x024e		VoC_lw16i_set_inc(REG2,0x10eb,0x1)
0x10A81804,	//0x0250		VoC_lw16i_set_inc(REG0,0x10a8,0x1)
0xFFC0F024,	//0x0252		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x0254		VoC_jal(COOLSAND_encode_block)
0xDF855F00,	//0x0256		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x4020F204,	//0x0258		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x10,DEFAULT)
0x4C25C165,	//0x025a		VoC_bnlt16_rd(LABLE_CON1_411,REG5,0x400a)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0x2B00400A,	//0x025c		VoC_jump_lg(LABLE_REG2JPEG_LOOP_WIDTH_411)(lo)	|	VoC_bnlt16_rd(LABLE_CON1_411,REG5,0x400a)(hi)
0xC06101F8,	//0x025e		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_jump_lg(LABLE_REG2JPEG_LOOP_WIDTH_411)(hi)
		//0x025f		LABLE_CON1_411
0x400B4C21,	//0x0260		VoC_bnlt16_rd(LABLE_CON2_411,REG1,0x400b)
0x01F02B00,	//0x0262		VoC_jump_lg(LABLE_REG2JPEG_LOOP_HEIGHT_411)
		//0x0264		LABLE_CON2_411
0x096E2B80,	//0x0264		VoC_jal(COOLSNAD_flush_bits)
0xFFC0DFA9,	//0x0266		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFC1E580,	//0x0268		VoC_push16(REG1,DEFAULT)	|	VoC_return
		//0x0269		MCU_QUA_RGB2YUV411
0x02D52C09,	//0x026a		VoC_loop_i(0x1,0x4)
0x02A72C08,	//0x026c		VoC_loop_i(0x0,0x4)
0xFF455884,	//0x026e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xF6856086,	//0x0270		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0xD611795C,	//0x0272		VoC_lw16_sd(REG1,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xb,DEFAULT)
0xF9EC79DD,	//0x0274		VoC_shru16_ri(REG4,0xfffffffd,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffffb,DEFAULT)
0xF9AE7955,	//0x0276		VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xa,DEFAULT)
0xF9F51B0C,	//0x0278		VoC_shru16_ri(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0xF9465129,	//0x027a		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xE0CAD131,	//0x027c		VoC_movreg16(ACC1_LO,REG6,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0x9B0C7C44,	//0x027e		VoC_multf32inc_rp(ACC0,REG4,REG1,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x8,DEFAULT)
0xF7075129,	//0x0280		VoC_movreg16(REG7,ACC0_LO,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0x0D5607BF,	//0x0282		VoC_sub16_rd(REG7,REG7,0xd56)
0x492CFDCD,	//0x0284		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shru32_ri(ACC1,0xfffffff9,DEFAULT)
0x5CA7FF45,	//0x0286		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x1B4CFC44,	//0x0288		VoC_multf32inc_rp(ACC0,REG5,REG1,DEFAULT)	|	VoC_shru32_ri(ACC0,0x8,IN_PARALLEL)
0x5031F68A,	//0x028a		VoC_mac32_rp(REG6,REG1,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)
0x7DCDDC38,	//0x028c		VoC_shru32_ri(ACC1,0xfffffff9,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG3,IN_PARALLEL)
0x492DD884,	//0x028e		VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0x7C45D611,	//0x0290		VoC_shru32_ri(ACC1,0x8,DEFAULT)	|	VoC_lw16_sd(REG1,0x0,IN_PARALLEL)
0x795CF685,	//0x0292		VoC_shru16_ri(REG4,0xb,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0x79ECF686,	//0x0294		VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x7955F9DD,	//0x0296		VoC_shru16_ri(REG5,0xa,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffb,IN_PARALLEL)
0x1B0CF9AE,	//0x0298		VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)
0x5129F9F5,	//0x029a		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffe,IN_PARALLEL)
0xD131F946,	//0x029c		VoC_mac32inc_rp(REG6,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,IN_PARALLEL)
0x00400A87,	//0x029e		VoC_lw16i(REG7,0x40)
0xC1DF7C44,	//0x02a0		VoC_add16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x8,DEFAULT)
0xDC7AE107,	//0x02a2		VoC_sw16_p(ACC1_LO,REG7,DEFAULT)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0x0D5607BF,	//0x02a4		VoC_sub16_rd(REG7,REG7,0xd56)
0xDCA7DE18,	//0x02a6		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
		//0x02a7		VoC_endloop0
0x0E6D0700,	//0x02a8		VoC_add16_rd(REG0,REG0,0xe6d)
0x02D22C08,	//0x02aa		VoC_loop_i(0x0,0x4)
0x6086D884,	//0x02ac		VoC_movreg16(REG6,REG4,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x795CF685,	//0x02ae		VoC_shru16_ri(REG4,0xb,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0x79ECD611,	//0x02b0		VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)	|	VoC_lw16_sd(REG1,0x0,IN_PARALLEL)
0x7955F9DD,	//0x02b2		VoC_shru16_ri(REG5,0xa,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffb,IN_PARALLEL)
0x1B0CF9AE,	//0x02b4		VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)
0x5129F9F5,	//0x02b6		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffe,IN_PARALLEL)
0xD131F946,	//0x02b8		VoC_mac32inc_rp(REG6,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,IN_PARALLEL)
0x7C44D884,	//0x02ba		VoC_shru32_ri(ACC0,0x8,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x6107F685,	//0x02bc		VoC_movreg16(REG7,ACC0_LO,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0x07BFF686,	//0x02be		VoC_sub16_rd(REG7,REG7,0xd56)(lo)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x795C0D56,	//0x02c0		VoC_shru16_ri(REG4,0xb,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0xd56)(hi)
0x79ECF9DD,	//0x02c2		VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffb,IN_PARALLEL)
0x7955D611,	//0x02c4		VoC_shru16_ri(REG5,0xa,DEFAULT)	|	VoC_lw16_sd(REG1,0x0,IN_PARALLEL)
0x1B0CF9AE,	//0x02c6		VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)
0x5129F9F5,	//0x02c8		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffe,IN_PARALLEL)
0xD131F946,	//0x02ca		VoC_mac32inc_rp(REG6,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,IN_PARALLEL)
0xFC44DCA7,	//0x02cc		VoC_shru32_ri(ACC0,0x8,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0x07BFE107,	//0x02ce		VoC_sub16_rd(REG7,REG7,0xd56)(lo)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0xF0840D56,	//0x02d0		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0xd56)(hi)
		//0x02d2		VoC_endloop0
0x0700DCA7,	//0x02d2		VoC_add16_rd(REG0,REG0,0xe6d)(lo)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0xC0E30E6D,	//0x02d4		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0xe6d)(hi)
		//0x02d5		VoC_endloop1
0xE580DF81,	//0x02d6		VoC_return	|	VoC_pop16(REG1,DEFAULT)
		//0x02d8		COOLSAND_RGB2JPEG422
0x400A1482,	//0x02d8		VoC_lw32_d(REG45,0x400a)
0xFF135FE9,	//0x02da		VoC_movreg32(REG67,REG45,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE00578E4,	//0x02dc		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffc,DEFAULT)
0x000F1606,	//0x02de		VoC_and16_ri(REG6,0xf)
0x00071607,	//0x02e0		VoC_and16_ri(REG7,0x7)
0x40151505,	//0x02e2		VoC_sw16_d(REG5,0x4015)
0x0E6A1582,	//0x02e4		VoC_sw32_d(REG45,0xe6a)
0x400A1482,	//0x02e6		VoC_lw32_d(REG45,0x400a)
0x02F63186,	//0x02e8		VoC_bez16_r(LABLE_WIDTH_MULTIPLE16_422,REG6)
0xE01071E6,	//0x02ea		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xf,DEFAULT)
0x400D1504,	//0x02ec		VoC_sw16_d(REG4,0x400d)
0x1644C134,	//0x02ee		VoC_and16_ri(REG4,0xfff0)(lo)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x15007FF0,	//0x02f0		VoC_sw16_d(REG0,0x4015)(lo)	|	VoC_and16_ri(REG4,0xfff0)(hi)
0x15044015,	//0x02f2		VoC_sw16_d(REG4,0x400a)(lo)	|	VoC_sw16_d(REG0,0x4015)(hi)
0xFFC0400A,	//0x02f4		VoC_NAD	|	VoC_sw16_d(REG4,0x400a)(hi)
		//0x02f6		LABLE_WIDTH_MULTIPLE16_422
0x03003187,	//0x02f6		VoC_bez16_r(LABLE_WIDTH_HEIGHT_MULTIPLE16_422,REG7)
0x0D32072D,	//0x02f8		VoC_add16_rd(REG5,REG5,0xd32)
0x7FF81645,	//0x02fa		VoC_and16_ri(REG5,0xfff8)
0x1505FFC0,	//0x02fc		VoC_sw16_d(REG5,0x400b)(lo)	|	VoC_NOP
0xFFC0400B,	//0x02fe		VoC_NAD	|	VoC_sw16_d(REG5,0x400b)(hi)
		//0x0300		LABLE_WIDTH_HEIGHT_MULTIPLE16_422
0x0D180726,	//0x0300		VoC_add16_rd(REG6,REG4,0xd18)
0x0D1807A7,	//0x0302		VoC_sub16_rd(REG7,REG4,0xd18)
0xE00178EC,	//0x0304		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)
0x0E6C1583,	//0x0306		VoC_sw32_d(REG67,0xe6c)
0x1582F8FC,	//0x0308		VoC_sw32_d(REG45,0xe6e)(lo)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xF7A00E6E,	//0x030a		VoC_lw16i_short(REG0,0xfffffffd,DEFAULT)	|	VoC_sw32_d(REG45,0xe6e)(hi)
		//0x030b		LABLE_REG2JPEG_LOOP_HEIGHT_422
0x07822B80,	//0x030c		VoC_jal(DEMAI_READ_RGBDATA)
0x10F21804,	//0x030e		VoC_lw16i_set_inc(REG0,0x10f2,0x1)
0xFFC0F005,	//0x0310		VoC_NAD	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x0312		LABLE_REG2JPEG_LOOP_WIDTH_422
0xF4017030,	//0x0312		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x0F681806,	//0x0314		VoC_lw16i_set_inc(REG2,0xf68,0x1)
0x10681807,	//0x0316		VoC_lw16i_set_inc(REG3,0x1068,0x1)
0xDFC55F40,	//0x0318		VoC_push16(REG5,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x5C401805,	//0x031a		VoC_lw16i_set_inc(REG1,0x5c40,0x1)
0x035F2B80,	//0x031c		VoC_jal(MCU_QUA_RGB2YUV422)
0x0700D908,	//0x031e		VoC_add16_rd(REG0,REG0,0xd18)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x18050D18,	//0x0320		VoC_lw16i_set_inc(REG1,0x5c40,0x1)(lo)	|	VoC_add16_rd(REG0,REG0,0xd18)(hi)
0x18065C40,	//0x0322		VoC_lw16i_set_inc(REG2,0xfa8,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x5c40,0x1)(hi)
0x18070FA8,	//0x0324		VoC_lw16i_set_inc(REG3,0x106c,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0xfa8,0x1)(hi)
0xFFC0106C,	//0x0326		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x106c,0x1)(hi)
0x035F2B80,	//0x0328		VoC_jal(MCU_QUA_RGB2YUV422)
0x10E91806,	//0x032a		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0F681804,	//0x032c		VoC_lw16i_set_inc(REG0,0xf68,0x1)
0xFFC0F004,	//0x032e		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x0330		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x0332		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FA81804,	//0x0334		VoC_lw16i_set_inc(REG0,0xfa8,0x1)
0xFFC0F004,	//0x0336		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x0338		VoC_jal(COOLSAND_encode_block)
0x10EA1806,	//0x033a		VoC_lw16i_set_inc(REG2,0x10ea,0x1)
0x10681804,	//0x033c		VoC_lw16i_set_inc(REG0,0x1068,0x1)
0xFFC0F024,	//0x033e		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x0340		VoC_jal(COOLSAND_encode_block)
0x10EB1806,	//0x0342		VoC_lw16i_set_inc(REG2,0x10eb,0x1)
0x10A81804,	//0x0344		VoC_lw16i_set_inc(REG0,0x10a8,0x1)
0xFFC0F024,	//0x0346		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x0348		VoC_jal(COOLSAND_encode_block)
0xDF855F00,	//0x034a		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x4020F204,	//0x034c		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x10,DEFAULT)
0x4C25C165,	//0x034e		VoC_bnlt16_rd(LABLE_CON1_422,REG5,0x400a)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0x2B00400A,	//0x0350		VoC_jump_lg(LABLE_REG2JPEG_LOOP_WIDTH_422)(lo)	|	VoC_bnlt16_rd(LABLE_CON1_422,REG5,0x400a)(hi)
0xF1040312,	//0x0352		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_jump_lg(LABLE_REG2JPEG_LOOP_WIDTH_422)(hi)
		//0x0353		LABLE_CON1_422
0x4C29C061,	//0x0354		VoC_bnlt16_rd(LABLE_CON2_422,REG1,0x400b)(lo)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x2B00400B,	//0x0356		VoC_jump_lg(LABLE_REG2JPEG_LOOP_HEIGHT_422)(lo)	|	VoC_bnlt16_rd(LABLE_CON2_422,REG1,0x400b)(hi)
0xFFC0030B,	//0x0358		VoC_NAD	|	VoC_jump_lg(LABLE_REG2JPEG_LOOP_HEIGHT_422)(hi)
		//0x035a		LABLE_CON2_422
0x096E2B80,	//0x035a		VoC_jal(COOLSNAD_flush_bits)
0xFFC0DFA9,	//0x035c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFC1E580,	//0x035e		VoC_push16(REG1,DEFAULT)	|	VoC_return
		//0x035f		MCU_QUA_RGB2YUV422
0x03A02C11,	//0x0360		VoC_loop_i(0x1,0x8)
0x039E2C08,	//0x0362		VoC_loop_i(0x0,0x4)
0xFF455884,	//0x0364		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xF6856086,	//0x0366		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0xD611795C,	//0x0368		VoC_lw16_sd(REG1,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xb,DEFAULT)
0xF9EC79DD,	//0x036a		VoC_shru16_ri(REG4,0xfffffffd,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffffb,DEFAULT)
0xF9AE7955,	//0x036c		VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xa,DEFAULT)
0xF9F51B0C,	//0x036e		VoC_shru16_ri(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0xF9465129,	//0x0370		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xE0CAD131,	//0x0372		VoC_movreg16(ACC1_LO,REG6,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0x9B0C7C44,	//0x0374		VoC_multf32inc_rp(ACC0,REG4,REG1,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x8,DEFAULT)
0xF7075129,	//0x0376		VoC_movreg16(REG7,ACC0_LO,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0x0D5607BF,	//0x0378		VoC_sub16_rd(REG7,REG7,0xd56)
0x492CFDCD,	//0x037a		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shru32_ri(ACC1,0xfffffff9,DEFAULT)
0x5CA7FF45,	//0x037c		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x1B4CFC44,	//0x037e		VoC_multf32inc_rp(ACC0,REG5,REG1,DEFAULT)	|	VoC_shru32_ri(ACC0,0x8,IN_PARALLEL)
0x5031F68A,	//0x0380		VoC_mac32_rp(REG6,REG1,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)
0x7DCDDC38,	//0x0382		VoC_shru32_ri(ACC1,0xfffffff9,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG3,IN_PARALLEL)
0x492DD884,	//0x0384		VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0x7C45D611,	//0x0386		VoC_shru32_ri(ACC1,0x8,DEFAULT)	|	VoC_lw16_sd(REG1,0x0,IN_PARALLEL)
0x795CF685,	//0x0388		VoC_shru16_ri(REG4,0xb,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0x79ECF686,	//0x038a		VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x7955F9DD,	//0x038c		VoC_shru16_ri(REG5,0xa,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffb,IN_PARALLEL)
0x1B0CF9AE,	//0x038e		VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)
0x5129F9F5,	//0x0390		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffe,IN_PARALLEL)
0xD131F946,	//0x0392		VoC_mac32inc_rp(REG6,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,IN_PARALLEL)
0x00400A87,	//0x0394		VoC_lw16i(REG7,0x40)
0xC1DF7C44,	//0x0396		VoC_add16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x8,DEFAULT)
0xDC7AE107,	//0x0398		VoC_sw16_p(ACC1_LO,REG7,DEFAULT)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0x0D5607BF,	//0x039a		VoC_sub16_rd(REG7,REG7,0xd56)
0xE0445E18,	//0x039c		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
		//0x039e		VoC_endloop0
0xC0E3DCA7,	//0x039e		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
		//0x03a0		VoC_endloop1
0x0E6D0700,	//0x03a0		VoC_add16_rd(REG0,REG0,0xe6d)
0xE580DF81,	//0x03a2		VoC_return	|	VoC_pop16(REG1,DEFAULT)
		//0x03a4		COOLSAND_Double2Single
0xF0045894,	//0x03a4		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xF95C6085,	//0x03a6		VoC_shru16_ri(REG4,0xb,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0xF9DD60A6,	//0x03a8		VoC_shru16_ri(REG5,0xfffffffb,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
0xF95579EC,	//0x03aa		VoC_shru16_ri(REG5,0xa,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)
0xF9AE79F5,	//0x03ac		VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)
0xF9467032,	//0x03ae		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xE91AFFC0,	//0x03b0		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0xDC845FC0,	//0x03b2		VoC_sw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x5C85D894,	//0x03b4		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x5C86F685,	//0x03b6		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0x795CF686,	//0x03b8		VoC_shru16_ri(REG4,0xb,DEFAULT)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x79ECF9DD,	//0x03ba		VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffb,IN_PARALLEL)
0x5F82F955,	//0x03bc		VoC_pop16(REG2,DEFAULT)	|	VoC_shru16_ri(REG5,0xa,IN_PARALLEL)
0x79F5F9AE,	//0x03be		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)
0x0314F946,	//0x03c0		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,IN_PARALLEL)
0x0355FF16,	//0x03c2		VoC_add16inc_rp(REG5,REG5,REG2,DEFAULT)	|	VoC_movreg32(RL6,REG45,IN_PARALLEL)
0x0397F90C,	//0x03c4		VoC_add16inc_rp(REG7,REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0x790FF90D,	//0x03c6		VoC_shru16_ri(REG7,0x1,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,IN_PARALLEL)
0x5C85DC84,	//0x03c8		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,IN_PARALLEL)
0xDC87FF32,	//0x03ca		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
		//0x03cb		VoC_endloop0
0xFFC0E580,	//0x03cc		VoC_NAD	|	VoC_return
		//0x03ce		COOLSAND_Double2SingleLastRow
0xF0045894,	//0x03ce		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xF6856086,	//0x03d0		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0xF9DD795C,	//0x03d2		VoC_shru16_ri(REG5,0xfffffffb,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xb,DEFAULT)
0xF95579EC,	//0x03d4		VoC_shru16_ri(REG5,0xa,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)
0xF9AE79F5,	//0x03d6		VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)
0xF9467032,	//0x03d8		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xE8FAFFC0,	//0x03da		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_NAD
0xDC845FC0,	//0x03dc		VoC_sw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x5C85D894,	//0x03de		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x5C86F685,	//0x03e0		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0x795CF686,	//0x03e2		VoC_shru16_ri(REG4,0xb,DEFAULT)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x79ECF9DD,	//0x03e4		VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffb,IN_PARALLEL)
0x5F82F955,	//0x03e6		VoC_pop16(REG2,DEFAULT)	|	VoC_shru16_ri(REG5,0xa,IN_PARALLEL)
0x79F5F9AE,	//0x03e8		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffff5,IN_PARALLEL)
0x0314F946,	//0x03ea		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,IN_PARALLEL)
0x0355FF16,	//0x03ec		VoC_add16inc_rp(REG5,REG5,REG2,DEFAULT)	|	VoC_movreg32(RL6,REG45,IN_PARALLEL)
0x0397F90C,	//0x03ee		VoC_add16inc_rp(REG7,REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0x790FF90D,	//0x03f0		VoC_shru16_ri(REG7,0x1,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,IN_PARALLEL)
0x5C85DC84,	//0x03f2		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,IN_PARALLEL)
0xDC87FF32,	//0x03f4		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
		//0x03f5		VoC_endloop0
0xDC85DC84,	//0x03f6		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xDC84DC86,	//0x03f8		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xDC86DC85,	//0x03fa		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0xE912E580,	//0x03fc		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_return
		//0x03fd		COOLSAND_Double2Row
0xD9D3D9D2,	//0x03fe		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x035D831C,	//0x0400		VoC_add16inc_rp(REG5,REG5,REG3,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG3,DEFAULT)
0x039EF90C,	//0x0402		VoC_add16inc_rp(REG6,REG6,REG3,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xD9D2F90D,	//0x0404		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,IN_PARALLEL)
0xF90E5DC2,	//0x0406		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x031C83DF,	//0x0408		VoC_add16inc_rp(REG4,REG4,REG3,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG3,DEFAULT)
0x035DF90F,	//0x040a		VoC_add16inc_rp(REG5,REG5,REG3,DEFAULT)	|	VoC_shru16_ri(REG7,0x1,IN_PARALLEL)
0xF90DF90C,	//0x040c		VoC_shru16_ri(REG5,0x1,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xDDC2DDC3,	//0x040e		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x040f		VoC_endloop0
0xFFC0E580,	//0x0410		VoC_NAD	|	VoC_return
		//0x0412		COOLSAN_Encode422MCUBlock
0x5C481804,	//0x0412		VoC_lw16i_set_inc(REG0,0x5c48,0x1)
0x5C401805,	//0x0414		VoC_lw16i_set_inc(REG1,0x5c40,0x1)
0x0F681806,	//0x0416		VoC_lw16i_set_inc(REG2,0xf68,0x1)
0x10681807,	//0x0418		VoC_lw16i_set_inc(REG3,0x1068,0x1)
0x044C2C11,	//0x041a		VoC_loop_i(0x1,0x8)
0x044A2C08,	//0x041c		VoC_loop_i(0x0,0x4)
0xDFC15884,	//0x041e		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xFF455885,	//0x0420		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xF4015886,	//0x0422		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF6CA1B0C,	//0x0424		VoC_movreg16(ACC1_LO,REG6,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0xD131D129,	//0x0426		VoC_mac32inc_rp(REG6,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xFC44FDCD,	//0x0428		VoC_shru32_ri(ACC0,0x8,DEFAULT)	|	VoC_shru32_ri(ACC1,0xfffffff9,DEFAULT)
0x0D6409A4,	//0x042a		VoC_sub32_rd(ACC0,ACC0,0xd64)
0x51299B0C,	//0x042c		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0x0A87DCA8,	//0x042e		VoC_lw16i(REG7,0x40)(lo)	|	VoC_sw16inc_p(ACC0_LO,REG2,IN_PARALLEL)
0x492C0040,	//0x0430		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw16i(REG7,0x40)(hi)
0xFC44FF45,	//0x0432		VoC_shru32_ri(ACC0,0x8,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xF68A1B4C,	//0x0434		VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG5,REG1,DEFAULT)
0xDC385031,	//0x0436		VoC_sw16_p(ACC0_LO,REG3,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG1,DEFAULT)
0xFDCD5884,	//0x0438		VoC_shru32_ri(ACC1,0xfffffff9,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD6115885,	//0x043a		VoC_lw16_sd(REG1,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xC92D5886,	//0x043c		VoC_add32_rr(ACC1,ACC0,ACC1,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xFC451B0C,	//0x043e		VoC_shru32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0xC1DF5129,	//0x0440		VoC_add16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0x5E18D131,	//0x0442		VoC_inc_p(REG3,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0xFC44DC7A,	//0x0444		VoC_shru32_ri(ACC0,0x8,DEFAULT)	|	VoC_sw16_p(ACC1_LO,REG7,IN_PARALLEL)
0x0D6409A4,	//0x0446		VoC_sub32_rd(ACC0,ACC0,0xd64)
0xE0445F81,	//0x0448		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
		//0x044a		VoC_endloop0
0xC0E3DCA8,	//0x044a		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
		//0x044c		VoC_endloop1
0x0D1F0700,	//0x044c		VoC_add16_rd(REG0,REG0,0xd1f)
0x5C601804,	//0x044e		VoC_lw16i_set_inc(REG0,0x5c60,0x1)
0x5C401805,	//0x0450		VoC_lw16i_set_inc(REG1,0x5c40,0x1)
0x0FA81806,	//0x0452		VoC_lw16i_set_inc(REG2,0xfa8,0x1)
0x106C1807,	//0x0454		VoC_lw16i_set_inc(REG3,0x106c,0x1)
0x04882C11,	//0x0456		VoC_loop_i(0x1,0x8)
0x04862C08,	//0x0458		VoC_loop_i(0x0,0x4)
0xDFC15884,	//0x045a		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xFF455885,	//0x045c		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xF4015886,	//0x045e		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF6CA1B0C,	//0x0460		VoC_movreg16(ACC1_LO,REG6,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0xD131D129,	//0x0462		VoC_mac32inc_rp(REG6,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xFC44FDCD,	//0x0464		VoC_shru32_ri(ACC0,0x8,DEFAULT)	|	VoC_shru32_ri(ACC1,0xfffffff9,DEFAULT)
0x0D6409A4,	//0x0466		VoC_sub32_rd(ACC0,ACC0,0xd64)
0x51299B0C,	//0x0468		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0x0A87DCA8,	//0x046a		VoC_lw16i(REG7,0x40)(lo)	|	VoC_sw16inc_p(ACC0_LO,REG2,IN_PARALLEL)
0x492C0040,	//0x046c		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw16i(REG7,0x40)(hi)
0xFC44FF45,	//0x046e		VoC_shru32_ri(ACC0,0x8,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xF68A1B4C,	//0x0470		VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG5,REG1,DEFAULT)
0xDC385031,	//0x0472		VoC_sw16_p(ACC0_LO,REG3,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG1,DEFAULT)
0xFDCD5884,	//0x0474		VoC_shru32_ri(ACC1,0xfffffff9,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD6115885,	//0x0476		VoC_lw16_sd(REG1,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xC92D5886,	//0x0478		VoC_add32_rr(ACC1,ACC0,ACC1,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xFC451B0C,	//0x047a		VoC_shru32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0xC1DF5129,	//0x047c		VoC_add16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0x5E18D131,	//0x047e		VoC_inc_p(REG3,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0xFC44DC7A,	//0x0480		VoC_shru32_ri(ACC0,0x8,DEFAULT)	|	VoC_sw16_p(ACC1_LO,REG7,IN_PARALLEL)
0x0D6409A4,	//0x0482		VoC_sub32_rd(ACC0,ACC0,0xd64)
0xE0445F81,	//0x0484		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
		//0x0486		VoC_endloop0
0xC0E3DCA8,	//0x0486		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
		//0x0488		VoC_endloop1
0x0D1F0700,	//0x0488		VoC_add16_rd(REG0,REG0,0xd1f)
0x10E91806,	//0x048a		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0F681804,	//0x048c		VoC_lw16i_set_inc(REG0,0xf68,0x1)
0xDFE97004,	//0x048e		VoC_push16(RA,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x0490		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x0492		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FA81804,	//0x0494		VoC_lw16i_set_inc(REG0,0xfa8,0x1)
0xFFC0F004,	//0x0496		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x0498		VoC_jal(COOLSAND_encode_block)
0x10EA1806,	//0x049a		VoC_lw16i_set_inc(REG2,0x10ea,0x1)
0x10681804,	//0x049c		VoC_lw16i_set_inc(REG0,0x1068,0x1)
0xFFC0F024,	//0x049e		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x04a0		VoC_jal(COOLSAND_encode_block)
0x10EB1806,	//0x04a2		VoC_lw16i_set_inc(REG2,0x10eb,0x1)
0x10A81804,	//0x04a4		VoC_lw16i_set_inc(REG0,0x10a8,0x1)
0x2B80F024,	//0x04a6		VoC_jal(COOLSAND_encode_block)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xDFA907CE,	//0x04a8		VoC_pop16(RA,DEFAULT)	|	VoC_jal(COOLSAND_encode_block)(hi)
0xE580FFC0,	//0x04aa		VoC_return	|	VoC_NOP
		//0x04ac		COOLSAND_MEMCopy
0xD9D6E984,	//0x04ac		VoC_lw32inc_p(RL6,REG2,DEFAULT)	|	VoC_loop_i_short(0xc,DEFAULT)
0xDDDED9D7,	//0x04ae		VoC_sw32inc_p(RL6,REG3,DEFAULT)	|	VoC_lw32inc_p(RL7,REG2,DEFAULT)
		//0x04b0		VoC_endloop0
0xE580DDDF,	//0x04b0		VoC_return	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
		//0x04b2		COOLSAND_DMAIRead_1280BY1024Even
0x0A87F7F9,	//0x04b2		VoC_lw16i(REG7,0x879)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0x14060879,	//0x04b4		VoC_lw16_d(REG6,0xd62)(lo)	|	VoC_lw16i(REG7,0x879)(hi)
0xF80E0D62,	//0x04b6		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16_d(REG6,0xd62)(hi)
0x1406CD34,	//0x04b8		VoC_lw16_d(REG6,0xd5f)(lo)	|	VoC_multf32_rr(ACC0,REG4,REG6,DEFAULT)
0xF8160D5F,	//0x04ba		VoC_shr16_ri(REG6,0x2,DEFAULT)	|	VoC_lw16_d(REG6,0xd5f)(hi)
0x40020924,	//0x04bc		VoC_add32_rd(ACC0,ACC0,0x4002)
0x7FC215C3,	//0x04be		VoC_sw32_d(REG67,0xffc2)
0x7FC415C4,	//0x04c0		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x04c2		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x04c4		VoC_cfg_lg(0x8,)
0xF7F9E580,	//0x04c6		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_return
		//0x04c7		COOLSAND_DMAIRead_1280BY1024Odd
0x08790A87,	//0x04c8		VoC_lw16i(REG7,0x879)
0x0D621406,	//0x04ca		VoC_lw16_d(REG6,0xd62)
0xCD34F80E,	//0x04cc		VoC_multf32_rr(ACC0,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x0D614D05,	//0x04ce		VoC_bnlt16_rd(LABLE_BIGTHEN479,REG5,0xd61)
0x0D601406,	//0x04d0		VoC_lw16_d(REG6,0xd60)
0x0924F80E,	//0x04d2		VoC_add32_rd(ACC0,ACC0,0x4002)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x15C34002,	//0x04d4		VoC_sw32_d(REG67,0xffc2)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4002)(hi)
0x15C47FC2,	//0x04d6		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw32_d(REG67,0xffc2)(hi)
0xDE807FC4,	//0x04d8		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794FFC0,	//0x04da		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xE5800008,	//0x04dc		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x04de		LABLE_BIGTHEN479
0x0D5F1406,	//0x04de		VoC_lw16_d(REG6,0xd5f)
0x0924F80E,	//0x04e0		VoC_add32_rd(ACC0,ACC0,0x4002)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x15C34002,	//0x04e2		VoC_sw32_d(REG67,0xffc2)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4002)(hi)
0x15C47FC2,	//0x04e4		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw32_d(REG67,0xffc2)(hi)
0xDE807FC4,	//0x04e6		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794FFC0,	//0x04e8		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14060008,	//0x04ea		VoC_lw16_d(REG6,0xd62)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xF80E0D62,	//0x04ec		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16_d(REG6,0xd62)(hi)
0x1406CD74,	//0x04ee		VoC_lw16_d(REG6,0xd5e)(lo)	|	VoC_multf32_rr(ACC0,REG5,REG6,DEFAULT)
0x0A870D5E,	//0x04f0		VoC_lw16i(REG7,0x1279)(lo)	|	VoC_lw16_d(REG6,0xd5e)(hi)
0xF80E1279,	//0x04f2		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i(REG7,0x1279)(hi)
0x40020924,	//0x04f4		VoC_add32_rd(ACC0,ACC0,0x4002)
0x7FC215C3,	//0x04f6		VoC_sw32_d(REG67,0xffc2)
0x7FC415C4,	//0x04f8		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x04fa		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x04fc		VoC_cfg_lg(0x8,)
0xFFC0E580,	//0x04fe		VoC_NAD	|	VoC_return
		//0x0500		COOLSAND_1280BY1024_JPEG
0xE00470E5,	//0x0500		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x7,DEFAULT)
0xFFC0DFE9,	//0x0502		VoC_NAD	|	VoC_push16(RA,DEFAULT)
		//0x0504		LABLE_START_1280BY1024
0xE4F05F42,	//0x0504		VoC_lw16i_short(REG0,0x4f,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x10F21805,	//0x0506		VoC_lw16i_set_inc(REG1,0x10f2,0x1)
0x04B22B80,	//0x0508		VoC_jal(COOLSAND_DMAIRead_1280BY1024Even)
		//0x050a		LABLE_DO_BEGIN_FRONT_EVEN
0xDF405FC1,	//0x050a		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x5C481804,	//0x050c		VoC_lw16i_set_inc(REG0,0x5c48,0x1)
0x03A42B80,	//0x050e		VoC_jal(COOLSAND_Double2Single)
0x5C48180A,	//0x0510		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C78180B,	//0x0512		VoC_lw16i_set_inc(REG3,0x5c78,0x2)
0x04AC2B80,	//0x0514		VoC_jal(COOLSAND_MEMCopy)
0x0709D611,	//0x0516		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x0518		VoC_lw16i(REG0,0x5cd8)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115CD8,	//0x051a		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5cd8)(hi)
0x03A42B80,	//0x051c		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x051e		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x0520		VoC_lw16i(REG0,0x5d38)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D38,	//0x0522		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5d38)(hi)
0x03A42B80,	//0x0524		VoC_jal(COOLSAND_Double2Single)
0x0709DF81,	//0x0526		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x0A800D62,	//0x0528		VoC_lw16i(REG0,0x5d98)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xFFC05D98,	//0x052a		VoC_NAD	|	VoC_lw16i(REG0,0x5d98)(hi)
0x03A42B80,	//0x052c		VoC_jal(COOLSAND_Double2Single)
0x5C78180A,	//0x052e		VoC_lw16i_set_inc(REG2,0x5c78,0x2)
0x5CD81807,	//0x0530		VoC_lw16i_set_inc(REG3,0x5cd8,0x1)
0x5CA81808,	//0x0532		VoC_lw16i_set_inc(REG0,0x5ca8,0x2)
0x03FD2B80,	//0x0534		VoC_jal(COOLSAND_Double2Row)
0x5CD8180A,	//0x0536		VoC_lw16i_set_inc(REG2,0x5cd8,0x2)
0x5D381807,	//0x0538		VoC_lw16i_set_inc(REG3,0x5d38,0x1)
0x5D081808,	//0x053a		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x03FD2B80,	//0x053c		VoC_jal(COOLSAND_Double2Row)
0x5D38180A,	//0x053e		VoC_lw16i_set_inc(REG2,0x5d38,0x2)
0x5D981807,	//0x0540		VoC_lw16i_set_inc(REG3,0x5d98,0x1)
0x5D681808,	//0x0542		VoC_lw16i_set_inc(REG0,0x5d68,0x2)
0x03FD2B80,	//0x0544		VoC_jal(COOLSAND_Double2Row)
0x04122B80,	//0x0546		VoC_jal(COOLSAN_Encode422MCUBlock)
0x0709DF00,	//0x0548		VoC_add16_rd(REG1,REG1,0xd18)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x07800D18,	//0x054a		VoC_sub16_rd(REG0,REG0,0xd17)(lo)	|	VoC_add16_rd(REG1,REG1,0xd18)(hi)
0x31400D17,	//0x054c		VoC_bngtz16_r(LABLE_LASTROW1,REG0)(lo)	|	VoC_sub16_rd(REG0,REG0,0xd17)(hi)
0x2B000551,	//0x054e		VoC_jump_lg(LABLE_DO_BEGIN_FRONT_EVEN)(lo)	|	VoC_bngtz16_r(LABLE_LASTROW1,REG0)(hi)
0xDFC1050A,	//0x0550		VoC_push16(REG1,DEFAULT)	|	VoC_jump_lg(LABLE_DO_BEGIN_FRONT_EVEN)(hi)
		//0x0551		LABLE_LASTROW1
0x5C481804,	//0x0552		VoC_lw16i_set_inc(REG0,0x5c48,0x1)
0x03CE2B80,	//0x0554		VoC_jal(COOLSAND_Double2SingleLastRow)
0x5C48180A,	//0x0556		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C78180B,	//0x0558		VoC_lw16i_set_inc(REG3,0x5c78,0x2)
0x04AC2B80,	//0x055a		VoC_jal(COOLSAND_MEMCopy)
0x0709D611,	//0x055c		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x055e		VoC_lw16i(REG0,0x5cd8)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115CD8,	//0x0560		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5cd8)(hi)
0x03CE2B80,	//0x0562		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x0564		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x0566		VoC_lw16i(REG0,0x5d38)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D38,	//0x0568		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5d38)(hi)
0x03CE2B80,	//0x056a		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709DF81,	//0x056c		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x0A800D62,	//0x056e		VoC_lw16i(REG0,0x5d98)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xFFC05D98,	//0x0570		VoC_NAD	|	VoC_lw16i(REG0,0x5d98)(hi)
0x03CE2B80,	//0x0572		VoC_jal(COOLSAND_Double2SingleLastRow)
0x5C78180A,	//0x0574		VoC_lw16i_set_inc(REG2,0x5c78,0x2)
0x5CD81807,	//0x0576		VoC_lw16i_set_inc(REG3,0x5cd8,0x1)
0x5CA81808,	//0x0578		VoC_lw16i_set_inc(REG0,0x5ca8,0x2)
0x03FD2B80,	//0x057a		VoC_jal(COOLSAND_Double2Row)
0x5CD8180A,	//0x057c		VoC_lw16i_set_inc(REG2,0x5cd8,0x2)
0x5D381807,	//0x057e		VoC_lw16i_set_inc(REG3,0x5d38,0x1)
0x5D081808,	//0x0580		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x03FD2B80,	//0x0582		VoC_jal(COOLSAND_Double2Row)
0x5D38180A,	//0x0584		VoC_lw16i_set_inc(REG2,0x5d38,0x2)
0x5D981807,	//0x0586		VoC_lw16i_set_inc(REG3,0x5d98,0x1)
0x5D681808,	//0x0588		VoC_lw16i_set_inc(REG0,0x5d68,0x2)
0x03FD2B80,	//0x058a		VoC_jal(COOLSAND_Double2Row)
0x04122B80,	//0x058c		VoC_jal(COOLSAN_Encode422MCUBlock)
0x18721805,	//0x058e		VoC_lw16i_set_inc(REG1,0x1872,0x1)
0x004F0A80,	//0x0590		VoC_lw16i(REG0,0x4f)
		//0x0592		LABLE_DO_BEGIN_BEHIND_EVEN
0x5F081804,	//0x0592		VoC_lw16i_set_inc(REG0,0x5f08,0x1)
0xDF405FC1,	//0x0594		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x03A42B80,	//0x0596		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x0598		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x059a		VoC_lw16i(REG0,0x5c78)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115C78,	//0x059c		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5c78)(hi)
0x03A42B80,	//0x059e		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x05a0		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x05a2		VoC_lw16i(REG0,0x5cd8)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115CD8,	//0x05a4		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5cd8)(hi)
0x03A42B80,	//0x05a6		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x05a8		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x05aa		VoC_lw16i(REG0,0x5d38)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D38,	//0x05ac		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5d38)(hi)
0x03A42B80,	//0x05ae		VoC_jal(COOLSAND_Double2Single)
0x0709DF81,	//0x05b0		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x0A800D62,	//0x05b2		VoC_lw16i(REG0,0x5d98)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xFFC05D98,	//0x05b4		VoC_NAD	|	VoC_lw16i(REG0,0x5d98)(hi)
0x03A42B80,	//0x05b6		VoC_jal(COOLSAND_Double2Single)
0x5F08180A,	//0x05b8		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5C781807,	//0x05ba		VoC_lw16i_set_inc(REG3,0x5c78,0x1)
0x5C481808,	//0x05bc		VoC_lw16i_set_inc(REG0,0x5c48,0x2)
0x03FD2B80,	//0x05be		VoC_jal(COOLSAND_Double2Row)
0x5C78180A,	//0x05c0		VoC_lw16i_set_inc(REG2,0x5c78,0x2)
0x5CD81807,	//0x05c2		VoC_lw16i_set_inc(REG3,0x5cd8,0x1)
0x5CA81808,	//0x05c4		VoC_lw16i_set_inc(REG0,0x5ca8,0x2)
0x03FD2B80,	//0x05c6		VoC_jal(COOLSAND_Double2Row)
0x5CD8180A,	//0x05c8		VoC_lw16i_set_inc(REG2,0x5cd8,0x2)
0x5D381807,	//0x05ca		VoC_lw16i_set_inc(REG3,0x5d38,0x1)
0x5D081808,	//0x05cc		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x03FD2B80,	//0x05ce		VoC_jal(COOLSAND_Double2Row)
0x5D38180A,	//0x05d0		VoC_lw16i_set_inc(REG2,0x5d38,0x2)
0x5D981807,	//0x05d2		VoC_lw16i_set_inc(REG3,0x5d98,0x1)
0x5D681808,	//0x05d4		VoC_lw16i_set_inc(REG0,0x5d68,0x2)
0x03FD2B80,	//0x05d6		VoC_jal(COOLSAND_Double2Row)
0x04122B80,	//0x05d8		VoC_jal(COOLSAN_Encode422MCUBlock)
0x0709DF00,	//0x05da		VoC_add16_rd(REG1,REG1,0xd18)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x07800D18,	//0x05dc		VoC_sub16_rd(REG0,REG0,0xd17)(lo)	|	VoC_add16_rd(REG1,REG1,0xd18)(hi)
0x31400D17,	//0x05de		VoC_bngtz16_r(LABLE_LASTROW2,REG0)(lo)	|	VoC_sub16_rd(REG0,REG0,0xd17)(hi)
0x2B0005E3,	//0x05e0		VoC_jump_lg(LABLE_DO_BEGIN_BEHIND_EVEN)(lo)	|	VoC_bngtz16_r(LABLE_LASTROW2,REG0)(hi)
0xDFC10592,	//0x05e2		VoC_push16(REG1,DEFAULT)	|	VoC_jump_lg(LABLE_DO_BEGIN_BEHIND_EVEN)(hi)
		//0x05e3		LABLE_LASTROW2
0x5F081804,	//0x05e4		VoC_lw16i_set_inc(REG0,0x5f08,0x1)
0x03CE2B80,	//0x05e6		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x05e8		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x05ea		VoC_lw16i(REG0,0x5c78)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115C78,	//0x05ec		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5c78)(hi)
0x03CE2B80,	//0x05ee		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x05f0		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x05f2		VoC_lw16i(REG0,0x5cd8)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115CD8,	//0x05f4		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5cd8)(hi)
0x03CE2B80,	//0x05f6		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x05f8		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0A800D62,	//0x05fa		VoC_lw16i(REG0,0x5d38)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D38,	//0x05fc		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x5d38)(hi)
0x03CE2B80,	//0x05fe		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709DF81,	//0x0600		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x0A800D62,	//0x0602		VoC_lw16i(REG0,0x5d98)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xFFC05D98,	//0x0604		VoC_NAD	|	VoC_lw16i(REG0,0x5d98)(hi)
0x03CE2B80,	//0x0606		VoC_jal(COOLSAND_Double2SingleLastRow)
0x5F08180A,	//0x0608		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5C781807,	//0x060a		VoC_lw16i_set_inc(REG3,0x5c78,0x1)
0x5C481808,	//0x060c		VoC_lw16i_set_inc(REG0,0x5c48,0x2)
0x03FD2B80,	//0x060e		VoC_jal(COOLSAND_Double2Row)
0x5C78180A,	//0x0610		VoC_lw16i_set_inc(REG2,0x5c78,0x2)
0x5CD81807,	//0x0612		VoC_lw16i_set_inc(REG3,0x5cd8,0x1)
0x5CA81808,	//0x0614		VoC_lw16i_set_inc(REG0,0x5ca8,0x2)
0x03FD2B80,	//0x0616		VoC_jal(COOLSAND_Double2Row)
0x5CD8180A,	//0x0618		VoC_lw16i_set_inc(REG2,0x5cd8,0x2)
0x5D381807,	//0x061a		VoC_lw16i_set_inc(REG3,0x5d38,0x1)
0x5D081808,	//0x061c		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x03FD2B80,	//0x061e		VoC_jal(COOLSAND_Double2Row)
0x5D38180A,	//0x0620		VoC_lw16i_set_inc(REG2,0x5d38,0x2)
0x5D981807,	//0x0622		VoC_lw16i_set_inc(REG3,0x5d98,0x1)
0x5D681808,	//0x0624		VoC_lw16i_set_inc(REG0,0x5d68,0x2)
0x03FD2B80,	//0x0626		VoC_jal(COOLSAND_Double2Row)
0x04122B80,	//0x0628		VoC_jal(COOLSAN_Encode422MCUBlock)
0xE076590A,	//0x062a		VoC_lw16i_short(REG6,0x7,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xC1754134,	//0x062c		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x04C72B80,	//0x062e		VoC_jal(COOLSAND_DMAIRead_1280BY1024Odd)
0xE4F05D0A,	//0x0630		VoC_lw16i_short(REG0,0x4f,IN_PARALLEL)	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
0x10F21805,	//0x0632		VoC_lw16i_set_inc(REG1,0x10f2,0x1)
		//0x0634		LABLE_DO_BEGIN_FRONT_ODD
0x5F081804,	//0x0634		VoC_lw16i_set_inc(REG0,0x5f08,0x1)
0xDF405FC1,	//0x0636		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x03A42B80,	//0x0638		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x063a		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x063c		VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115CA8,	//0x063e		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(hi)
0x03A42B80,	//0x0640		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x0642		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x0644		VoC_lw16i_set_inc(REG0,0x5d08,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D08,	//0x0646		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5d08,0x1)(hi)
0x03A42B80,	//0x0648		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x064a		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x064c		VoC_lw16i_set_inc(REG0,0x5d68,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D68,	//0x064e		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5d68,0x1)(hi)
0x03A42B80,	//0x0650		VoC_jal(COOLSAND_Double2Single)
0x0709DF81,	//0x0652		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x18040D62,	//0x0654		VoC_lw16i_set_inc(REG0,0x5f38,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xFFC05F38,	//0x0656		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5f38,0x1)(hi)
0x03A42B80,	//0x0658		VoC_jal(COOLSAND_Double2Single)
0x5F08180A,	//0x065a		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5CA81807,	//0x065c		VoC_lw16i_set_inc(REG3,0x5ca8,0x1)
0x5C481808,	//0x065e		VoC_lw16i_set_inc(REG0,0x5c48,0x2)
0x03FD2B80,	//0x0660		VoC_jal(COOLSAND_Double2Row)
0x5C48180A,	//0x0662		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C78180B,	//0x0664		VoC_lw16i_set_inc(REG3,0x5c78,0x2)
0x04AC2B80,	//0x0666		VoC_jal(COOLSAND_MEMCopy)
0x5CA8180A,	//0x0668		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5D081807,	//0x066a		VoC_lw16i_set_inc(REG3,0x5d08,0x1)
0x5CD81808,	//0x066c		VoC_lw16i_set_inc(REG0,0x5cd8,0x2)
0x03FD2B80,	//0x066e		VoC_jal(COOLSAND_Double2Row)
0x5D08180A,	//0x0670		VoC_lw16i_set_inc(REG2,0x5d08,0x2)
0x5D681807,	//0x0672		VoC_lw16i_set_inc(REG3,0x5d68,0x1)
0x5D381808,	//0x0674		VoC_lw16i_set_inc(REG0,0x5d38,0x2)
0x03FD2B80,	//0x0676		VoC_jal(COOLSAND_Double2Row)
0x5D68180A,	//0x0678		VoC_lw16i_set_inc(REG2,0x5d68,0x2)
0x5F381807,	//0x067a		VoC_lw16i_set_inc(REG3,0x5f38,0x1)
0x5D981808,	//0x067c		VoC_lw16i_set_inc(REG0,0x5d98,0x2)
0x03FD2B80,	//0x067e		VoC_jal(COOLSAND_Double2Row)
0x04122B80,	//0x0680		VoC_jal(COOLSAN_Encode422MCUBlock)
0x0709DF00,	//0x0682		VoC_add16_rd(REG1,REG1,0xd24)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x07800D24,	//0x0684		VoC_sub16_rd(REG0,REG0,0xd17)(lo)	|	VoC_add16_rd(REG1,REG1,0xd24)(hi)
0x31400D17,	//0x0686		VoC_bngtz16_r(LABLE_LASTROW3,REG0)(lo)	|	VoC_sub16_rd(REG0,REG0,0xd17)(hi)
0x2B00068B,	//0x0688		VoC_jump_lg(LABLE_DO_BEGIN_FRONT_ODD)(lo)	|	VoC_bngtz16_r(LABLE_LASTROW3,REG0)(hi)
0xDFC10634,	//0x068a		VoC_push16(REG1,DEFAULT)	|	VoC_jump_lg(LABLE_DO_BEGIN_FRONT_ODD)(hi)
		//0x068b		LABLE_LASTROW3
0x5F081804,	//0x068c		VoC_lw16i_set_inc(REG0,0x5f08,0x1)
0x03CE2B80,	//0x068e		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x0690		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x0692		VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115CA8,	//0x0694		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(hi)
0x03CE2B80,	//0x0696		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x0698		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x069a		VoC_lw16i_set_inc(REG0,0x5d08,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D08,	//0x069c		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5d08,0x1)(hi)
0x03CE2B80,	//0x069e		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x06a0		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x06a2		VoC_lw16i_set_inc(REG0,0x5d68,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D68,	//0x06a4		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5d68,0x1)(hi)
0x03CE2B80,	//0x06a6		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709DF81,	//0x06a8		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x18040D62,	//0x06aa		VoC_lw16i_set_inc(REG0,0x5f38,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xFFC05F38,	//0x06ac		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5f38,0x1)(hi)
0x03CE2B80,	//0x06ae		VoC_jal(COOLSAND_Double2SingleLastRow)
0x5F08180A,	//0x06b0		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5CA81807,	//0x06b2		VoC_lw16i_set_inc(REG3,0x5ca8,0x1)
0x5C481808,	//0x06b4		VoC_lw16i_set_inc(REG0,0x5c48,0x2)
0x03FD2B80,	//0x06b6		VoC_jal(COOLSAND_Double2Row)
0x5C48180A,	//0x06b8		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C78180B,	//0x06ba		VoC_lw16i_set_inc(REG3,0x5c78,0x2)
0x04AC2B80,	//0x06bc		VoC_jal(COOLSAND_MEMCopy)
0x5CA8180A,	//0x06be		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5D081807,	//0x06c0		VoC_lw16i_set_inc(REG3,0x5d08,0x1)
0x5CD81808,	//0x06c2		VoC_lw16i_set_inc(REG0,0x5cd8,0x2)
0x03FD2B80,	//0x06c4		VoC_jal(COOLSAND_Double2Row)
0x5D08180A,	//0x06c6		VoC_lw16i_set_inc(REG2,0x5d08,0x2)
0x5D681807,	//0x06c8		VoC_lw16i_set_inc(REG3,0x5d68,0x1)
0x5D381808,	//0x06ca		VoC_lw16i_set_inc(REG0,0x5d38,0x2)
0x03FD2B80,	//0x06cc		VoC_jal(COOLSAND_Double2Row)
0x5D68180A,	//0x06ce		VoC_lw16i_set_inc(REG2,0x5d68,0x2)
0x5F381807,	//0x06d0		VoC_lw16i_set_inc(REG3,0x5f38,0x1)
0x5D981808,	//0x06d2		VoC_lw16i_set_inc(REG0,0x5d98,0x2)
0x03FD2B80,	//0x06d4		VoC_jal(COOLSAND_Double2Row)
0x04122B80,	//0x06d6		VoC_jal(COOLSAN_Encode422MCUBlock)
0x1AF21805,	//0x06d8		VoC_lw16i_set_inc(REG1,0x1af2,0x1)
0x004F0A80,	//0x06da		VoC_lw16i(REG0,0x4f)
		//0x06dc		LABLE_DO_BEGIN_BEHIND_ODD
0x5C481804,	//0x06dc		VoC_lw16i_set_inc(REG0,0x5c48,0x1)
0xDF405FC1,	//0x06de		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x03A42B80,	//0x06e0		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x06e2		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x06e4		VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115CA8,	//0x06e6		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(hi)
0x03A42B80,	//0x06e8		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x06ea		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x06ec		VoC_lw16i_set_inc(REG0,0x5d08,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D08,	//0x06ee		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5d08,0x1)(hi)
0x03A42B80,	//0x06f0		VoC_jal(COOLSAND_Double2Single)
0x0709D611,	//0x06f2		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x06f4		VoC_lw16i_set_inc(REG0,0x5d68,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D68,	//0x06f6		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5d68,0x1)(hi)
0x03A42B80,	//0x06f8		VoC_jal(COOLSAND_Double2Single)
0x0709DF81,	//0x06fa		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x18040D62,	//0x06fc		VoC_lw16i_set_inc(REG0,0x5f08,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xFFC05F08,	//0x06fe		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5f08,0x1)(hi)
0x03A42B80,	//0x0700		VoC_jal(COOLSAND_Double2Single)
0x5C48180A,	//0x0702		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5CA81807,	//0x0704		VoC_lw16i_set_inc(REG3,0x5ca8,0x1)
0x5C781808,	//0x0706		VoC_lw16i_set_inc(REG0,0x5c78,0x2)
0x03FD2B80,	//0x0708		VoC_jal(COOLSAND_Double2Row)
0x5CA8180A,	//0x070a		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5D081807,	//0x070c		VoC_lw16i_set_inc(REG3,0x5d08,0x1)
0x5CD81808,	//0x070e		VoC_lw16i_set_inc(REG0,0x5cd8,0x2)
0x03FD2B80,	//0x0710		VoC_jal(COOLSAND_Double2Row)
0x5D08180A,	//0x0712		VoC_lw16i_set_inc(REG2,0x5d08,0x2)
0x5D681807,	//0x0714		VoC_lw16i_set_inc(REG3,0x5d68,0x1)
0x5D381808,	//0x0716		VoC_lw16i_set_inc(REG0,0x5d38,0x2)
0x03FD2B80,	//0x0718		VoC_jal(COOLSAND_Double2Row)
0x5D68180A,	//0x071a		VoC_lw16i_set_inc(REG2,0x5d68,0x2)
0x5F081807,	//0x071c		VoC_lw16i_set_inc(REG3,0x5f08,0x1)
0x5D981808,	//0x071e		VoC_lw16i_set_inc(REG0,0x5d98,0x2)
0x03FD2B80,	//0x0720		VoC_jal(COOLSAND_Double2Row)
0x04122B80,	//0x0722		VoC_jal(COOLSAN_Encode422MCUBlock)
0x0709DF00,	//0x0724		VoC_add16_rd(REG1,REG1,0xd18)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x07800D18,	//0x0726		VoC_sub16_rd(REG0,REG0,0xd17)(lo)	|	VoC_add16_rd(REG1,REG1,0xd18)(hi)
0x31400D17,	//0x0728		VoC_bngtz16_r(LABLE_LASTROW4,REG0)(lo)	|	VoC_sub16_rd(REG0,REG0,0xd17)(hi)
0x2B00072D,	//0x072a		VoC_jump_lg(LABLE_DO_BEGIN_BEHIND_ODD)(lo)	|	VoC_bngtz16_r(LABLE_LASTROW4,REG0)(hi)
0xDFC106DC,	//0x072c		VoC_push16(REG1,DEFAULT)	|	VoC_jump_lg(LABLE_DO_BEGIN_BEHIND_ODD)(hi)
		//0x072d		LABLE_LASTROW4
0x5C481804,	//0x072e		VoC_lw16i_set_inc(REG0,0x5c48,0x1)
0x03CE2B80,	//0x0730		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x0732		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x0734		VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115CA8,	//0x0736		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(hi)
0x03CE2B80,	//0x0738		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x073a		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x073c		VoC_lw16i_set_inc(REG0,0x5d08,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D08,	//0x073e		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5d08,0x1)(hi)
0x03CE2B80,	//0x0740		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709D611,	//0x0742		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x18040D62,	//0x0744		VoC_lw16i_set_inc(REG0,0x5d68,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xDA115D68,	//0x0746		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5d68,0x1)(hi)
0x03CE2B80,	//0x0748		VoC_jal(COOLSAND_Double2SingleLastRow)
0x0709DF81,	//0x074a		VoC_add16_rd(REG1,REG1,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x18040D62,	//0x074c		VoC_lw16i_set_inc(REG0,0x5f08,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0xd62)(hi)
0xFFC05F08,	//0x074e		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5f08,0x1)(hi)
0x03CE2B80,	//0x0750		VoC_jal(COOLSAND_Double2SingleLastRow)
0x5C48180A,	//0x0752		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5CA81807,	//0x0754		VoC_lw16i_set_inc(REG3,0x5ca8,0x1)
0x5C781808,	//0x0756		VoC_lw16i_set_inc(REG0,0x5c78,0x2)
0x03FD2B80,	//0x0758		VoC_jal(COOLSAND_Double2Row)
0x5CA8180A,	//0x075a		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5D081807,	//0x075c		VoC_lw16i_set_inc(REG3,0x5d08,0x1)
0x5CD81808,	//0x075e		VoC_lw16i_set_inc(REG0,0x5cd8,0x2)
0x03FD2B80,	//0x0760		VoC_jal(COOLSAND_Double2Row)
0x5D08180A,	//0x0762		VoC_lw16i_set_inc(REG2,0x5d08,0x2)
0x5D681807,	//0x0764		VoC_lw16i_set_inc(REG3,0x5d68,0x1)
0x5D381808,	//0x0766		VoC_lw16i_set_inc(REG0,0x5d38,0x2)
0x03FD2B80,	//0x0768		VoC_jal(COOLSAND_Double2Row)
0x5D68180A,	//0x076a		VoC_lw16i_set_inc(REG2,0x5d68,0x2)
0x5F081807,	//0x076c		VoC_lw16i_set_inc(REG3,0x5f08,0x1)
0x5D981808,	//0x076e		VoC_lw16i_set_inc(REG0,0x5d98,0x2)
0x03FD2B80,	//0x0770		VoC_jal(COOLSAND_Double2Row)
0x04122B80,	//0x0772		VoC_jal(COOLSAN_Encode422MCUBlock)
0xE0865F02,	//0x0774		VoC_lw16i_short(REG6,0x8,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xC1754134,	//0x0776		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x0D613825,	//0x0778		VoC_bgt16_rd(LABLE_END_1280BY1024,REG5,0xd61)
0x05042B00,	//0x077a		VoC_jump_lg(LABLE_START_1280BY1024)
		//0x077c		LABLE_END_1280BY1024
0x096E2B80,	//0x077c		VoC_jal(COOLSNAD_flush_bits)
0xFFC0DFA9,	//0x077e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x0780		VoC_NAD	|	VoC_return
		//0x0782		DEMAI_READ_RGBDATA
0x40021484,	//0x0782		VoC_lw32_d(ACC0,0x4002)
0x10F20A86,	//0x0784		VoC_lw16i(REG6,0x10f2)
0xF3FE780E,	//0x0786		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x0E6A1481,	//0x0788		VoC_lw32_d(REG23,0xe6a)
0xF8124866,	//0x078a		VoC_shr16_ri(REG2,0x2,IN_PARALLEL)	|	VoC_add32_rr(RL6,REG23,ACC0,DEFAULT)
0x7FC31546,	//0x078c		VoC_sw16_d(REG6,0xffc3)
0x7FC21542,	//0x078e		VoC_sw16_d(REG2,0xffc2)
0x7FC415C4,	//0x0790		VoC_sw32_d(ACC0,0xffc4)
0xF3FF7026,	//0x0792		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x40021586,	//0x0794		VoC_sw32_d(RL6,0x4002)
0xFFC0DE80,	//0x0796		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0798		VoC_cfg_lg(0x8,)
0x40156E04,	//0x079a		VoC_bnez16_d(LABLE_NONE_MULTIPLE,0x4015)
0xFFC0E580,	//0x079c		VoC_NAD	|	VoC_return
		//0x079e		LABLE_NONE_MULTIPLE
0x400D1402,	//0x079e		VoC_lw16_d(REG2,0x400d)
0x400A1403,	//0x07a0		VoC_lw16_d(REG3,0x400a)
0xFE4642D4,	//0x07a2		VoC_shru16_rr(REG6,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG2,DEFAULT)
0xFE437E42,	//0x07a4		VoC_shru16_rr(REG3,REG0,IN_PARALLEL)	|	VoC_shru16_rr(REG2,REG0,DEFAULT)
0x10F20A85,	//0x07a6		VoC_lw16i(REG5,0x10f2)
0xC0EB40AA,	//0x07a8		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xE01742E3,	//0x07aa		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
0xC2FB42BA,	//0x07ac		VoC_sub16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0x0A85C3B8,	//0x07ae		VoC_lw16i(REG5,0xfe)(lo)	|	VoC_sub16_rr(REG0,REG6,REG7,DEFAULT)
0x2E0100FE,	//0x07b0		VoC_loop_r(1,REG0)(lo)	|	VoC_lw16i(REG5,0xfe)(hi)
0xFF0C07CB,	//0x07b2		VoC_movreg32(ACC0,REG23,DEFAULT)	|	VoC_loop_r(1,REG0)(hi)
0x007F0A87,	//0x07b4		VoC_lw16i(REG7,0x7f)
0x400D1406,	//0x07b6		VoC_lw16_d(REG6,0x400d)
		//0x07b8		LABLE_LOOP0_START
0x07BF3435,	//0x07b8		VoC_bgt16_rr(LABLE_WIDTH_255,REG6,REG5)
0x0D170737,	//0x07ba		VoC_add16_rd(REG7,REG6,0xd17)
0xE006790F,	//0x07bc		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0x1,DEFAULT)
0xC3AEE5C2,	//0x07be		VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_jump(LABLE_LOOP_BEGIN)
		//0x07bf		LABLE_WIDTH_255
		//0x07c0		LABLE_LOOP_BEGIN
0x07C52E38,	//0x07c0		VoC_loop_r(0,REG7)
0xD8A0D8A4,	//0x07c2		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDCB0DCB4,	//0x07c4		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x07c5		VoC_endloop0
0x07B831C6,	//0x07c6		VoC_bnez16_r(LABLE_LOOP0_START,REG6)
0x0792FF21,	//0x07c8		VoC_sub16_rd(REG2,REG2,0x400d)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x079B400D,	//0x07ca		VoC_sub16_rd(REG3,REG3,0x400a)(lo)	|	VoC_sub16_rd(REG2,REG2,0x400d)(hi)
		//0x07cb		VoC_endloop1
0xE580400A,	//0x07cc		VoC_return	|	VoC_sub16_rd(REG3,REG3,0x400a)(hi)
		//0x07ce		COOLSAND_encode_block
0xDF405FE9,	//0x07ce		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x4BCD4484,	//0x07d0		VoC_bne16_rd(LABLE_ENCODEBLOCK_TYPE1,REG4,0x4bcd)
0x457A0A80,	//0x07d2		VoC_lw16i(REG0,0x457a)
0x45AC1FB9,	//0x07d4		VoC_lw16i_set_inc(REG1,0x45ac,0xfffffffe)
0xFFC0E5C6,	//0x07d6		VoC_NAD	|	VoC_jump(LABLE_ENCODEBLOCK_TYPE_END)
		//0x07d8		LABLE_ENCODEBLOCK_TYPE1
0x45920A80,	//0x07d8		VoC_lw16i(REG0,0x4592)
0x46F01FB9,	//0x07da		VoC_lw16i_set_inc(REG1,0x46f0,0xfffffffe)
		//0x07dc		LABLE_ENCODEBLOCK_TYPE_END
0xE4065FC2,	//0x07dc		VoC_lw16i_short(REG6,0x40,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xDF0045A6,	//0x07de		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_mult16_rr(REG6,REG6,REG4,DEFAULT)
0xE0145F40,	//0x07e0		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x10F10732,	//0x07e2		VoC_add16_rd(REG2,REG6,0x10f1)
0x082E2B80,	//0x07e4		VoC_jal(apply_fdct)
0xF4085F81,	//0x07e6		VoC_lw16i_short(FORMAT16,0x1,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xAE14DFC0,	//0x07e8		VoC_multf16inc_pp(REG4,REG0,REG2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x850CF030,	//0x07ea		VoC_sub16_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDF005C14,	//0x07ec		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG1,DEFAULT)
0x09082B80,	//0x07ee		VoC_jal(format_number)
0xF6205983,	//0x07f0		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xE0035FC1,	//0x07f2		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x0D171805,	//0x07f4		VoC_lw16i_set_inc(REG1,0xd17,0x1)
0x09202B80,	//0x07f6		VoC_jal(COOLSAND_put_bits)
0x09202B80,	//0x07f8		VoC_jal(COOLSAND_put_bits)
0x834DD625,	//0x07fa		VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0x08222C7F,	//0x07fc		VoC_loop_i(0x1,0x3f)
0xF0077038,	//0x07fe		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0x1,DEFAULT)
0xAF545856,	//0x0800		VoC_multf16inc_pp(REG4,REG5,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG5,DEFAULT)
0x4134F97E,	//0x0802		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0xf,DEFAULT)
0x442CF580,	//0x0804		VoC_bne16_rd(LABLE_ENCODEBLOCK_num_zeroes_bgin,REG4,0x4bcd)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffff0,IN_PARALLEL)
0xDE184BCD,	//0x0806		VoC_inc_p(REG3,DEFAULT)	|	VoC_bne16_rd(LABLE_ENCODEBLOCK_num_zeroes_bgin,REG4,0x4bcd)(hi)
0xFFC0E5D8,	//0x0808		VoC_NAD	|	VoC_jump(LABLE_ENCODEBLOCK_VALUE_END)
		//0x080a		LABLE_ENCODEBLOCK_num_zeroes_bgin
0x0D403CA3,	//0x080a		VoC_bngt16_rd(LABLE_ENCODEBLOCK_num_zeroes,REG3,0xd40)
0xFFC0D983,	//0x080c		VoC_NAD	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0x09202B80,	//0x080e		VoC_jal(COOLSAND_put_bits)
0x0D19079B,	//0x0810		VoC_sub16_rd(REG3,REG3,0xd19)
0x3B3BE0C4,	//0x0812		VoC_bgt16_rd(LABLE_ENCODEBLOCK_num_zeroes_bgin,REG3,0xd40)(lo)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0xFFC00D40,	//0x0814		VoC_NAD	|	VoC_bgt16_rd(LABLE_ENCODEBLOCK_num_zeroes_bgin,REG3,0xd40)(hi)
		//0x0816		LABLE_ENCODEBLOCK_num_zeroes
0x09082B80,	//0x0816		VoC_jal(format_number)
0xE00340C0,	//0x0818		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG3,REG0,DEFAULT)
0xD983D610,	//0x081a		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x09202B80,	//0x081c		VoC_jal(COOLSAND_put_bits)
0x09202B80,	//0x081e		VoC_jal(COOLSAND_put_bits)
		//0x0820		LABLE_ENCODEBLOCK_VALUE_END
0xD62577D0,	//0x0820		VoC_lw16_sd(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xfffffffe,DEFAULT)
		//0x0822		VoC_endloop1
0x5E00834D,	//0x0822		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)
0xDF86DF86,	//0x0824		VoC_pop16(REG6,DEFAULT)	|	VoC_pop16(REG6,IN_PARALLEL)
0x4BCD3C2B,	//0x0826		VoC_bngt16_rd(LABLE_ENCODEBLOCK_RETURN,REG3,0x4bcd)
0x2B80D983,	//0x0828		VoC_jal(COOLSAND_put_bits)(lo)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xDFA90920,	//0x082a		VoC_pop16(RA,DEFAULT)	|	VoC_jal(COOLSAND_put_bits)(hi)
		//0x082b		LABLE_ENCODEBLOCK_RETURN
0xE580F027,	//0x082c		VoC_return	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x082e		apply_fdct
0x5F681805,	//0x082e		VoC_lw16i_set_inc(REG1,0x5f68,0x1)
0xF0084020,	//0x0830		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x6A05DF40,	//0x0832		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xD884D884,	//0x0834		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0xD8845C94,	//0x0836		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0838		VoC_endloop0
0x5908DC94,	//0x0838		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x1FBDF401,	//0x083a		VoC_lw16i_set_inc(REG1,0x5f6b,0xffffffff)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x18075F6B,	//0x083c		VoC_lw16i_set_inc(REG3,0x446e,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x5f6b,0xffffffff)(hi)
0xFFC0446E,	//0x083e		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x446e,0x1)(hi)
0x08912C10,	//0x0840		VoC_loop_i(0x0,0x8)
0xF5D92244,	//0x0842		VoC_lw16i_short(FORMAT32,0xfffffffb,IN_PARALLEL)	|	VoC_add16inc_pp(REG4,REG1,REG0,DEFAULT)
0xA246A245,	//0x0844		VoC_add16inc_pp(REG6,REG1,REG0,DEFAULT)	|	VoC_add16inc_pp(REG5,REG1,REG0,DEFAULT)
0xF0052047,	//0x0846		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_add16_pp(REG7,REG1,REG0,DEFAULT)
0xC3364134,	//0x0848		VoC_sub16_rr(REG6,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC3EF41ED,	//0x084a		VoC_sub16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG7,REG5,DEFAULT)
0xC32D412C,	//0x084c		VoC_sub16_rr(REG5,REG4,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xF8F578F4,	//0x084e		VoC_shr16_ri(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0xC1F47F16,	//0x0850		VoC_add16_rr(REG4,REG7,REG6,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0xF3F81B1C,	//0x0852		VoC_lw16i_short(INC0,0xfffffffe,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,DEFAULT)
0x7F25D133,	//0x0854		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0xA646D13B,	//0x0856		VoC_sub16inc_pp(REG6,REG1,REG0,DEFAULT)	|	VoC_mac32inc_rp(REG7,REG3,IN_PARALLEL)
0xA60DA644,	//0x0858		VoC_sub16inc_pp(REG5,REG0,REG1,DEFAULT)	|	VoC_sub16inc_pp(REG4,REG1,REG0,DEFAULT)
0xF008240F,	//0x085a		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_sub16_pp(REG7,REG0,REG1,DEFAULT)
0xDFC4413C,	//0x085c		VoC_push16(REG4,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x9B1C5C8C,	//0x085e		VoC_multf32inc_rp(ACC0,REG4,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(RL6_LO,REG0,DEFAULT)
0x5123DF84,	//0x0860		VoC_mac32inc_rp(REG4,REG3,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xDF44DC89,	//0x0862		VoC_push32(ACC0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,IN_PARALLEL)
0xC1345C8D,	//0x0864		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(RL6_HI,REG0,DEFAULT)
0x9B1E5C0B,	//0x0866		VoC_multf32inc_rp(RL6,REG4,REG3,IN_PARALLEL)	|	VoC_sw16_p(ACC1_HI,REG0,DEFAULT)
0xC1EF1BDF,	//0x0868		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_multf32inc_rp(RL7,REG7,REG3,DEFAULT)
0xC13C1B5E,	//0x086a		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_multf32inc_rp(RL6,REG5,REG3,DEFAULT)
0x4176DF46,	//0x086c		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0xDF479B9D,	//0x086e		VoC_push32(RL7,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG6,REG3,IN_PARALLEL)
0x9BDB9B9F,	//0x0870		VoC_multf32inc_rp(REG67,REG7,REG3,DEFAULT)	|	VoC_multf32inc_rp(RL7,REG6,REG3,DEFAULT)
0xC97D49BE,	//0x0872		VoC_add32_rr(ACC1,ACC1,RL7,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0xDFC45F07,	//0x0874		VoC_push16(REG4,IN_PARALLEL)	|	VoC_pop32(RL7,DEFAULT)
0x48BFD912,	//0x0876		VoC_add32_rr(RL7,REG45,RL7,DEFAULT)	|	VoC_lw32_sd(REG45,0x1,DEFAULT)
0x191ADF84,	//0x0878		VoC_multf32_rp(REG45,REG4,REG3,DEFAULT)	|	VoC_pop16(REG4,IN_PARALLEL)
0xDF45F008,	//0x087a		VoC_push32(ACC1,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xD91548D3,	//0x087c		VoC_lw32_sd(ACC1,0x1,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,REG45,DEFAULT)
0xDF054952,	//0x087e		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC1,REG45,DEFAULT)
0xC99E4914,	//0x0880		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0xC9DF4955,	//0x0882		VoC_add32_rr(RL7,RL7,REG67,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC1,REG45,DEFAULT)
0xEFB65F02,	//0x0884		VoC_lw16i_short(REG6,0xfffffffb,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xC0305F02,	//0x0886		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xF3FD7087,	//0x0888		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xE0165C8F,	//0x088a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(RL7_HI,REG0,DEFAULT)
0xC0795C8B,	//0x088c		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)
0xC0305C8D,	//0x088e		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(RL6_HI,REG0,DEFAULT)
0x1807DC09,	//0x0890		VoC_lw16i_set_inc(REG3,0x446e,0x1)(lo)	|	VoC_sw16_p(ACC0_HI,REG0,DEFAULT)
		//0x0891		VoC_endloop0
0x5908446E,	//0x0892		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x446e,0x1)(hi)
0x4020E204,	//0x0894		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x20,IN_PARALLEL)
0x77F1F020,	//0x0896		VoC_lw16i_short(INC1,0xffffffff,DEFAULT)	|	VoC_lw16i_short(INC0,0x8,IN_PARALLEL)
0x5886EF95,	//0x0898		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0xfffffff9,IN_PARALLEL)
0x4079E037,	//0x089a		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x3,IN_PARALLEL)
0xFFC0E087,	//0x089c		VoC_NAD	|	VoC_lw16i_short(REG7,0x8,IN_PARALLEL)
0x08A82C11,	//0x089e		VoC_loop_i(0x1,0x8)
0xF6046845,	//0x08a0		VoC_movreg16(REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x5C96D886,	//0x08a2		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xDC96D886,	//0x08a4		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
		//0x08a5		VoC_endloop0
0xC079C128,	//0x08a6		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_add16_rr(REG0,REG4,REG5,DEFAULT)
		//0x08a8		VoC_endloop1
0x5908D886,	//0x08a8		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xFFC0F005,	//0x08aa		VoC_NAD	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x09032C10,	//0x08ac		VoC_loop_i(0x0,0x8)
0xF5F95FC0,	//0x08ae		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xA20C240F,	//0x08b0		VoC_add16inc_pp(REG4,REG0,REG1,IN_PARALLEL)	|	VoC_sub16_pp(REG7,REG0,REG1,DEFAULT)
0xA20DA40E,	//0x08b2		VoC_add16inc_pp(REG5,REG0,REG1,DEFAULT)	|	VoC_sub16_pp(REG6,REG0,REG1,DEFAULT)
0xDF42DF43,	//0x08b4		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xA20E240D,	//0x08b6		VoC_add16inc_pp(REG6,REG0,REG1,IN_PARALLEL)	|	VoC_sub16_pp(REG5,REG0,REG1,DEFAULT)
0xA20F240C,	//0x08b8		VoC_add16inc_pp(REG7,REG0,REG1,IN_PARALLEL)	|	VoC_sub16_pp(REG4,REG0,REG1,DEFAULT)
0x5F42DF04,	//0x08ba		VoC_push32(REG45,DEFAULT)	|	VoC_pop32(ACC0,DEFAULT)
0x413CFF22,	//0x08bc		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_movreg32(REG45,ACC0,IN_PARALLEL)
0x41ADC33F,	//0x08be		VoC_add16_rr(REG5,REG6,REG5,DEFAULT)	|	VoC_sub16_rr(REG7,REG4,REG7,IN_PARALLEL)
0x412CC376,	//0x08c0		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_sub16_rr(REG6,REG5,REG6,IN_PARALLEL)
0x7814C32D,	//0x08c2		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_sub16_rr(REG5,REG4,REG5,IN_PARALLEL)
0x7F16F815,	//0x08c4		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_shr16_ri(REG5,0x2,IN_PARALLEL)
0x1B1CC1BC,	//0x08c6		VoC_multf32inc_rp(ACC0,REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG4,REG6,REG7,IN_PARALLEL)
0xD13BF040,	//0x08c8		VoC_mac32inc_rp(REG7,REG3,DEFAULT)	|	VoC_lw16i_short(INC0,0x10,IN_PARALLEL)
0xD1337F25,	//0x08ca		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xD610590A,	//0x08cc		VoC_lw16_sd(REG0,0x0,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x5C8CD913,	//0x08ce		VoC_sw16inc_p(RL6_LO,REG0,DEFAULT)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x5C89C13C,	//0x08d0		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)
0x5C8D9B1C,	//0x08d2		VoC_sw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,IN_PARALLEL)
0x5C8BDF02,	//0x08d4		VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x5123DF03,	//0x08d6		VoC_mac32inc_rp(REG4,REG3,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0x9B1EC134,	//0x08d8		VoC_multf32inc_rp(RL6,REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)
0x1BDFDF44,	//0x08da		VoC_multf32inc_rp(RL7,REG7,REG3,DEFAULT)	|	VoC_push32(ACC0,DEFAULT)
0xDF46C1EF,	//0x08dc		VoC_push32(RL6,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)
0xC13C1B5E,	//0x08de		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_multf32inc_rp(RL6,REG5,REG3,DEFAULT)
0x9B9D4176,	//0x08e0		VoC_multf32inc_rp(ACC1,REG6,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x9B9FDF47,	//0x08e2		VoC_multf32inc_rp(RL7,REG6,REG3,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x49BE9BDB,	//0x08e4		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_multf32inc_rp(REG67,REG7,REG3,DEFAULT)
0x5F07C97D,	//0x08e6		VoC_pop32(RL7,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL7,IN_PARALLEL)
0xD912DFC4,	//0x08e8		VoC_lw32_sd(REG45,0x1,DEFAULT)	|	VoC_push16(REG4,IN_PARALLEL)
0xDF8448BF,	//0x08ea		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_add32_rr(RL7,REG45,RL7,DEFAULT)
0x5F45991A,	//0x08ec		VoC_push32(ACC1,DEFAULT)	|	VoC_multf32_rp(REG45,REG4,REG3,DEFAULT)
0x48D3DF80,	//0x08ee		VoC_add32_rr(REG67,REG67,REG45,DEFAULT)	|	VoC_pop16(REG0,IN_PARALLEL)
0x4952D915,	//0x08f0		VoC_add32_rr(REG45,ACC1,REG45,DEFAULT)	|	VoC_lw32_sd(ACC1,0x1,IN_PARALLEL)
0x4914DF05,	//0x08f2		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_pop32(ACC1,IN_PARALLEL)
0x4955C99E,	//0x08f4		VoC_add32_rr(ACC1,ACC1,REG45,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)
0x7106C9DF,	//0x08f6		VoC_lw16i_short(REG6,0x8,DEFAULT)	|	VoC_add32_rr(RL7,RL7,REG67,IN_PARALLEL)
0x4030E017,	//0x08f8		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x1807C03F,	//0x08fa		VoC_lw16i_set_inc(REG3,0x446e,0x1)(lo)	|	VoC_add16_rr(REG7,REG0,REG7,IN_PARALLEL)
0x5C8F446E,	//0x08fc		VoC_sw16inc_p(RL7_HI,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x446e,0x1)(hi)
0x5C8BDF02,	//0x08fe		VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x5C8DDF02,	//0x0900		VoC_sw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x5C09F6E0,	//0x0902		VoC_sw16_p(ACC0_HI,REG0,DEFAULT)	|	VoC_movreg16(REG0,REG7,IN_PARALLEL)
		//0x0903		VoC_endloop0
0x5F00F020,	//0x0904		VoC_pop32(REG01,DEFAULT)	|	VoC_lw16i_short(INC0,0x8,IN_PARALLEL)
0xE580F3F8,	//0x0906		VoC_return	|	VoC_lw16i_short(INC0,0xfffffffe,IN_PARALLEL)
		//0x0908		format_number
0xF3FF5FC3,	//0x0908		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xF87C6085,	//0x090a		VoC_shr16_ri(REG4,0xf,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0xF68664AC,	//0x090c		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_xor16_rr(REG4,REG5,DEFAULT)
0xC334797E,	//0x090e		VoC_sub16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xf,DEFAULT)
0xE0036A04,	//0x0910		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x4BCD4024,	//0x0912		VoC_be16_rd(LABLE_FORMAT_NUM_CAT,REG4,0x4bcd)
		//0x0914		VoC_endloop0
0xDE18780C,	//0x0914		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x0916		LABLE_FORMAT_NUM_CAT
0xC3757E1E,	//0x0916		VoC_sub16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG3,DEFAULT)
0xC31C4175,	//0x0918		VoC_sub16_rr(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0x4218F8FB,	//0x091a		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0x081BDF83,	//0x091c		VoC_mult16_rd(REG3,REG3,0xd2f)(lo)	|	VoC_pop16(REG3,IN_PARALLEL)
0xE5800D2F,	//0x091e		VoC_return	|	VoC_mult16_rd(REG3,REG3,0xd2f)(hi)
		//0x0920		COOLSAND_put_bits
0xDF425FC3,	//0x0920		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x10EE1482,	//0x0922		VoC_lw32_d(REG45,0x10ee)
0x10EE4C26,	//0x0924		VoC_bnlt16_rd(LABLE_PUTBITS_WILE_BEGIN1,REG6,0x10ee)
0x09642B00,	//0x0926		VoC_jump_lg(LABLE_PUTBITS_WILE_END)
		//0x0928		LABLE_PUTBITS_WILE_BEGIN1
0x10ED2007,	//0x0928		VoC_lw16d_set_inc(REG3,0x10ed,0x1)
		//0x092a		LABLE_PUTBITS_WILE_BEGIN
0x7E77C3A6,	//0x092a		VoC_shru16_rr(REG7,REG6,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x647DE016,	//0x092c		VoC_or16_rr(REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x1605DF43,	//0x092e		VoC_and16_ri(REG5,0xff)(lo)	|	VoC_push32(REG67,IN_PARALLEL)
0x44AD00FF,	//0x0930		VoC_bne16_rd(LABLE_PUTBITS_0XFF,REG5,0x53ce)(lo)	|	VoC_and16_ri(REG5,0xff)(hi)
0x6C0853CE,	//0x0932		VoC_bez16_d(LABLE_PUTBITS_WRITE_short_1,0x10ec)(lo)	|	VoC_bne16_rd(LABLE_PUTBITS_0XFF,REG5,0x53ce)(hi)
0x79C510EC,	//0x0934		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_bez16_d(LABLE_PUTBITS_WRITE_short_1,0x10ec)(hi)
0x2885E006,	//0x0936		VoC_or16_rd(REG5,0x10f0)(lo)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0x150610F0,	//0x0938		VoC_sw16_d(REG6,0x10f0)(lo)	|	VoC_or16_rd(REG5,0x10f0)(hi)
0xDCB510F0,	//0x093a		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sw16_d(REG6,0x10f0)(hi)
		//0x093b		LABLE_PUTBITS_WRITE_short_1
0xFFC0E5D0,	//0x093c		VoC_NAD	|	VoC_jump(LABLE_PUTBITS_WRITE_1024_begin)
		//0x093e		LABLE_PUTBITS_0XFF
0x10EC6C0A,	//0x093e		VoC_bez16_d(LABLE_PUTBITS_WRITE_ORNOT,0x10ec)
0xE00679C5,	//0x0940		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0x10F02885,	//0x0942		VoC_or16_rd(REG5,0x10f0)
0x10EC1506,	//0x0944		VoC_sw16_d(REG6,0x10ec)
0xE5C5DCB5,	//0x0946		VoC_jump(LABLE_PUTBITS_WRITE_1024_begin)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x0948		LABLE_PUTBITS_WRITE_ORNOT
0x10F01505,	//0x0948		VoC_sw16_d(REG5,0x10f0)
0x10EC1506,	//0x094a		VoC_sw16_d(REG6,0x10ec)
		//0x094c		LABLE_PUTBITS_WRITE_1024_begin
0x4CE6490B,	//0x094c		VoC_blt16_rd(LABLE_PUTBITS_WRITE_1024,REG3,0x4ce6)
0x0A82DFC2,	//0x094e		VoC_lw16i(REG2,0x100)(lo)	|	VoC_push16(REG2,DEFAULT)
0x5FE90100,	//0x0950		VoC_push16(RA,DEFAULT)	|	VoC_lw16i(REG2,0x100)(hi)
0x2B80E003,	//0x0952		VoC_jal(DMAI_WRITE)(lo)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xDFA909D8,	//0x0954		VoC_pop16(RA,DEFAULT)	|	VoC_jal(DMAI_WRITE)(hi)
0x0909F003,	//0x0956		VoC_add32_rd(REG23,REG23,0x4010)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x70034010,	//0x0958		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x4010)(hi)
0x1581DF82,	//0x095a		VoC_sw32_d(REG23,0x4010)(lo)	|	VoC_pop16(REG2,IN_PARALLEL)
0xF1044010,	//0x095c		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_sw32_d(REG23,0x4010)(hi)
		//0x095d		LABLE_PUTBITS_WRITE_1024
0xE0055F03,	//0x095e		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0x092A34A6,	//0x0960		VoC_bngt16_rr(LABLE_PUTBITS_WILE_BEGIN,REG4,REG6)
0x10ED1503,	//0x0962		VoC_sw16_d(REG3,0x10ed)
		//0x0964		LABLE_PUTBITS_WILE_END
0xC33443A6,	//0x0964		VoC_sub16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0xE47DFE77,	//0x0966		VoC_or16_rr(REG5,REG7,DEFAULT)	|	VoC_shru16_rr(REG7,REG6,DEFAULT)
0xDF835F03,	//0x0968		VoC_pop16(REG3,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0x10EE1582,	//0x096a		VoC_sw32_d(REG45,0x10ee)
0xFFC0E580,	//0x096c		VoC_NAD	|	VoC_return
		//0x096e		COOLSNAD_flush_bits
0x10EE1482,	//0x096e		VoC_lw32_d(REG45,0x10ee)
0x10ED2007,	//0x0970		VoC_lw16d_set_inc(REG3,0x10ed,0x1)
0xC3A4F026,	//0x0972		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x46E33824,	//0x0974		VoC_bgt16_rd(LABLE_FLUSH_WHILE_BEGIN,REG4,0x46e3)
0x09AC2B00,	//0x0976		VoC_jump_lg(LABLE_FLUSH_WHILE_END2)
		//0x0978		LABLE_FLUSH_WHILE_BEGIN
0xC1347E66,	//0x0978		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_shru16_rr(REG6,REG4,DEFAULT)
0xE0166475,	//0x097a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG6,DEFAULT)
0x4BCD3FA4,	//0x097c		VoC_bngt16_rd(LABLE_FLUSH_WHILE_BEGIN,REG4,0x4bcd)
0x53CE44A5,	//0x097e		VoC_bne16_rd(LABLE_FLUSH_0XFF,REG5,0x53ce)
0x10EC6C08,	//0x0980		VoC_bez16_d(LABLE_FLUSH_WRITE_short_1,0x10ec)
0xE00679C5,	//0x0982		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0x10F02885,	//0x0984		VoC_or16_rd(REG5,0x10f0)
0x10F01506,	//0x0986		VoC_sw16_d(REG6,0x10f0)
		//0x0988		LABLE_FLUSH_WRITE_short_1
0xE5CFDCB5,	//0x0988		VoC_jump(LABLE_FLUSH_WRITE_1024_begin)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x098a		LABLE_FLUSH_0XFF
0x10EC6C0A,	//0x098a		VoC_bez16_d(LABLE_FLUSH_WRITE_ORNOT,0x10ec)
0xE00679C5,	//0x098c		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0x10F02885,	//0x098e		VoC_or16_rd(REG5,0x10f0)
0x10EC1506,	//0x0990		VoC_sw16_d(REG6,0x10ec)
0xE5C5DCB5,	//0x0992		VoC_jump(LABLE_FLUSH_WRITE_ORNOT_END)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x0994		LABLE_FLUSH_WRITE_ORNOT
0x10F01505,	//0x0994		VoC_sw16_d(REG5,0x10f0)
0x10EC1506,	//0x0996		VoC_sw16_d(REG6,0x10ec)
		//0x0998		LABLE_FLUSH_WRITE_ORNOT_END
		//0x0998		LABLE_FLUSH_WRITE_1024_begin
0x4CE64513,	//0x0998		VoC_bne16_rd(LABLE_CHANGE_10,REG3,0x4ce6)
0x0A82DFC2,	//0x099a		VoC_lw16i(REG2,0x100)(lo)	|	VoC_push16(REG2,DEFAULT)
0x5FE90100,	//0x099c		VoC_push16(RA,DEFAULT)	|	VoC_lw16i(REG2,0x100)(hi)
0x2B80E003,	//0x099e		VoC_jal(DMAI_WRITE)(lo)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xDFA909D8,	//0x09a0		VoC_pop16(RA,DEFAULT)	|	VoC_jal(DMAI_WRITE)(hi)
0x0909F003,	//0x09a2		VoC_add32_rd(REG23,REG23,0x4010)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x70034010,	//0x09a4		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x4010)(hi)
0x1581DF82,	//0x09a6		VoC_sw32_d(REG23,0x4010)(lo)	|	VoC_pop16(REG2,IN_PARALLEL)
0xFFC04010,	//0x09a8		VoC_NAD	|	VoC_sw32_d(REG23,0x4010)(hi)
		//0x09aa		LABLE_CHANGE_10
0x10ED1503,	//0x09aa		VoC_sw16_d(REG3,0x10ed)
		//0x09ac		LABLE_FLUSH_WHILE_END2
0x0AC6F004,	//0x09ac		VoC_lw16i(REG6,0xd9ff)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x200759FF,	//0x09ae		VoC_lw16d_set_inc(REG3,0x10ed,0x1)(lo)	|	VoC_lw16i(REG6,0xd9ff)(hi)
0x409C10ED,	//0x09b0		VoC_be16_rd(LABLE_WRITE_ODD,REG4,0x10ec)(lo)	|	VoC_lw16d_set_inc(REG3,0x10ed,0x1)(hi)
0x140510EC,	//0x09b2		VoC_lw16_d(REG5,0x10f0)(lo)	|	VoC_be16_rd(LABLE_WRITE_ODD,REG4,0x10ec)(hi)
0x16C510F0,	//0x09b4		VoC_or16_ri(REG5,0xff00)(lo)	|	VoC_lw16_d(REG5,0x10f0)(hi)
0x0A867F00,	//0x09b6		VoC_lw16i(REG6,0xd9)(lo)	|	VoC_or16_ri(REG5,0xff00)(hi)
0xDCB500D9,	//0x09b8		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16i(REG6,0xd9)(hi)
0xE5C3DCB6,	//0x09ba		VoC_jump(LABLE_WRITE_FILE)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x09bc		LABLE_WRITE_ODD
0xFFC0DCB6,	//0x09bc		VoC_NAD	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x09be		LABLE_WRITE_FILE
0xF9FB7005,	//0x09be		VoC_shru16_ri(REG3,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xE0096068,	//0x09c0		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG3,DEFAULT)
0xE0F47087,	//0x09c2		VoC_lw16i_short(REG4,0xf,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0x40100924,	//0x09c4		VoC_add32_rd(ACC0,ACC0,0x4010)
0x400E1507,	//0x09c6		VoC_sw16_d(REG7,0x400e)
0x40101584,	//0x09c8		VoC_sw32_d(ACC0,0x4010)
0xF824C0E4,	//0x09ca		VoC_shr16_ri(REG4,0x4,DEFAULT)	|	VoC_add16_rr(REG4,REG3,REG4,DEFAULT)
0x1485F8F4,	//0x09cc		VoC_lw32_d(ACC1,0x4004)(lo)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0x15C24004,	//0x09ce		VoC_sw32_d(REG45,0xffc2)(lo)	|	VoC_lw32_d(ACC1,0x4004)(hi)
0x15C57FC2,	//0x09d0		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_sw32_d(REG45,0xffc2)(hi)
0xDE807FC4,	//0x09d2		VoC_cfg(0x0)	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x1794FFC0,	//0x09d4		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xE5800008,	//0x09d6		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x09d8		DMAI_WRITE
0x40041485,	//0x09d8		VoC_lw32_d(ACC1,0x4004)
0x7FC215C1,	//0x09da		VoC_sw32_d(REG23,0xffc2)
0xC94DF9F2,	//0x09dc		VoC_add32_rr(ACC1,ACC1,REG23,DEFAULT)	|	VoC_shru16_ri(REG2,0xfffffffe,DEFAULT)
0x7FC415C5,	//0x09de		VoC_sw32_d(ACC1,0xffc4)
0x40041585,	//0x09e0		VoC_sw32_d(ACC1,0x4004)
0xFFC0DE80,	//0x09e2		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x09e4		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x09e6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x09e7		CII_AMR_Encode
0x40282882,	//0x09e8		VoC_or16_rd(REG2,0x4028)
0x09EE3182,	//0x09ea		VoC_bez16_r(NO_RESET_ENC,REG2)
0x0A712B80,	//0x09ec		VoC_jal(CII_encoder_reset)
		//0x09ee		NO_RESET_ENC
0x1809F706,	//0x09ee		VoC_lw16i_set_inc(REG1,0x540,0x2)(lo)	|	VoC_lw16i_short(REG6,0xfff8,DEFAULT)
0xE0C70540,	//0x09f0		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x540,0x2)(hi)
0x00101808,	//0x09f2		VoC_lw16i_set_inc(REG0,0x10,0x2)
0x09F92CA0,	//0x09f4		VoC_loop_i(0x0,0x50)
0xE4DED9C6,	//0x09f6		VoC_and32_rr(RL6,REG67,DEFAULT)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xDDCEFFC0,	//0x09f8		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_NOP
		//0x09f9		VoC_endloop0
0x05401808,	//0x09fa		VoC_lw16i_set_inc(REG0,0x540,0x2)
0x0A322B80,	//0x09fc		VoC_jal(CII_encoder_homing_frame_test)
0x40281504,	//0x09fe		VoC_sw16_d(REG4,0x4028)
0x0FFE2B80,	//0x0a00		VoC_jal(CII_Pre_Process)
0x40A20A87,	//0x0a02		VoC_lw16i(REG7,0x40a2)
0x12522B80,	//0x0a04		VoC_jal(CII_COD_AMR_122)
0xFFC0DFA9,	//0x0a06		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x0a08		VoC_NAD	|	VoC_return
		//0x0a0a		CII_NORM_L_ACC0
0x00001805,	//0x0a0a		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xFF255F45,	//0x0a0c		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_push32(ACC1,DEFAULT)
0x0A193304,	//0x0a0e		VoC_bez32_r(G_PITCH_NORM_L_3_EXIT,ACC0)
0x0A1333C4,	//0x0a10		VoC_bnltz32_r(G_PITCH_NORM_L_3_1,ACC0)
0xEBE5E3C4,	//0x0a12		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_not32_r(ACC0,DEFAULT)
		//0x0a13		G_PITCH_NORM_L_3_1
0x0D6E642C,	//0x0a14		VoC_bnlt32_rd(G_PITCH_NORM_L_3_EXIT,ACC0,0xd6e)
0xDE087BFC,	//0x0a16		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
		//0x0a18		VoC_endloop0
0xFF2CFBFD,	//0x0a18		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
		//0x0a19		G_PITCH_NORM_L_3_EXIT
0xE580DF05,	//0x0a1a		VoC_return	|	VoC_pop32(ACC1,DEFAULT)
		//0x0a1c		CII_DIV_S
0x7FFF0A82,	//0x0a1c		VoC_lw16i(REG2,0x7fff)
0x0A313508,	//0x0a1e		VoC_be16_rr(SCHUR1_DIV_S_11,REG1,REG0)
0x00001806,	//0x0a20		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xF62E600C,	//0x0a22		VoC_movreg16(RL7_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(RL6_LO,REG0,DEFAULT)
0xE00F700D,	//0x0a24		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0xFBFE69C6,	//0x0a26		VoC_shr32_ri(RL6,0xffffffff,IN_PARALLEL)	|	VoC_loop_i_short(0xe,DEFAULT)
0x0A2C363E,	//0x0a28		VoC_bgt32_rr(SCHUR1_DIV_S_1,RL7,RL6)
0xDE104BBE,	//0x0a2a		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sub32_rr(RL6,RL6,RL7,DEFAULT)
		//0x0a2c		SCHUR1_DIV_S_1
		//0x0a2c		VoC_endloop0
0xFBFE78FA,	//0x0a2c		VoC_shr32_ri(RL6,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x0A31363E,	//0x0a2e		VoC_bgt32_rr(SCHUR1_DIV_S_11,RL7,RL6)
0xE580DE10,	//0x0a30		VoC_return	|	VoC_inc_p(REG2,DEFAULT)
		//0x0a31		SCHUR1_DIV_S_11
		//0x0a32		CII_encoder_homing_frame_test
0x2CA0F004,	//0x0a32		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xD9C30A38,	//0x0a34		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
0x0D6C5C23,	//0x0a36		VoC_bne32_rd(CII_encoder_homing_frame_test_01,REG67,0xd6c)
		//0x0a38		VoC_endloop0
0xF024FFC0,	//0x0a38		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_NAD
		//0x0a3a		CII_encoder_homing_frame_test_01
0xD9C4E580,	//0x0a3a		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_return
		//0x0a3b		CII_Copy_M
0xD9C4E8A2,	//0x0a3c		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x0a3e		VoC_endloop0
0xE580DDCC,	//0x0a3e		VoC_return	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0a40		CII_scale
0xF8FBD9C2,	//0x0a40		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xFE14E6C4,	//0x0a42		VoC_shr16_rr(REG4,REG2,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0xD9C2FE15,	//0x0a44		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr16_rr(REG5,REG2,DEFAULT)
		//0x0a46		VoC_endloop0
0xE580DDCA,	//0x0a46		VoC_return	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x0a48		CII_copy_xy
0xF8FE59C4,	//0x0a48		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C4E782,	//0x0a4a		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x0a4c		VoC_endloop0
0xF80EDDCC,	//0x0a4c		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xC490E580,	//0x0a4e		VoC_mult16_rr(REG0,REG2,REG2,DEFAULT)	|	VoC_return
		//0x0a4f		CII_SEARCH_COPY
0x7030F032,	//0x0a50		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xC210F641,	//0x0a52		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
0x0900F808,	//0x0a54		VoC_add32_rd(REG01,REG01,0x4444)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x31824444,	//0x0a56		VoC_bez16_r(SEARCH_COPY_label_100,REG2)(lo)	|	VoC_add32_rd(REG01,REG01,0x4444)(hi)
0xD8840A60,	//0x0a58		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_bez16_r(SEARCH_COPY_label_100,REG2)(hi)
0xD8846682,	//0x0a5a		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x0a5c		VoC_endloop0
0xDCB45884,	//0x0a5c		VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x0D1B0780,	//0x0a5e		VoC_sub16_rd(REG0,REG0,0xd1b)
		//0x0a60		SEARCH_COPY_label_100
0xC0105811,	//0x0a60		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x0D4C0B11,	//0x0a62		VoC_sub16_dr(REG1,0xd4c,REG2)
0xDE105CB1,	//0x0a64		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG1,REG3,DEFAULT)
0x0A703181,	//0x0a66		VoC_bez16_r(SEARCH_COPY_label2_200,REG1)
0xC0105804,	//0x0a68		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0xDE106644,	//0x0a6a		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG1,DEFAULT)
0xC0105804,	//0x0a6c		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
		//0x0a6e		VoC_endloop0
0xDE105CB4,	//0x0a6e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x0a70		SEARCH_COPY_label2_200
0xDFE9E580,	//0x0a70		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0a71		CII_encoder_reset
0x7F46FF47,	//0x0a72		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0xFF45FF44,	//0x0a74		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x04541808,	//0x0a76		VoC_lw16i_set_inc(REG0,0x454,0x2)
0x0A7D2D67,	//0x0a78		VoC_loop_i(0x1,0xb3)
0xDDC6DDC7,	//0x0a7a		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xDDC5DDC4,	//0x0a7c		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0a7d		VoC_endloop1
0x402A1808,	//0x0a7e		VoC_lw16i_set_inc(REG0,0x402a,0x2)
0x0A822CE1,	//0x0a80		VoC_loop_i(0x1,0x70)
		//0x0a82		VoC_endloop1
0xFFC0DDC7,	//0x0a82		VoC_NAD	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x12412B80,	//0x0a84		VoC_jal(CII_RESET_AMR_CONSTANT)
0x5B761804,	//0x0a86		VoC_lw16i_set_inc(REG0,0x5b76,0x1)
0x00900A86,	//0x0a88		VoC_lw16i(REG6,0x90)
0xF0065882,	//0x0a8a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0x0A942C31,	//0x0a8c		VoC_loop_i(0x1,0x18)
0xD88540B2,	//0x0a8e		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xD8836743,	//0x0a90		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0xDCA3D883,	//0x0a92		VoC_sw16inc_p(REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x0a93		VoC_endloop0
		//0x0a94		VoC_endloop1
0xDFA9E062,	//0x0a94		VoC_pop16(RA,DEFAULT)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0xE580FFC0,	//0x0a96		VoC_return	|	VoC_NOP
		//0x0a98		CII_dtx_com_s2
0xC079DFE9,	//0x0a98		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0A3B2B80,	//0x0a9a		VoC_jal(CII_Copy_M)
0x2CA0FF44,	//0x0a9c		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xD5120A9F,	//0x0a9e		VoC_bimac32inc_pp(REG2,REG2)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x0a9f		VoC_endloop0
0x21490A86,	//0x0aa0		VoC_lw16i(REG6,0x2149)
0x0CA72B80,	//0x0aa2		VoC_jal(CII_Log2)
0xF82DF8B4,	//0x0aa4		VoC_shr16_ri(REG5,0x5,DEFAULT)	|	VoC_shr16_ri(REG4,0xfffffff6,DEFAULT)
0xDFA9C12C,	//0x0aa6		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xE580C334,	//0x0aa8		VoC_return	|	VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)
		//0x0aaa		CII_DIV_32
0xFF15DFE9,	//0x0aaa		VoC_movreg32(ACC1,REG45,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0AB033C2,	//0x0aac		VoC_bnltz32_r(DIV_32_L_ABS_IN,REG45)
0x4BCD0B92,	//0x0aae		VoC_sub32_dr(REG45,0x4bcd,REG45)
		//0x0ab0		DIV_32_L_ABS_IN
0x0A80F023,	//0x0ab0		VoC_lw16i(REG0,0x3fff)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xE0E13FFF,	//0x0ab2		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x3fff)(hi)
0x0A1C2B80,	//0x0ab4		VoC_jal(CII_DIV_S)
0xCDD4C790,	//0x0ab6		VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)	|	VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)
0xF90CCE03,	//0x0ab8		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0x0D700BA3,	//0x0aba		VoC_sub32_dr(REG67,0xd70,ACC0)
0xC790F90E,	//0x0abc		VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xCE03CDD4,	//0x0abe		VoC_mac32_rr(REG0,REG3,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)
0xFF23FFC0,	//0x0ac0		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_NOP
0x4D7CF90E,	//0x0ac2		VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xC73EC770,	//0x0ac4		VoC_multf16_rr(REG6,REG4,REG7,DEFAULT)	|	VoC_multf16_rr(REG0,REG5,REG6,IN_PARALLEL)
0xCE33CE03,	//0x0ac6		VoC_mac32_rr(REG6,REG3,DEFAULT)	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0xFBF4DFA9,	//0x0ac8		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x32C5FF23,	//0x0aca		VoC_bngtz32_r(DIV_32_L_ABS_OUT,ACC1)(lo)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x0B9B0ACF,	//0x0acc		VoC_sub32_dr(REG67,0x4bcd,REG67)(lo)	|	VoC_bngtz32_r(DIV_32_L_ABS_OUT,ACC1)(hi)
0xE5804BCD,	//0x0ace		VoC_return	|	VoC_sub32_dr(REG67,0x4bcd,REG67)(hi)
		//0x0acf		DIV_32_L_ABS_OUT
		//0x0ad0		CII_Inv_sqrt
0x5038F026,	//0x0ad0		VoC_bgt32_rd(INV_SQRT101,REG01,0x4bcd)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF7E04BCD,	//0x0ad2		VoC_lw16i_short(REG0,0xffff,DEFAULT)	|	VoC_bgt32_rd(INV_SQRT101,REG01,0x4bcd)(hi)
0x3FFF0A81,	//0x0ad4		VoC_lw16i(REG1,0x3fff)
0xFFC0E580,	//0x0ad6		VoC_NAD	|	VoC_return
		//0x0ad8		INV_SQRT101
0x00001806,	//0x0ad8		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xEBE3FFC0,	//0x0ada		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x0D6E6420,	//0x0adc		VoC_bnlt32_rd(NORM_L105,REG01,0xd6e)
		//0x0ade		VoC_endloop0
0xFBF85E10,	//0x0ade		VoC_shr32_ri(REG01,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
		//0x0ae0		NORM_L105
0x0D420B12,	//0x0ae0		VoC_sub16_dr(REG2,0xd42,REG2)
0xF80A6416,	//0x0ae2		VoC_shr16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG2,DEFAULT)
0x0AE731C6,	//0x0ae4		VoC_bnez16_r(INV_SQRT102,REG6)
0xFA48FA08,	//0x0ae6		VoC_shr32_ri(REG01,0x9,DEFAULT)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
		//0x0ae7		INV_SQRT102
0x0D19078E,	//0x0ae8		VoC_sub16_rd(REG6,REG1,0xd19)
0xFA085E10,	//0x0aea		VoC_shr32_ri(REG01,0x1,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x4AD41805,	//0x0aec		VoC_lw16i_set_inc(REG1,0x4ad4,0x1)
0xE0084189,	//0x0aee		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0x7FFF1600,	//0x0af0		VoC_and16_ri(REG0,0x7fff)
0x60C9D896,	//0x0af2		VoC_movreg16(ACC0_HI,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xCE888589,	//0x0af4		VoC_msu32_rr(REG1,REG0,DEFAULT)	|	VoC_sub16_rp(REG1,REG6,REG1,IN_PARALLEL)
0xFF20FFC0,	//0x0af6		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0xE580FE90,	//0x0af8		VoC_return	|	VoC_shr32_rr(REG01,REG2,DEFAULT)
		//0x0afa		CII_Lag_window
0x0C931804,	//0x0afa		VoC_lw16i_set_inc(REG0,0xc93,0x1)
0x0C9F1805,	//0x0afc		VoC_lw16i_set_inc(REG1,0xc9f,0x1)
0x4AC01806,	//0x0afe		VoC_lw16i_set_inc(REG2,0x4ac0,0x1)
0x4ACA1807,	//0x0b00		VoC_lw16i_set_inc(REG3,0x4aca,0x1)
0x0D661482,	//0x0b02		VoC_lw32_d(REG45,0xd66)
0xAC56E949,	//0x0b04		VoC_multf16_pp(REG6,REG1,REG2,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x9C5CAC1F,	//0x0b06		VoC_multf32_pp(ACC0,REG1,REG3,DEFAULT)	|	VoC_multf16_pp(REG7,REG0,REG3,DEFAULT)
0xC851CF26,	//0x0b08		VoC_add32_rr(REG23,REG23,REG45,DEFAULT)	|	VoC_bimac32_rr(REG45,REG67)
0xF90EFF23,	//0x0b0a		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xDC86DC97,	//0x0b0c		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x0b0d		VoC_endloop0
0xDFE9E580,	//0x0b0e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0b0f		CII_Levinson
0x0C9E1805,	//0x0b10		VoC_lw16i_set_inc(REG1,0xc9e,0x1)
0x0C921804,	//0x0b12		VoC_lw16i_set_inc(REG0,0xc92,0x1)
0xDF40F023,	//0x0b14		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xD886D897,	//0x0b16		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xDF4398C2,	//0x0b18		VoC_push32(REG67,DEFAULT)	|	VoC_multf32_rp(REG45,REG3,REG0,DEFAULT)
0x2B80D815,	//0x0b1a		VoC_jal(CII_DIV_32)(lo)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0xFF1A0AAA,	//0x0b1c		VoC_movreg32(REG45,REG67,DEFAULT)	|	VoC_jal(CII_DIV_32)(hi)
0x0D701481,	//0x0b1e		VoC_lw32_d(REG23,0xd70)
0x4A9C091C,	//0x0b20		VoC_add32_rd(ACC0,REG67,0x4a9c)
0x641EF80E,	//0x0b22		VoC_and16_rr(REG6,REG3,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xF90CFA22,	//0x0b24		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0x4,IN_PARALLEL)
0xC7F04DFC,	//0x0b26		VoC_multf16_rr(REG0,REG7,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0x0CB01509,	//0x0b28		VoC_sw16_d(ACC0_HI,0xcb0)
0x0D170E00,	//0x0b2a		VoC_mac32_rd(REG0,0xd17)
0x0D170E00,	//0x0b2c		VoC_mac32_rd(REG0,0xd17)
0x40E41582,	//0x0b2e		VoC_sw32_d(REG45,0x40e4)
0x0B3433C4,	//0x0b30		VoC_bnltz32_r(LEVINSON_L_ABS_2,ACC0)
0x4BCD0BA4,	//0x0b32		VoC_sub32_dr(ACC0,0x4bcd,ACC0)
		//0x0b34		LEVINSON_L_ABS_2
0xF80CCA62,	//0x0b34		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_sub32_rr(REG45,REG23,ACC0,DEFAULT)
0xDF03641C,	//0x0b36		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0xC7E04DEC,	//0x0b38		VoC_multf16_rr(REG0,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xCE82C7A8,	//0x0b3a		VoC_msu32_rr(REG0,REG2,DEFAULT)	|	VoC_multf16_rr(REG0,REG6,REG5,DEFAULT)
0x2B80CE82,	//0x0b3c		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_msu32_rr(REG0,REG2,DEFAULT)
0xFF220A0A,	//0x0b3e		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x641CF80C,	//0x0b40		VoC_and16_rr(REG4,REG3,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xF046DFC1,	//0x0b42		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_push16(REG1,IN_PARALLEL)
0xDFC6DF42,	//0x0b44		VoC_push16(REG6,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0BCF2C13,	//0x0b46		VoC_loop_i(0x1,0x9)
0xF025D910,	//0x0b48		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0x40E11FBE,	//0x0b4a		VoC_lw16i_set_inc(REG2,0x40e1,0xffffffff)
0xE0145616,	//0x0b4c		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xF8FE43A7,	//0x0b4e		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG6,REG4,DEFAULT)
0xC81040B2,	//0x0b50		VoC_add32_rr(REG01,REG01,REG45,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xFF4467C6,	//0x0b52		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xAE16D30A,	//0x0b54		VoC_multf16inc_pp(REG6,REG0,REG2,DEFAULT)	|	VoC_mac32_pp(REG1,REG2,DEFAULT)
0xFFC0AE57,	//0x0b56		VoC_NOP	|	VoC_multf16inc_pp(REG7,REG1,REG2,DEFAULT)
		//0x0b58		VoC_endloop0
0x5910CF34,	//0x0b58		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_bimac32_rr(REG67,REG45)
0x4030D616,	//0x0b5a		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16_sd(REG6,0x0,IN_PARALLEL)
0xFBE4C071,	//0x0b5c		VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)
0xD90B9902,	//0x0b5e		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_multf32_rp(REG45,REG4,REG0,DEFAULT)
0xC8A2D815,	//0x0b60		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0x0AAA2B80,	//0x0b62		VoC_jal(CII_DIV_32)
0x0B12D622,	//0x0b64		VoC_sub16_dr(REG2,0x4bcd,REG2)(lo)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0xFE934BCD,	//0x0b66		VoC_shr32_rr(REG67,REG2,DEFAULT)	|	VoC_sub16_dr(REG2,0x4bcd,REG2)(hi)
0x4A9C091C,	//0x0b68		VoC_add32_rd(ACC0,REG67,0x4a9c)
0xF90E7F1D,	//0x0b6a		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG67,DEFAULT)
0x0CAF0A80,	//0x0b6c		VoC_lw16i(REG0,0xcaf)
0xC020D614,	//0x0b6e		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0x0D254C1C,	//0x0b70		VoC_bnlt16_rd(LEVINSON_03,REG4,0xd25)
0xE0E5DC09,	//0x0b72		VoC_movreg16(REG5,REG7,DEFAULT)	|	VoC_sw16_p(ACC0_HI,REG0,DEFAULT)
		//0x0b73		LEVINSON_03
0x0B783245,	//0x0b74		VoC_bnltz16_r(LEVINSON_ABS_S_1,REG5)
0x4BCD0B2D,	//0x0b76		VoC_sub16_dr(REG5,0x4bcd,REG5)
		//0x0b78		LEVINSON_ABS_S_1
0x7FEE0A84,	//0x0b78		VoC_lw16i(REG4,0x7fee)
0x0B8B34AC,	//0x0b7a		VoC_bngt16_rr(LEVINSON_04,REG5,REG4)
0x08870A80,	//0x0b7c		VoC_lw16i(REG0,0x887)
0x40E11401,	//0x0b7e		VoC_lw16_d(REG1,0x40e1)
0x6963FF46,	//0x0b80		VoC_loop_i_short(0xb,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
0xD886D886,	//0x0b82		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
		//0x0b84		VoC_endloop0
0x1586DC96,	//0x0b84		VoC_sw32_d(RL6,0xcb0)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x15860CB0,	//0x0b86		VoC_sw32_d(RL6,0xcb2)(lo)	|	VoC_sw32_d(RL6,0xcb0)(hi)
0x2B000CB2,	//0x0b88		VoC_jump_lg(LEVINSON_EXIT)(lo)	|	VoC_sw32_d(RL6,0xcb2)(hi)
0xD6140BE4,	//0x0b8a		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jump_lg(LEVINSON_EXIT)(hi)
		//0x0b8b		LEVINSON_04
0x40E11FBE,	//0x0b8c		VoC_lw16i_set_inc(REG2,0x40e1,0xffffffff)
0x180BC0A2,	//0x0b8e		VoC_lw16i_set_inc(REG3,0xc58,0x2)(lo)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x18010C58,	//0x0b90		VoC_lw16i_set_inc(REG1,0xd66,0x0)(lo)	|	VoC_lw16i_set_inc(REG3,0xc58,0x2)(hi)
0x18040D66,	//0x0b92		VoC_lw16i_set_inc(REG0,0x40e4,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xd66,0x0)(hi)
0x40A240E4,	//0x0b94		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x40e4,0x1)(hi)
0x9E0E850C,	//0x0b96		VoC_multf32inc_pp(RL6,REG0,REG1,DEFAULT)	|	VoC_sub16_rp(REG4,REG4,REG1,IN_PARALLEL)
0xE70AFFC0,	//0x0b98		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_NAD
0x8F9519D4,	//0x0b9a		VoC_multf16inc_rp(REG5,REG6,REG2,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)
0xFFC08FD4,	//0x0b9c		VoC_NOP	|	VoC_multf16inc_rp(REG4,REG7,REG2,DEFAULT)
0xD88DD221,	//0x0b9e		VoC_lw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_bimac32inc_rp(REG45,REG1)
0xF90CC9A2,	//0x0ba0		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,RL6,ACC0,DEFAULT)
0xDDDA9E0E,	//0x0ba2		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_multf32inc_pp(RL6,REG0,REG1,DEFAULT)
		//0x0ba3		VoC_endloop0
0xC7F04DFC,	//0x0ba4		VoC_multf16_rr(REG0,REG7,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0x0D701483,	//0x0ba6		VoC_lw32_d(REG67,0xd70)
0xFA22FF2A,	//0x0ba8		VoC_shr32_ri(REG45,0x4,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0xE43CF80C,	//0x0baa		VoC_and16_rr(REG4,REG7,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xD001D001,	//0x0bac		VoC_mac32_rp(REG0,REG1,DEFAULT)	|	VoC_mac32_rp(REG0,REG1,DEFAULT)
0x33C4DDDA,	//0x0bae		VoC_bnltz32_r(LEVINSON_L_ABS_4,ACC0)(lo)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0x0BA40BB3,	//0x0bb0		VoC_sub32_dr(ACC0,0x4bcd,ACC0)(lo)	|	VoC_bnltz32_r(LEVINSON_L_ABS_4,ACC0)(hi)
0xCAE14BCD,	//0x0bb2		VoC_sub32_rr(REG23,REG67,ACC0,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4bcd,ACC0)(hi)
		//0x0bb3		LEVINSON_L_ABS_4
0x643AF80A,	//0x0bb4		VoC_and16_rr(REG2,REG7,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xC752D90A,	//0x0bb6		VoC_multf16_rr(REG2,REG5,REG2,DEFAULT)	|	VoC_lw32_sd(REG45,0x0,IN_PARALLEL)
0xCD5CC71B,	//0x0bb8		VoC_multf32_rr(ACC0,REG5,REG3,DEFAULT)	|	VoC_multf16_rr(REG3,REG4,REG3,DEFAULT)
0x2B80D211,	//0x0bba		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_rp(REG23,REG1)
0xFF220A0A,	//0x0bbc		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x643CF80C,	//0x0bbe		VoC_and16_rr(REG4,REG7,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC0CBD623,	//0x0bc0		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16_sd(REG3,0x1,IN_PARALLEL)
0xDA23DD0A,	//0x0bc2		VoC_sw16_sd(REG3,0x1,DEFAULT)	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
0x0C58180A,	//0x0bc4		VoC_lw16i_set_inc(REG2,0xc58,0x2)
0x40E4180B,	//0x0bc6		VoC_lw16i_set_inc(REG3,0x40e4,0x2)
0x0735D616,	//0x0bc8		VoC_add16_rd(REG5,REG6,0xd17)(lo)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x67830D17,	//0x0bca		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_add16_rd(REG5,REG6,0xd17)(hi)
0xD9D4D9D4,	//0x0bcc		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x0bce		VoC_endloop0
0xDA15DDDC,	//0x0bce		VoC_sw16_sd(REG5,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0bcf		VoC_endloop1
0x10000A84,	//0x0bd0		VoC_lw16i(REG4,0x1000)
0x40E12004,	//0x0bd2		VoC_lw16d_set_inc(REG0,0x40e1,0x1)
0x08881805,	//0x0bd4		VoC_lw16i_set_inc(REG1,0x888,0x1)
0x40E41806,	//0x0bd6		VoC_lw16i_set_inc(REG2,0x40e4,0x1)
0x0692DC84,	//0x0bd8		VoC_multf32inc_pd(REG45,REG2,0xd17)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xE9480D17,	//0x0bda		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_multf32inc_pd(REG45,REG2,0xd17)(hi)
0xFBFAD8A5,	//0x0bdc		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x4A9C0913,	//0x0bde		VoC_add32_rd(REG67,REG45,0x4a9c)
0x0D170692,	//0x0be0		VoC_multf32inc_pd(REG45,REG2,0xd17)
0xDC97DC87,	//0x0be2		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x0be3		VoC_endloop0
		//0x0be4		LEVINSON_EXIT
0xDF86E842,	//0x0be4		VoC_pop16(REG6,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
		//0x0be6		VoC_endloop0
0xDFA9DF04,	//0x0be6		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(ACC0,DEFAULT)
0xE580FFC0,	//0x0be8		VoC_return	|	VoC_NOP
		//0x0bea		CII_Get_lsp_pol
0xFF44F045,	//0x0bea		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x01000A89,	//0x0bec		VoC_lw16i(ACC0_HI,0x100)
0xE0477040,	//0x0bee		VoC_lw16i_short(REG7,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xFF445DD4,	//0x0bf0		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x0C122C0B,	//0x0bf2		VoC_loop_i(0x1,0x5)
0x0D1B4180,	//0x0bf4		VoC_be16_rd(Get_lsp_pol_L1,REG0,0xd1b)
0xC22E59A4,	//0x0bf6		VoC_sub16_rr(REG6,REG0,REG5,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG4,DEFAULT)
0x6791F80E,	//0x0bf8		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xC2AEDD94,	//0x0bfa		VoC_sub16_rr(REG6,REG2,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,IN_PARALLEL)
0xD99442BC,	//0x0bfc		VoC_lw32_p(ACC0,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)
0x790ED9B3,	//0x0bfe		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw32_p(REG67,REG6,DEFAULT)
0x8D8E99CD,	//0x0c00		VoC_multf16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG1,IN_PARALLEL)
0x1124F027,	//0x0c02		VoC_add32_rp(ACC0,ACC0,REG4,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE046CE37,	//0x0c04		VoC_movreg16(REG6,REG2,DEFAULT)	|	VoC_mac32_rr(REG6,REG7,IN_PARALLEL)
0x4B2CFBFD,	//0x0c06		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
0xC2AAE047,	//0x0c08		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x4,IN_PARALLEL)
		//0x0c0a		VoC_endloop0
0xD994DDB4,	//0x0c0a		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x0c0c		Get_lsp_pol_L1
0x4CE61404,	//0x0c0c		VoC_lw16_d(REG4,0x4ce6)
0xE012D1A1,	//0x0c0e		VoC_movreg16(INC2,REG0,DEFAULT)	|	VoC_msu32inc_rp(REG4,REG1,DEFAULT)
0xDDD4C028,	//0x0c10		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
		//0x0c12		VoC_endloop1
0xE580C2BC,	//0x0c12		VoC_return	|	VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)
		//0x0c14		CII_Lsp_Az
0xDF40DFE9,	//0x0c14		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x40E8180A,	//0x0c16		VoC_lw16i_set_inc(REG2,0x40e8,0x2)
0x0BEA2B80,	//0x0c18		VoC_jal(CII_Get_lsp_pol)
0x180AD908,	//0x0c1a		VoC_lw16i_set_inc(REG2,0x40f4,0x2)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x070940F4,	//0x0c1c		VoC_add16_rd(REG1,REG1,0xd17)(lo)	|	VoC_lw16i_set_inc(REG2,0x40f4,0x2)(hi)
0xFFC00D17,	//0x0c1e		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0xd17)(hi)
0x0BEA2B80,	//0x0c20		VoC_jal(CII_Get_lsp_pol)
0x40F21FB8,	//0x0c22		VoC_lw16i_set_inc(REG0,0x40f2,0xfffffffe)
0x40F01FBA,	//0x0c24		VoC_lw16i_set_inc(REG2,0x40f0,0xfffffffe)
0x40FE1FB9,	//0x0c26		VoC_lw16i_set_inc(REG1,0x40fe,0xfffffffe)
0x40FC1FBB,	//0x0c28		VoC_lw16i_set_inc(REG3,0x40fc,0xfffffffe)
0xE0A768A7,	//0x0c2a		VoC_lw16i_short(REG7,0xa,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0x9314D984,	//0x0c2c		VoC_add32inc_rp(ACC0,ACC0,REG2,DEFAULT)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0x975DD98D,	//0x0c2e		VoC_sub32inc_rp(ACC1,ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xDDCDDDC4,	//0x0c30		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0c31		VoC_endloop0
0x10000A84,	//0x0c32		VoC_lw16i(REG4,0x1000)
0xF3FF5F01,	//0x0c34		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0xF00640BB,	//0x0c36		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG2,REG7,DEFAULT)
0x40EA1808,	//0x0c38		VoC_lw16i_set_inc(REG0,0x40ea,0x2)
0x40F61809,	//0x0c3a		VoC_lw16i_set_inc(REG1,0x40f6,0x2)
0xDCA468B0,	//0x0c3c		VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xD9CED9C7,	//0x0c3e		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFA64C9F4,	//0x0c40		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32_rr(ACC0,RL7,RL6,DEFAULT)
0x0D170924,	//0x0c42		VoC_add32_rd(ACC0,ACC0,0xd17)
0xCBF4FA0C,	//0x0c44		VoC_sub32_rr(ACC0,RL7,RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xFA64DCA8,	//0x0c46		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
0x0D170924,	//0x0c48		VoC_add32_rd(ACC0,ACC0,0xd17)
0xFFC0FA0C,	//0x0c4a		VoC_NOP	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
		//0x0c4c		VoC_endloop0
0xDFA9DCB8,	//0x0c4c		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)
0xE580F033,	//0x0c4e		VoC_return	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
		//0x0c50		CII_Lsf_lsp
0xF0047033,	//0x0c50		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x4A5C1806,	//0x0c52		VoC_lw16i_set_inc(REG2,0x4a5c,0x1)
0xF0055883,	//0x0c54		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE067E94D,	//0x0c56		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC0D3F843,	//0x0c58		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shr16_ri(REG3,0x8,DEFAULT)
0x00FF1607,	//0x0c5a		VoC_and16_ri(REG7,0xff)
0xB8EED8B5,	//0x0c5c		VoC_sub16_pr(REG6,REG3,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xFFC0CDBB,	//0x0c5e		VoC_NOP	|	VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)
0xC176FA4B,	//0x0c60		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0x9,DEFAULT)
0xDC96D883,	//0x0c62		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x0c63		VoC_endloop0
0xF126E580,	//0x0c64		VoC_lw16i_short(REG6,0x9,DEFAULT)	|	VoC_return
		//0x0c65		CII_Lsp_lsf
0xC0714030,	//0x0c66		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x003F1FBE,	//0x0c68		VoC_lw16i_set_inc(REG2,0x3f,0xffffffff)
0x4A9B1FBF,	//0x0c6a		VoC_lw16i_set_inc(REG3,0x4a9b,0xffffffff)
0x4A5B0A84,	//0x0c6c		VoC_lw16i(REG4,0x4a5b)
0xD886E953,	//0x0c6e		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x0C762C81,	//0x0c70		VoC_loop_i(0x1,0x40)
0x3147879F,	//0x0c72		VoC_bngtz16_r(LSP_LSF_02,REG7)(lo)	|	VoC_sub16inc_rp(REG7,REG6,REG3,DEFAULT)
0xDE100C78,	//0x0c74		VoC_inc_p(REG2,DEFAULT)	|	VoC_bngtz16_r(LSP_LSF_02,REG7)(hi)
		//0x0c76		VoC_endloop1
0x0D1707A4,	//0x0c76		VoC_sub16_rd(REG4,REG4,0xd17)
		//0x0c78		LSP_LSF_02
0xE04599E3,	//0x0c78		VoC_movreg16(REG5,REG2,DEFAULT)	|	VoC_multf32_rp(REG67,REG7,REG4,DEFAULT)
0xF8C57BEB,	//0x0c7a		VoC_shr16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffffd,DEFAULT)
0x4A9C091B,	//0x0c7c		VoC_add32_rd(REG67,REG67,0x4a9c)
0x071BC1EF,	//0x0c7e		VoC_add16_rd(REG3,REG3,0xd17)(lo)	|	VoC_add16_rr(REG7,REG7,REG5,DEFAULT)
0xDC970D17,	//0x0c80		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0xd17)(hi)
		//0x0c81		VoC_endloop0
0xFF03E580,	//0x0c82		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_return
		//0x0c83		CII_Convolve
0x00001806,	//0x0c84		VoC_lw16i_set_inc(REG2,0x0,0x1)
0x0D17079B,	//0x0c86		VoC_sub16_rd(REG3,REG3,0xd17)
0xE00C702D,	//0x0c88		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x1,DEFAULT)
0xE01E77EF,	//0x0c8a		VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0xffffffff,DEFAULT)
0xFFC09C0C,	//0x0c8c		VoC_NAD	|	VoC_multf32_pp(ACC0,REG0,REG1,DEFAULT)
0x0CA42C29,	//0x0c8e		VoC_loop_i(0x1,0x14)
0x0C943142,	//0x0c90		VoC_bngtz16_r(Convolve100,REG2)
0xD501E681,	//0x0c92		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x0c93		VoC_endloop0
		//0x0c94		Convolve100
0xDCB548F0,	//0x0c94		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG67,RL6,DEFAULT)
0xC8F37F22,	//0x0c96		VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDE106201,	//0x0c98		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xFF447BEA,	//0x0c9a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
0xD501E681,	//0x0c9c		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x0c9d		VoC_endloop0
0xDCB548F3,	//0x0c9e		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xC8F87F22,	//0x0ca0		VoC_add32_rr(REG01,REG67,RL7,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xE201FBEA,	//0x0ca2		VoC_aligninc_pp(REG0,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
		//0x0ca4		VoC_endloop1
0xDCB59DBC,	//0x0ca4		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_multf32_pp(ACC0,REG6,REG7,DEFAULT)
0xFF42E580,	//0x0ca6		VoC_lw32z(REG45,DEFAULT)	|	VoC_return
		//0x0ca7		CII_Log2
0x2B80DFE9,	//0x0ca8		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_push16(RA,DEFAULT)
0xDF400A0A,	//0x0caa		VoC_push32(REG01,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3284FF21,	//0x0cac		VoC_bgtz32_r(LOG1001,ACC0)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0xFF420CB1,	//0x0cae		VoC_lw32z(REG45,DEFAULT)	|	VoC_bgtz32_r(LOG1001,ACC0)(hi)
0xFF25E5D5,	//0x0cb0		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_jump(LOG1002)
		//0x0cb1		LOG1001
0x0D420B09,	//0x0cb2		VoC_sub16_dr(REG1,0xd42,REG1)
0x0798FA49,	//0x0cb4		VoC_sub16_rd(REG0,REG3,0xd20)(lo)	|	VoC_shr32_ri(REG23,0x9,DEFAULT)
0x7A090D20,	//0x0cb6		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_sub16_rd(REG0,REG3,0xd20)(hi)
0x2802F004,	//0x0cb8		VoC_and16_rd(REG2,0x4abe)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x0A844ABE,	//0x0cba		VoC_lw16i(REG4,0x4a9e)(lo)	|	VoC_and16_rd(REG2,0x4abe)(hi)
0xC1004A9E,	//0x0cbc		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x4a9e)(hi)
0xD885F004,	//0x0cbe		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xCCD18543,	//0x0cc0		VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)	|	VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)
0xCA8AFFC0,	//0x0cc2		VoC_sub32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_NOP
0xDFA9E024,	//0x0cc4		VoC_pop16(RA,DEFAULT)	|	VoC_movreg16(REG4,REG1,DEFAULT)
		//0x0cc5		LOG1002
0xE580DF00,	//0x0cc6		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x0cc8		CII_Lsf_wt
0x7030FF01,	//0x0cc8		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x7032F007,	//0x0cca		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x5E00F005,	//0x0ccc		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xE923E006,	//0x0cce		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0xD8A6BA37,	//0x0cd0		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sub16inc_pr(REG7,REG0,REG6,DEFAULT)
		//0x0cd2		VoC_endloop0
0x0B36DC97,	//0x0cd2		VoC_sub16_dr(REG6,0x44fb,REG6)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x0A8444FB,	//0x0cd4		VoC_lw16i(REG4,0x733)(lo)	|	VoC_sub16_dr(REG6,0x44fb,REG6)(hi)
0xDC160733,	//0x0cd6		VoC_sw16_p(REG6,REG1,DEFAULT)	|	VoC_lw16i(REG4,0x733)(hi)
0x0D630A85,	//0x0cd8		VoC_lw16i(REG5,0xd63)
0x6E000A86,	//0x0cda		VoC_lw16i(REG6,0x6e00)
0x18620A87,	//0x0cdc		VoC_lw16i(REG7,0x1862)
0x8D98E94B,	//0x0cde		VoC_multf16_rp(REG0,REG6,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC340B8E1,	//0x0ce0		VoC_sub16_rr(REG0,REG5,REG0,DEFAULT)	|	VoC_sub16_pr(REG1,REG3,REG4,DEFAULT)
0x0CE73201,	//0x0ce2		VoC_bltz16_r(Lsf_wt101,REG1)
0xFFC0C678,	//0x0ce4		VoC_NOP	|	VoC_multf16_rr(REG0,REG1,REG7,DEFAULT)
0xF8E8C300,	//0x0ce6		VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)	|	VoC_sub16_rr(REG0,REG4,REG0,DEFAULT)
		//0x0ce7		Lsf_wt101
0xDCB0FFC0,	//0x0ce8		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_NOP
		//0x0ce9		VoC_endloop0
0xD886E580,	//0x0cea		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_return
		//0x0ceb		CII_Residu_new
0xF3FD600E,	//0x0cec		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
0x0CFB2C51,	//0x0cee		VoC_loop_i(0x1,0x28)
0x07999B9C,	//0x0cf0		VoC_sub16_rd(REG1,REG3,0xd1b)(lo)	|	VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)
0xE9420D1B,	//0x0cf2		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_sub16_rd(REG1,REG3,0xd1b)(hi)
0xD139D887,	//0x0cf4		VoC_mac32inc_rp(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
		//0x0cf5		VoC_endloop0
0xFBECE1C0,	//0x0cf6		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x4A9C0922,	//0x0cf8		VoC_add32_rd(REG45,ACC0,0x4a9c)
0xDCA5FFC0,	//0x0cfa		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_NOP
		//0x0cfb		VoC_endloop1
0xDFE9E580,	//0x0cfc		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0cfd		CII_subframePostProc
0x0AD21483,	//0x0cfe		VoC_lw32_d(REG67,0xad2)
0x09E00A81,	//0x0d00		VoC_lw16i(REG1,0x9e0)
0x0D083180,	//0x0d02		VoC_bez16_r(subframePostProc103,REG0)
0x0B3C0A81,	//0x0d04		VoC_lw16i(REG1,0xb3c)
0x40F81483,	//0x0d06		VoC_lw32_d(REG67,0x40f8)
		//0x0d08		subframePostProc103
0xDF43E0C3,	//0x0d08		VoC_push32(REG67,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x32D9180A,	//0x0d0a		VoC_lw16i_set_inc(REG2,0x32d9,0x2)
0x0D0F349A,	//0x0d0c		VoC_bngt16_rr(subframePostProc102,REG3,REG2)
0xF7D9E043,	//0x0d0e		VoC_lw16i_short(FORMAT32,0xfffffffe,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
		//0x0d0f		subframePostProc102
0xDC13F7C5,	//0x0d10		VoC_sw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)
0x780EF7B9,	//0x0d12		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffd,DEFAULT)
0xDFC0EFC5,	//0x0d14		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0xfffffffc,IN_PARALLEL)
0x07B21804,	//0x0d16		VoC_lw16i_set_inc(REG0,0x7b2,0x1)
0x1486DFC5,	//0x0d18		VoC_lw32_d(RL6,0x4a9c)(lo)	|	VoC_push16(REG5,DEFAULT)
0x56424A9C,	//0x0d1a		VoC_lw16_sd(REG2,0x3,DEFAULT)	|	VoC_lw32_d(RL6,0x4a9c)(hi)
0x1805FF34,	//0x0d1c		VoC_lw16i_set_inc(REG1,0xb3e,0x1)(lo)	|	VoC_movreg32(ACC0,RL6,IN_PARALLEL)
0x56250B3E,	//0x0d1e		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xb3e,0x1)(hi)
0x3185FF35,	//0x0d20		VoC_bez16_r(subframePostProc105,REG5)(lo)	|	VoC_movreg32(ACC1,RL6,IN_PARALLEL)
0x14020D28,	//0x0d22		VoC_lw16_d(REG2,0x40f6)(lo)	|	VoC_bez16_r(subframePostProc105,REG5)(hi)
0x180540F6,	//0x0d24		VoC_lw16i_set_inc(REG1,0x407a,0x1)(lo)	|	VoC_lw16_d(REG2,0x40f6)(hi)
0xFFC0407A,	//0x0d26		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x407a,0x1)(hi)
		//0x0d28		subframePostProc105
0xDFC24010,	//0x0d28		VoC_push16(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0xD030ED06,	//0x0d2a		VoC_mac32_rp(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xFFC09BCA,	//0x0d2c		VoC_NOP	|	VoC_multf32inc_rp(REG45,REG7,REG1,DEFAULT)
0xFF34C8A2,	//0x0d2e		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
		//0x0d30		VoC_endloop0
0xF7F9DC85,	//0x0d30		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x07B21807,	//0x0d32		VoC_lw16i_set_inc(REG3,0x7b2,0x1)
0xD675D652,	//0x0d34		VoC_lw16_sd(REG5,0x6,DEFAULT)	|	VoC_lw16_sd(REG2,0x4,DEFAULT)
0x3180D630,	//0x0d36		VoC_bez16_r(subframePostProc106,REG0)(lo)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x07AD0D3D,	//0x0d38		VoC_sub16_rd(REG5,REG5,0xd23)(lo)	|	VoC_bez16_r(subframePostProc106,REG0)(hi)
0x14020D23,	//0x0d3a		VoC_lw16_d(REG2,0x40f6)(lo)	|	VoC_sub16_rd(REG5,REG5,0xd23)(hi)
0xC0D340F6,	//0x0d3c		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16_d(REG2,0x40f6)(hi)
		//0x0d3d		subframePostProc106
0x420A0A87,	//0x0d3e		VoC_lw16i(REG7,0x420a)
0x7020C1D7,	//0x0d40		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG2,DEFAULT)
0x61E1E286,	//0x0d42		VoC_movreg16(REG1,RL7_HI,DEFAULT)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x2B80F005,	//0x0d44		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDF8110D7,	//0x0d46		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0x420A1806,	//0x0d48		VoC_lw16i_set_inc(REG2,0x420a,0x1)
0x05181807,	//0x0d4a		VoC_lw16i_set_inc(REG3,0x518,0x1)
0x0D420708,	//0x0d4c		VoC_add16_rd(REG0,REG1,0xd42)
0xC0C34082,	//0x0d4e		VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x09AE1804,	//0x0d50		VoC_lw16i_set_inc(REG0,0x9ae,0x1)
0xD8B46944,	//0x0d52		VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD8B48714,	//0x0d54		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sub16inc_rp(REG4,REG4,REG2,DEFAULT)
		//0x0d56		VoC_endloop0
0xDF8CDC84,	//0x0d56		VoC_pop16(RL6_LO,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x1804DF81,	//0x0d58		VoC_lw16i_set_inc(REG0,0xa00,0x1)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x18060A00,	//0x0d5a		VoC_lw16i_set_inc(REG2,0xa78,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xa00,0x1)(hi)
0x31810A78,	//0x0d5c		VoC_bez16_r(subframePostProc107,REG1)(lo)	|	VoC_lw16i_set_inc(REG2,0xa78,0x1)(hi)
0x18040D63,	//0x0d5e		VoC_lw16i_set_inc(REG0,0x40c2,0x1)(lo)	|	VoC_bez16_r(subframePostProc107,REG1)(hi)
0x180640C2,	//0x0d60		VoC_lw16i_set_inc(REG2,0x40ea,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x40c2,0x1)(hi)
0xE1C340EA,	//0x0d62		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x40ea,0x1)(hi)
		//0x0d63		subframePostProc107
0x0A501805,	//0x0d64		VoC_lw16i_set_inc(REG1,0xa50,0x1)
0x694AF033,	//0x0d66		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x9B8AD90B,	//0x0d68		VoC_multf32inc_rp(REG45,REG6,REG1,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,IN_PARALLEL)
0xFBFA9BD3,	//0x0d6a		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_multf32inc_rp(REG67,REG7,REG2,DEFAULT)
0xFEA3E184,	//0x0d6c		VoC_shr32_rr(REG67,REG4,DEFAULT)	|	VoC_movreg16(REG4,RL6_LO,DEFAULT)
0xBA3CC17F,	//0x0d6e		VoC_sub16inc_pr(REG4,REG0,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG5,REG7,DEFAULT)
0xDCB4D90B,	//0x0d70		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
		//0x0d71		VoC_endloop0
0xDF03DFA9,	//0x0d72		VoC_pop32(REG67,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xD885E580,	//0x0d74		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_return
		//0x0d75		CII_Weight_Ai
0x9E0AE963,	//0x0d76		VoC_multf32inc_pp(REG45,REG0,REG1,DEFAULT)	|	VoC_loop_i_short(0xb,DEFAULT)
0x0912DCA5,	//0x0d78		VoC_add32_rd(REG45,REG45,0x4a9c)(lo)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x0d79		VoC_endloop0
0xE5804A9C,	//0x0d7a		VoC_return	|	VoC_add32_rd(REG45,REG45,0x4a9c)(hi)
		//0x0d7c		CII_Int_lpc_only
0xF052F053,	//0x0d7c		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9D2D9DB,	//0x0d7e		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0xF80CE8A9,	//0x0d80		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0x780EF80D,	//0x0d82		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0x4134F80F,	//0x0d84		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0xD9DBC17D,	//0x0d86		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xD9D2DDCA,	//0x0d88		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x0d89		VoC_endloop0
0xF004E580,	//0x0d8a		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_return
		//0x0d8b		CII_Pow2
0x0D200A01,	//0x0d8c		VoC_multf32_rd(REG23,REG0,0xd20)
0x4B441804,	//0x0d8e		VoC_lw16i_set_inc(REG0,0x4b44,0x1)
0xFA094018,	//0x0d90		VoC_shr32_ri(REG23,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x7FFF1602,	//0x0d92		VoC_and16_ri(REG2,0x7fff)
0x8543D885,	//0x0d94		VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0x0B08CCD1,	//0x0d96		VoC_sub16_dr(REG0,0xd42,REG1)(lo)	|	VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)
0xCA890D42,	//0x0d98		VoC_sub32_rr(REG23,REG45,REG23,DEFAULT)	|	VoC_sub16_dr(REG0,0xd42,REG1)(hi)
0x0D4B3C20,	//0x0d9a		VoC_bngt16_rd(POW2101,REG0,0xd4b)
0xE580FF41,	//0x0d9c		VoC_return	|	VoC_lw32z(REG23,DEFAULT)
		//0x0d9e		POW2101
0x0D170780,	//0x0d9e		VoC_sub16_rd(REG0,REG0,0xd17)
0x3C20FE81,	//0x0da0		VoC_bngt16_rd(POW2102,REG0,0xd17)(lo)	|	VoC_shr32_rr(REG23,REG0,DEFAULT)
0x09090D17,	//0x0da2		VoC_add32_rd(REG23,REG23,0xd17)(lo)	|	VoC_bngt16_rd(POW2102,REG0,0xd17)(hi)
0xFA090D17,	//0x0da4		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0xd17)(hi)
		//0x0da5		POW2102
0xF043E580,	//0x0da6		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_return
		//0x0da7		CII_gc_pred_update
0xF023C158,	//0x0da8		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_add16_rr(REG0,REG5,REG3,DEFAULT)
0x0D31072A,	//0x0daa		VoC_add16_rd(REG2,REG5,0xd31)
0xC09BC019,	//0x0dac		VoC_add16_rr(REG3,REG2,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG3,DEFAULT)
0xF3FD77F0,	//0x0dae		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF3FF77F2,	//0x0db0		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0xD884E864,	//0x0db2		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDC94D8A5,	//0x0db4		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x0db6		VoC_endloop0
0xDC37DCB5,	//0x0db6		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xE580DC16,	//0x0db8		VoC_return	|	VoC_sw16_p(REG6,REG1,DEFAULT)
		//0x0dba		CII_Autocorr
0x1806DFE9,	//0x0dba		VoC_lw16i_set_inc(REG2,0xb66,0x1)(lo)	|	VoC_push16(RA,DEFAULT)
0x14860B66,	//0x0dbc		VoC_lw32_d(RL6,0x4a9c)(lo)	|	VoC_lw16i_set_inc(REG2,0xb66,0x1)(hi)
0xFFC04A9C,	//0x0dbe		VoC_NAD	|	VoC_lw32_d(RL6,0x4a9c)(hi)
0x0DC72CF2,	//0x0dc0		VoC_loop_i(0x0,0x79)
0x9E0C4932,	//0x0dc2		VoC_multf32inc_pp(ACC0,REG0,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0x9E0D4973,	//0x0dc4		VoC_multf32inc_pp(ACC1,REG0,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC1,RL6,DEFAULT)
0xDCA7DCA5,	//0x0dc6		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x0dc7		VoC_endloop0
0xE04E700C,	//0x0dc8		VoC_lw16i_short(RL7_LO,0x4,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
		//0x0dca		AUTOCORR_01
0x1809FF44,	//0x0dca		VoC_lw16i_set_inc(REG1,0xb68,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x2CF00B68,	//0x0dcc		VoC_loop_i(0x0,0x78)(lo)	|	VoC_lw16i_set_inc(REG1,0xb68,0x2)(hi)
0xD5090DCF,	//0x0dce		VoC_bimac32inc_pp(REG1,REG1)	|	VoC_loop_i(0x0,0x78)(hi)
		//0x0dcf		VoC_endloop0
0x5C9CFFC0,	//0x0dd0		VoC_bne32_rd(AUTOCORR_01_END,ACC0,0xd70)(lo)	|	VoC_NOP
0xC9BE0D70,	//0x0dd2		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_bne32_rd(AUTOCORR_01_END,ACC0,0xd70)(hi)
0x0B681808,	//0x0dd4		VoC_lw16i_set_inc(REG0,0xb68,0x2)
0x7042E001,	//0x0dd6		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x2B80E3C3,	//0x0dd8		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0x3c,IN_PARALLEL)
0xE5EF0A40,	//0x0dda		VoC_jump(AUTOCORR_01)	|	VoC_jal(CII_scale)(hi)
		//0x0ddc		AUTOCORR_01_END
0x0D170924,	//0x0ddc		VoC_add32_rd(ACC0,ACC0,0xd17)
0x0A0A2B80,	//0x0dde		VoC_jal(CII_NORM_L_ACC0)
0xFF236185,	//0x0de0		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0xF90E426D,	//0x0de2		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG1,REG5,DEFAULT)
0x0C9E1507,	//0x0de4		VoC_sw16_d(REG7,0xc9e)
0x0C921506,	//0x0de6		VoC_sw16_d(REG6,0xc92)
0x048C1505,	//0x0de8		VoC_sw16_d(REG5,0x48c)
0x4BCD0B0C,	//0x0dea		VoC_sub16_dr(REG4,0x4bcd,REG1)
0x0B681808,	//0x0dec		VoC_lw16i_set_inc(REG0,0xb68,0x2)
0x40E21809,	//0x0dee		VoC_lw16i_set_inc(REG1,0x40e2,0x2)
0xE3C67F46,	//0x0df0		VoC_lw16i_short(REG6,0x3c,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x0A482B80,	//0x0df2		VoC_jal(CII_copy_xy)
0x7052DD8E,	//0x0df4		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_sw32_p(RL6,REG1,DEFAULT)
0x1804F00B,	//0x0df6		VoC_lw16i_set_inc(REG0,0xc93,0x1)(lo)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0x18050C93,	//0x0df8		VoC_lw16i_set_inc(REG1,0xc9f,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xc93,0x1)(hi)
0x0A8D0C9F,	//0x0dfa		VoC_lw16i(RL6_HI,0x40e3)(lo)	|	VoC_lw16i_set_inc(REG1,0xc9f,0x1)(hi)
0x0A8C40E3,	//0x0dfc		VoC_lw16i(RL6_LO,0xf0)(lo)	|	VoC_lw16i(RL6_HI,0x40e3)(hi)
0x148700F0,	//0x0dfe		VoC_lw32_d(RL7,0xd6a)(lo)	|	VoC_lw16i(RL6_LO,0xf0)(hi)
0xDFA90D6A,	//0x0e00		VoC_pop16(RA,DEFAULT)	|	VoC_lw32_d(RL7,0xd6a)(hi)
0xF7A37F44,	//0x0e02		VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x0B680A82,	//0x0e04		VoC_lw16i(REG2,0xb68)
0x6213E185,	//0x0e06		VoC_aligninc_pp(REG2,REG3,DEFAULT)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0x2C15F80D,	//0x0e08		VoC_loop_i(0x1,0xa)(lo)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0xE7410E18,	//0x0e0a		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
		//0x0e0c		VoC_endloop0
0xC9BED513,	//0x0e0c		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_bimac32inc_pp(REG2,REG3)
0x0B680A82,	//0x0e0e		VoC_lw16i(REG2,0xb68)
0xF7A37EA4,	//0x0e10		VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xFF447F23,	//0x0e12		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xF90E6213,	//0x0e14		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_aligninc_pp(REG2,REG3,DEFAULT)
0xF7855C97,	//0x0e16		VoC_movreg16(REG5,RL6_LO,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x0e18		VoC_endloop1
0xF80D5C86,	//0x0e18		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xFF45E580,	//0x0e1a		VoC_lw32z(ACC1,DEFAULT)	|	VoC_return
		//0x0e1b		CII_Chebps
0x7FFF0A80,	//0x0e1c		VoC_lw16i(REG0,0x7fff)
0x44FA1401,	//0x0e1e		VoC_lw16_d(REG1,0x44fa)
0x40E80A86,	//0x0e20		VoC_lw16i(REG6,0x40e8)
0x0D740A87,	//0x0e22		VoC_lw16i(REG7,0xd74)
0x01000A8B,	//0x0e24		VoC_lw16i(ACC1_HI,0x100)
0x4CE60A1A,	//0x0e26		VoC_multf32_rd(REG45,REG3,0x4ce6)
0xDDB59A54,	//0x0e28		VoC_sw32_p(ACC1,REG6,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG1,REG2,DEFAULT)
0xF80CC8A2,	//0x0e2a		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xE86BE404,	//0x0e2c		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0x9A54CD1D,	//0x0e2e		VoC_multf32inc_rp(ACC0,REG1,REG2,DEFAULT)	|	VoC_multf32_rr(ACC1,REG4,REG3,DEFAULT)
0x7BFDFA85,	//0x0e30		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_shr32_ri(ACC1,0x10,DEFAULT)
0xD537CE2B,	//0x0e32		VoC_bimac32inc_pp(REG6,REG7)	|	VoC_mac32_rr(REG5,REG3,IN_PARALLEL)
0xFBFD5DB2,	//0x0e34		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_sw32_p(REG45,REG6,DEFAULT)
0xF80CC962,	//0x0e36		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,ACC1,ACC0,DEFAULT)
		//0x0e38		VoC_endloop0
0xCD1CE404,	//0x0e38		VoC_multf32_rr(ACC0,REG4,REG3,DEFAULT)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xFA7CFFC0,	//0x0e3a		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_NOP
0x1010D537,	//0x0e3c		VoC_mac32_pd(REG2,0x4509)(lo)	|	VoC_bimac32inc_pp(REG6,REG7)
0xCD5B4509,	//0x0e3e		VoC_multf32_rr(REG67,REG5,REG3,DEFAULT)	|	VoC_mac32_pd(REG2,0x4509)(hi)
0xC8E3FFC0,	//0x0e40		VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_NOP
0xE580FBD3,	//0x0e42		VoC_return	|	VoC_shr32_ri(REG67,0xfffffffa,DEFAULT)
		//0x0e44		CII_Az_lsp
0x1804DF40,	//0x0e44		VoC_lw16i_set_inc(REG0,0xae6,0x1)(lo)	|	VoC_push32(REG01,DEFAULT)
0x40300AE6,	//0x0e46		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xae6,0x1)(hi)
0x4029E095,	//0x0e48		VoC_add16_rr(REG1,REG0,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x9,IN_PARALLEL)
0x0A86DFE9,	//0x0e4a		VoC_lw16i(REG6,0x400)(lo)	|	VoC_push16(RA,IN_PARALLEL)
0x18060400,	//0x0e4c		VoC_lw16i_set_inc(REG2,0xb8e,0x1)(lo)	|	VoC_lw16i(REG6,0x400)(hi)
0x18070B8E,	//0x0e4e		VoC_lw16i_set_inc(REG3,0xb98,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0xb8e,0x1)(hi)
0x5C260B98,	//0x0e50		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xb98,0x1)(hi)
0xDC36F3FD,	//0x0e52		VoC_sw16_p(REG6,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0x20000A84,	//0x0e54		VoC_lw16i(REG4,0x2000)
0x9B04E8AA,	//0x0e56		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xFFC09B0B,	//0x0e58		VoC_NOP	|	VoC_multf32inc_rp(REG67,REG4,REG1,DEFAULT)
0xC91C4B1B,	//0x0e5a		VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0x83DF6125,	//0x0e5c		VoC_add16inc_rp(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_movreg16(REG5,ACC0_HI,DEFAULT)
0xDC378755,	//0x0e5e		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_sub16inc_rp(REG5,REG5,REG2,DEFAULT)
		//0x0e60		VoC_endloop0
0xF004DC25,	//0x0e60		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_sw16_p(REG5,REG2,DEFAULT)
0x0B8F0A82,	//0x0e62		VoC_lw16i(REG2,0xb8f)
0x0B661504,	//0x0e64		VoC_sw16_d(REG4,0xb66)
0x4B060A86,	//0x0e66		VoC_lw16i(REG6,0x4b06)
0x4B430A87,	//0x0e68		VoC_lw16i(REG7,0x4b43)
0x5FC4D863,	//0x0e6a		VoC_push16(REG4,DEFAULT)	|	VoC_lw16_p(REG3,REG6,DEFAULT)
0x5FC4DF43,	//0x0e6c		VoC_push16(REG4,DEFAULT)	|	VoC_push32(REG67,IN_PARALLEL)
0x2B80DF41,	//0x0e6e		VoC_jal(CII_Chebps)(lo)	|	VoC_push32(REG23,IN_PARALLEL)
0xDA270E1B,	//0x0e70		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_jal(CII_Chebps)(hi)
		//0x0e72		AZ_LSP_LOOP
0xE0A05909,	//0x0e72		VoC_lw16i_short(REG0,0xa,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xD6145913,	//0x0e74		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x0D170736,	//0x0e76		VoC_add16_rd(REG6,REG6,0xd17)
0x0ED934BE,	//0x0e78		VoC_bngt16_rr(AZ_LSP_LOOP_END,REG7,REG6)
0x0ED93484,	//0x0e7a		VoC_bngt16_rr(AZ_LSP_LOOP_END,REG0,REG4)
0xF6645625,	//0x0e7c		VoC_movreg16(REG4,REG3,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0xDD13D863,	//0x0e7e		VoC_sw32_sd(REG67,0x1,DEFAULT)	|	VoC_lw16_p(REG3,REG6,DEFAULT)
0xDF42DD09,	//0x0e80		VoC_push32(REG45,DEFAULT)	|	VoC_sw32_sd(REG23,0x0,DEFAULT)
0x0E1B2B80,	//0x0e82		VoC_jal(CII_Chebps)
0xD90A5A27,	//0x0e84		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG7,0x1,DEFAULT)
0xFFC0CDEC,	//0x0e86		VoC_NOP	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0x0ED63284,	//0x0e88		VoC_bgtz32_r(AZ_LSP_NOLOOP1,ACC0)
0x0E9D2C09,	//0x0e8a		VoC_loop_i(0x1,0x4)
0x780BD911,	//0x0e8c		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC0E3F80C,	//0x0e8e		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,IN_PARALLEL)
0x0E1B2B80,	//0x0e90		VoC_jal(CII_Chebps)
0xCDE4D624,	//0x0e92		VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x1,DEFAULT)
0x3284E066,	//0x0e94		VoC_bgtz32_r(AZ_LSP_03_01_ELSE,ACC0)(lo)	|	VoC_movreg16(REG6,REG3,DEFAULT)
0xDD0B0E99,	//0x0e96		VoC_sw32_sd(REG67,0x0,DEFAULT)	|	VoC_bgtz32_r(AZ_LSP_03_01_ELSE,ACC0)(hi)
0xD911E5C5,	//0x0e98		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_jump(AZ_LSP_03_01_END)
		//0x0e99		AZ_LSP_03_01_ELSE
0xDA27E0C3,	//0x0e9a		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0xD90ADD11,	//0x0e9c		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
		//0x0e9d		AZ_LSP_03_01_END
		//0x0e9d		VoC_endloop1
0xD6275911,	//0x0e9e		VoC_lw16_sd(REG7,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC37F431E,	//0x0ea0		VoC_sub16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG3,DEFAULT)
0x0EC23187,	//0x0ea2		VoC_bez16_r(AZ_LSP_03_02_END,REG7)
0xE0065F43,	//0x0ea4		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x0EA93247,	//0x0ea6		VoC_bnltz16_r(AZ_LSP_ABS_S_1,REG7)
0xFF1CC3BF,	//0x0ea8		VoC_movreg32(ACC0,REG67,DEFAULT)	|	VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)
		//0x0ea9		AZ_LSP_ABS_S_1
0x0A0A2B80,	//0x0eaa		VoC_jal(CII_NORM_L_ACC0)
0x0D2F0B09,	//0x0eac		VoC_sub16_dr(REG1,0xd2f,REG1)
0x3FFF0A80,	//0x0eae		VoC_lw16i(REG0,0x3fff)
0xF7215FC1,	//0x0eb0		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x0A1C2B80,	//0x0eb2		VoC_jal(CII_DIV_S)
0xCD94DF03,	//0x0eb4		VoC_multf32_rr(ACC0,REG6,REG2,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xFEACDF85,	//0x0eb6		VoC_shr32_rr(ACC0,REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x3247E106,	//0x0eb8		VoC_bnltz16_r(AZ_LSP_04_01_ELSE,REG7)(lo)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x0B360EBD,	//0x0eba		VoC_sub16_dr(REG6,0x4bcd,REG6)(lo)	|	VoC_bnltz16_r(AZ_LSP_04_01_ELSE,REG7)(hi)
0xD6274BCD,	//0x0ebc		VoC_lw16_sd(REG7,0x1,DEFAULT)	|	VoC_sub16_dr(REG6,0x4bcd,REG6)(hi)
		//0x0ebd		AZ_LSP_04_01_ELSE
0xD911CDBB,	//0x0ebe		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)
0xC2F3FA5B,	//0x0ec0		VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
		//0x0ec2		AZ_LSP_03_02_END
0xD610D923,	//0x0ec2		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x3,DEFAULT)
0xDE00C03F,	//0x0ec4		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rr(REG7,REG0,REG7,DEFAULT)
0xDA10DC73,	//0x0ec6		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_p(REG3,REG7,DEFAULT)
0x0A82F026,	//0x0ec8		VoC_lw16i(REG2,0xb99)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x6C050B99,	//0x0eca		VoC_bez16_d(AZ_LSP_03_03_ELSE,0xb66)(lo)	|	VoC_lw16i(REG2,0xb99)(hi)
0xF0060B66,	//0x0ecc		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bez16_d(AZ_LSP_03_03_ELSE,0xb66)(hi)
0x0B8F0A82,	//0x0ece		VoC_lw16i(REG2,0xb8f)
		//0x0ed0		AZ_LSP_03_03_ELSE
0x0B661506,	//0x0ed0		VoC_sw16_d(REG6,0xb66)
0x2B80DD11,	//0x0ed2		VoC_jal(CII_Chebps)(lo)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
0xDA270E1B,	//0x0ed4		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_jal(CII_Chebps)(hi)
		//0x0ed6		AZ_LSP_NOLOOP1
0x2B00DF02,	//0x0ed6		VoC_jump_lg(AZ_LSP_LOOP)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xDF840E72,	//0x0ed8		VoC_pop16(REG4,DEFAULT)	|	VoC_jump_lg(AZ_LSP_LOOP)(hi)
		//0x0ed9		AZ_LSP_LOOP_END
0x5F85DF01,	//0x0eda		VoC_pop16(REG5,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xD908DF03,	//0x0edc		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0x0D1D4C34,	//0x0ede		VoC_bnlt16_rd(AZ_LSP_01_02,REG4,0xd1d)
0xF0097050,	//0x0ee0		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x0A3B2B80,	//0x0ee2		VoC_jal(CII_Copy_M)
		//0x0ee4		AZ_LSP_01_02
0xDF00DFA9,	//0x0ee4		VoC_pop32(REG01,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF8FBE580,	//0x0ee6		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_return
		//0x0ee7		CII_cbseach_subr1
0x0AD01404,	//0x0ee8		VoC_lw16_d(REG4,0xad0)
0x0D2A0B25,	//0x0eea		VoC_sub16_dr(REG5,0xd2a,REG4)
0xF0054021,	//0x0eec		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG4,DEFAULT)
0x0EF53145,	//0x0eee		VoC_bngtz16_r(cbsearch_10000,REG5)
0xE7438EC4,	//0x0ef0		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_multf16inc_rp(REG4,REG3,REG0,DEFAULT)
0x8EC4810C,	//0x0ef2		VoC_multf16inc_rp(REG4,REG3,REG0,DEFAULT)	|	VoC_add16_rp(REG4,REG4,REG1,DEFAULT)
		//0x0ef4		VoC_endloop0
0xE580DC94,	//0x0ef4		VoC_return	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0ef5		cbsearch_10000
		//0x0ef6		CII_cor_h_x
0xE2805FE9,	//0x0ef6		VoC_lw16i_short(REG0,0x28,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF4456AB,	//0x0ef8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16_sd(ACC1_HI,0x9,DEFAULT)
0xF00756B6,	//0x0efa		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0xa,DEFAULT)
0xFF417F47,	//0x0efc		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xF69270AE,	//0x0efe		VoC_movreg16(INC2,REG4,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x5,DEFAULT)
		//0x0f00		cor_h_x_loop_begin
0xC2177F46,	//0x0f00		VoC_sub16_rr(REG7,REG0,REG2,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x0F182E29,	//0x0f02		VoC_loop_r(1,REG5)
0xF76140B0,	//0x0f04		VoC_movreg16(REG1,ACC1_HI,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG2,REG6,DEFAULT)
0xC09767C2,	//0x0f06		VoC_add16_rr(REG7,REG2,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x0f08		VoC_endloop0
0x0A80D401,	//0x0f08		VoC_lw16i(REG0,0xb66)(lo)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0x5E100B66,	//0x0f0a		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16i(REG0,0xb66)(hi)
0x0A80C1C7,	//0x0f0c		VoC_lw16i(REG0,0x28)(lo)	|	VoC_add16_rr(REG7,REG7,REG0,IN_PARALLEL)
0xDDBC0028,	//0x0f0e		VoC_sw32_p(ACC0,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x28)(hi)
0x0F1433C4,	//0x0f10		VoC_bnltz32_r(cor_h_x_250,ACC0)
0x4BCD0BA4,	//0x0f12		VoC_sub32_dr(ACC0,0x4bcd,ACC0)
		//0x0f14		cor_h_x_250
0x36A6C217,	//0x0f14		VoC_bngt32_rr(cor_h_x_200,ACC0,RL6)(lo)	|	VoC_sub16_rr(REG7,REG0,REG2,DEFAULT)
0xFF260F18,	//0x0f16		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_bngt32_rr(cor_h_x_200,ACC0,RL6)(hi)
		//0x0f18		cor_h_x_200
		//0x0f18		VoC_endloop1
0x7A0EFF44,	//0x0f18		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x49BFDE18,	//0x0f1a		VoC_add32_rr(RL7,RL6,RL7,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x3423F662,	//0x0f1c		VoC_bgt16_rr(cor_h_x_loop_begin,REG4,REG3)(lo)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
0x61470F00,	//0x0f1e		VoC_movreg16(REG7,ACC1_LO,DEFAULT)	|	VoC_bgt16_rr(cor_h_x_loop_begin,REG4,REG3)(hi)
0x2B80FF3C,	//0x0f20		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0xDFA90A0A,	//0x0f22		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x1808C3CA,	//0x0f24		VoC_lw16i_set_inc(REG0,0xb66,0x2)(lo)	|	VoC_sub16_rr(REG2,REG7,REG1,DEFAULT)
0x18050B66,	//0x0f26		VoC_lw16i_set_inc(REG1,0x40de,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xb66,0x2)(hi)
0x148540DE,	//0x0f28		VoC_lw32_d(ACC1,0x4a9c)(lo)	|	VoC_lw16i_set_inc(REG1,0x40de,0x1)(hi)
0xD9C24A9C,	//0x0f2a		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32_d(ACC1,0x4a9c)(hi)
0xFE926D05,	//0x0f2c		VoC_shr32_rr(REG45,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD9C248AC,	//0x0f2e		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,REG45,ACC1,DEFAULT)
0xDC99FE92,	//0x0f30		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_shr32_rr(REG45,REG2,DEFAULT)
		//0x0f31		VoC_endloop0
0xDFE9E580,	//0x0f32		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f33		CII_cor_h
0x56A2F048,	//0x0f34		VoC_lw16_sd(REG2,0x9,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,DEFAULT)
0x6A82F00A,	//0x0f36		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xD512E009,	//0x0f38		VoC_bimac32inc_pp(REG2,REG2)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
		//0x0f39		VoC_endloop0
0x4A9C1486,	//0x0f3a		VoC_lw32_d(RL6,0x4a9c)
0xF0087F20,	//0x0f3c		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0x4ABE4491,	//0x0f3e		VoC_bne16_rd(COR_H101,REG1,0x4abe)
0x1809D6A0,	//0x0f40		VoC_lw16i_set_inc(REG1,0xb66,0x2)(lo)	|	VoC_lw16_sd(REG0,0x9,DEFAULT)
0x70220B66,	//0x0f42		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xb66,0x2)(hi)
0x2B80E0A3,	//0x0f44		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0xa,IN_PARALLEL)
0xE5DB0A40,	//0x0f46		VoC_jump(COR_H102)	|	VoC_jal(CII_scale)(hi)
		//0x0f48		COR_H101
0x2B80FA08,	//0x0f48		VoC_jal(CII_Inv_sqrt)(lo)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
0xFBC80AD0,	//0x0f4a		VoC_shr32_ri(REG01,0xfffffff9,DEFAULT)	|	VoC_jal(CII_Inv_sqrt)(hi)
0x0A80F030,	//0x0f4c		VoC_lw16i(REG0,0x7eb8)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x46457EB8,	//0x0f4e		VoC_multf16_rr(REG5,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG0,0x7eb8)(hi)
0x1809D6A0,	//0x0f50		VoC_lw16i_set_inc(REG1,0xb66,0x2)(lo)	|	VoC_lw16_sd(REG0,0x9,IN_PARALLEL)
0xF6D90B66,	//0x0f52		VoC_lw16i_short(FORMAT32,0xfffffff6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xb66,0x2)(hi)
0x9B459B44,	//0x0f54		VoC_multf32inc_rp(ACC1,REG5,REG0,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG5,REG0,DEFAULT)
0xFFC0C934,	//0x0f56		VoC_NAD	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xC9756A88,	//0x0f58		VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xF72A1B44,	//0x0f5a		VoC_movreg16(ACC1_LO,ACC0_HI,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG5,REG0,DEFAULT)
0x4934FFC0,	//0x0f5c		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_NOP
0xDDCD9B45,	//0x0f5e		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)
		//0x0f60		VoC_endloop0
0xF7F9C975,	//0x0f60		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)
		//0x0f62		COR_H102
0x1808F146,	//0x0f62		VoC_lw16i_set_inc(REG0,0xb66,0x2)(lo)	|	VoC_lw16i_short(REG6,0xa,DEFAULT)
0x18090B66,	//0x0f64		VoC_lw16i_set_inc(REG1,0x443a,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xb66,0x2)(hi)
0xFFC0443A,	//0x0f66		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x443a,0x2)(hi)
0x0A482B80,	//0x0f68		VoC_jal(CII_copy_xy)
0x0B661804,	//0x0f6a		VoC_lw16i_set_inc(REG0,0xb66,0x1)
0x443A1805,	//0x0f6c		VoC_lw16i_set_inc(REG1,0x443a,0x1)
0x412D1FBE,	//0x0f6e		VoC_lw16i_set_inc(REG2,0x412d,0xffffffff)
0xDFA99E0C,	//0x0f70		VoC_pop16(RA,DEFAULT)	|	VoC_multf32inc_pp(ACC0,REG0,REG1,DEFAULT)
0xD401C933,	//0x0f72		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xEA86FFC0,	//0x0f74		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_NAD
0xDCA74932,	//0x0f76		VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0xD401D401,	//0x0f78		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0xDCA5C933,	//0x0f7a		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
		//0x0f7b		VoC_endloop0
0x0B660A8A,	//0x0f7c		VoC_lw16i(ACC1_LO,0xb66)
0x443A0A8B,	//0x0f7e		VoC_lw16i(ACC1_HI,0x443a)
0x44131FBF,	//0x0f80		VoC_lw16i_set_inc(REG3,0x4413,0xffffffff)
0xE26E702F,	//0x0f82		VoC_lw16i_short(RL7_LO,0x26,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x1,DEFAULT)
0xDFC35F45,	//0x0f84		VoC_push16(REG3,IN_PARALLEL)	|	VoC_push32(ACC1,DEFAULT)
0x0D150A8A,	//0x0f86		VoC_lw16i(ACC1_LO,0xd15)
0x0CEE0A8B,	//0x0f88		VoC_lw16i(ACC1_HI,0xcee)
0x0FA42C4F,	//0x0f8a		VoC_loop_i(0x1,0x27)
0xD9087F3A,	//0x0f8c		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xFF294069,	//0x0f8e		VoC_movreg32(REG23,ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xD61640E3,	//0x0f90		VoC_lw16_sd(REG6,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x0D2A0B2F,	//0x0f92		VoC_sub16_dr(REG7,0xd2a,REG5)
0xE2754134,	//0x0f94		VoC_lw16i_short(REG5,0x27,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xFF345401,	//0x0f96		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0xDF46702D,	//0x0f98		VoC_push32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x1,DEFAULT)
0xD8A7E7C8,	//0x0f9a		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xF6AC0FDE,	//0x0f9c		VoC_movreg16(RL6_LO,REG5,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG7,REG3,DEFAULT)
0xC7F7E127,	//0x0f9e		VoC_multf16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_movreg16(REG7,ACC0_HI,DEFAULT)
0xCAB2D401,	//0x0fa0		VoC_sub32_rr(REG45,REG45,RL6,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
		//0x0fa2		VoC_endloop0
0xDF06DC47,	//0x0fa2		VoC_pop32(RL6,DEFAULT)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
		//0x0fa4		VoC_endloop1
0x0D6A093F,	//0x0fa4		VoC_add32_rd(RL7,RL7,0xd6a)
0xDF835F05,	//0x0fa6		VoC_pop16(REG3,IN_PARALLEL)	|	VoC_pop32(ACC1,DEFAULT)
0xDFE9E580,	//0x0fa8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0fa9		CII_G_pitch
0x41061808,	//0x0faa		VoC_lw16i_set_inc(REG0,0x4106,0x2)
0x40DE1809,	//0x0fac		VoC_lw16i_set_inc(REG1,0x40de,0x2)
0x0A32180A,	//0x0fae		VoC_lw16i_set_inc(REG2,0xa32,0x2)
0x0D171485,	//0x0fb0		VoC_lw32_d(ACC1,0xd17)
0xF62F600D,	//0x0fb2		VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,REG0,DEFAULT)
0xF62E600C,	//0x0fb4		VoC_movreg16(RL7_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(RL6_LO,REG0,DEFAULT)
0xD9D26A85,	//0x0fb6		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xF8157814,	//0x0fb8		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x5DCADDC2,	//0x0fba		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x0fbb		VoC_endloop0
0x7F30D9D2,	//0x0fbc		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)
0xFFC0E047,	//0x0fbe		VoC_NAD	|	VoC_lw16i_short(REG7,0x4,IN_PARALLEL)
0x0FDC2C05,	//0x0fc0		VoC_loop_i(0x1,0x2)
0x00010A96,	//0x0fc2		VoC_lw16i(STATUS,0x1)
0xFF2C6A82,	//0x0fc4		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x0fc6		VoC_endloop0
0xFFC0D501,	//0x0fc6		VoC_NOP	|	VoC_bimac32inc_pp(REG0,REG1)
0x0FCD2F00,	//0x0fc8		VoC_bnoe0z16_r(G_PITCH_01_ELSE)
0x0A0A2B80,	//0x0fca		VoC_jal(CII_NORM_L_ACC0)
0xFF38E5C8,	//0x0fcc		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_jump(G_PITCH_01_END)
		//0x0fcd		G_PITCH_01_ELSE
0xEA81FF2C,	//0x0fce		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x0fd0		VoC_endloop0
0x2B80D501,	//0x0fd0		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_pp(REG0,REG1)
0xC2790A0A,	//0x0fd2		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
		//0x0fd4		G_PITCH_01_END
0x4A9C0924,	//0x0fd4		VoC_add32_rd(ACC0,ACC0,0x4a9c)
0xF6287047,	//0x0fd6		VoC_movreg16(ACC0_LO,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0xFF217F0A,	//0x0fd8		VoC_movreg32(REG23,ACC0,IN_PARALLEL)	|	VoC_movreg32(REG45,REG23,DEFAULT)
0x09E21809,	//0x0fda		VoC_lw16i_set_inc(REG1,0x9e2,0x2)
		//0x0fdc		VoC_endloop1
0xF62F61A0,	//0x0fdc		VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x1804F1E1,	//0x0fde		VoC_lw16i_set_inc(REG0,0xac8,0x1)(lo)	|	VoC_lw16i_short(REG1,0xf,DEFAULT)
0xC2660AC8,	//0x0fe0		VoC_sub16_rr(REG6,REG1,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xac8,0x1)(hi)
0xC2575C85,	//0x0fe2		VoC_sub16_rr(REG7,REG1,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0xC2A65C86,	//0x0fe4		VoC_sub16_rr(REG6,REG2,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xE0025C83,	//0x0fe6		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0x0D240799,	//0x0fe8		VoC_sub16_rd(REG1,REG3,0xd24)
0xF80B5C87,	//0x0fea		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x0FFA3201,	//0x0fec		VoC_bltz16_r(G_PITCH_03_END1,REG1)
0xF6A16060,	//0x0fee		VoC_movreg16(REG1,REG5,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x0A1C2B80,	//0x0ff0		VoC_jal(CII_DIV_S)
0x0A81FE32,	//0x0ff2		VoC_lw16i(REG1,0x4ccd)(lo)	|	VoC_shr16_rr(REG2,REG6,DEFAULT)
0x34914CCD,	//0x0ff4		VoC_bngt16_rr(G_PITCH_03_END,REG2,REG1)(lo)	|	VoC_lw16i(REG1,0x4ccd)(hi)
0xE0220FF8,	//0x0ff6		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_bngt16_rr(G_PITCH_03_END,REG2,REG1)(hi)
		//0x0ff8		G_PITCH_03_END
0x7FFC1642,	//0x0ff8		VoC_and16_ri(REG2,0xfffc)
		//0x0ffa		G_PITCH_03_END1
0x1502DFA9,	//0x0ffa		VoC_sw16_d(REG2,0xad2)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800AD2,	//0x0ffc		VoC_return	|	VoC_sw16_d(REG2,0xad2)(hi)
		//0x0ffe		CII_Pre_Process
0x05401807,	//0x0ffe		VoC_lw16i_set_inc(REG3,0x540,0x1)
0x049E1480,	//0x1000		VoC_lw32_d(REG01,0x49e)
0x049C1806,	//0x1002		VoC_lw16i_set_inc(REG2,0x49c,0x1)
0x049A1483,	//0x1004		VoC_lw32_d(REG67,0x49a)
0xFFC0D992,	//0x1006		VoC_NAD	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0x10272D40,	//0x1008		VoC_loop_i(0x0,0xa0)
0x716B0AC2,	//0x100a		VoC_lw16i(REG2,0xf16b)
0xC796CDD4,	//0x100c		VoC_multf16_rr(REG6,REG6,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)
0x0E30E022,	//0x100e		VoC_mac32_rd(REG6,0xd17)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x0A810D17,	//0x1010		VoC_lw16i(REG1,0x1e7f)(lo)	|	VoC_mac32_rd(REG6,0xd17)(hi)
0xCE291E7F,	//0x1012		VoC_mac32_rr(REG5,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x1e7f)(hi)
0x6001C70E,	//0x1014		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_multf16_rr(REG6,REG4,REG1,DEFAULT)
0x0E30D830,	//0x1016		VoC_mac32_rd(REG6,0xd17)(lo)	|	VoC_lw16_p(REG0,REG3,IN_PARALLEL)
0x0A860D17,	//0x1018		VoC_lw16i(REG6,0x76b)(lo)	|	VoC_mac32_rd(REG6,0xd17)(hi)
0x0AC7076B,	//0x101a		VoC_lw16i(REG7,0xf12a)(lo)	|	VoC_lw16i(REG6,0x76b)(hi)
0xCE06712A,	//0x101c		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_lw16i(REG7,0xf12a)(hi)
0xCE16CE0F,	//0x101e		VoC_mac32_rr(REG2,REG6,DEFAULT)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0xFBECFF13,	//0x1020		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x4A9C0922,	//0x1022		VoC_add32_rd(REG45,ACC0,0x4a9c)
0x5CB5E104,	//0x1024		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_movreg16(REG4,ACC0_LO,DEFAULT)
0xE125F90C,	//0x1026		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
		//0x1027		VoC_endloop0
0x049E1580,	//0x1028		VoC_sw32_d(REG01,0x49e)
0x049A1583,	//0x102a		VoC_sw32_d(REG67,0x49a)
0x049C1582,	//0x102c		VoC_sw32_d(REG45,0x49c)
0xDFE9E580,	//0x102e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x102f		CII_subframePreProc
0xF0045FCF,	//0x1030		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_push16(RL7_HI,DEFAULT)
0x4BD81805,	//0x1032		VoC_lw16i_set_inc(REG1,0x4bd8,0x1)
0x0B701806,	//0x1034		VoC_lw16i_set_inc(REG2,0xb70,0x1)
0x103E2C05,	//0x1036		VoC_loop_i(0x1,0x2)
0xFFC0D660,	//0x1038		VoC_NAD	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x0D752B80,	//0x103a		VoC_jal(CII_Weight_Ai)
0x4BCE1805,	//0x103c		VoC_lw16i_set_inc(REG1,0x4bce,0x1)
		//0x103e		VoC_endloop1
0x0B841806,	//0x103e		VoC_lw16i_set_inc(REG2,0xb84,0x1)
0x0B701804,	//0x1040		VoC_lw16i_set_inc(REG0,0xb70,0x1)
0x08531805,	//0x1042		VoC_lw16i_set_inc(REG1,0x853,0x1)
0xD8866963,	//0x1044		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDC96D886,	//0x1046		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x1047		VoC_endloop0
0xE2865655,	//0x1048		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x08531807,	//0x104a		VoC_lw16i_set_inc(REG3,0x853,0x1)
0x40520A87,	//0x104c		VoC_lw16i(REG7,0x4052)
0x1805F000,	//0x104e		VoC_lw16i_set_inc(REG1,0x85e,0x1)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xFFC0085E,	//0x1050		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x85e,0x1)(hi)
0x10D72B80,	//0x1052		VoC_jal(CII_Syn_filt)
0x0B840A85,	//0x1054		VoC_lw16i(REG5,0xb84)
0x40521807,	//0x1056		VoC_lw16i_set_inc(REG3,0x4052,0x1)
0x7000E067,	//0x1058		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_movreg16(REG7,REG3,DEFAULT)
0x1805E286,	//0x105a		VoC_lw16i_set_inc(REG1,0x85e,0x1)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0xFFC0085E,	//0x105c		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x85e,0x1)(hi)
0x10D72B80,	//0x105e		VoC_jal(CII_Syn_filt)
0xF0045650,	//0x1060		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0x0A821806,	//0x1062		VoC_lw16i_set_inc(REG2,0xa82,0x1)
0x1807D636,	//0x1064		VoC_lw16i_set_inc(REG3,0x518,0x1)(lo)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0xC19B0518,	//0x1066		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x518,0x1)(hi)
0x0CEB2B80,	//0x1068		VoC_jal(CII_Residu_new)
0x0A821808,	//0x106a		VoC_lw16i_set_inc(REG0,0xa82,0x2)
0x07B21809,	//0x106c		VoC_lw16i_set_inc(REG1,0x7b2,0x2)
0xC189D636,	//0x106e		VoC_add16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x2B80F146,	//0x1070		VoC_jal(CII_copy_xy)(lo)	|	VoC_lw16i_short(REG6,0xa,DEFAULT)
0xD6550A48,	//0x1072		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_jal(CII_copy_xy)(hi)
0x07B21807,	//0x1074		VoC_lw16i_set_inc(REG3,0x7b2,0x1)
0xC19BD636,	//0x1076		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x09B80A87,	//0x1078		VoC_lw16i(REG7,0x9b8)
0xE2867000,	//0x107a		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x09AE1805,	//0x107c		VoC_lw16i_set_inc(REG1,0x9ae,0x1)
0x10D72B80,	//0x107e		VoC_jal(CII_Syn_filt)
0x0B701804,	//0x1080		VoC_lw16i_set_inc(REG0,0xb70,0x1)
0x09E21806,	//0x1082		VoC_lw16i_set_inc(REG2,0x9e2,0x1)
0x09B81807,	//0x1084		VoC_lw16i_set_inc(REG3,0x9b8,0x1)
0x0CEB2B80,	//0x1086		VoC_jal(CII_Residu_new)
0x0B840A85,	//0x1088		VoC_lw16i(REG5,0xb84)
0x09E21807,	//0x108a		VoC_lw16i_set_inc(REG3,0x9e2,0x1)
0xE2866067,	//0x108c		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_movreg16(REG7,REG3,DEFAULT)
0xDF817000,	//0x108e		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x2B80F031,	//0x1090		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xDFA910D7,	//0x1092		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0xE580FFC0,	//0x1094		VoC_return	|	VoC_NOP
		//0x1096		CII_build_code_com2
0x0CE41805,	//0x1096		VoC_lw16i_set_inc(REG1,0xce4,0x1)
0x40DE1807,	//0x1098		VoC_lw16i_set_inc(REG3,0x40de,0x1)
0x0B661806,	//0x109a		VoC_lw16i_set_inc(REG2,0xb66,0x1)
0xFF0E6785,	//0x109c		VoC_movreg32(RL6,REG23,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x148487CD,	//0x109e		VoC_lw32_d(ACC0,0x4a9c)(lo)	|	VoC_sub16inc_rp(REG5,REG7,REG1,DEFAULT)
0xDCB54A9C,	//0x10a0		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw32_d(ACC0,0x4a9c)(hi)
		//0x10a1		VoC_endloop0
0xFF317F27,	//0x10a2		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x10AD2C51,	//0x10a4		VoC_loop_i(0x1,0x28)
0xD831E784,	//0x10a6		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD129D8A5,	//0x10a8		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x10aa		VoC_endloop0
0x7F3CDCB1,	//0x10aa		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_sw16inc_p(REG1,REG3,DEFAULT)
0xDC89FF31,	//0x10ac		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_movreg32(REG23,RL6,IN_PARALLEL)
		//0x10ad		VoC_endloop1
0xC376E580,	//0x10ae		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_return
		//0x10af		CII_Pred_lt_3or6
0xF00577F0,	//0x10b0		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF01B70D2,	//0x10b2		VoC_lw16i_short(INC3,0x6,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0x4BCD0B39,	//0x10b4		VoC_sub16_dr(REG1,0x4bcd,REG7)
0x10BA3182,	//0x10b6		VoC_bez16_r(PRED_IT_3OR6_001,REG2)
0xFFC0F8F9,	//0x10b8		VoC_NAD	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
		//0x10ba		PRED_IT_3OR6_001
0xE0637024,	//0x10ba		VoC_lw16i_short(REG3,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x10C03241,	//0x10bc		VoC_bnltz16_r(PRED_IT6_003,REG1)
0xC3A64059,	//0x10be		VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x10c0		PRED_IT6_003
0x4B760A87,	//0x10c0		VoC_lw16i(REG7,0x4b76)
0xC2CB41CA,	//0x10c2		VoC_sub16_rr(REG3,REG3,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG7,REG1,DEFAULT)
0x1484C0FB,	//0x10c4		VoC_lw32_d(ACC0,0x4a9c)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x7F0F4A9C,	//0x10c6		VoC_movreg32(RL7,REG23,DEFAULT)	|	VoC_lw32_d(ACC0,0x4a9c)(hi)
0xFFC0FF26,	//0x10c8		VoC_NAD	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x10D42C51,	//0x10ca		VoC_loop_i(0x1,0x28)
0xC1A660C0,	//0x10cc		VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
0xF6C16943,	//0x10ce		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD40BD402,	//0x10d0		VoC_mac32inc_pp(REG1,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG2,DEFAULT)
		//0x10d1		VoC_endloop0
0xC165FF39,	//0x10d2		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_movreg32(REG23,RL7,DEFAULT)
		//0x10d4		VoC_endloop1
0xFF345C59,	//0x10d4		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG5,DEFAULT)
0xDF40E580,	//0x10d6		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x10d7		CII_Syn_filt
0x40DE1806,	//0x10d8		VoC_lw16i_set_inc(REG2,0x40de,0x1)
0xD8946944,	//0x10da		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xE0105894,	//0x10dc		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x10de		VoC_endloop0
0xF0085CA4,	//0x10de		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xC1455854,	//0x10e0		VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG5,DEFAULT)
0xDFE960A0,	//0x10e2		VoC_push16(RA,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x40E71FB9,	//0x10e4		VoC_lw16i_set_inc(REG1,0x40e7,0xfffffffe)
0x10F12E31,	//0x10e6		VoC_loop_r(1,REG6)
0x68A2E201,	//0x10e8		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xD5819B1C,	//0x10ea		VoC_bimsu32inc_pp(REG0,REG1)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,IN_PARALLEL)
		//0x10eb		VoC_endloop0
0xFBECE0A0,	//0x10ec		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x4A9C0924,	//0x10ee		VoC_add32_rd(ACC0,ACC0,0x4a9c)
0xDCA9E041,	//0x10f0		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,DEFAULT)
		//0x10f1		VoC_endloop1
0x40E81808,	//0x10f2		VoC_lw16i_set_inc(REG0,0x40e8,0x2)
0xF00960C5,	//0x10f4		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF6E17816,	//0x10f6		VoC_movreg16(REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x0A482B80,	//0x10f8		VoC_jal(CII_copy_xy)
0x0D25441E,	//0x10fa		VoC_bne16_rd(SYN_FILT_01,REG6,0xd25)
0xD908DD8C,	//0x10fc		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x10fd		SYN_FILT_01
0x11053180,	//0x10fe		VoC_bez16_r(Syn_filt103,REG0)
0x40DE0A80,	//0x1100		VoC_lw16i(REG0,0x40de)
0x2B80C028,	//0x1102		VoC_jal(CII_Copy_M)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xDFA90A3B,	//0x1104		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
		//0x1105		Syn_filt103
0xE580DF00,	//0x1106		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x1108		CII_Reorder_lsf
0x00CD0A85,	//0x1108		VoC_lw16i(REG5,0xcd)
0xD804E948,	//0x110a		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x111034AC,	//0x110c		VoC_bngt16_rr(Reord_L,REG5,REG4)
0xFFC0DC05,	//0x110e		VoC_NAD	|	VoC_sw16_p(REG5,REG0,DEFAULT)
		//0x1110		Reord_L
0x0D5C1404,	//0x1110		VoC_lw16_d(REG4,0xd5c)
		//0x1112		VoC_endloop0
0xE5808305,	//0x1112		VoC_return	|	VoC_add16inc_rp(REG5,REG4,REG0,DEFAULT)
		//0x1114		CII_Vq_subvec
0x1486FF42,	//0x1114		VoC_lw32_d(RL6,0xd70)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0x5FC30D70,	//0x1116		VoC_push16(REG3,DEFAULT)	|	VoC_lw32_d(RL6,0xd70)(hi)
0x7002D910,	//0x1118		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw32_sd(REG01,0x1,IN_PARALLEL)
0x7050FF44,	//0x111a		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xFFC0F009,	//0x111c		VoC_NAD	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x114E2E31,	//0x111e		VoC_loop_r(1,REG6)
0x114C2C40,	//0x1120		VoC_loop_i(0x0,0x20)
0xA61F261E,	//0x1122		VoC_sub16inc_pp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG0,REG3,DEFAULT)
0x8FCF0F8E,	//0x1124		VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)
0xCF36D908,	//0x1126		VoC_bimac32_rr(REG67,REG67)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xA61F261E,	//0x1128		VoC_sub16inc_pp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG0,REG3,DEFAULT)
0x8FCF0F8E,	//0x112a		VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)
0xCF36FFC0,	//0x112c		VoC_bimac32_rr(REG67,REG67)	|	VoC_NOP
0x36B4D910,	//0x112e		VoC_bngt32_rr(Vq_subvec_s_new_01,RL6,ACC0)(lo)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0xF0051134,	//0x1130		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bngt32_rr(Vq_subvec_s_new_01,RL6,ACC0)(hi)
0xF6447F26,	//0x1132		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
		//0x1134		Vq_subvec_s_new_01
0x114C3307,	//0x1134		VoC_bez32_r(Vq_subvec_s_new_02,RL7)
0x0D24079B,	//0x1136		VoC_sub16_rd(REG3,REG3,0xd24)
0x221EFF44,	//0x1138		VoC_add16inc_pp(REG6,REG0,REG3,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x0F8EA21F,	//0x113a		VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16inc_pp(REG7,REG0,REG3,IN_PARALLEL)
0xD9088FCF,	//0x113c		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0x221ECF36,	//0x113e		VoC_add16inc_pp(REG6,REG0,REG3,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
0x0F8EA21F,	//0x1140		VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16inc_pp(REG7,REG0,REG3,IN_PARALLEL)
0xFFC08FCF,	//0x1142		VoC_NOP	|	VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0xD910CF36,	//0x1144		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
0x114C36B4,	//0x1146		VoC_bngt32_rr(Vq_subvec_s_new_02,RL6,ACC0)
0x7F26F025,	//0x1148		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xFFC0F644,	//0x114a		VoC_NAD	|	VoC_movreg16(REG4,REG2,IN_PARALLEL)
		//0x114c		Vq_subvec_s_new_02
		//0x114c		VoC_endloop0
0xDE107F44,	//0x114c		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x114e		VoC_endloop1
0x5F83FFC0,	//0x114e		VoC_pop16(REG3,DEFAULT)	|	VoC_NOP
0x5612F686,	//0x1150		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x3307F8F4,	//0x1152		VoC_bez32_r(Vq_subvec_LEnd,RL7)(lo)	|	VoC_shr16_ri(REG4,0xfffffffe,IN_PARALLEL)
0xF8FE1157,	//0x1154		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_bez32_r(Vq_subvec_LEnd,RL7)(hi)
0xD914C1AE,	//0x1156		VoC_lw32_sd(ACC0,0x1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
		//0x1157		Vq_subvec_LEnd
0xDCA640E3,	//0x1158		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x0D681486,	//0x115a		VoC_lw32_d(RL6,0xd68)
0x590DD9DB,	//0x115c		VoC_lw32_sd(ACC1,0x0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0x6141F700,	//0x115e		VoC_movreg16(REG1,ACC1_LO,DEFAULT)	|	VoC_movreg16(REG0,ACC0_LO,IN_PARALLEL)
0x4975C934,	//0x1160		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x5D14DA12,	//0x1162		VoC_sw32_sd(ACC0,0x1,DEFAULT)	|	VoC_sw16_sd(REG2,0x0,IN_PARALLEL)
0xDD0DE002,	//0x1164		VoC_sw32_sd(ACC1,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0x116C31C5,	//0x1166		VoC_bnez16_r(Vq_subvec_s_new_05,REG5)
0xDD83D9DA,	//0x1168		VoC_sw32_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xE580DD8A,	//0x116a		VoC_return	|	VoC_sw32_p(REG45,REG1,DEFAULT)
		//0x116c		Vq_subvec_s_new_05
0x59DAC2B6,	//0x116c		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)
0x42A4C2BF,	//0x116e		VoC_sub16_rr(REG4,REG2,REG4,DEFAULT)	|	VoC_sub16_rr(REG7,REG2,REG7,IN_PARALLEL)
0xDD83C2AD,	//0x1170		VoC_sw32_p(REG67,REG0,DEFAULT)	|	VoC_sub16_rr(REG5,REG2,REG5,IN_PARALLEL)
0xE580DD8A,	//0x1172		VoC_return	|	VoC_sw32_p(REG45,REG1,DEFAULT)
		//0x1174		CII_prm2bits_amr_efr
0x0B7A0A81,	//0x1174		VoC_lw16i(REG1,0xb7a)
0x40A21806,	//0x1176		VoC_lw16i_set_inc(REG2,0x40a2,0x1)
0xE00477F3,	//0x1178		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x118E2C73,	//0x117a		VoC_loop_i(0x1,0x39)
0x1606D806,	//0x117c		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x160400FF,	//0x117e		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_and16_ri(REG6,0xff)(hi)
0x31840001,	//0x1180		VoC_bez16_r(prm2bits_amr_efr_even,REG4)(lo)	|	VoC_and16_ri(REG4,0x1)(hi)
0xD8861185,	//0x1182		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_bez16_r(prm2bits_amr_efr_even,REG4)(hi)
0xD8A7F946,	//0x1184		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
		//0x1185		prm2bits_amr_efr_even
0x078BC071,	//0x1186		VoC_sub16_rd(REG3,REG1,0xd17)(lo)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE7840D17,	//0x1188		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub16_rd(REG3,REG1,0xd17)(hi)
0xE43DF025,	//0x118a		VoC_and16_rr(REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xDCB5F80F,	//0x118c		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
		//0x118d		VoC_endloop0
		//0x118e		VoC_endloop1
0x0D170724,	//0x118e		VoC_add16_rd(REG4,REG4,0xd17)
0x0D761809,	//0x1190		VoC_lw16i_set_inc(REG1,0xd76,0x2)
0x0B7A0A82,	//0x1192		VoC_lw16i(REG2,0xb7a)
0x828F028E,	//0x1194		VoC_add16inc_rp(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG2,REG1,DEFAULT)
0x0E701808,	//0x1196		VoC_lw16i_set_inc(REG0,0xe70,0x2)
0x119F2CF5,	//0x1198		VoC_loop_i(0x1,0x7a)
0x58F5D8E4,	//0x119a		VoC_lw16inc_p(REG5,REG7,DEFAULT)	|	VoC_lw16inc_p(REG4,REG6,DEFAULT)
0x028EFF44,	//0x119c		VoC_add16inc_rp(REG6,REG2,REG1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x5DC2828F,	//0x119e		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_add16inc_rp(REG7,REG2,REG1,IN_PARALLEL)
		//0x119f		VoC_endloop1
0x5DC4E004,	//0x11a0		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x0A85EF01,	//0x11a2		VoC_lw16i(REG5,0x3c)(lo)	|	VoC_lw16i_short(REG1,0xfffffff0,IN_PARALLEL)
0x1808003C,	//0x11a4		VoC_lw16i_set_inc(REG0,0xe70,0x2)(lo)	|	VoC_lw16i(REG5,0x3c)(hi)
0x5D840E70,	//0x11a6		VoC_sw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xe70,0x2)(hi)
0x1806F005,	//0x11a8		VoC_lw16i_set_inc(REG2,0x0,0x1)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xFFC00000,	//0x11aa		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x0,0x1)(hi)
0xD9C36887,	//0x11ac		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFE4E5E08,	//0x11ae		VoC_shru16_rr(REG6,REG1,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0xDE086474,	//0x11b0		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0x647CFE4F,	//0x11b2		VoC_or16_rr(REG4,REG7,DEFAULT)	|	VoC_shru16_rr(REG7,REG1,DEFAULT)
		//0x11b3		VoC_endloop0
0x6465D9C3,	//0x11b4		VoC_or16_rr(REG5,REG4,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0xF701DFC2,	//0x11b6		VoC_lw16i_short(REG1,0xfffffff8,DEFAULT)	|	VoC_push16(REG2,IN_PARALLEL)
0xFFC0DCA5,	//0x11b8		VoC_NAD	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x11D12C1F,	//0x11ba		VoC_loop_i(0x1,0xf)
0xFF426887,	//0x11bc		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFE4E5E08,	//0x11be		VoC_shru16_rr(REG6,REG1,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0xDE086475,	//0x11c0		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG6,DEFAULT)
0x647DFE4F,	//0x11c2		VoC_or16_rr(REG5,REG7,DEFAULT)	|	VoC_shru16_rr(REG7,REG1,DEFAULT)
		//0x11c3		VoC_endloop0
0xF601D9C3,	//0x11c4		VoC_lw16i_short(REG1,0xfffffff0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0xE886FFC0,	//0x11c6		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xFE4E5E08,	//0x11c8		VoC_shru16_rr(REG6,REG1,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x5E08E474,	//0x11ca		VoC_inc_p(REG1,DEFAULT)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0x647CFE4F,	//0x11cc		VoC_or16_rr(REG4,REG7,DEFAULT)	|	VoC_shru16_rr(REG7,REG1,IN_PARALLEL)
		//0x11cd		VoC_endloop0
0xE465D9C3,	//0x11ce		VoC_or16_rr(REG5,REG4,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0xDCA5F701,	//0x11d0		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16i_short(REG1,0xfffffff8,DEFAULT)
		//0x11d1		VoC_endloop1
0xF90BDF83,	//0x11d2		VoC_shru16_ri(REG3,0x1,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xF026E580,	//0x11d4		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_return
		//0x11d5		CII_dtx_buffer
0x0736DFE9,	//0x11d6		VoC_add16_rd(REG6,REG6,0x986)(lo)	|	VoC_push16(RA,DEFAULT)
0x180A0986,	//0x11d8		VoC_lw16i_set_inc(REG2,0x540,0x2)(lo)	|	VoC_add16_rd(REG6,REG6,0x986)(hi)
0x441E0540,	//0x11da		VoC_bne16_rd(NOT_FULL,REG6,0xd18)(lo)	|	VoC_lw16i_set_inc(REG2,0x540,0x2)(hi)
0xF0060D18,	//0x11dc		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bne16_rd(NOT_FULL,REG6,0xd18)(hi)
		//0x11de		NOT_FULL
0xC5F7F147,	//0x11de		VoC_mult16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0xa,DEFAULT)
0x0B321808,	//0x11e0		VoC_lw16i_set_inc(REG0,0xb32,0x2)
0x092E1809,	//0x11e2		VoC_lw16i_set_inc(REG1,0x92e,0x2)
0x09861506,	//0x11e4		VoC_sw16_d(REG6,0x986)
0x0A982B80,	//0x11e6		VoC_jal(CII_dtx_com_s2)
0x097E0A86,	//0x11e8		VoC_lw16i(REG6,0x97e)
0x09860736,	//0x11ea		VoC_add16_rd(REG6,REG6,0x986)
0xDFA9F80C,	//0x11ec		VoC_pop16(RA,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xE580DC64,	//0x11ee		VoC_return	|	VoC_sw16_p(REG4,REG6,DEFAULT)
		//0x11f0		CII_PRM2_BITS_POST_PROCESS
0x5FE9DF83,	//0x11f0		VoC_push16(RA,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x1808E286,	//0x11f2		VoC_lw16i_set_inc(REG0,0x540,0x2)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x18090540,	//0x11f4		VoC_lw16i_set_inc(REG1,0x4a0,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x540,0x2)(hi)
0xFFC004A0,	//0x11f6		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x4a0,0x2)(hi)
0x0A482B80,	//0x11f8		VoC_jal(CII_copy_xy)
0x06811804,	//0x11fa		VoC_lw16i_set_inc(REG0,0x681,0x1)
0x05E11805,	//0x11fc		VoC_lw16i_set_inc(REG1,0x5e1,0x1)
0x2D1ED886,	//0x11fe		VoC_loop_i(0x0,0x8f)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xD8861202,	//0x1200		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x8f)(hi)
		//0x1202		VoC_endloop0
0x1804DC96,	//0x1202		VoC_lw16i_set_inc(REG0,0x5aea,0x1)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xFFC05AEA,	//0x1204		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5aea,0x1)(hi)
0x11742B80,	//0x1206		VoC_jal(CII_prm2bits_amr_efr)
0xDFA97006,	//0x1208		VoC_pop16(RA,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xE580FFC0,	//0x120a		VoC_return	|	VoC_NOP
		//0x120c		CII_check_lsp
0x1804F045,	//0x120c		VoC_lw16i_set_inc(REG0,0x893,0x1)(lo)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xFFC00893,	//0x120e		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x893,0x1)(hi)
0x121B2C05,	//0x1210		VoC_loop_i(0x1,0x2)
0x7FFF0A84,	//0x1212		VoC_lw16i(REG4,0x7fff)
0xD885E746,	//0x1214		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0x34A58545,	//0x1216		VoC_bngt16_rr(CHECK_LSP_02,REG4,REG5)(lo)	|	VoC_sub16_rp(REG5,REG5,REG0,DEFAULT)
0xE0A4121A,	//0x1218		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_bngt16_rr(CHECK_LSP_02,REG4,REG5)(hi)
		//0x121a		CHECK_LSP_02
		//0x121a		VoC_endloop0
0x60C7F0A5,	//0x121a		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
		//0x121b		VoC_endloop1
0x0A84F686,	//0x121c		VoC_lw16i(REG4,0x7d00)(lo)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x0A857D00,	//0x121e		VoC_lw16i(REG5,0x258)(lo)	|	VoC_lw16i(REG4,0x7d00)(hi)
0x48940258,	//0x1220		VoC_blt16_rd(CHECK_LSP_03,REG4,0x893)(lo)	|	VoC_lw16i(REG5,0x258)(hi)
0x0A840893,	//0x1222		VoC_lw16i(REG4,0x7724)(lo)	|	VoC_blt16_rd(CHECK_LSP_03,REG4,0x893)(hi)
0x0A857724,	//0x1224		VoC_lw16i(REG5,0x320)(lo)	|	VoC_lw16i(REG4,0x7724)(hi)
0x48240320,	//0x1226		VoC_blt16_rd(CHECK_LSP_03,REG4,0x893)(lo)	|	VoC_lw16i(REG5,0x320)(hi)
0x0A850893,	//0x1228		VoC_lw16i(REG5,0x44c)(lo)	|	VoC_blt16_rd(CHECK_LSP_03,REG4,0x893)(hi)
0xF020044C,	//0x122a		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_lw16i(REG5,0x44c)(hi)
		//0x122b		CHECK_LSP_03
0x0A84F001,	//0x122c		VoC_lw16i(REG4,0x5dc)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x342605DC,	//0x122e		VoC_bgt16_rr(CHECK_LSP_04,REG4,REG6)(lo)	|	VoC_lw16i(REG4,0x5dc)(hi)
0x34AF1234,	//0x1230		VoC_bngt16_rr(CHECK_LSP_05,REG5,REG7)(lo)	|	VoC_bgt16_rr(CHECK_LSP_04,REG4,REG6)(hi)
0xFFC01236,	//0x1232		VoC_NAD	|	VoC_bngt16_rr(CHECK_LSP_05,REG5,REG7)(hi)
		//0x1234		CHECK_LSP_04
0x08E70701,	//0x1234		VoC_add16_rd(REG1,REG0,0x8e7)
		//0x1236		CHECK_LSP_05
0xE0067187,	//0x1236		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x123C3439,	//0x1238		VoC_bgt16_rr(CHECK_LSP_RET,REG7,REG1)
0xF026E0E1,	//0x123a		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_movreg16(REG1,REG7,DEFAULT)
		//0x123c		CHECK_LSP_RET
0x08E71501,	//0x123c		VoC_sw16_d(REG1,0x8e7)
0x0AD61506,	//0x123e		VoC_sw16_d(REG6,0xad6)
0xF003E580,	//0x1240		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_return
		//0x1241		CII_RESET_AMR_CONSTANT
0x04901808,	//0x1242		VoC_lw16i_set_inc(REG0,0x490,0x2)
0xE0757024,	//0x1244		VoC_lw16i_short(REG5,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xE0277066,	//0x1246		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0xDDC3DDC2,	//0x1248		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE04570C4,	//0x124a		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x6,DEFAULT)
0xE0877186,	//0x124c		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xc,DEFAULT)
0xDDC3DDC2,	//0x124e		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE580DC03,	//0x1250		VoC_return	|	VoC_sw16_p(REG3,REG0,DEFAULT)
		//0x1252		CII_COD_AMR_122
0xDFC7DFE9,	//0x1252		VoC_push16(REG7,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x17632B80,	//0x1254		VoC_jal(CII_lpc_M122)
0x19A32B80,	//0x1256		VoC_jal(CII_lsp_122)
0x120C2B80,	//0x1258		VoC_jal(CII_check_lsp)
0x1804FF43,	//0x125a		VoC_lw16i_set_inc(REG0,0xada,0x1)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0x18070ADA,	//0x125c		VoC_lw16i_set_inc(REG3,0x518,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xada,0x1)(hi)
0x18060518,	//0x125e		VoC_lw16i_set_inc(REG2,0x670,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x518,0x1)(hi)
0xF0300670,	//0x1260		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x670,0x1)(hi)
		//0x1261		cod_amr105
0x0ACC1583,	//0x1262		VoC_sw32_d(REG67,0xacc)
0x0D244826,	//0x1264		VoC_blt16_rd(cod_amr1041,REG6,0xd24)
0x12A82B00,	//0x1266		VoC_jump_lg(cod_amr104)
		//0x1268		cod_amr1041
0x5FC0F0A4,	//0x1268		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x5,DEFAULT)
0x1805DF41,	//0x126a		VoC_lw16i_set_inc(REG1,0x4bd8,0x1)(lo)	|	VoC_push32(REG23,IN_PARALLEL)
0x18064BD8,	//0x126c		VoC_lw16i_set_inc(REG2,0xb70,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x4bd8,0x1)(hi)
0x2B800B70,	//0x126e		VoC_jal(CII_Weight_Ai)(lo)	|	VoC_lw16i_set_inc(REG2,0xb70,0x1)(hi)
0xD6100D75,	//0x1270		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_jal(CII_Weight_Ai)(hi)
0x4BCE1805,	//0x1272		VoC_lw16i_set_inc(REG1,0x4bce,0x1)
0x0B841806,	//0x1274		VoC_lw16i_set_inc(REG2,0xb84,0x1)
0x0D752B80,	//0x1276		VoC_jal(CII_Weight_Ai)
0x0B701804,	//0x1278		VoC_lw16i_set_inc(REG0,0xb70,0x1)
0x2B80D909,	//0x127a		VoC_jal(CII_Residu_new)(lo)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xD9090CEB,	//0x127c		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_jal(CII_Residu_new)(hi)
0x0B840A85,	//0x127e		VoC_lw16i(REG5,0xb84)
0xE2867020,	//0x1280		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x09A41805,	//0x1282		VoC_lw16i_set_inc(REG1,0x9a4,0x1)
0xF6476043,	//0x1284		VoC_movreg16(REG7,REG2,IN_PARALLEL)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x10D72B80,	//0x1286		VoC_jal(CII_Syn_filt)
0x0ACC1406,	//0x1288		VoC_lw16_d(REG6,0xacc)
0x4BCD4036,	//0x128a		VoC_be16_rd(cod_amr106,REG6,0x4bcd)
0x0D1B4026,	//0x128c		VoC_be16_rd(cod_amr106,REG6,0xd1b)
0x17DC2B80,	//0x128e		VoC_jal(CII_Pitch_ol_M122)
		//0x1290		cod_amr106
0x0ACE0A86,	//0x1290		VoC_lw16i(REG6,0xace)
0x0ACC1407,	//0x1292		VoC_lw16_d(REG7,0xacc)
0xC1BEF80F,	//0x1294		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xDF015F80,	//0x1296		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x7164DC64,	//0x1298		VoC_lw16i_short(REG4,0xb,DEFAULT)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
0x40AAE285,	//0x129a		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x28,IN_PARALLEL)
0x1483C0EB,	//0x129c		VoC_lw32_d(REG67,0xacc)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0x07360ACC,	//0x129e		VoC_add16_rd(REG6,REG6,0xd17)(lo)	|	VoC_lw32_d(REG67,0xacc)(hi)
0x44260D17,	//0x12a0		VoC_bne16_rd(cod_amr601,REG6,0xd1c)(lo)	|	VoC_add16_rd(REG6,REG6,0xd17)(hi)
0x073F0D1C,	//0x12a2		VoC_add16_rd(REG7,REG7,0x4d26)(lo)	|	VoC_bne16_rd(cod_amr601,REG6,0xd1c)(hi)
0xC0204D26,	//0x12a4		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x4d26)(hi)
		//0x12a5		cod_amr601
0x12612B00,	//0x12a6		VoC_jump_lg(cod_amr105)
		//0x12a8		cod_amr104
0xF026F007,	//0x12a8		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x0ADA0A80,	//0x12aa		VoC_lw16i(REG0,0xada)
0x0B060A81,	//0x12ac		VoC_lw16i(REG1,0xb06)
0xDFC0DFC7,	//0x12ae		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xDFC6DFC1,	//0x12b0		VoC_push16(REG6,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xFFC0DFC7,	//0x12b2		VoC_NAD	|	VoC_push16(REG7,DEFAULT)
		//0x12b4		cod_amr112
0x0D5A4827,	//0x12b4		VoC_blt16_rd(cod_amr1111,REG7,0xd5a)
0x148C2B00,	//0x12b6		VoC_jump_lg(cod_amr111)
		//0x12b8		cod_amr1111
0x099A0A8F,	//0x12b8		VoC_lw16i(RL7_HI,0x99a)
0x102F2B80,	//0x12ba		VoC_jal(CII_subframePreProc)
0x0A85D617,	//0x12bc		VoC_lw16i(REG5,0x7b2)(lo)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0xC1EF07B2,	//0x12be		VoC_add16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x7b2)(hi)
0x1507F005,	//0x12c0		VoC_sw16_d(REG7,0xad4)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x56170AD4,	//0x12c2		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_sw16_d(REG7,0xad4)(hi)
0x1400E121,	//0x12c4		VoC_lw16_d(REG0,0xace)(lo)	|	VoC_lw16i_short(REG1,0x12,IN_PARALLEL)
0x70620ACE,	//0x12c6		VoC_lw16i_short(REG2,0x3,DEFAULT)	|	VoC_lw16_d(REG0,0xace)(hi)
0x3187E063,	//0x12c8		VoC_bez16_r(AMR_PITCH_FR201,REG7)(lo)	|	VoC_lw16i_short(REG3,0x6,IN_PARALLEL)
0x140012D4,	//0x12ca		VoC_lw16_d(REG0,0xacf)(lo)	|	VoC_bez16_r(AMR_PITCH_FR201,REG7)(hi)
0x403F0ACF,	//0x12cc		VoC_be16_rd(AMR_PITCH_FR201,REG7,0x4d26)(lo)	|	VoC_lw16_d(REG0,0xacf)(hi)
0xF0254D26,	//0x12ce		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_be16_rd(AMR_PITCH_FR201,REG7,0x4d26)(hi)
0x08B01400,	//0x12d0		VoC_lw16_d(REG0,0x8b0)
0xE09370A2,	//0x12d2		VoC_lw16i_short(REG3,0x9,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x5,DEFAULT)
		//0x12d4		AMR_PITCH_FR201
0x1505C214,	//0x12d4		VoC_sw16_d(REG5,0xb6a)(lo)	|	VoC_sub16_rr(REG4,REG0,REG2,DEFAULT)
0x34210B6A,	//0x12d6		VoC_bgt16_rr(GET_RANGE1,REG4,REG1)(lo)	|	VoC_sw16_d(REG5,0xb6a)(hi)
0xE02412DA,	//0x12d8		VoC_movreg16(REG4,REG1,DEFAULT)	|	VoC_bgt16_rr(GET_RANGE1,REG4,REG1)(hi)
		//0x12da		GET_RANGE1
0x3C2DC11D,	//0x12da		VoC_bngt16_rd(GET_RANGE2,REG5,0xd59)(lo)	|	VoC_add16_rr(REG5,REG4,REG3,DEFAULT)
0x0A850D59,	//0x12dc		VoC_lw16i(REG5,0x8f)(lo)	|	VoC_bngt16_rd(GET_RANGE2,REG5,0xd59)(hi)
0xC35C008F,	//0x12de		VoC_sub16_rr(REG4,REG5,REG3,DEFAULT)	|	VoC_lw16i(REG5,0x8f)(hi)
		//0x12e0		GET_RANGE2
0x0C2E1808,	//0x12e0		VoC_lw16i_set_inc(REG0,0xc2e,0x2)
0x0B681582,	//0x12e2		VoC_sw32_d(REG45,0xb68)
0x4314F082,	//0x12e4		VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x1FB9C155,	//0x12e6		VoC_lw16i_set_inc(REG1,0x4052,0xfffffffe)(lo)	|	VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)
0x42224052,	//0x12e8		VoC_sub16_rr(REG2,REG0,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x4052,0xfffffffe)(hi)
0x0B20DF42,	//0x12ea		VoC_sub16_dr(REG0,0xad4,REG4)(lo)	|	VoC_push32(REG45,IN_PARALLEL)
0x18070AD4,	//0x12ec		VoC_lw16i_set_inc(REG3,0x40de,0x1)(lo)	|	VoC_sub16_dr(REG0,0xad4,REG4)(hi)
0xDFC240DE,	//0x12ee		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x40de,0x1)(hi)
0x2B80DFC0,	//0x12f0		VoC_jal(CII_Convolve)(lo)	|	VoC_push16(REG0,DEFAULT)
0xFF440C83,	//0x12f2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jal(CII_Convolve)(hi)
0x40DE1808,	//0x12f4		VoC_lw16i_set_inc(REG0,0x40de,0x2)
0xD500EA81,	//0x12f6		VoC_bimac32inc_pp(REG0,REG0)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x12f7		VoC_endloop0
0x0A83F002,	//0x12f8		VoC_lw16i(REG3,0x400)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x77A40400,	//0x12fa		VoC_lw16i_short(REG4,0xfffffffd,DEFAULT)	|	VoC_lw16i(REG3,0x400)(hi)
0x36A1E005,	//0x12fc		VoC_bngt32_rr(PITCH_F6_1001,ACC0,REG23)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x18081309,	//0x12fe		VoC_lw16i_set_inc(REG0,0x40de,0x2)(lo)	|	VoC_bngt32_rr(PITCH_F6_1001,ACC0,REG23)(hi)
0x180940DE,	//0x1300		VoC_lw16i_set_inc(REG1,0x40de,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x40de,0x2)(hi)
0x704240DE,	//0x1302		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x40de,0x2)(hi)
0x2B80E0A3,	//0x1304		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0xa,IN_PARALLEL)
0xF7E40A40,	//0x1306		VoC_lw16i_short(REG4,0xffffffff,DEFAULT)	|	VoC_jal(CII_scale)(hi)
0xD622F045,	//0x1308		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
		//0x1309		PITCH_F6_1001
0xC0BBD90B,	//0x130a		VoC_add16_rr(REG3,REG2,REG7,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x1503F032,	//0x130c		VoC_sw16_d(REG3,0xb66)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x40B20B66,	//0x130e		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_sw16_d(REG3,0xb66)(hi)
0xFF44D613,	//0x1310		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16_sd(REG3,0x0,IN_PARALLEL)
		//0x1311		PITCH_F6_1002
0x40DE1808,	//0x1312		VoC_lw16i_set_inc(REG0,0x40de,0x2)
0xDF426A82,	//0x1314		VoC_push32(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x1316		VoC_endloop0
0xDF41D500,	//0x1316		VoC_push32(REG23,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG0)
0x2B80FF20,	//0x1318		VoC_jal(CII_Inv_sqrt)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFF030AD0,	//0x131a		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_jal(CII_Inv_sqrt)(hi)
0x40DE1808,	//0x131c		VoC_lw16i_set_inc(REG0,0x40de,0x2)
0x09E21809,	//0x131e		VoC_lw16i_set_inc(REG1,0x9e2,0x2)
0xFF446A82,	//0x1320		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x1322		VoC_endloop0
0xF90ED501,	//0x1322		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG1)
0xF90CFF22,	//0x1324		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xC7E04DEC,	//0x1326		VoC_multf16_rr(REG0,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xE01347A9,	//0x1328		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_multf16_rr(REG1,REG6,REG5,DEFAULT)
0xCE0BCE03,	//0x132a		VoC_mac32_rr(REG1,REG3,DEFAULT)	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0xFB84DF01,	//0x132c		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xDCA9F7F3,	//0x132e		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x393ADF02,	//0x1330		VoC_bgt16_rd(PITCH_F6_1003,REG2,0xb66)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xDE180B66,	//0x1332		VoC_inc_p(REG3,DEFAULT)	|	VoC_bgt16_rd(PITCH_F6_1003,REG2,0xb66)(hi)
0x40791FBC,	//0x1334		VoC_lw16i_set_inc(REG0,0x4079,0xffffffff)
0x41041805,	//0x1336		VoC_lw16i_set_inc(REG1,0x4104,0x1)
0xDF41D836,	//0x1338		VoC_push32(REG23,DEFAULT)	|	VoC_lw16_p(REG6,REG3,DEFAULT)
0xECE59B81,	//0x133a		VoC_loop_i_short(0x27,DEFAULT)	|	VoC_multf32inc_rp(REG23,REG6,REG0,DEFAULT)
0x82CBFEA1,	//0x133c		VoC_add16inc_rp(REG3,REG3,REG1,DEFAULT)	|	VoC_shr32_rr(REG23,REG4,DEFAULT)
0xDC139B81,	//0x133e		VoC_sw16_p(REG3,REG1,DEFAULT)	|	VoC_multf32inc_rp(REG23,REG6,REG0,DEFAULT)
		//0x1340		VoC_endloop0
0x0D1B0789,	//0x1340		VoC_sub16_rd(REG1,REG1,0xd1b)
0xDF01FE2E,	//0x1342		VoC_pop32(REG23,DEFAULT)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0x40DE1506,	//0x1344		VoC_sw16_d(REG6,0x40de)
0x13112B00,	//0x1346		VoC_jump_lg(PITCH_F6_1002)
		//0x1348		PITCH_F6_1003
0x5F02F030,	//0x1348		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xD610DF82,	//0x134a		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x0B681482,	//0x134c		VoC_lw32_d(REG45,0xb68)
0xE081C020,	//0x134e		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xC3665887,	//0x1350		VoC_sub16_rr(REG6,REG5,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0xE01560E2,	//0x1352		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG7,DEFAULT)
0x3146C12C,	//0x1354		VoC_bngtz16_r(AMR_PITCH_FR103,REG6)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xD8871360,	//0x1356		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_bngtz16_r(AMR_PITCH_FR103,REG6)(hi)
0xC3D3E787,	//0x1358		VoC_sub16_rr(REG3,REG7,REG2,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0x135E3203,	//0x135a		VoC_bltz16_r(AMR_PITCH_FR104,REG3)
0xE081E0E2,	//0x135c		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_movreg16(REG2,REG7,DEFAULT)
		//0x135e		AMR_PITCH_FR104
0xD887C12C,	//0x135e		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
		//0x135f		VoC_endloop0
		//0x1360		AMR_PITCH_FR103
0xE5E4700C,	//0x1360		VoC_lw16i_short(REG4,0x5e,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
0x0B6A6E04,	//0x1362		VoC_bnez16_d(AMR_PITCH_FR105,0xb6a)
0x1399340C,	//0x1364		VoC_bgt16_rr(AMR_PITCH_FR106,REG1,REG4)
		//0x1366		AMR_PITCH_FR105
0x77A4F7F2,	//0x1366		VoC_lw16i_short(REG4,0xfffd,DEFAULT)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0xD612E035,	//0x1368		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0x3,IN_PARALLEL)
0xDFC14052,	//0x136a		VoC_push16(REG1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG2,DEFAULT)
0x4BB41807,	//0x136c		VoC_lw16i_set_inc(REG3,0x4bb4,0x1)
0x00000ACD,	//0x136e		VoC_lw16i(RL6_HI,0x8000)
0xF01970D0,	//0x1370		VoC_lw16i_short(INC1,0x6,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x6,DEFAULT)
		//0x1372		SEARCHFRAC102
0x13913425,	//0x1372		VoC_bgt16_rr(SEARCHFRAC100,REG4,REG5)
0xDF416086,	//0x1374		VoC_push32(REG23,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0x137C3246,	//0x1376		VoC_bnltz16_r(INTERPOL_3OR6_101,REG6)
0x0D310736,	//0x1378		VoC_add16_rd(REG6,REG6,0xd31)
0x0D170792,	//0x137a		VoC_sub16_rd(REG2,REG2,0xd17)
		//0x137c		INTERPOL_3OR6_101
0xC2F1C0F0,	//0x137c		VoC_sub16_rr(REG1,REG3,REG6,DEFAULT)	|	VoC_add16_rr(REG0,REG3,REG6,DEFAULT)
0x0D310709,	//0x137e		VoC_add16_rd(REG1,REG1,0xd31)
0x0D170713,	//0x1380		VoC_add16_rd(REG3,REG2,0xd17)
0xFF446883,	//0x1382		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xD40BD402,	//0x1384		VoC_mac32inc_pp(REG1,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG2,DEFAULT)
		//0x1385		VoC_endloop0
0x0921E1A0,	//0x1386		VoC_add32_rd(REG23,ACC0,0x4a9c)(lo)	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x34984A9C,	//0x1388		VoC_bngt16_rr(SEARCHFRAC101,REG3,REG0)(lo)	|	VoC_add32_rd(REG23,ACC0,0x4a9c)(hi)
0x608C138D,	//0x138a		VoC_movreg16(RL6_LO,REG4,DEFAULT)	|	VoC_bngt16_rr(SEARCHFRAC101,REG3,REG0)(hi)
0xDF01F66D,	//0x138c		VoC_pop32(REG23,DEFAULT)	|	VoC_movreg16(RL6_HI,REG3,IN_PARALLEL)
		//0x138d		SEARCHFRAC101
0x0D170724,	//0x138e		VoC_add16_rd(REG4,REG4,0xd17)
0xF024E5E2,	//0x1390		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_jump(SEARCHFRAC102)
		//0x1391		SEARCHFRAC100
0xF7805F81,	//0x1392		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x0D584420,	//0x1394		VoC_bne16_rd(SEARCHFRAC104,REG0,0xd58)
0xC2617060,	//0x1396		VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
		//0x1398		SEARCHFRAC104
0xDF82E00C,	//0x1398		VoC_pop16(REG2,DEFAULT)	|	VoC_movreg16(RL6_LO,REG0,DEFAULT)
		//0x1399		AMR_PITCH_FR106
0x0B68078B,	//0x139a		VoC_sub16_rd(REG3,REG1,0xb68)
0x0D31081B,	//0x139c		VoC_mult16_rd(REG3,REG3,0xd31)
0x071BE187,	//0x139e		VoC_add16_rd(REG3,REG3,0xd1c)(lo)	|	VoC_movreg16(REG7,RL6_LO,DEFAULT)
0xC0FA0D1C,	//0x13a0		VoC_add16_rr(REG2,REG3,REG7,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0xd1c)(hi)
0x0B6A6E10,	//0x13a2		VoC_bnez16_d(ENC_LAG6_100,0xb6a)
0x01700A86,	//0x13a4		VoC_lw16i(REG6,0x170)
0x0A86C072,	//0x13a6		VoC_lw16i(REG6,0x5e)(lo)	|	VoC_add16_rr(REG2,REG1,REG6,DEFAULT)
0x340E005E,	//0x13a8		VoC_bgt16_rr(ENC_LAG6_100,REG1,REG6)(lo)	|	VoC_lw16i(REG6,0x5e)(hi)
0xC04B13B2,	//0x13aa		VoC_add16_rr(REG3,REG1,REG1,DEFAULT)	|	VoC_bgt16_rr(ENC_LAG6_100,REG1,REG6)(hi)
0x0A86C0CB,	//0x13ac		VoC_lw16i(REG6,0x69)(lo)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0xC0DB0069,	//0x13ae		VoC_add16_rr(REG3,REG3,REG3,DEFAULT)	|	VoC_lw16i(REG6,0x69)(hi)
0xC0FAC2F3,	//0x13b0		VoC_add16_rr(REG2,REG3,REG7,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)
		//0x13b2		ENC_LAG6_100
0x1501D667,	//0x13b2		VoC_sw16_d(REG1,0x8b0)(lo)	|	VoC_lw16_sd(REG7,0x5,DEFAULT)
0xDC7208B0,	//0x13b4		VoC_sw16_p(REG2,REG7,DEFAULT)	|	VoC_sw16_d(REG1,0x8b0)(hi)
0xC1D7F022,	//0x13b6		VoC_add16_rr(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x0AD01501,	//0x13b8		VoC_sw16_d(REG1,0xad0)
0x150CDA67,	//0x13ba		VoC_sw16_d(RL6_LO,0xad1)(lo)	|	VoC_sw16_sd(REG7,0x5,DEFAULT)
0x14050AD1,	//0x13bc		VoC_lw16_d(REG5,0xad4)(lo)	|	VoC_sw16_d(RL6_LO,0xad1)(hi)
0x14830AD4,	//0x13be		VoC_lw32_d(REG67,0xad0)(lo)	|	VoC_lw16_d(REG5,0xad4)(hi)
0xF0020AD0,	//0x13c0		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw32_d(REG67,0xad0)(hi)
0x10AF2B80,	//0x13c2		VoC_jal(CII_Pred_lt_3or6)
0x0AD42008,	//0x13c4		VoC_lw16d_set_inc(REG0,0xad4,0x2)
0x0A321807,	//0x13c6		VoC_lw16i_set_inc(REG3,0xa32,0x1)
0x40521FB9,	//0x13c8		VoC_lw16i_set_inc(REG1,0x4052,0xfffffffe)
0x0C832B80,	//0x13ca		VoC_jal(CII_Convolve)
0x0FA92B80,	//0x13cc		VoC_jal(CII_G_pitch)
0x0AD61400,	//0x13ce		VoC_lw16_d(REG0,0xad6)
0xF64E7007,	//0x13d0		VoC_movreg16(RL7_LO,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x7FFF0A8F,	//0x13d2		VoC_lw16i(RL7_HI,0x7fff)
0x0AD66C0C,	//0x13d4		VoC_bez16_d(cl_ltp101,0xad6)
0x4B703C92,	//0x13d6		VoC_bngt16_rd(cl_ltp101,REG2,0x4b70)
0x1807F81A,	//0x13d8		VoC_lw16i_set_inc(REG3,0x8e0,0x1)(lo)	|	VoC_shr16_ri(REG2,0x3,DEFAULT)
0xE8E108E0,	//0x13da		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x8e0,0x1)(hi)
		//0x13dc		VoC_endloop0
0x3C1A829A,	//0x13dc		VoC_bngt16_rd(cl_ltp101,REG2,0x4b70)(lo)	|	VoC_add16inc_rp(REG2,REG2,REG3,DEFAULT)
0xF0274B70,	//0x13de		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bngt16_rd(cl_ltp101,REG2,0x4b70)(hi)
		//0x13e0		cl_ltp101
0x3CCD0A86,	//0x13e0		VoC_lw16i(REG6,0x3ccd)
0x13E63187,	//0x13e2		VoC_bez16_r(cl_ltp202,REG7)
0xE0CFE0CE,	//0x13e4		VoC_movreg16(RL7_HI,REG6,DEFAULT)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
		//0x13e6		cl_ltp202
0x0AD2150E,	//0x13e6		VoC_sw16_d(RL7_LO,0xad2)
0x0AD7150F,	//0x13e8		VoC_sw16_d(RL7_HI,0xad7)
0x1804F004,	//0x13ea		VoC_lw16i_set_inc(REG0,0x4b66,0x1)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x18064B66,	//0x13ec		VoC_lw16i_set_inc(REG2,0x0,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x4b66,0x1)(hi)
0x0A830000,	//0x13ee		VoC_lw16i(REG3,0x7fff)(lo)	|	VoC_lw16i_set_inc(REG2,0x0,0x1)(hi)
0xFFC07FFF,	//0x13f0		VoC_NAD	|	VoC_lw16i(REG3,0x7fff)(hi)
0xD8816A0E,	//0x13f2		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x0AD738A1,	//0x13f4		VoC_bgt16_rd(q_gain_pitch_110,REG1,0xad7)
0x0AD20B09,	//0x13f6		VoC_sub16_dr(REG1,0xad2,REG1)
0x13FC3101,	//0x13f8		VoC_bgtz16_r(q_gain_pitch_111,REG1)
0x4BCD0B09,	//0x13fa		VoC_sub16_dr(REG1,0x4bcd,REG1)
		//0x13fc		q_gain_pitch_111
0x14003499,	//0x13fc		VoC_bngt16_rr(q_gain_pitch_110,REG3,REG1)
0xF6446023,	//0x13fe		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
		//0x1400		q_gain_pitch_110
		//0x1400		VoC_endloop0
0xD8815E10,	//0x1400		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x4B661804,	//0x1402		VoC_lw16i_set_inc(REG0,0x4b66,0x1)
0xE083C021,	//0x1404		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG4,DEFAULT)
0x1645D895,	//0x1406		VoC_and16_ri(REG5,0xfffc)(lo)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xD6677FFC,	//0x1408		VoC_lw16_sd(REG7,0x5,DEFAULT)	|	VoC_and16_ri(REG5,0xfffc)(hi)
0x0D17073F,	//0x140a		VoC_add16_rd(REG7,REG7,0xd17)
0xDA67DC74,	//0x140c		VoC_sw16_sd(REG7,0x5,DEFAULT)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0x0AD21505,	//0x140e		VoC_sw16_d(REG5,0xad2)
0x0AD21403,	//0x1410		VoC_lw16_d(REG3,0xad2)
0x0A321808,	//0x1412		VoC_lw16i_set_inc(REG0,0xa32,0x2)
0x09E21809,	//0x1414		VoC_lw16i_set_inc(REG1,0x9e2,0x2)
0x0A0A180A,	//0x1416		VoC_lw16i_set_inc(REG2,0xa0a,0x2)
0x14292C05,	//0x1418		VoC_loop_i(0x1,0x2)
0x9AC31AC2,	//0x141a		VoC_multf32inc_rp(REG67,REG3,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(REG45,REG3,REG0,DEFAULT)
0xEA87FFC0,	//0x141c		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_NAD
0xFBFB7BFA,	//0x141e		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xBA7D3A6C,	//0x1420		VoC_sub16inc_pr(REG5,REG1,REG7,IN_PARALLEL)	|	VoC_sub16inc_pr(REG4,REG1,REG5,DEFAULT)
0x9AC31AC2,	//0x1422		VoC_multf32inc_rp(REG67,REG3,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(REG45,REG3,REG0,DEFAULT)
		//0x1424		VoC_endloop0
0x1400DDD2,	//0x1424		VoC_lw16_d(REG0,0xad4)(lo)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0x0A810AD4,	//0x1426		VoC_lw16i(REG1,0xa82)(lo)	|	VoC_lw16_d(REG0,0xad4)(hi)
0xE0220A82,	//0x1428		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_lw16i(REG1,0xa82)(hi)
		//0x1429		VoC_endloop1
0x1407D656,	//0x142a		VoC_lw16_d(REG7,0xad0)(lo)	|	VoC_lw16_sd(REG6,0x4,DEFAULT)
0x31C60AD0,	//0x142c		VoC_bnez16_r(cod_amr116,REG6)(lo)	|	VoC_lw16_d(REG7,0xad0)(hi)
0x6A051434,	//0x142e		VoC_bngtz16_d(cod_amr116,0x716)(lo)	|	VoC_bnez16_r(cod_amr116,REG6)(hi)
0x15070716,	//0x1430		VoC_sw16_d(REG7,0x711)(lo)	|	VoC_bngtz16_d(cod_amr116,0x716)(hi)
0xFFC00711,	//0x1432		VoC_NAD	|	VoC_sw16_d(REG7,0x711)(hi)
		//0x1434		cod_amr116
0x0D1C4436,	//0x1434		VoC_bne16_rd(cod_amr117,REG6,0xd1c)
0x07176A04,	//0x1436		VoC_bngtz16_d(cod_amr117,0x717)
0x07101507,	//0x1438		VoC_sw16_d(REG7,0x710)
		//0x143a		cod_amr117
0x0A0A1804,	//0x143a		VoC_lw16i_set_inc(REG0,0xa0a,0x1)
0x0ACC1506,	//0x143c		VoC_sw16_d(REG6,0xacc)
0x40521805,	//0x143e		VoC_lw16i_set_inc(REG1,0x4052,0x1)
0x09E02006,	//0x1440		VoC_lw16d_set_inc(REG2,0x9e0,0x1)
0x0AD22007,	//0x1442		VoC_lw16d_set_inc(REG3,0xad2,0x1)
0x0A820A84,	//0x1444		VoC_lw16i(REG4,0xa82)
0x0B3E0A85,	//0x1446		VoC_lw16i(REG5,0xb3e)
0xDFC1DFC0,	//0x1448		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xDFC3DFC2,	//0x144a		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xDFC5DFC4,	//0x144c		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x0A5A0A80,	//0x144e		VoC_lw16i(REG0,0xa5a)
0x0ACC1401,	//0x1450		VoC_lw16_d(REG1,0xacc)
0xDFC0D6C2,	//0x1452		VoC_push16(REG0,DEFAULT)	|	VoC_lw16_sd(REG2,0xb,DEFAULT)
0xDFC2DFC1,	//0x1454		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xD663D680,	//0x1456		VoC_lw16_sd(REG3,0x5,DEFAULT)	|	VoC_lw16_sd(REG0,0x7,DEFAULT)
0x0EE72B80,	//0x1458		VoC_jal(CII_cbseach_subr1)
0x14F92B80,	//0x145a		VoC_jal(CII_code_10i40_35bits)
0xD663D640,	//0x145c		VoC_lw16_sd(REG3,0x5,DEFAULT)	|	VoC_lw16_sd(REG0,0x3,DEFAULT)
0x0EE72B80,	//0x145e		VoC_jal(CII_cbseach_subr1)
0x19512B80,	//0x1460		VoC_jal(CII_gainQuant_M122)
0xDF80E901,	//0x1462		VoC_pop16(REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x1463		VoC_endloop0
0x0AD21406,	//0x1464		VoC_lw16_d(REG6,0xad2)
0xF81E5A65,	//0x1466		VoC_shr16_ri(REG6,0x3,IN_PARALLEL)	|	VoC_sw16_sd(REG5,0x5,DEFAULT)
0x08E11805,	//0x1468		VoC_lw16i_set_inc(REG1,0x8e1,0x1)
0x08E01804,	//0x146a		VoC_lw16i_set_inc(REG0,0x8e0,0x1)
0xD89768C3,	//0x146c		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xDC87D897,	//0x146e		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
		//0x146f		VoC_endloop0
0xF000DC06,	//0x1470		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sw16_p(REG6,REG0,DEFAULT)
0x099A0A8E,	//0x1472		VoC_lw16i(RL7_LO,0x99a)
0x09900A8F,	//0x1474		VoC_lw16i(RL7_HI,0x990)
0x0CFD2B80,	//0x1476		VoC_jal(CII_subframePostProc)
0xE2805617,	//0x1478		VoC_lw16i_short(REG0,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0xD63541C7,	//0x147a		VoC_lw16_sd(REG5,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG0,DEFAULT)
0xD6267021,	//0x147c		VoC_lw16_sd(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x5A17C276,	//0x147e		VoC_sw16_sd(REG7,0x0,DEFAULT)	|	VoC_sub16_rr(REG6,REG1,REG6,DEFAULT)
0x5A26E0B2,	//0x1480		VoC_sw16_sd(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(REG2,0xb,IN_PARALLEL)
0xD644C155,	//0x1482		VoC_lw16_sd(REG4,0x3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)
0xC1145A35,	//0x1484		VoC_add16_rr(REG4,REG4,REG2,IN_PARALLEL)	|	VoC_sw16_sd(REG5,0x2,DEFAULT)
0xC0CBD653,	//0x1486		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16_sd(REG3,0x4,DEFAULT)
0xDA53DA44,	//0x1488		VoC_sw16_sd(REG3,0x4,DEFAULT)	|	VoC_sw16_sd(REG4,0x3,DEFAULT)
0x12B42B00,	//0x148a		VoC_jump_lg(cod_amr112)
		//0x148c		cod_amr111
0xDF87E8A1,	//0x148c		VoC_pop16(REG7,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x148d		VoC_endloop0
0x07B81808,	//0x148e		VoC_lw16i_set_inc(REG0,0x7b8,0x2)
0x07181809,	//0x1490		VoC_lw16i_set_inc(REG1,0x718,0x2)
0x2C9BD9C7,	//0x1492		VoC_loop_i(0x1,0x4d)(lo)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xD9C71496,	//0x1494		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x4d)(hi)
		//0x1496		VoC_endloop1
0x2B80DDCF,	//0x1496		VoC_jal(CII_PRM2_BITS_POST_PROCESS)(lo)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0xDFA911F0,	//0x1498		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_PRM2_BITS_POST_PROCESS)(hi)
0xE580FFC0,	//0x149a		VoC_return	|	VoC_NOP
		//0x149c		CII_set_sign12k2_122
0xD670DFE9,	//0x149c		VoC_lw16_sd(REG0,0x6,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x14AA2C05,	//0x149e		VoC_loop_i(0x1,0x2)
0x0A88F009,	//0x14a0		VoC_lw16i(ACC0_LO,0x100)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xEA810100,	//0x14a2		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i(ACC0_LO,0x100)(hi)
		//0x14a4		VoC_endloop0
0xE024D500,	//0x14a4		VoC_movreg16(REG4,REG1,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG0)
0x2B80FF20,	//0x14a6		VoC_jal(CII_Inv_sqrt)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFBD80AD0,	//0x14a8		VoC_shr32_ri(REG01,0xfffffffb,DEFAULT)	|	VoC_jal(CII_Inv_sqrt)(hi)
		//0x14aa		VoC_endloop1
0x40DE1808,	//0x14aa		VoC_lw16i_set_inc(REG0,0x40de,0x2)
0xF6026025,	//0x14ac		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_movreg16(REG5,REG1,DEFAULT)
0x7FFF0A8A,	//0x14ae		VoC_lw16i(ACC1_LO,0x7fff)
0x00010ACB,	//0x14b0		VoC_lw16i(ACC1_HI,0xffff8001)
0x0CED1804,	//0x14b2		VoC_lw16i_set_inc(REG0,0xced,0x1)
0x0A81D673,	//0x14b4		VoC_lw16i(REG1,0xb66)(lo)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0x14860B66,	//0x14b6		VoC_lw32_d(RL6,0x4a9c)(lo)	|	VoC_lw16i(REG1,0xb66)(hi)
0xF6B94A9C,	//0x14b8		VoC_lw16i_short(FORMAT32,0xfffffff5,DEFAULT)	|	VoC_lw32_d(RL6,0x4a9c)(hi)
0xFF346D10,	//0x14ba		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xDE005123,	//0x14bc		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_mac32inc_rp(REG4,REG3,DEFAULT)
0x7006D02A,	//0x14be		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_mac32_rp(REG5,REG2,DEFAULT)
0x6127DC0A,	//0x14c0		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_sw16_p(ACC1_LO,REG0,IN_PARALLEL)
0x3247FF34,	//0x14c2		VoC_bnltz16_r(SET_SIGN101,REG7)(lo)	|	VoC_movreg32(ACC0,RL6,IN_PARALLEL)
0x43BF14C9,	//0x14c4		VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)	|	VoC_bnltz16_r(SET_SIGN101,REG7)(hi)
0xDC0B8596,	//0x14c6		VoC_sw16_p(ACC1_HI,REG0,DEFAULT)	|	VoC_sub16_rp(REG6,REG6,REG2,IN_PARALLEL)
0xDC97DC26,	//0x14c8		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
		//0x14c9		SET_SIGN101
		//0x14ca		VoC_endloop0
0xF7F9DE10,	//0x14ca		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0xE00061C6,	//0x14cc		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0x0CDA1805,	//0x14ce		VoC_lw16i_set_inc(REG1,0xcda,0x1)
0xE00360D2,	//0x14d0		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_movreg16(INC2,REG6,DEFAULT)
0xFFC0F7E4,	//0x14d2		VoC_NAD	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
0x14E82E31,	//0x14d4		VoC_loop_r(1,REG6)
0x0B660A82,	//0x14d6		VoC_lw16i(REG2,0xb66)
0xF7E64082,	//0x14d8		VoC_movreg16(REG6,RL7_HI,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0xEFF56789,	//0x14da		VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x34B5D826,	//0x14dc		VoC_bngt16_rr(SET_SIGN107,REG6,REG5)(lo)	|	VoC_lw16_p(REG6,REG2,DEFAULT)
0x0A8314E3,	//0x14de		VoC_lw16i(REG3,0xb66)(lo)	|	VoC_bngt16_rr(SET_SIGN107,REG6,REG5)(hi)
0x60C50B66,	//0x14e0		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_lw16i(REG3,0xb66)(hi)
0xDE10C29B,	//0x14e2		VoC_inc_p(REG2,DEFAULT)	|	VoC_sub16_rr(REG3,REG2,REG3,IN_PARALLEL)
		//0x14e3		SET_SIGN107
		//0x14e3		VoC_endloop0
0x14E834AC,	//0x14e4		VoC_bngt16_rr(SET_SIGN104,REG5,REG4)
0xF60760A4,	//0x14e6		VoC_movreg16(REG7,REG0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x14e8		SET_SIGN104
		//0x14e8		VoC_endloop1
0xDC935E00,	//0x14e8		VoC_sw16inc_p(REG3,REG1,IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
0x0CD01805,	//0x14ea		VoC_lw16i_set_inc(REG1,0xcd0,0x1)
0xF7C45FA9,	//0x14ec		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xC0636709,	//0x14ee		VoC_add16_rr(REG3,REG1,REG4,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xDCB7DC97,	//0x14f0		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x0D17073F,	//0x14f2		VoC_add16_rd(REG7,REG7,0xd17)
0x14F73427,	//0x14f4		VoC_bgt16_rr(SET_SIGN106,REG4,REG7)
0xFFC0F007,	//0x14f6		VoC_NOP	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x14f7		SET_SIGN106
		//0x14f7		VoC_endloop0
0xDFE9E580,	//0x14f8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x14f9		CII_code_10i40_35bits
0xF0A4F04A,	//0x14fa		VoC_lw16i_short(REG4,0x5,DEFAULT)	|	VoC_lw16i_short(ACC1_LO,0x2,DEFAULT)
0xFFC0F105,	//0x14fc		VoC_NAD	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x0EF62B80,	//0x14fe		VoC_jal(CII_cor_h_x)
0xE08F70AE,	//0x1500		VoC_lw16i_short(RL7_HI,0x8,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x5,DEFAULT)
0x149C2B80,	//0x1502		VoC_jal(CII_set_sign12k2_122)
0x0F332B80,	//0x1504		VoC_jal(CII_cor_h)
0x15712B80,	//0x1506		VoC_jal(CII_search_M122)
0x151D2B80,	//0x1508		VoC_jal(CII_build_code_M122)
0xE0015620,	//0x150a		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xE085694D,	//0x150c		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xE0765807,	//0x150e		VoC_lw16i_short(REG6,0x7,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xC0B6E43E,	//0x1510		VoC_add16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_and16_rr(REG6,REG7,DEFAULT)
0xD866E42F,	//0x1512		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
0x4C19E477,	//0x1514		VoC_bnlt16_rd(q_p_100,REG1,0xd25)(lo)	|	VoC_or16_rr(REG7,REG6,DEFAULT)
0xE0E60D25,	//0x1516		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_bnlt16_rd(q_p_100,REG1,0xd25)(hi)
		//0x1518		q_p_100
0xDC86DE08,	//0x1518		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
		//0x1519		VoC_endloop0
0xDA10DFA9,	//0x151a		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x151c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x151d		CII_build_code_M122
0xF0085660,	//0x151e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x6A82FF44,	//0x1520		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xDDC4EFF2,	//0x1522		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)
		//0x1523		VoC_endloop0
0x0CEE0A8A,	//0x1524		VoC_lw16i(ACC1_LO,0xcee)
0xF0075633,	//0x1526		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x2,DEFAULT)
0xD66B68A2,	//0x1528		VoC_lw16_sd(ACC1_HI,0x5,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x152a		VoC_endloop0
0x0ACCDCB2,	//0x152a		VoC_lw16i(RL6_LO,0xffffe000)(lo)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
0x0A8D6000,	//0x152c		VoC_lw16i(RL6_HI,0x2000)(lo)	|	VoC_lw16i(RL6_LO,0xffffe000)(hi)
0x18042000,	//0x152e		VoC_lw16i_set_inc(REG0,0xce4,0x1)(lo)	|	VoC_lw16i(RL6_HI,0x2000)(hi)
0x18050CE4,	//0x1530		VoC_lw16i_set_inc(REG1,0xb66,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xce4,0x1)(hi)
0xFFC00B66,	//0x1532		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0xb66,0x1)(hi)
0x15672C14,	//0x1534		VoC_loop_i(0x0,0xa)
0x0D5D1404,	//0x1536		VoC_lw16_d(REG4,0xd5d)
0xD8848D06,	//0x1538		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_multf16_rp(REG6,REG4,REG0,DEFAULT)
0x0D250A31,	//0x153a		VoC_multf32_rd(REG23,REG6,0xd25)
0xFA09DC1D,	//0x153c		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_sw16_p(RL6_HI,REG1,DEFAULT)
0xFF294315,	//0x153e		VoC_movreg32(REG23,ACC1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG4,REG2,DEFAULT)
0xC0E3C0A2,	//0x1540		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x001FD822,	//0x1542		VoC_add16_pd(REG7,REG3,0x4509)(lo)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x31024509,	//0x1544		VoC_bgtz16_r(build_code_M122_100_end,REG2)(lo)	|	VoC_add16_pd(REG7,REG3,0x4509)(hi)
0x07BF154C,	//0x1546		VoC_sub16_rd(REG7,REG7,0x44fa)(lo)	|	VoC_bgtz16_r(build_code_M122_100_end,REG2)(hi)
0xDC1C44FA,	//0x1548		VoC_sw16_p(RL6_LO,REG1,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x44fa)(hi)
0x0D180736,	//0x154a		VoC_add16_rd(REG6,REG6,0xd18)
		//0x154c		build_code_M122_100_end
0xDE085632,	//0x154c		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0xC0AA5C37,	//0x154e		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
0x0D250713,	//0x1550		VoC_add16_rd(REG3,REG2,0xd25)
0x3207D827,	//0x1552		VoC_bltz16_r(build_code_M122_200_end,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0xE0C51567,	//0x1554		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_bltz16_r(build_code_M122_200_end,REG7)(hi)
0xC3F464BD,	//0x1556		VoC_sub16_rr(REG4,REG7,REG6,IN_PARALLEL)	|	VoC_xor16_rr(REG5,REG7,DEFAULT)
0x00081605,	//0x1558		VoC_and16_ri(REG5,0x8)
0x156031C5,	//0x155a		VoC_bnez16_r(build_code_M122_300,REG5)
0x15663104,	//0x155c		VoC_bgtz16_r(build_code_M122_400,REG4)
		//0x155e		build_code_M122_500
0xE5C8E062,	//0x155e		VoC_jump(build_code_M122_200_end)	|	VoC_movreg16(REG2,REG3,DEFAULT)
		//0x1560		build_code_M122_300
0xF0E5F0E4,	//0x1560		VoC_lw16i_short(REG5,0x7,DEFAULT)	|	VoC_lw16i_short(REG4,0x7,DEFAULT)
0xC364E4DA,	//0x1562		VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_and32_rr(REG45,REG67,DEFAULT)
0x155E3104,	//0x1564		VoC_bgtz16_r(build_code_M122_500,REG4)
		//0x1566		build_code_M122_400
0xDC26DC37,	//0x1566		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
		//0x1567		build_code_M122_200_end
		//0x1567		VoC_endloop0
0x5650D6A7,	//0x1568		VoC_lw16_sd(REG0,0x4,DEFAULT)	|	VoC_lw16_sd(REG7,0x9,DEFAULT)
0x2B80E0A6,	//0x156a		VoC_jal(CII_build_code_com2)(lo)	|	VoC_lw16i_short(REG6,0xa,IN_PARALLEL)
0xDFA91096,	//0x156c		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_build_code_com2)(hi)
0x4BE21806,	//0x156e		VoC_lw16i_set_inc(REG2,0x4be2,0x1)
0xDFE9E580,	//0x1570		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1571		CII_search_M122
0x0B8E1805,	//0x1572		VoC_lw16i_set_inc(REG1,0xb8e,0x1)
0x412E0A84,	//0x1574		VoC_lw16i(REG4,0x412e)
0x41060A85,	//0x1576		VoC_lw16i(REG5,0x4106)
0x40DE1806,	//0x1578		VoC_lw16i_set_inc(REG2,0x40de,0x1)
0x44441582,	//0x157a		VoC_sw32_d(REG45,0x4444)
0x1807E0A0,	//0x157c		VoC_lw16i_set_inc(REG3,0xb66,0x1)(lo)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x15800B66,	//0x157e		VoC_sw32_d(REG01,0x4440)(lo)	|	VoC_lw16i_set_inc(REG3,0xb66,0x1)(hi)
0x0A804440,	//0x1580		VoC_lw16i(REG0,0xcda)(lo)	|	VoC_sw32_d(REG01,0x4440)(hi)
0x07000CDA,	//0x1582		VoC_add16_rd(REG0,REG0,0xcd0)(lo)	|	VoC_lw16i(REG0,0xcda)(hi)
0x15810CD0,	//0x1584		VoC_sw32_d(REG23,0x4442)(lo)	|	VoC_add16_rd(REG0,REG0,0xcd0)(hi)
0xD8024442,	//0x1586		VoC_lw16_p(REG2,REG0,DEFAULT)	|	VoC_sw32_d(REG23,0x4442)(hi)
0x44420710,	//0x1588		VoC_add16_rd(REG0,REG2,0x4442)
0x444E1502,	//0x158a		VoC_sw16_d(REG2,0x444e)
0x44450711,	//0x158c		VoC_add16_rd(REG1,REG2,0x4445)
0x1403D806,	//0x158e		VoC_lw16_d(REG3,0x4468)(lo)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x98CC4468,	//0x1590		VoC_multf32_rp(ACC0,REG3,REG1,DEFAULT)	|	VoC_lw16_d(REG3,0x4468)(hi)
0x0B8E1823,	//0x1592		VoC_lw16i_set_inc(REG3,0xb8e,0x8)
0x4A9C0924,	//0x1594		VoC_add32_rd(ACC0,ACC0,0x4a9c)
0x0CCE1506,	//0x1596		VoC_sw16_d(REG6,0xcce)
0x444C1584,	//0x1598		VoC_sw32_d(ACC0,0x444c)
0x0A4F2B80,	//0x159a		VoC_jal(CII_SEARCH_COPY)
0xE00277E4,	//0x159c		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
0x0CE41805,	//0x159e		VoC_lw16i_set_inc(REG1,0xce4,0x1)
0xE0156942,	//0x15a0		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x15a2		VoC_endloop0
0xDE105C92,	//0x15a2		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0x1582F0A2,	//0x15a4		VoC_sw32_d(REG45,0x443e)(lo)	|	VoC_lw16i_short(REG2,0x5,DEFAULT)
0xFFC0443E,	//0x15a6		VoC_NAD	|	VoC_sw32_d(REG45,0x443e)(hi)
		//0x15a8		SEARCH_10I40_LOOP
0x0CDA0A83,	//0x15a8		VoC_lw16i(REG3,0xcda)
0x0CD1071B,	//0x15aa		VoC_add16_rd(REG3,REG3,0xcd1)
0xD832DFC2,	//0x15ac		VoC_lw16_p(REG2,REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x0B8F1823,	//0x15ae		VoC_lw16i_set_inc(REG3,0xb8f,0x8)
0x444F1502,	//0x15b0		VoC_sw16_d(REG2,0x444f)
0x0A4F2B80,	//0x15b2		VoC_jal(CII_SEARCH_COPY)
0x44641803,	//0x15b4		VoC_lw16i_set_inc(REG3,0x4464,0x0)
0xE2677024,	//0x15b6		VoC_lw16i_short(REG7,0x26,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x10000A85,	//0x15b8		VoC_lw16i(REG5,0x1000)
0x0CD31400,	//0x15ba		VoC_lw16_d(REG0,0xcd3)
0x168C2B80,	//0x15bc		VoC_jal(CII_COMPUTE_RRV_M122)
0x444F2005,	//0x15be		VoC_lw16d_set_inc(REG1,0x444f,0x1)
0x44420708,	//0x15c0		VoC_add16_rd(REG0,REG1,0x4442)
0x0D180809,	//0x15c2		VoC_mult16_rd(REG1,REG1,0xd18)
0x0CCE0007,	//0x15c4		VoC_add16_pd(REG7,REG0,0xcce)
0x44410709,	//0x15c6		VoC_add16_rd(REG1,REG1,0x4441)
0x444C1484,	//0x15c8		VoC_lw32_d(ACC0,0x444c)
0x1108D129,	//0x15ca		VoC_mac32inc_pd(REG1,0x4468)(lo)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0x15074468,	//0x15cc		VoC_sw16_d(REG7,0xccf)(lo)	|	VoC_mac32inc_pd(REG1,0x4468)(hi)
0x18030CCF,	//0x15ce		VoC_lw16i_set_inc(REG3,0x4466,0x0)(lo)	|	VoC_sw16_d(REG7,0xccf)(hi)
0xF0224466,	//0x15d0		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x4466,0x0)(hi)
0xE2A55F44,	//0x15d2		VoC_lw16i_short(REG5,0x2a,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x0CD21406,	//0x15d4		VoC_lw16_d(REG6,0xcd2)
0x08000A87,	//0x15d6		VoC_lw16i(REG7,0x800)
0x16A22B80,	//0x15d8		VoC_jal(CII_COMPUTE_ALP1_M122)
0x40000A80,	//0x15da		VoC_lw16i(REG0,0x4000)
0x10000A81,	//0x15dc		VoC_lw16i(REG1,0x1000)
0x0CD21487,	//0x15de		VoC_lw32_d(RL7,0xcd2)
0x16B72B80,	//0x15e0		VoC_jal(CII_SEARCH_LOOP_M122)
0x44501587,	//0x15e2		VoC_sw32_d(RL7,0x4450)
0x0CCF150C,	//0x15e4		VoC_sw16_d(RL6_LO,0xccf)
0xF7C25F44,	//0x15e6		VoC_movreg16(REG2,RL7_LO,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x0B901823,	//0x15e8		VoC_lw16i_set_inc(REG3,0xb90,0x8)
0x0A4F2B80,	//0x15ea		VoC_jal(CII_SEARCH_COPY)
0x1823E1E2,	//0x15ec		VoC_lw16i_set_inc(REG3,0xb91,0x8)(lo)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xFFC00B91,	//0x15ee		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0xb91,0x8)(hi)
0x0A4F2B80,	//0x15f0		VoC_jal(CII_SEARCH_COPY)
0x44641803,	//0x15f2		VoC_lw16i_set_inc(REG3,0x4464,0x0)
0xE2477044,	//0x15f4		VoC_lw16i_short(REG7,0x24,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x10000A85,	//0x15f6		VoC_lw16i(REG5,0x1000)
0x0CD51400,	//0x15f8		VoC_lw16_d(REG0,0xcd5)
0x168C2B80,	//0x15fa		VoC_jal(CII_COMPUTE_RRV_M122)
0x44681803,	//0x15fc		VoC_lw16i_set_inc(REG3,0x4468,0x0)
0xE2C57042,	//0x15fe		VoC_lw16i_short(REG5,0x2c,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x0CD41406,	//0x1600		VoC_lw16_d(REG6,0xcd4)
0x04000A87,	//0x1602		VoC_lw16i(REG7,0x400)
0x16A22B80,	//0x1604		VoC_jal(CII_COMPUTE_ALP1_M122)
0x20000A80,	//0x1606		VoC_lw16i(REG0,0x2000)
0x08000A81,	//0x1608		VoC_lw16i(REG1,0x800)
0x0CD41487,	//0x160a		VoC_lw32_d(RL7,0xcd4)
0x16B72B80,	//0x160c		VoC_jal(CII_SEARCH_LOOP_M122)
0x44521587,	//0x160e		VoC_sw32_d(RL7,0x4452)
0x0CCF150C,	//0x1610		VoC_sw16_d(RL6_LO,0xccf)
0xF7C25F44,	//0x1612		VoC_movreg16(REG2,RL7_LO,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x0B921823,	//0x1614		VoC_lw16i_set_inc(REG3,0xb92,0x8)
0x0A4F2B80,	//0x1616		VoC_jal(CII_SEARCH_COPY)
0x1823E1E2,	//0x1618		VoC_lw16i_set_inc(REG3,0xb93,0x8)(lo)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xFFC00B93,	//0x161a		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0xb93,0x8)(hi)
0x0A4F2B80,	//0x161c		VoC_jal(CII_SEARCH_COPY)
0x44661803,	//0x161e		VoC_lw16i_set_inc(REG3,0x4466,0x0)
0xE2277064,	//0x1620		VoC_lw16i_short(REG7,0x22,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x08000A85,	//0x1622		VoC_lw16i(REG5,0x800)
0x0CD71400,	//0x1624		VoC_lw16_d(REG0,0xcd7)
0x168C2B80,	//0x1626		VoC_jal(CII_COMPUTE_RRV_M122)
0x446A1803,	//0x1628		VoC_lw16i_set_inc(REG3,0x446a,0x0)
0xE2E57062,	//0x162a		VoC_lw16i_short(REG5,0x2e,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
0x0CD61406,	//0x162c		VoC_lw16_d(REG6,0xcd6)
0x02000A87,	//0x162e		VoC_lw16i(REG7,0x200)
0x16A22B80,	//0x1630		VoC_jal(CII_COMPUTE_ALP1_M122)
0x20000A80,	//0x1632		VoC_lw16i(REG0,0x2000)
0x04000A81,	//0x1634		VoC_lw16i(REG1,0x400)
0x0CD61487,	//0x1636		VoC_lw32_d(RL7,0xcd6)
0x16B72B80,	//0x1638		VoC_jal(CII_SEARCH_LOOP_M122)
0x44541587,	//0x163a		VoC_sw32_d(RL7,0x4454)
0x0CCF150C,	//0x163c		VoC_sw16_d(RL6_LO,0xccf)
0xF7C25F44,	//0x163e		VoC_movreg16(REG2,RL7_LO,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x0B941823,	//0x1640		VoC_lw16i_set_inc(REG3,0xb94,0x8)
0x0A4F2B80,	//0x1642		VoC_jal(CII_SEARCH_COPY)
0x1823E1E2,	//0x1644		VoC_lw16i_set_inc(REG3,0xb95,0x8)(lo)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xFFC00B95,	//0x1646		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0xb95,0x8)(hi)
0x0A4F2B80,	//0x1648		VoC_jal(CII_SEARCH_COPY)
0x44661803,	//0x164a		VoC_lw16i_set_inc(REG3,0x4466,0x0)
0xE2077084,	//0x164c		VoC_lw16i_short(REG7,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x08000A85,	//0x164e		VoC_lw16i(REG5,0x800)
0x0CD91400,	//0x1650		VoC_lw16_d(REG0,0xcd9)
0x168C2B80,	//0x1652		VoC_jal(CII_COMPUTE_RRV_M122)
0x446C1803,	//0x1654		VoC_lw16i_set_inc(REG3,0x446c,0x0)
0xE3057082,	//0x1656		VoC_lw16i_short(REG5,0x30,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x0CD81406,	//0x1658		VoC_lw16_d(REG6,0xcd8)
0x01000A87,	//0x165a		VoC_lw16i(REG7,0x100)
0x16A22B80,	//0x165c		VoC_jal(CII_COMPUTE_ALP1_M122)
0x10000A80,	//0x165e		VoC_lw16i(REG0,0x1000)
0x02000A81,	//0x1660		VoC_lw16i(REG1,0x200)
0x0CD81487,	//0x1662		VoC_lw32_d(RL7,0xcd8)
0x16B72B80,	//0x1664		VoC_jal(CII_SEARCH_LOOP_M122)
0x443F0A34,	//0x1666		VoC_multf32_rd(ACC0,REG6,0x443f)
0x443E0F38,	//0x1668		VoC_msu32_rd(REG7,0x443e)
0x44561587,	//0x166a		VoC_sw32_d(RL7,0x4456)
0x167832C4,	//0x166c		VoC_bngtz32_r(SEARCH_CODE_NOMEMORISE,ACC0)
0x443E1583,	//0x166e		VoC_sw32_d(REG67,0x443e)
0x444E1808,	//0x1670		VoC_lw16i_set_inc(REG0,0x444e,0x2)
0x0CE41809,	//0x1672		VoC_lw16i_set_inc(REG1,0xce4,0x2)
0xD9C468A3,	//0x1674		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDCCD9C4,	//0x1676		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1677		VoC_endloop0
		//0x1678		SEARCH_CODE_NOMEMORISE
0x0CD11805,	//0x1678		VoC_lw16i_set_inc(REG1,0xcd1,0x1)
0x0CD21804,	//0x167a		VoC_lw16i_set_inc(REG0,0xcd2,0x1)
0x6903D816,	//0x167c		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0xD887D887,	//0x167e		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)
		//0x1680		VoC_endloop0
0xDC16DC97,	//0x1680		VoC_sw16_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x0792DF82,	//0x1682		VoC_sub16_rd(REG2,REG2,0xd17)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x3C220D17,	//0x1684		VoC_bngt16_rd(SEARCH_10I40_LOOP1,REG2,0xd17)(lo)	|	VoC_sub16_rd(REG2,REG2,0xd17)(hi)
0x2B000D17,	//0x1686		VoC_jump_lg(SEARCH_10I40_LOOP)(lo)	|	VoC_bngt16_rd(SEARCH_10I40_LOOP1,REG2,0xd17)(hi)
0xDFA915A8,	//0x1688		VoC_pop16(RA,DEFAULT)	|	VoC_jump_lg(SEARCH_10I40_LOOP)(hi)
		//0x1689		SEARCH_10I40_LOOP1
0xE580F050,	//0x168a		VoC_return	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
		//0x168c		CII_COMPUTE_RRV_M122
0x0801F051,	//0x168c		VoC_mult16_rd(REG1,REG0,0xd18)(lo)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x07020D18,	//0x168e		VoC_add16_rd(REG2,REG0,0x4443)(lo)	|	VoC_mult16_rd(REG1,REG0,0xd18)(hi)
0x09004443,	//0x1690		VoC_add32_rd(REG01,REG01,0x4440)(lo)	|	VoC_add16_rd(REG2,REG0,0x4443)(hi)
0xF0B04440,	//0x1692		VoC_lw16i_short(INC0,0x5,DEFAULT)	|	VoC_add32_rd(REG01,REG01,0x4440)(hi)
0x4A9C1484,	//0x1694		VoC_lw32_d(ACC0,0x4a9c)
0xF0165128,	//0x1696		VoC_lw16i_short(INC2,0x5,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG0,DEFAULT)
0x169F2C11,	//0x1698		VoC_loop_i(0x1,0x8)
0xD519E701,	//0x169a		VoC_bimac32inc_pp(REG3,REG1)	|	VoC_loop_r_short(REG4,DEFAULT)
		//0x169b		VoC_endloop0
0x1484C079,	//0x169c		VoC_lw32_d(ACC0,0x4a9c)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x51284A9C,	//0x169e		VoC_mac32inc_rp(REG5,REG0,DEFAULT)	|	VoC_lw32_d(ACC0,0x4a9c)(hi)
		//0x169f		VoC_endloop1
0xE580DCA9,	//0x16a0		VoC_return	|	VoC_sw16inc_p(ACC0_HI,REG2,IN_PARALLEL)
		//0x16a2		CII_COMPUTE_ALP1_M122
0x1FACDF06,	//0x16a2		VoC_lw16i_set_inc(REG0,0x4129,0xfffffffb)(lo)	|	VoC_pop32(RL6,DEFAULT)
0xC1804129,	//0x16a4		VoC_add16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x4129,0xfffffffb)(hi)
0x0D180836,	//0x16a6		VoC_mult16_rd(REG6,REG6,0xd18)
0x0CA61809,	//0x16a8		VoC_lw16i_set_inc(REG1,0xca6,0x2)
0xFFC0C189,	//0x16aa		VoC_NAD	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0x16B22C11,	//0x16ac		VoC_loop_i(0x1,0x8)
0x9BC46682,	//0x16ae		VoC_multf32inc_rp(ACC0,REG7,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x16b0		VoC_endloop0
0xDF47D519,	//0x16b0		VoC_push32(RL7,DEFAULT)	|	VoC_bimac32inc_pp(REG3,REG1)
		//0x16b2		VoC_endloop1
0xC9374269,	//0x16b2		VoC_add32_rr(RL7,ACC0,RL6,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG5,DEFAULT)
0xDF47FFC0,	//0x16b4		VoC_push32(RL7,DEFAULT)	|	VoC_NOP
0xFF39E580,	//0x16b6		VoC_movreg32(REG23,RL7,DEFAULT)	|	VoC_return
		//0x16b7		CII_SEARCH_LOOP_M122
0xF3FD61E0,	//0x16b8		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG0,RL7_HI,DEFAULT)
0x443A1580,	//0x16ba		VoC_sw32_d(REG01,0x443a)
0x0900E1E1,	//0x16bc		VoC_add32_rd(REG01,REG01,0x4442)(lo)	|	VoC_movreg16(REG1,RL7_HI,DEFAULT)
0x77E64442,	//0x16be		VoC_lw16i_short(REG6,0xffffffff,DEFAULT)	|	VoC_add32_rd(REG01,REG01,0x4442)(hi)
0x1580E017,	//0x16c0		VoC_sw32_d(REG01,0x444a)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xFFC0444A,	//0x16c2		VoC_NAD	|	VoC_sw32_d(REG01,0x444a)(hi)
0x172F2C11,	//0x16c4		VoC_loop_i(0x1,0x8)
0x0B951823,	//0x16c6		VoC_lw16i_set_inc(REG3,0xb95,0x8)
0x44420715,	//0x16c8		VoC_add16_rd(REG5,REG2,0x4442)
0x44481502,	//0x16ca		VoC_sw16_d(REG2,0x4448)
0xC490F0B0,	//0x16cc		VoC_mult16_rr(REG0,REG2,REG2,DEFAULT)	|	VoC_lw16i_short(INC0,0x5,DEFAULT)
0xC210E041,	//0x16ce		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0xDFC57808,	//0x16d0		VoC_push16(REG5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x44440900,	//0x16d2		VoC_add32_rd(REG01,REG01,0x4444)
0x0700C014,	//0x16d4		VoC_add16_rd(REG0,REG0,0x444b)(lo)	|	VoC_add16_rr(REG4,REG0,REG2,DEFAULT)
0x0A85444B,	//0x16d6		VoC_lw16i(REG5,0xb66)(lo)	|	VoC_add16_rd(REG0,REG0,0x444b)(hi)
0x42280B66,	//0x16d8		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_lw16i(REG5,0xb66)(hi)
0x412CE055,	//0x16da		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x5,IN_PARALLEL)
0x7101F625,	//0x16dc		VoC_lw16i_short(REG1,0x8,DEFAULT)	|	VoC_movreg16(REG5,REG1,IN_PARALLEL)
0x1504D884,	//0x16de		VoC_sw16_d(REG4,0x4447)(lo)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0x4C884447,	//0x16e0		VoC_bnlt16_rd(SEARCH_COPY_label1,REG0,0x4447)(lo)	|	VoC_sw16_d(REG4,0x4447)(hi)
0xE9044447,	//0x16e2		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_bnlt16_rd(SEARCH_COPY_label1,REG0,0x4447)(hi)
0x44474C30,	//0x16e4		VoC_bnlt16_rd(SEARCH_COPY_label1,REG0,0x4447)
0x5E08DCB4,	//0x16e6		VoC_inc_p(REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x16e7		VoC_endloop0
0xFFC0D884,	//0x16e8		VoC_NAD	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x16ea		SEARCH_COPY_label1
0x44474428,	//0x16ea		VoC_bne16_rd(SEARCH_COPY_label2,REG0,0x4447)
0xDE08D854,	//0x16ec		VoC_inc_p(REG1,DEFAULT)	|	VoC_lw16_p(REG4,REG5,DEFAULT)
0xF332DCB4,	//0x16ee		VoC_lw16i_short(INC2,0x19,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x16ef		SEARCH_COPY_label2
0x44470784,	//0x16f0		VoC_sub16_rd(REG4,REG0,0x4447)
0xC520C114,	//0x16f2		VoC_mult16_rr(REG0,REG4,REG4,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x4220F0A5,	//0x16f4		VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0x3181F015,	//0x16f6		VoC_bez16_r(SEARCH_COPY_label_end,REG1)(lo)	|	VoC_lw16i_short(INC1,0x5,IN_PARALLEL)
0xF8081708,	//0x16f8		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_bez16_r(SEARCH_COPY_label_end,REG1)(hi)
0x44440700,	//0x16fa		VoC_add16_rd(REG0,REG0,0x4444)
0xC52AC010,	//0x16fc		VoC_mult16_rr(REG2,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x0712D804,	//0x16fe		VoC_add16_rd(REG2,REG2,0xd1d)(lo)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0xC0100D1D,	//0x1700		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0xd1d)(hi)
0xDE106644,	//0x1702		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG1,DEFAULT)
0xC0105804,	//0x1704		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
		//0x1706		VoC_endloop0
0xDE105CB4,	//0x1706		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1708		SEARCH_COPY_label_end
0x1480DF85,	//0x1708		VoC_lw32_d(REG01,0x444a)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x002B444A,	//0x170a		VoC_add16_pd(REG3,REG5,0xccf)(lo)	|	VoC_lw32_d(REG01,0x444a)(hi)
0x18220CCF,	//0x170c		VoC_lw16i_set_inc(REG2,0xb95,0x8)(lo)	|	VoC_add16_pd(REG3,REG5,0xccf)(hi)
0xFFC00B95,	//0x170e		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0xb95,0x8)(hi)
0xD90C691A,	//0x1710		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x443A1008,	//0x1712		VoC_mac32_pd(REG1,0x443a)
0x443B1110,	//0x1714		VoC_mac32inc_pd(REG2,0x443b)
0xE08D82C4,	//0x1716		VoC_movreg16(RL6_HI,REG4,DEFAULT)	|	VoC_add16inc_rp(REG4,REG3,REG0,DEFAULT)
0xE125C724,	//0x1718		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_multf16_rr(REG4,REG4,REG4,DEFAULT)
0xCDE44DAD,	//0x171a		VoC_multf32_rr(ACC0,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC1,REG6,REG5,DEFAULT)
0x36A5FFC0,	//0x171c		VoC_bngt32_rr(SEARCH_CODE_I3_END,ACC0,ACC1)(lo)	|	VoC_NOP
0xDFC1172A,	//0x171e		VoC_push16(REG1,DEFAULT)	|	VoC_bngt32_rr(SEARCH_CODE_I3_END,ACC0,ACC1)(hi)
0x0B660A87,	//0x1720		VoC_lw16i(REG7,0xb66)
0x7F13C279,	//0x1722		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)
0xDF81F62F,	//0x1724		VoC_pop16(REG1,DEFAULT)	|	VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)
0x4448140E,	//0x1726		VoC_lw16_d(RL7_LO,0x4448)
0xFFC0E1AC,	//0x1728		VoC_NAD	|	VoC_movreg16(RL6_LO,RL6_HI,DEFAULT)
		//0x172a		SEARCH_CODE_I3_END
		//0x172a		VoC_endloop0
0xD90C5E08,	//0x172a		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x70A2DF05,	//0x172c		VoC_lw16i_short(REG2,0x5,DEFAULT)	|	VoC_pop32(ACC1,DEFAULT)
0x0712F3FD,	//0x172e		VoC_add16_rd(REG2,REG2,0x4448)(lo)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
		//0x172f		VoC_endloop1
0x0A3C4448,	//0x1730		VoC_multf32_rd(ACC0,REG7,0x44fb)(lo)	|	VoC_add16_rd(REG2,REG2,0x4448)(hi)
0xDF0044FB,	//0x1732		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rd(ACC0,REG7,0x44fb)(hi)
0x4A9C0924,	//0x1734		VoC_add32_rd(ACC0,ACC0,0x4a9c)
0xDFE9E580,	//0x1736		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1737		CII_q_gain_code
0x0D8B2B80,	//0x1738		VoC_jal(CII_Pow2)
0x0AD31406,	//0x173a		VoC_lw16_d(REG6,0xad3)
0xF8E2F80E,	//0x173c		VoC_shr16_ri(REG2,0xfffffffc,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x5B08180C,	//0x173e		VoC_lw16i_set_inc(REG0,0x5b08,0x3)
0x7FFF0A85,	//0x1740		VoC_lw16i(REG5,0x7fff)
0x00001807,	//0x1742		VoC_lw16i_set_inc(REG3,0x0,0x1)
0x8E847F46,	//0x1744		VoC_multf16inc_rp(REG4,REG2,REG0,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xC3A1EC0B,	//0x1746		VoC_sub16_rr(REG1,REG6,REG4,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
0x174C3241,	//0x1748		VoC_bnltz16_r(q_gain_code_L140,REG1)
0x4BCD0B09,	//0x174a		VoC_sub16_dr(REG1,0x4bcd,REG1)
		//0x174c		q_gain_code_L140
0x175034A9,	//0x174c		VoC_bngt16_rr(q_gain_code_L150,REG5,REG1)
0xF66C6025,	//0x174e		VoC_movreg16(RL6_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG5,REG1,DEFAULT)
		//0x1750		q_gain_code_L150
0xDE188E84,	//0x1750		VoC_inc_p(REG3,DEFAULT)	|	VoC_multf16inc_rp(REG4,REG2,REG0,DEFAULT)
		//0x1751		VoC_endloop0
0x081CE183,	//0x1752		VoC_mult16_rd(REG4,REG3,0xd1c)(lo)	|	VoC_movreg16(REG3,RL6_LO,DEFAULT)
0x18040D1C,	//0x1754		VoC_lw16i_set_inc(REG0,0x5b08,0x1)(lo)	|	VoC_mult16_rd(REG4,REG3,0xd1c)(hi)
0xC1005B08,	//0x1756		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5b08,0x1)(hi)
0x8E84D631,	//0x1758		VoC_multf16inc_rp(REG4,REG2,REG0,DEFAULT)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0xDA31DC93,	//0x175a		VoC_sw16_sd(REG1,0x2,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xD887F8FC,	//0x175c		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xDFA9D886,	//0x175e		VoC_pop16(RA,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x0AD31504,	//0x1760		VoC_sw16_d(REG4,0xad3)
0xDFE9E580,	//0x1762		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1763		CII_lpc_M122
0x0AE50A86,	//0x1764		VoC_lw16i(REG6,0xae5)
0x04C81804,	//0x1766		VoC_lw16i_set_inc(REG0,0x4c8,0x1)
0x48321805,	//0x1768		VoC_lw16i_set_inc(REG1,0x4832,0x1)
0x1506DFC0,	//0x176a		VoC_sw16_d(REG6,0x40e1)(lo)	|	VoC_push16(REG0,DEFAULT)
0xFFC040E1,	//0x176c		VoC_NAD	|	VoC_sw16_d(REG6,0x40e1)(hi)
0x0DBA2B80,	//0x176e		VoC_jal(CII_Autocorr)
0x0AFA2B80,	//0x1770		VoC_jal(CII_Lag_window)
0x0B0F2B80,	//0x1772		VoC_jal(CII_Levinson)
0x0AFB0A86,	//0x1774		VoC_lw16i(REG6,0xafb)
0x1805DF80,	//0x1776		VoC_lw16i_set_inc(REG1,0x4922,0x1)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x15064922,	//0x1778		VoC_sw16_d(REG6,0x40e1)(lo)	|	VoC_lw16i_set_inc(REG1,0x4922,0x1)(hi)
0xFFC040E1,	//0x177a		VoC_NAD	|	VoC_sw16_d(REG6,0x40e1)(hi)
0x0DBA2B80,	//0x177c		VoC_jal(CII_Autocorr)
0x0AFA2B80,	//0x177e		VoC_jal(CII_Lag_window)
0x0B0F2B80,	//0x1780		VoC_jal(CII_Levinson)
0xF020DFA9,	//0x1782		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1784		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1785		CII_lsp_M122
0x0C381FBD,	//0x1786		VoC_lw16i_set_inc(REG1,0xc38,0xffffffff)
0xDFC1F006,	//0x1788		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0E442B80,	//0x178a		VoC_jal(CII_Az_lsp)
0xE1665610,	//0x178c		VoC_lw16i_short(REG6,0x16,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xFFC0D641,	//0x178e		VoC_NAD	|	VoC_lw16_sd(REG1,0x3,DEFAULT)
0x0E442B80,	//0x1790		VoC_jal(CII_Az_lsp)
0xD9105612,	//0x1792		VoC_lw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0xE0065633,	//0x1794		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x2,DEFAULT)
0xF6205645,	//0x1796		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x19252B80,	//0x1798		VoC_jal(CII_Int_lpc_1and3)
0x0C420A86,	//0x179a		VoC_lw16i(REG6,0xc42)
0xD9195610,	//0x179c		VoC_lw32_sd(REG23,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xFFC0DFC6,	//0x179e		VoC_NAD	|	VoC_push16(REG6,DEFAULT)
0x18932B80,	//0x17a0		VoC_jal(CII_Q_plsf_5)
0xE057590A,	//0x17a2		VoC_lw16i_short(REG7,0x5,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x5910C13C,	//0x17a4		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xDA74E016,	//0x17a6		VoC_sw16_sd(REG4,0x6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x5F82D91A,	//0x17a8		VoC_pop16(REG2,DEFAULT)	|	VoC_lw32_sd(REG45,0x2,DEFAULT)
0x2B80F683,	//0x17aa		VoC_jal(CII_Int_lpc_1and3)(lo)	|	VoC_movreg16(REG3,REG4,IN_PARALLEL)
0xDF811925,	//0x17ac		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_Int_lpc_1and3)(hi)
0xF051DFA9,	//0x17ae		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x17b0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x17b1		CII_Lag_max_M122
0x0D721486,	//0x17b2		VoC_lw32_d(RL6,0xd72)
0xF62659C7,	//0x17b4		VoC_movreg16(REG6,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xE705FFC0,	//0x17b6		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_NAD
0x17BC3637,	//0x17b8		VoC_bgt32_rr(LAG_MAX_M122_02,RL6,RL7)
0xF6267F3E,	//0x17ba		VoC_movreg16(REG6,REG1,IN_PARALLEL)	|	VoC_movreg32(RL6,RL7,DEFAULT)
		//0x17bc		LAG_MAX_M122_02
		//0x17bc		VoC_endloop0
0xDE0859C7,	//0x17bc		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0x1808DFC6,	//0x17be		VoC_lw16i_set_inc(REG0,0x416d,0x2)(lo)	|	VoC_push16(REG6,DEFAULT)
0xC230416D,	//0x17c0		VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x416d,0x2)(hi)
0xE200FF44,	//0x17c2		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xD500E741,	//0x17c4		VoC_bimac32inc_pp(REG0,REG0)	|	VoC_loop_r_short(REG5,DEFAULT)
		//0x17c5		VoC_endloop0
0xFF20FFC0,	//0x17c6		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0x0AD02B80,	//0x17c8		VoC_jal(CII_Inv_sqrt)
0xFF32FBF8,	//0x17ca		VoC_movreg32(REG45,RL6,DEFAULT)	|	VoC_shr32_ri(REG01,0xffffffff,DEFAULT)
0xF908790C,	//0x17cc		VoC_shru16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xC7464D4C,	//0x17ce		VoC_multf16_rr(REG6,REG5,REG0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG1,DEFAULT)
0xE017470C,	//0x17d0		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_multf16_rr(REG4,REG4,REG1,DEFAULT)
0xCE27CE37,	//0x17d2		VoC_mac32_rr(REG4,REG7,DEFAULT)	|	VoC_mac32_rr(REG6,REG7,DEFAULT)
0x421A1407,	//0x17d4		VoC_lw16_d(REG7,0x421a)
0xFB8CFEBC,	//0x17d6		VoC_shr32_ri(ACC0,0xfffffff1,DEFAULT)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0xDFA9DF86,	//0x17d8		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xE580E127,	//0x17da		VoC_return	|	VoC_movreg16(REG7,ACC0_HI,DEFAULT)
		//0x17dc		CII_Pitch_ol_M122
0xDFE9FF44,	//0x17dc		VoC_push16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x07161584,	//0x17de		VoC_sw32_d(ACC0,0x716)
0x05E01808,	//0x17e0		VoC_lw16i_set_inc(REG0,0x5e0,0x2)
0x0ACD0700,	//0x17e2		VoC_add16_rd(REG0,REG0,0xacd)
0x0D170705,	//0x17e4		VoC_add16_rd(REG5,REG0,0xd17)
0xCDFCD9C3,	//0x17e6		VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x17EA2CDE,	//0x17e8		VoC_loop_i(0x0,0x6f)
		//0x17ea		VoC_endloop0
0x60A0D500,	//0x17ea		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG0)
0x1809E383,	//0x17ec		VoC_lw16i_set_inc(REG1,0x40de,0x2)(lo)	|	VoC_lw16i_short(REG3,0x38,IN_PARALLEL)
0xE20040DE,	//0x17ee		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x40de,0x2)(hi)
0x0D705C24,	//0x17f0		VoC_bne32_rd(PITCH_OL_122_01,ACC0,0xd70)
0xE5C9F062,	//0x17f2		VoC_jump(PITCH_OL_122_SCALE_END)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
		//0x17f4		PITCH_OL_122_01
0xE1057004,	//0x17f4		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x17FA3694,	//0x17f6		VoC_bngt32_rr(PITCH_OL_122_02,REG45,ACC0)
0xE5C3F7A2,	//0x17f8		VoC_jump(PITCH_OL_122_SCALE_END)	|	VoC_lw16i_short(REG2,0xfffffffd,DEFAULT)
		//0x17fa		PITCH_OL_122_02
0xFFC0F002,	//0x17fa		VoC_NAD	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x17fc		PITCH_OL_122_SCALE_END
0x00380A86,	//0x17fc		VoC_lw16i(REG6,0x38)
0x0A402B80,	//0x17fe		VoC_jal(CII_scale)
0x40DE1808,	//0x1800		VoC_lw16i_set_inc(REG0,0x40de,0x2)
0x421A1502,	//0x1802		VoC_sw16_d(REG2,0x421a)
0x0B661809,	//0x1804		VoC_lw16i_set_inc(REG1,0xb66,0x2)
0x0A482B80,	//0x1806		VoC_jal(CII_copy_xy)
0x416D1808,	//0x1808		VoC_lw16i_set_inc(REG0,0x416d,0x2)
0x0B661809,	//0x180a		VoC_lw16i_set_inc(REG1,0xb66,0x2)
0x421E180A,	//0x180c		VoC_lw16i_set_inc(REG2,0x421e,0x2)
0xE0136006,	//0x180e		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xFF44405F,	//0x1810		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG1,REG3,DEFAULT)
0x2CFDE201,	//0x1812		VoC_loop_i(0x1,0x7e)(lo)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xED01181C,	//0x1814		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_loop_i(0x1,0x7e)(hi)
		//0x1816		VoC_endloop0
0x7F18D501,	//0x1816		VoC_movreg32(REG01,REG67,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG1)
0x7F26DDD6,	//0x1818		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,IN_PARALLEL)
0xE201FF44,	//0x181a		VoC_aligninc_pp(REG0,REG1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x181c		VoC_endloop1
0x5D96C1DF,	//0x181c		VoC_sw32_p(RL6,REG2,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG3,DEFAULT)
0x1808E285,	//0x181e		VoC_lw16i_set_inc(REG0,0x4220,0x2)(lo)	|	VoC_lw16i_short(REG5,0x28,IN_PARALLEL)
0x1FBD4220,	//0x1820		VoC_lw16i_set_inc(REG1,0x8f,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x4220,0x2)(hi)
0x0A84008F,	//0x1822		VoC_lw16i(REG4,0x48)(lo)	|	VoC_lw16i_set_inc(REG1,0x8f,0xffffffff)(hi)
0xFFC00048,	//0x1824		VoC_NAD	|	VoC_lw16i(REG4,0x48)(hi)
0x17B12B80,	//0x1826		VoC_jal(CII_Lag_max_M122)
0x42B01808,	//0x1828		VoC_lw16i_set_inc(REG0,0x42b0,0x2)
0x42141583,	//0x182a		VoC_sw32_d(REG67,0x4214)
0x00471FBD,	//0x182c		VoC_lw16i_set_inc(REG1,0x47,0xffffffff)
0x00240A84,	//0x182e		VoC_lw16i(REG4,0x24)
0x00280A85,	//0x1830		VoC_lw16i(REG5,0x28)
0x17B12B80,	//0x1832		VoC_jal(CII_Lag_max_M122)
0x42F81808,	//0x1834		VoC_lw16i_set_inc(REG0,0x42f8,0x2)
0x42161583,	//0x1836		VoC_sw32_d(REG67,0x4216)
0x00231FBD,	//0x1838		VoC_lw16i_set_inc(REG1,0x23,0xffffffff)
0xE2857244,	//0x183a		VoC_lw16i_short(REG5,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x12,DEFAULT)
0x17B12B80,	//0x183c		VoC_jal(CII_Lag_max_M122)
0x42181583,	//0x183e		VoC_sw32_d(REG67,0x4218)
0x18822B00,	//0x1840		VoC_jump_lg(PITCH_OL_M122_04)
0x42201808,	//0x1842		VoC_lw16i_set_inc(REG0,0x4220,0x2)
0x42221809,	//0x1844		VoC_lw16i_set_inc(REG1,0x4222,0x2)
0x4224180A,	//0x1846		VoC_lw16i_set_inc(REG2,0x4224,0x2)
0x0D721484,	//0x1848		VoC_lw32_d(ACC0,0xd72)
0x2CF4D9CE,	//0x184a		VoC_loop_i(0x0,0x7a)(lo)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0xFBFE1857,	//0x184c		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_loop_i(0x0,0x7a)(hi)
0x97969786,	//0x184e		VoC_sub32inc_rp(RL6,RL6,REG2,DEFAULT)	|	VoC_sub32inc_rp(RL6,RL6,REG0,DEFAULT)
0x185433C6,	//0x1850		VoC_bnltz32_r(HP_MAX_01,RL6)
0x4BCD0BB6,	//0x1852		VoC_sub32_dr(RL6,0x4bcd,RL6)
		//0x1854		HP_MAX_01
0x18573626,	//0x1854		VoC_bgt32_rr(HP_MAX_02,ACC0,RL6)
0xD9CEFF34,	//0x1856		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x1857		HP_MAX_02
		//0x1857		VoC_endloop0
0x0A0A2B80,	//0x1858		VoC_jal(CII_NORM_L_ACC0)
0x0D17078B,	//0x185a		VoC_sub16_rd(REG3,REG1,0xd17)
0x416D1808,	//0x185c		VoC_lw16i_set_inc(REG0,0x416d,0x2)
0x0BF51809,	//0x185e		VoC_lw16i_set_inc(REG1,0xbf5,0x2)
0xE124FA0C,	//0x1860		VoC_movreg16(REG4,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xFF446201,	//0x1862		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xD501ED01,	//0x1864		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_i_short(0x28,DEFAULT)
		//0x1865		VoC_endloop0
0x416D0A80,	//0x1866		VoC_lw16i(REG0,0x416d)
0x0BF40A81,	//0x1868		VoC_lw16i(REG1,0xbf4)
0x6201FF26,	//0x186a		VoC_aligninc_pp(REG0,REG1,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xED01FF44,	//0x186c		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x186e		VoC_endloop0
0xFBFED501,	//0x186e		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG1)
0xCBA4FBFC,	//0x1870		VoC_sub32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0x187633C4,	//0x1872		VoC_bnltz32_r(HP_MAX_03,ACC0)
0x4BCD0BA4,	//0x1874		VoC_sub32_dr(ACC0,0x4bcd,ACC0)
		//0x1876		HP_MAX_03
0x0A0A2B80,	//0x1876		VoC_jal(CII_NORM_L_ACC0)
0xF72142CF,	//0x1878		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG3,REG1,DEFAULT)
0xE0026080,	//0x187a		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x18803181,	//0x187c		VoC_bez16_r(HP_MAX_04,REG1)
0x0A1C2B80,	//0x187e		VoC_jal(CII_DIV_S)
		//0x1880		HP_MAX_04
0xFFC0FE3A,	//0x1880		VoC_NOP	|	VoC_shr16_rr(REG2,REG7,DEFAULT)
		//0x1882		PITCH_OL_M122_04
0x6CCD0A86,	//0x1882		VoC_lw16i(REG6,0x6ccd)
0x42141482,	//0x1884		VoC_lw32_d(REG45,0x4214)
0xDFA9C7AF,	//0x1886		VoC_pop16(RA,DEFAULT)	|	VoC_multf16_rr(REG7,REG6,REG5,DEFAULT)
0x42174C27,	//0x1888		VoC_bnlt16_rd(PITCH_OL_M122_05,REG7,0x4217)
0x42161482,	//0x188a		VoC_lw32_d(REG45,0x4216)
		//0x188c		PITCH_OL_M122_05
0xFFC0C7AF,	//0x188c		VoC_NOP	|	VoC_multf16_rr(REG7,REG6,REG5,DEFAULT)
0x42194C27,	//0x188e		VoC_bnlt16_rd(PITCH_OL_M122_06,REG7,0x4219)
0x42181404,	//0x1890		VoC_lw16_d(REG4,0x4218)
		//0x1892		PITCH_OL_M122_06
0xDFE9E580,	//0x1892		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1893		CII_Q_plsf_5
0x0B661FBD,	//0x1894		VoC_lw16i_set_inc(REG1,0xb66,0xffffffff)
0xF3FC5FC3,	//0x1896		VoC_lw16i_short(INC0,0xffffffff,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xFFC0DFC1,	//0x1898		VoC_NAD	|	VoC_push16(REG1,DEFAULT)
0x0C652B80,	//0x189a		VoC_jal(CII_Lsp_lsf)
0x0B701FBD,	//0x189c		VoC_lw16i_set_inc(REG1,0xb70,0xffffffff)
0xDFC1D680,	//0x189e		VoC_push16(REG1,DEFAULT)	|	VoC_lw16_sd(REG0,0x7,DEFAULT)
0x0C652B80,	//0x18a0		VoC_jal(CII_Lsp_lsf)
0x0B8E1804,	//0x18a2		VoC_lw16i_set_inc(REG0,0xb8e,0x1)
0x0B7A1805,	//0x18a4		VoC_lw16i_set_inc(REG1,0xb7a,0x1)
0x0B980A84,	//0x18a6		VoC_lw16i(REG4,0xb98)
0x0B840A85,	//0x18a8		VoC_lw16i(REG5,0xb84)
0xDF42DF40,	//0x18aa		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x2B80D620,	//0x18ac		VoC_jal(CII_Lsf_wt)(lo)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xD9080CC8,	//0x18ae		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(CII_Lsf_wt)(hi)
0xFFC0D610,	//0x18b0		VoC_NAD	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x0CC82B80,	//0x18b2		VoC_jal(CII_Lsf_wt)
0xF0095918,	//0x18b4		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x2,DEFAULT)
0x4A121808,	//0x18b6		VoC_lw16i_set_inc(REG0,0x4a12,0x2)
0x40DE180B,	//0x18b8		VoC_lw16i_set_inc(REG3,0x40de,0x2)
0x5333180A,	//0x18ba		VoC_lw16i_set_inc(REG2,0x5333,0x2)
0x8E8F0E8E,	//0x18bc		VoC_multf16inc_rp(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG2,REG1,DEFAULT)
0xE8A5FFC0,	//0x18be		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_NAD
0x83C50384,	//0x18c0		VoC_add16inc_rp(REG5,REG7,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG6,REG0,DEFAULT)
0x8E8F0E8E,	//0x18c2		VoC_multf16inc_rp(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG2,REG1,DEFAULT)
		//0x18c4		VoC_endloop0
0x180BDDDA,	//0x18c4		VoC_lw16i_set_inc(REG3,0x40de,0x2)(lo)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xDF8240DE,	//0x18c6		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x40de,0x2)(hi)
0xF6615F80,	//0x18c8		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x0B8E0A84,	//0x18ca		VoC_lw16i(REG4,0xb8e)
0x0B980A85,	//0x18cc		VoC_lw16i(REG5,0xb98)
0xE02C704D,	//0x18ce		VoC_lw16i_short(RL6_LO,0x2,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x2,DEFAULT)
0xE8A6FFC0,	//0x18d0		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_NAD
0xA60F260E,	//0x18d2		VoC_sub16inc_pp(REG7,REG0,REG1,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG0,REG1,DEFAULT)
0xA69F269E,	//0x18d4		VoC_sub16inc_pp(REG7,REG2,REG3,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG2,REG3,DEFAULT)
0x5DABDDA3,	//0x18d6		VoC_sw32_p(REG67,REG5,DEFAULT)	|	VoC_sw32_p(REG67,REG4,DEFAULT)
		//0x18d7		VoC_endloop0
0xFF47C8B2,	//0x18d8		VoC_lw32z(RL7,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL6,IN_PARALLEL)
0xE02C704D,	//0x18da		VoC_lw16i_short(RL6_LO,0x2,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x2,DEFAULT)
0xE0465919,	//0x18dc		VoC_lw16i_short(REG6,0x4,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x2,DEFAULT)
0x4BEA180B,	//0x18de		VoC_lw16i_set_inc(REG3,0x4bea,0x2)
0xF0065FC2,	//0x18e0		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x11142B80,	//0x18e2		VoC_jal(CII_Vq_subvec)
0x4DEA180B,	//0x18e4		VoC_lw16i_set_inc(REG3,0x4dea,0x2)
0xFFC0F106,	//0x18e6		VoC_NAD	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0x11142B80,	//0x18e8		VoC_jal(CII_Vq_subvec)
0x51EA180B,	//0x18ea		VoC_lw16i_set_inc(REG3,0x51ea,0x2)
0xF02EF106,	//0x18ec		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0x11142B80,	//0x18ee		VoC_jal(CII_Vq_subvec)
0x55EA180B,	//0x18f0		VoC_lw16i_set_inc(REG3,0x55ea,0x2)
0xFF477106,	//0x18f2		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0x11142B80,	//0x18f4		VoC_jal(CII_Vq_subvec)
0x59EA180B,	//0x18f6		VoC_lw16i_set_inc(REG3,0x59ea,0x2)
0xFFC0F046,	//0x18f8		VoC_NAD	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x11142B80,	//0x18fa		VoC_jal(CII_Vq_subvec)
0xF0065F82,	//0x18fc		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0x0BAC1805,	//0x18fe		VoC_lw16i_set_inc(REG1,0xbac,0x1)
0x0BA21804,	//0x1900		VoC_lw16i_set_inc(REG0,0xba2,0x1)
0xDF025FC1,	//0x1902		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0xDF015FC0,	//0x1904		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x40DE0A84,	//0x1906		VoC_lw16i(REG4,0x40de)
0xF007590B,	//0x1908		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF6E36949,	//0x190a		VoC_movreg16(REG3,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD8A7A12E,	//0x190c		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_add16_pp(REG6,REG4,REG5,DEFAULT)
0x5CB7DC86,	//0x190e		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x091281E7,	//0x1910		VoC_add32_rd(REG45,REG45,0xd66)(lo)	|	VoC_add16_rp(REG7,REG7,REG4,IN_PARALLEL)
0xDC970D66,	//0x1912		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0xd66)(hi)
		//0x1913		VoC_endloop0
0x2B80D610,	//0x1914		VoC_jal(CII_Reorder_lsf)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xD6201108,	//0x1916		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_jal(CII_Reorder_lsf)(hi)
0x11082B80,	//0x1918		VoC_jal(CII_Reorder_lsf)
0xD641DF80,	//0x191a		VoC_lw16_sd(REG1,0x3,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x0C502B80,	//0x191c		VoC_jal(CII_Lsf_lsp)
0xDF81DF80,	//0x191e		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x0C502B80,	//0x1920		VoC_jal(CII_Lsf_lsp)
0xFFC0DFA9,	//0x1922		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF007E580,	//0x1924		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x1925		CII_Int_lpc_1and3
0x40DE1809,	//0x1926		VoC_lw16i_set_inc(REG1,0x40de,0x2)
		//0x1928		Int_lpc_1and3_L0
0x0D44441F,	//0x1928		VoC_bne16_rd(Int_lpc_1and3_L3,REG7,0xd44)
0xDFE9E580,	//0x192a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x192b		Int_lpc_1and3_L3
0xDF435FC5,	//0x192c		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xDF405FC2,	//0x192e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x0D7C2B80,	//0x1930		VoC_jal(CII_Int_lpc_only)
0xD908D913,	//0x1932		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x2B80C038,	//0x1934		VoC_jal(CII_Lsp_Az)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD9130C14,	//0x1936		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_jal(CII_Lsp_Az)(hi)
0x0D3F073F,	//0x1938		VoC_add16_rd(REG7,REG7,0xd3f)
0x0D2307BD,	//0x193a		VoC_sub16_rd(REG5,REG7,0xd23)
0x3186DD13,	//0x193c		VoC_bez16_r(Int_lpc_1and3_L1,REG6)(lo)	|	VoC_sw32_sd(REG67,0x1,DEFAULT)
0xD9081948,	//0x193e		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_bez16_r(Int_lpc_1and3_L1,REG6)(hi)
0xC0285611,	//0x1940		VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x0D294425,	//0x1942		VoC_bne16_rd(Int_lpc_1and3_L2,REG5,0xd29)
0xFFC0D621,	//0x1944		VoC_NAD	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
		//0x1946		Int_lpc_1and3_L2
0x0C142B80,	//0x1946		VoC_jal(CII_Lsp_Az)
		//0x1948		Int_lpc_1and3_L1
0xDF005F82,	//0x1948		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xDF035F83,	//0x194a		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xF6655FA9,	//0x194c		VoC_movreg16(REG5,REG3,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x19282B00,	//0x194e		VoC_jump_lg(Int_lpc_1and3_L0)
0xDFE9E580,	//0x1950		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1951		CII_gainQuant_M122
0x08C20A81,	//0x1952		VoC_lw16i(REG1,0x8c2)
0x0B3E1808,	//0x1954		VoC_lw16i_set_inc(REG0,0xb3e,0x2)
0xFF446A82,	//0x1956		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x1958		VoC_endloop0
0x070ED500,	//0x1958		VoC_add16_rd(REG6,REG1,0xd24)(lo)	|	VoC_bimac32inc_pp(REG0,REG0)
0x09210D24,	//0x195a		VoC_add32_rd(REG23,ACC0,0x4a9c)(lo)	|	VoC_add16_rd(REG6,REG1,0xd24)(hi)
0x0A1C4A9C,	//0x195c		VoC_multf32_rd(ACC0,REG3,0xd5b)(lo)	|	VoC_add32_rd(REG23,ACC0,0x4a9c)(hi)
0xFFC00D5B,	//0x195e		VoC_NAD	|	VoC_multf32_rd(ACC0,REG3,0xd5b)(hi)
0x0CA72B80,	//0x1960		VoC_jal(CII_Log2)
0x757D0AC8,	//0x1962		VoC_lw16i(ACC0_LO,0xf57d)
0xF00860C0,	//0x1964		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
0x5B721809,	//0x1966		VoC_lw16i_set_inc(REG1,0x5b72,0x2)
0xE0B96842,	//0x1968		VoC_lw16i_short(ACC0_HI,0xb,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
		//0x196a		VoC_endloop0
0xE0A6D501,	//0x196a		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG1)
0xE1E27BFB,	//0x196c		VoC_lw16i_short(REG2,0x1e,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xCB1BC317,	//0x196e		VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)	|	VoC_sub16_rr(REG7,REG4,REG2,DEFAULT)
0xF90EFA0B,	//0x1970		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0x1,DEFAULT)
0x0A0A1804,	//0x1972		VoC_lw16i_set_inc(REG0,0xa0a,0x1)
0x0A5A1809,	//0x1974		VoC_lw16i_set_inc(REG1,0xa5a,0x2)
0xF028FF44,	//0x1976		VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xFF456A87,	//0x1978		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0x780AD9C9,	//0x197a		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x5110F80B,	//0x197c		VoC_mac32inc_rp(REG2,REG0,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,IN_PARALLEL)
0x5118CE12,	//0x197e		VoC_mac32inc_rp(REG3,REG0,DEFAULT)	|	VoC_mac32_rr(REG2,REG2,IN_PARALLEL)
		//0x197f		VoC_endloop0
0x2B80CE1B,	//0x1980		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_mac32_rr(REG3,REG3,IN_PARALLEL)
0xFF210A0A,	//0x1982		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x19883103,	//0x1984		VoC_bgtz16_r(G_code_go,REG3)
0xE5CFF002,	//0x1986		VoC_jump(CII_G_code01)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x1988		G_code_go
0x0D25070C,	//0x1988		VoC_add16_rd(REG4,REG1,0xd25)
0xFFC0FF2C,	//0x198a		VoC_NAD	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
0x0A0A2B80,	//0x198c		VoC_jal(CII_NORM_L_ACC0)
0xC30C780B,	//0x198e		VoC_sub16_rr(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0xF7216060,	//0x1990		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x0A1C2B80,	//0x1992		VoC_jal(CII_DIV_S)
0xF8FAFE22,	//0x1994		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_shr16_rr(REG2,REG4,DEFAULT)
		//0x1996		CII_G_code01
0x1502FF18,	//0x1996		VoC_sw16_d(REG2,0xad3)(lo)	|	VoC_movreg32(REG01,REG67,DEFAULT)
0xFFC00AD3,	//0x1998		VoC_NAD	|	VoC_sw16_d(REG2,0xad3)(hi)
0x17372B80,	//0x199a		VoC_jal(CII_q_gain_code)
0x08C20A85,	//0x199c		VoC_lw16i(REG5,0x8c2)
0x0DA72B80,	//0x199e		VoC_jal(CII_gc_pred_update)
0xDF85DFA9,	//0x19a0		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x19a2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x19a3		CII_lsp_122
0x0C2E0A87,	//0x19a4		VoC_lw16i(REG7,0xc2e)
0x089C0A86,	//0x19a6		VoC_lw16i(REG6,0x89c)
0x0B321FBD,	//0x19a8		VoC_lw16i_set_inc(REG1,0xb32,0xffffffff)
0x0B060A84,	//0x19aa		VoC_lw16i(REG4,0xb06)
0x0ADA0A85,	//0x19ac		VoC_lw16i(REG5,0xada)
0xDF435FC1,	//0x19ae		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x08921804,	//0x19b0		VoC_lw16i_set_inc(REG0,0x892,0x1)
0x08A60A87,	//0x19b2		VoC_lw16i(REG7,0x8a6)
0x5FC0D636,	//0x19b4		VoC_push16(REG0,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x5F43DF42,	//0x19b6		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,IN_PARALLEL)
0xFFC0E073,	//0x19b8		VoC_NAD	|	VoC_lw16i_short(REG3,0x7,IN_PARALLEL)
0x17852B80,	//0x19ba		VoC_jal(CII_lsp_M122)
0xDF065F81,	//0x19bc		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF065F80,	//0x19be		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x2B80F050,	//0x19c0		VoC_jal(CII_Copy_M)(lo)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xDF000A3B,	//0x19c2		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
0x68A3DFA9,	//0x19c4		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xD9CCD9CC,	//0x19c6		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,IN_PARALLEL)
		//0x19c8		VoC_endloop0
0xE580DDC4,	//0x19c8		VoC_return	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x19ca		Convert_YUV422_Block
0xDFC55F40,	//0x19ca		VoC_push16(REG5,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x0F681805,	//0x19cc		VoC_lw16i_set_inc(REG1,0xf68,0x1)
0x10681807,	//0x19ce		VoC_lw16i_set_inc(REG3,0x1068,0x1)
0xE4046008,	//0x19d0		VoC_lw16i_short(REG4,0x40,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG0,DEFAULT)
0xF4037F46,	//0x19d2		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xF9FC6085,	//0x19d4		VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x19EE2C0B,	//0x19d6		VoC_loop_i(0x1,0x5)
0xE240E8D0,	//0x19d8		VoC_lbinc_p(REG0)	|	VoC_loop_i_short(0x6,DEFAULT)
0x62A3E2A2,	//0x19da		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0xE240C3A6,	//0x19dc		VoC_lbinc_p(REG0)	|	VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)
0xDC9643E7,	//0x19de		VoC_sw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG4,DEFAULT)
0xDC37E2A2,	//0x19e0		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0xC3A662A3,	//0x19e2		VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_rbinc_i(REG7,0x8,DEFAULT)
0xC0EE43E7,	//0x19e4		VoC_add16_rr(REG6,REG3,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG4,DEFAULT)
0xDE185C96,	//0x19e6		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x19e8		VoC_endloop0
0xE100DCE7,	//0x19e8		VoC_movreg16(REG0,ACC0_LO,DEFAULT)	|	VoC_sw16inc_p(REG7,REG6,DEFAULT)
0x400A1406,	//0x19ea		VoC_lw16_d(REG6,0x400a)
0xC030F80E,	//0x19ec		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x19ee		VoC_endloop1
0xDF82E008,	//0x19ee		VoC_pop16(REG2,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG0,DEFAULT)
0x02700A86,	//0x19f0		VoC_lw16i(REG6,0x270)
0x1A0935B2,	//0x19f2		VoC_bne16_rr(Convert_YUV422_Block_L0,REG6,REG2)
0x0F6F1805,	//0x19f4		VoC_lw16i_set_inc(REG1,0xf6f,0x1)
0x106B1806,	//0x19f6		VoC_lw16i_set_inc(REG2,0x106b,0x1)
0x10AB1807,	//0x19f8		VoC_lw16i_set_inc(REG3,0x10ab,0x1)
0x1A072C0B,	//0x19fa		VoC_loop_i(0x1,0x5)
0xE0765894,	//0x19fc		VoC_lw16i_short(REG6,0x7,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xE03758A5,	//0x19fe		VoC_lw16i_short(REG7,0x3,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xD8B06845,	//0x1a00		VoC_lw16inc_p(REG0,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0xDC94DC94,	//0x1a02		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xDCB0DCA5,	//0x1a04		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x1a05		VoC_endloop0
0x40BAC071,	//0x1a06		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
		//0x1a07		VoC_endloop1
0xDF03C0FB,	//0x1a08		VoC_pop32(REG67,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
		//0x1a09		Convert_YUV422_Block_L0
0x01D80A86,	//0x1a0a		VoC_lw16i(REG6,0x1d8)
0x1A2435B7,	//0x1a0c		VoC_bne16_rr(Convert_YUV422_Block_L1,REG6,REG7)
0x0F8C1808,	//0x1a0e		VoC_lw16i_set_inc(REG0,0xf8c,0x2)
0x0F981809,	//0x1a10		VoC_lw16i_set_inc(REG1,0xf98,0x2)
0xD9C2E864,	//0x1a12		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDDCAD9C3,	//0x1a14		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x1a16		VoC_endloop0
0x1808DDCB,	//0x1a16		VoC_lw16i_set_inc(REG0,0x107a,0x2)(lo)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x1809107A,	//0x1a18		VoC_lw16i_set_inc(REG1,0x1080,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x107a,0x2)(hi)
0x180A1080,	//0x1a1a		VoC_lw16i_set_inc(REG2,0x10ba,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1080,0x2)(hi)
0x180B10BA,	//0x1a1c		VoC_lw16i_set_inc(REG3,0x10c0,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x10ba,0x2)(hi)
0xE86410C0,	//0x1a1e		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x10c0,0x2)(hi)
0xD9D3D9C2,	//0x1a20		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xDDDBDDCA,	//0x1a22		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x1a23		VoC_endloop0
		//0x1a24		Convert_YUV422_Block_L1
0xFFC0E580,	//0x1a24		VoC_NAD	|	VoC_return
		//0x1a26		COOLSAND_ZoomRow
0xFF4568B8,	//0x1a26		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xD9C2D9C3,	//0x1a28		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xC17359C4,	//0x1a2a		VoC_add16_rr(REG3,REG5,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x780AC12A,	//0x1a2c		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_add16_rr(REG2,REG4,REG5,DEFAULT)
0x60A2F80B,	//0x1a2e		VoC_movreg16(REG2,REG5,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,IN_PARALLEL)
0xFF21F645,	//0x1a30		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_movreg16(REG5,REG2,IN_PARALLEL)
0xC0E75DC9,	//0x1a32		VoC_add16_rr(REG7,REG3,REG4,IN_PARALLEL)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0xC0D65DCA,	//0x1a34		VoC_add16_rr(REG6,REG3,REG2,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xF80E780F,	//0x1a36		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF66660C3,	//0x1a38		VoC_movreg16(REG6,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x5DCBFFC0,	//0x1a3a		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_NOP
0xDDC9F742,	//0x1a3c		VoC_sw32inc_p(REG23,REG1,DEFAULT)	|	VoC_movreg16(REG2,ACC1_LO,IN_PARALLEL)
		//0x1a3e		VoC_endloop0
0xEF8A4051,	//0x1a3e		VoC_lw16i_short(ACC1_LO,0xfffffff8,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0xFFC0E580,	//0x1a40		VoC_NAD	|	VoC_return
		//0x1a42		COOLSAND_ZoomLine
0x1A502C07,	//0x1a42		VoC_loop_i(0x1,0x3)
0x1A4D2C08,	//0x1a44		VoC_loop_i(0x0,0x4)
0xD9D2D9C3,	//0x1a46		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xC1EF41A6,	//0x1a48		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80F780E,	//0x1a4a		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xDDCBFFC0,	//0x1a4c		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_NOP
		//0x1a4d		VoC_endloop0
0xC020F104,	//0x1a4e		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
		//0x1a50		VoC_endloop1
0xC0A24061,	//0x1a50		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x2C08C2A2,	//0x1a52		VoC_loop_i(0x0,0x4)(lo)	|	VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)
0xD9C31A5C,	//0x1a54		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x4)(hi)
0x41A6D9D2,	//0x1a56		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x780EC1EF,	//0x1a58		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)
0xFFC0F80F,	//0x1a5a		VoC_NOP	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
		//0x1a5c		VoC_endloop0
0xE580DDCB,	//0x1a5c		VoC_return	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
		//0x1a5e		COOLSAND_YUVJPEG422
0x400A1482,	//0x1a5e		VoC_lw32_d(REG45,0x400a)
0xFF135FE9,	//0x1a60		VoC_movreg32(REG67,REG45,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE00578F4,	//0x1a62		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0x000F1606,	//0x1a64		VoC_and16_ri(REG6,0xf)
0x00071607,	//0x1a66		VoC_and16_ri(REG7,0x7)
0x40151505,	//0x1a68		VoC_sw16_d(REG5,0x4015)
0x0E6A1582,	//0x1a6a		VoC_sw32_d(REG45,0xe6a)
0x400A1482,	//0x1a6c		VoC_lw32_d(REG45,0x400a)
0x1A7C3186,	//0x1a6e		VoC_bez16_r(LABLE_WIDTH_MULTIPLE16_YUV422,REG6)
0xE01071E6,	//0x1a70		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xf,DEFAULT)
0x400D1504,	//0x1a72		VoC_sw16_d(REG4,0x400d)
0x1644C134,	//0x1a74		VoC_and16_ri(REG4,0xfff0)(lo)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x15007FF0,	//0x1a76		VoC_sw16_d(REG0,0x4015)(lo)	|	VoC_and16_ri(REG4,0xfff0)(hi)
0x15044015,	//0x1a78		VoC_sw16_d(REG4,0x400a)(lo)	|	VoC_sw16_d(REG0,0x4015)(hi)
0xFFC0400A,	//0x1a7a		VoC_NAD	|	VoC_sw16_d(REG4,0x400a)(hi)
		//0x1a7c		LABLE_WIDTH_MULTIPLE16_YUV422
0x1A863187,	//0x1a7c		VoC_bez16_r(LABLE_WIDTH_HEIGHT_MULTIPLE16_YUV422,REG7)
0x0D32072D,	//0x1a7e		VoC_add16_rd(REG5,REG5,0xd32)
0x7FF81645,	//0x1a80		VoC_and16_ri(REG5,0xfff8)
0x1505FFC0,	//0x1a82		VoC_sw16_d(REG5,0x400b)(lo)	|	VoC_NOP
0xFFC0400B,	//0x1a84		VoC_NAD	|	VoC_sw16_d(REG5,0x400b)(hi)
		//0x1a86		LABLE_WIDTH_HEIGHT_MULTIPLE16_YUV422
0x40021484,	//0x1a86		VoC_lw32_d(ACC0,0x4002)
0x0E6A1481,	//0x1a88		VoC_lw32_d(REG23,0xe6a)
0xF8124866,	//0x1a8a		VoC_shr16_ri(REG2,0x2,IN_PARALLEL)	|	VoC_add32_rr(RL6,REG23,ACC0,DEFAULT)
0x10F21807,	//0x1a8c		VoC_lw16i_set_inc(REG3,0x10f2,0x1)
0xF80DE045,	//0x1a8e		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_movreg16(REG5,REG2,DEFAULT)
0xF80BC0EB,	//0x1a90		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0x7FC21542,	//0x1a92		VoC_sw16_d(REG2,0xffc2)
0x7FC31543,	//0x1a94		VoC_sw16_d(REG3,0xffc3)
0x7FC415C4,	//0x1a96		VoC_sw32_d(ACC0,0xffc4)
0x1586F026,	//0x1a98		VoC_sw32_d(RL6,0x4002)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xDE804002,	//0x1a9a		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0x4002)(hi)
0x1794FFC0,	//0x1a9c		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x18070008,	//0x1a9e		VoC_lw16i_set_inc(REG3,0x10f2,0x1)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x180410F2,	//0x1aa0		VoC_lw16i_set_inc(REG0,0x10f2,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x10f2,0x1)(hi)
0xC02810F2,	//0x1aa2		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x10f2,0x1)(hi)
0x2C11F81D,	//0x1aa4		VoC_loop_i(0x1,0x8)(lo)	|	VoC_shr16_ri(REG5,0x3,DEFAULT)
0xE7431AAB,	//0x1aa6		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0xFFC0D884,	//0x1aa8		VoC_NOP	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x1aaa		VoC_endloop0
0xFFC0DCB4,	//0x1aaa		VoC_NOP	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1aab		VoC_endloop1
0x10F21804,	//0x1aac		VoC_lw16i_set_inc(REG0,0x10f2,0x1)
0xE0017005,	//0x1aae		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x1ab0		LABLE_REG2JPEG_LOOP_WIDTH_YUV422
0xF4017030,	//0x1ab0		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDFC55F40,	//0x1ab2		VoC_push16(REG5,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x19CA2B80,	//0x1ab4		VoC_jal(Convert_YUV422_Block)
0xFF455F40,	//0x1ab6		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x0FA01FB8,	//0x1ab8		VoC_lw16i_set_inc(REG0,0xfa0,0xfffffffe)
0x0FE61FB9,	//0x1aba		VoC_lw16i_set_inc(REG1,0xfe6,0xfffffffe)
0x1AED2C0A,	//0x1abc		VoC_loop_i(0x0,0x5)
0xD9C2D9C3,	//0x1abe		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xC17359C4,	//0x1ac0		VoC_add16_rr(REG3,REG5,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x780AC12A,	//0x1ac2		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_add16_rr(REG2,REG4,REG5,DEFAULT)
0x60A2F80B,	//0x1ac4		VoC_movreg16(REG2,REG5,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,IN_PARALLEL)
0xFF21F645,	//0x1ac6		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_movreg16(REG5,REG2,IN_PARALLEL)
0xC0E75DC9,	//0x1ac8		VoC_add16_rr(REG7,REG3,REG4,IN_PARALLEL)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0xC0D65DCA,	//0x1aca		VoC_add16_rr(REG6,REG3,REG2,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xF80E780F,	//0x1acc		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF66660C3,	//0x1ace		VoC_movreg16(REG6,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0xDDCBFF23,	//0x1ad0		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xEC855DC9,	//0x1ad2		VoC_lw16i_short(REG5,0xffffffc8,IN_PARALLEL)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0xC06959C2,	//0x1ad4		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xC17359C4,	//0x1ad6		VoC_add16_rr(REG3,REG5,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x780AC12A,	//0x1ad8		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_add16_rr(REG2,REG4,REG5,DEFAULT)
0x60A2F80B,	//0x1ada		VoC_movreg16(REG2,REG5,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,IN_PARALLEL)
0xFF21F645,	//0x1adc		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_movreg16(REG5,REG2,IN_PARALLEL)
0xC0E75DC9,	//0x1ade		VoC_add16_rr(REG7,REG3,REG4,IN_PARALLEL)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0xC0D65DCA,	//0x1ae0		VoC_add16_rr(REG6,REG3,REG2,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xF80E780F,	//0x1ae2		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF66660C3,	//0x1ae4		VoC_movreg16(REG6,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0xE4066147,	//0x1ae6		VoC_lw16i_short(REG6,0x40,IN_PARALLEL)	|	VoC_movreg16(REG7,ACC1_LO,DEFAULT)
0xEFE55DCB,	//0x1ae8		VoC_lw16i_short(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xC0285DC9,	//0x1aea		VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0x4051C1BA,	//0x1aec		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG6,REG7,DEFAULT)
		//0x1aed		VoC_endloop0
0x1808EF8A,	//0x1aee		VoC_lw16i_set_inc(REG0,0xf68,0x2)(lo)	|	VoC_lw16i_short(ACC1_LO,0xfffffff8,IN_PARALLEL)
0x18090F68,	//0x1af0		VoC_lw16i_set_inc(REG1,0xf70,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xf68,0x2)(hi)
0x180A0F70,	//0x1af2		VoC_lw16i_set_inc(REG2,0xf78,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0xf70,0x2)(hi)
0xFFC00F78,	//0x1af4		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0xf78,0x2)(hi)
0x1A422B80,	//0x1af6		VoC_jal(COOLSAND_ZoomLine)
0x0FA81808,	//0x1af8		VoC_lw16i_set_inc(REG0,0xfa8,0x2)
0x0FB01809,	//0x1afa		VoC_lw16i_set_inc(REG1,0xfb0,0x2)
0x0FB8180A,	//0x1afc		VoC_lw16i_set_inc(REG2,0xfb8,0x2)
0x1A422B80,	//0x1afe		VoC_jal(COOLSAND_ZoomLine)
0x10841FB8,	//0x1b00		VoC_lw16i_set_inc(REG0,0x1084,0xfffffffe)
0x10A61FB9,	//0x1b02		VoC_lw16i_set_inc(REG1,0x10a6,0xfffffffe)
0x1A262B80,	//0x1b04		VoC_jal(COOLSAND_ZoomRow)
0x10681808,	//0x1b06		VoC_lw16i_set_inc(REG0,0x1068,0x2)
0x10701809,	//0x1b08		VoC_lw16i_set_inc(REG1,0x1070,0x2)
0x1078180A,	//0x1b0a		VoC_lw16i_set_inc(REG2,0x1078,0x2)
0x1A422B80,	//0x1b0c		VoC_jal(COOLSAND_ZoomLine)
0x10C41FB8,	//0x1b0e		VoC_lw16i_set_inc(REG0,0x10c4,0xfffffffe)
0x10E61FB9,	//0x1b10		VoC_lw16i_set_inc(REG1,0x10e6,0xfffffffe)
0x1A262B80,	//0x1b12		VoC_jal(COOLSAND_ZoomRow)
0x10A81808,	//0x1b14		VoC_lw16i_set_inc(REG0,0x10a8,0x2)
0x10B01809,	//0x1b16		VoC_lw16i_set_inc(REG1,0x10b0,0x2)
0x10B8180A,	//0x1b18		VoC_lw16i_set_inc(REG2,0x10b8,0x2)
0x1A422B80,	//0x1b1a		VoC_jal(COOLSAND_ZoomLine)
0x1806DF00,	//0x1b1c		VoC_lw16i_set_inc(REG2,0x10e9,0x1)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x180410E9,	//0x1b1e		VoC_lw16i_set_inc(REG0,0xf68,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x10e9,0x1)(hi)
0xF0040F68,	//0x1b20		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xf68,0x1)(hi)
0x07CE2B80,	//0x1b22		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x1b24		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FA81804,	//0x1b26		VoC_lw16i_set_inc(REG0,0xfa8,0x1)
0xFFC0F004,	//0x1b28		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x1b2a		VoC_jal(COOLSAND_encode_block)
0x10EA1806,	//0x1b2c		VoC_lw16i_set_inc(REG2,0x10ea,0x1)
0x10681804,	//0x1b2e		VoC_lw16i_set_inc(REG0,0x1068,0x1)
0xFFC0F024,	//0x1b30		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x1b32		VoC_jal(COOLSAND_encode_block)
0x10EB1806,	//0x1b34		VoC_lw16i_set_inc(REG2,0x10eb,0x1)
0x10A81804,	//0x1b36		VoC_lw16i_set_inc(REG0,0x10a8,0x1)
0xFFC0F024,	//0x1b38		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x1b3a		VoC_jal(COOLSAND_encode_block)
0xDF855F00,	//0x1b3c		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x4165F204,	//0x1b3e		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x10,DEFAULT)
0xC020E084,	//0x1b40		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,IN_PARALLEL)
0x400A1404,	//0x1b42		VoC_lw16_d(REG4,0x400a)
0x1B4834A5,	//0x1b44		VoC_bngt16_rr(LABLE_CON1_YUV422,REG4,REG5)
0x1AB02B00,	//0x1b46		VoC_jump_lg(LABLE_REG2JPEG_LOOP_WIDTH_YUV422)
		//0x1b48		LABLE_CON1_YUV422
0xC061F104,	//0x1b48		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x400B1404,	//0x1b4a		VoC_lw16_d(REG4,0x400b)
0x1B7634A1,	//0x1b4c		VoC_bngt16_rr(LABLE_CON2_YUV422,REG4,REG1)
0x40021484,	//0x1b4e		VoC_lw32_d(ACC0,0x4002)
0x0E6A1481,	//0x1b50		VoC_lw32_d(REG23,0xe6a)
0xF8124866,	//0x1b52		VoC_shr16_ri(REG2,0x2,IN_PARALLEL)	|	VoC_add32_rr(RL6,REG23,ACC0,DEFAULT)
0x10F21807,	//0x1b54		VoC_lw16i_set_inc(REG3,0x10f2,0x1)
0x10F21804,	//0x1b56		VoC_lw16i_set_inc(REG0,0x10f2,0x1)
0xC0106045,	//0x1b58		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_movreg16(REG5,REG2,DEFAULT)
0xC0107825,	//0x1b5a		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x4,DEFAULT)
0x1B622C11,	//0x1b5c		VoC_loop_i(0x1,0x8)
0xD884E743,	//0x1b5e		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0xDCB4FFC0,	//0x1b60		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_NOP
		//0x1b61		VoC_endloop0
		//0x1b62		VoC_endloop1
0xF80BFFC0,	//0x1b62		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_NOP
0x7FC21542,	//0x1b64		VoC_sw16_d(REG2,0xffc2)
0x7FC31543,	//0x1b66		VoC_sw16_d(REG3,0xffc3)
0x7FC415C4,	//0x1b68		VoC_sw32_d(ACC0,0xffc4)
0x40021586,	//0x1b6a		VoC_sw32_d(RL6,0x4002)
0xFFC0DE80,	//0x1b6c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x1b6e		VoC_cfg_lg(0x8,)
0x10F21804,	//0x1b70		VoC_lw16i_set_inc(REG0,0x10f2,0x1)
0x2B00F005,	//0x1b72		VoC_jump_lg(LABLE_REG2JPEG_LOOP_WIDTH_YUV422)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFFC01AB0,	//0x1b74		VoC_NAD	|	VoC_jump_lg(LABLE_REG2JPEG_LOOP_WIDTH_YUV422)(hi)
		//0x1b76		LABLE_CON2_YUV422
0x096E2B80,	//0x1b76		VoC_jal(COOLSNAD_flush_bits)
0xFFC0DFA9,	//0x1b78		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x1b7a		VoC_NAD	|	VoC_return
		//0x1b7c		Convert_YUV411_Block
0x0F681809,	//0x1b7c		VoC_lw16i_set_inc(REG1,0xf68,0x2)
0x0FA8180A,	//0x1b7e		VoC_lw16i_set_inc(REG2,0xfa8,0x2)
0x10681807,	//0x1b80		VoC_lw16i_set_inc(REG3,0x1068,0x1)
0xE4047205,	//0x1b82		VoC_lw16i_short(REG4,0x40,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x400A0B2D,	//0x1b84		VoC_sub16_dr(REG5,0x400a,REG5)
0xE0267F46,	//0x1b86		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x00FF0A8A,	//0x1b88		VoC_lw16i(ACC1_LO,0xff)
0xDFC5614B,	//0x1b8a		VoC_push16(REG5,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,ACC1_LO,DEFAULT)
0xF9FC6085,	//0x1b8c		VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x1b8e		LABLE_Convert_YUV411_L1
0xF0085FC6,	//0x1b8e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0x1BE12C09,	//0x1b90		VoC_loop_i(0x1,0x4)
0xD983688F,	//0x1b92		VoC_lw32_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xD9C764EB,	//0x1b94		VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_and32_rr(REG67,ACC1,DEFAULT)
0xC3A67C47,	//0x1b96		VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_shru32_ri(RL7,0x8,DEFAULT)
0xC3E764EF,	//0x1b98		VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_and32_rr(RL7,ACC1,DEFAULT)
0x5DCBFF3B,	//0x1b9a		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x43E7C3A6,	//0x1b9c		VoC_sub16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)
0xDCB6C0EE,	//0x1b9e		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG5,IN_PARALLEL)
0xD983DCE7,	//0x1ba0		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG6,DEFAULT)
		//0x1ba1		VoC_endloop0
0xE88EFFC0,	//0x1ba2		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xD9C764EB,	//0x1ba4		VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_and32_rr(REG67,ACC1,DEFAULT)
0xC3A67C47,	//0x1ba6		VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_shru32_ri(RL7,0x8,DEFAULT)
0xC3E764EF,	//0x1ba8		VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_and32_rr(RL7,ACC1,DEFAULT)
0x5DD3FF3B,	//0x1baa		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x43E7C3A6,	//0x1bac		VoC_sub16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)
0xDCB6C0EE,	//0x1bae		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG5,IN_PARALLEL)
0xD983DCE7,	//0x1bb0		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG6,DEFAULT)
		//0x1bb1		VoC_endloop0
0xC030D626,	//0x1bb2		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,DEFAULT)
0xD9C3FFC0,	//0x1bb4		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_NOP
0xD9C764EB,	//0x1bb6		VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_and32_rr(REG67,ACC1,DEFAULT)
0xC3E743A6,	//0x1bb8		VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x5DCBE4EF,	//0x1bba		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_and32_rr(RL7,ACC1,DEFAULT)
0x43A6FF3B,	//0x1bbc		VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_movreg32(REG67,RL7,IN_PARALLEL)
0xD9C3C3E7,	//0x1bbe		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)
0xDDCB64EB,	//0x1bc0		VoC_sw32inc_p(REG67,REG1,IN_PARALLEL)	|	VoC_and32_rr(REG67,ACC1,DEFAULT)
0xC3E743A6,	//0x1bc2		VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x64EBD9C3,	//0x1bc4		VoC_and32_rr(REG67,ACC1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x43A6DDCB,	//0x1bc6		VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,IN_PARALLEL)
0xD9C3C3E7,	//0x1bc8		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)
0x64EBDDCB,	//0x1bca		VoC_and32_rr(REG67,ACC1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x43A6D9C7,	//0x1bcc		VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)
0xE4EFC3E7,	//0x1bce		VoC_and32_rr(RL7,ACC1,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)
0xFF3B5DD3,	//0x1bd0		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
0xC3E743A6,	//0x1bd2		VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x64EBD9C3,	//0x1bd4		VoC_and32_rr(REG67,ACC1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x43A6DDD3,	//0x1bd6		VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,IN_PARALLEL)
0xD9C3C3E7,	//0x1bd8		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)
0xDDD364EB,	//0x1bda		VoC_sw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_and32_rr(REG67,ACC1,DEFAULT)
0xC3E743A6,	//0x1bdc		VoC_sub16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x5DD3D626,	//0x1bde		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,DEFAULT)
0xFFC0C030,	//0x1be0		VoC_NOP	|	VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)
		//0x1be1		VoC_endloop1
0xE0175F86,	//0x1be2		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x382EC3BE,	//0x1be4		VoC_bgt16_rd(LABLE_Convert_YUV411_L2,REG6,0x4bcd)(lo)	|	VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)
0xDF874BCD,	//0x1be6		VoC_pop16(REG7,DEFAULT)	|	VoC_bgt16_rd(LABLE_Convert_YUV411_L2,REG6,0x4bcd)(hi)
0xFFC0E580,	//0x1be8		VoC_NAD	|	VoC_return
		//0x1bea		LABLE_Convert_YUV411_L2
0x0FE81809,	//0x1bea		VoC_lw16i_set_inc(REG1,0xfe8,0x2)
0x1028180A,	//0x1bec		VoC_lw16i_set_inc(REG2,0x1028,0x2)
0x1B8E2B00,	//0x1bee		VoC_jump_lg(LABLE_Convert_YUV411_L1)
		//0x1bf0		COOLSAND_YUV2JPEG411
0x400A1482,	//0x1bf0		VoC_lw32_d(REG45,0x400a)
0xFF135FE9,	//0x1bf2		VoC_movreg32(REG67,REG45,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE00578DC,	//0x1bf4		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffb,DEFAULT)
0x000F1606,	//0x1bf6		VoC_and16_ri(REG6,0xf)
0x000F1607,	//0x1bf8		VoC_and16_ri(REG7,0xf)
0x40151505,	//0x1bfa		VoC_sw16_d(REG5,0x4015)
0x0E6A1582,	//0x1bfc		VoC_sw32_d(REG45,0xe6a)
0x400A1482,	//0x1bfe		VoC_lw32_d(REG45,0x400a)
0x1C0E3186,	//0x1c00		VoC_bez16_r(LABLE_WIDTH_MULTIPLE16_YUV,REG6)
0xE01071E6,	//0x1c02		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xf,DEFAULT)
0x400D1504,	//0x1c04		VoC_sw16_d(REG4,0x400d)
0x1644C134,	//0x1c06		VoC_and16_ri(REG4,0xfff0)(lo)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x15007FF0,	//0x1c08		VoC_sw16_d(REG0,0x4015)(lo)	|	VoC_and16_ri(REG4,0xfff0)(hi)
0x15044015,	//0x1c0a		VoC_sw16_d(REG4,0x400a)(lo)	|	VoC_sw16_d(REG0,0x4015)(hi)
0xFFC0400A,	//0x1c0c		VoC_NAD	|	VoC_sw16_d(REG4,0x400a)(hi)
		//0x1c0e		LABLE_WIDTH_MULTIPLE16_YUV
0x1C173187,	//0x1c0e		VoC_bez16_r(LABLE_WIDTH_HEIGHT_MULTIPLE16_YUV,REG7)
0x0D40072D,	//0x1c10		VoC_add16_rd(REG5,REG5,0xd40)
0x7FF01645,	//0x1c12		VoC_and16_ri(REG5,0xfff0)
0x1505FFC0,	//0x1c14		VoC_sw16_d(REG5,0x400b)(lo)	|	VoC_NOP
0xF001400B,	//0x1c16		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_sw16_d(REG5,0x400b)(hi)
		//0x1c17		LABLE_WIDTH_HEIGHT_MULTIPLE16_YUV
		//0x1c18		LABLE_REG2JPEG_LOOP_HEIGHT_411_YUV
0xFFC0F780,	//0x1c18		VoC_NAD	|	VoC_lw16i_short(REG0,0xfffffffc,DEFAULT)
0x07822B80,	//0x1c1a		VoC_jal(DEMAI_READ_RGBDATA)
0x10F21804,	//0x1c1c		VoC_lw16i_set_inc(REG0,0x10f2,0x1)
0xFFC0F005,	//0x1c1e		VoC_NAD	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x1c20		LABLE_REG2JPEG_LOOP_WIDTH_411_YUV
0xF4017030,	//0x1c20		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDFC55F40,	//0x1c22		VoC_push16(REG5,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x1B7C2B80,	//0x1c24		VoC_jal(Convert_YUV411_Block)
0x10E91806,	//0x1c26		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0F681804,	//0x1c28		VoC_lw16i_set_inc(REG0,0xf68,0x1)
0xFFC0F004,	//0x1c2a		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x1c2c		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x1c2e		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FA81804,	//0x1c30		VoC_lw16i_set_inc(REG0,0xfa8,0x1)
0xFFC0F004,	//0x1c32		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x1c34		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x1c36		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FE81804,	//0x1c38		VoC_lw16i_set_inc(REG0,0xfe8,0x1)
0xFFC0F004,	//0x1c3a		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x1c3c		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x1c3e		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x10281804,	//0x1c40		VoC_lw16i_set_inc(REG0,0x1028,0x1)
0xFFC0F004,	//0x1c42		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x1c44		VoC_jal(COOLSAND_encode_block)
0x10EA1806,	//0x1c46		VoC_lw16i_set_inc(REG2,0x10ea,0x1)
0x10681804,	//0x1c48		VoC_lw16i_set_inc(REG0,0x1068,0x1)
0xFFC0F024,	//0x1c4a		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x1c4c		VoC_jal(COOLSAND_encode_block)
0x10EB1806,	//0x1c4e		VoC_lw16i_set_inc(REG2,0x10eb,0x1)
0x10A81804,	//0x1c50		VoC_lw16i_set_inc(REG0,0x10a8,0x1)
0xFFC0F024,	//0x1c52		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x1c54		VoC_jal(COOLSAND_encode_block)
0xDF855F00,	//0x1c56		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x4020F204,	//0x1c58		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x10,DEFAULT)
0x4C25C165,	//0x1c5a		VoC_bnlt16_rd(LABLE_CON1_411_YUV,REG5,0x400a)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0x2B00400A,	//0x1c5c		VoC_jump_lg(LABLE_REG2JPEG_LOOP_WIDTH_411_YUV)(lo)	|	VoC_bnlt16_rd(LABLE_CON1_411_YUV,REG5,0x400a)(hi)
0xC0611C20,	//0x1c5e		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_jump_lg(LABLE_REG2JPEG_LOOP_WIDTH_411_YUV)(hi)
		//0x1c5f		LABLE_CON1_411_YUV
0x400B4C21,	//0x1c60		VoC_bnlt16_rd(LABLE_CON2_411_YUV,REG1,0x400b)
0x1C182B00,	//0x1c62		VoC_jump_lg(LABLE_REG2JPEG_LOOP_HEIGHT_411_YUV)
		//0x1c64		LABLE_CON2_411_YUV
0x096E2B80,	//0x1c64		VoC_jal(COOLSNAD_flush_bits)
0xFFC0DFA9,	//0x1c66		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x1c68		VoC_NAD	|	VoC_return
		//0x1c6a		COOLSAND_Double2Single_YUV
0xF4037F46,	//0x1c6a		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xF00A6002,	//0x1c6c		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xE241DE00,	//0x1c6e		VoC_lbinc_p(REG1)	|	VoC_inc_p(REG0,DEFAULT)
0xE2A2E2A0,	//0x1c70		VoC_rbinc_i(REG6,0x8,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
0xE2A1E241,	//0x1c72		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_lbinc_p(REG1)
0xF00862A3,	//0x1c74		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_rbinc_i(REG7,0x8,DEFAULT)
0x1CB02C04,	//0x1c76		VoC_loop_i(0x0,0x2)
0xC12B7F1C,	//0x1c78		VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0xF90B5CA4,	//0x1c7a		VoC_shru16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xC15F411E,	//0x1c7c		VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG3,DEFAULT)
0xF80F780E,	//0x1c7e		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x5CA6E241,	//0x1c80		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lbinc_p(REG1)
0x62A1F6A4,	//0x1c82		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_movreg16(REG4,REG5,IN_PARALLEL)
0x5CA7DCA3,	//0x1c84		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,IN_PARALLEL)
0x5CA4C12B,	//0x1c86		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)
0x411EF90B,	//0x1c88		VoC_add16_rr(REG6,REG4,REG3,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,IN_PARALLEL)
0x780EC15F,	//0x1c8a		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)
0x5C88F80F,	//0x1c8c		VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0x5CA6F6AA,	//0x1c8e		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG5,IN_PARALLEL)
0x62A1F704,	//0x1c90		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)
0x5CA7DCA3,	//0x1c92		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,IN_PARALLEL)
0xF90BC12B,	//0x1c94		VoC_shru16_ri(REG3,0x1,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)
0xC15F411E,	//0x1c96		VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG3,DEFAULT)
0xF80F780E,	//0x1c98		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xF6A85C89,	//0x1c9a		VoC_movreg16(ACC0_LO,REG5,IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0x62A2E241,	//0x1c9c		VoC_rbinc_i(REG6,0x8,DEFAULT)	|	VoC_lbinc_p(REG1)
0xE2A1DC86,	//0x1c9e		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)
0x6124E0CB,	//0x1ca0		VoC_movreg16(REG4,ACC0_HI,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG6,DEFAULT)
0x412BF66E,	//0x1ca2		VoC_add16_rr(REG3,REG4,REG5,DEFAULT)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0x790BF6EF,	//0x1ca4		VoC_shru16_ri(REG3,0x1,DEFAULT)	|	VoC_movreg16(RL7_HI,REG7,IN_PARALLEL)
0x411EF6A9,	//0x1ca6		VoC_add16_rr(REG6,REG4,REG3,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG5,IN_PARALLEL)
0x780EC15F,	//0x1ca8		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)
0xFF2AF80F,	//0x1caa		VoC_movreg32(REG45,ACC1,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0xDC8EDC86,	//0x1cac		VoC_sw16inc_p(RL7_LO,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xDC8FDC83,	//0x1cae		VoC_sw16inc_p(RL7_HI,REG0,DEFAULT)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
		//0x1cb0		VoC_endloop0
0xFF235C87,	//0x1cb0		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0xFFC0E580,	//0x1cb2		VoC_NAD	|	VoC_return
		//0x1cb4		COOLSAND_Double2SingleLastRow_YUV
0xF4037F46,	//0x1cb4		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xF00A6002,	//0x1cb6		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xE241DE00,	//0x1cb8		VoC_lbinc_p(REG1)	|	VoC_inc_p(REG0,DEFAULT)
0xE2A2E2A0,	//0x1cba		VoC_rbinc_i(REG6,0x8,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
0xE2A1E241,	//0x1cbc		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_lbinc_p(REG1)
0xF00862A3,	//0x1cbe		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_rbinc_i(REG7,0x8,DEFAULT)
0xC12B7F1C,	//0x1cc0		VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0xF90B5CA4,	//0x1cc2		VoC_shru16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xC15F411E,	//0x1cc4		VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG3,DEFAULT)
0xF80F780E,	//0x1cc6		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x5CA6E241,	//0x1cc8		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lbinc_p(REG1)
0x62A1F6A4,	//0x1cca		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_movreg16(REG4,REG5,IN_PARALLEL)
0x5CA7DCA3,	//0x1ccc		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,IN_PARALLEL)
0x5CA4C12B,	//0x1cce		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)
0x411EF90B,	//0x1cd0		VoC_add16_rr(REG6,REG4,REG3,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,IN_PARALLEL)
0x780EC15F,	//0x1cd2		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)
0x5C88F80F,	//0x1cd4		VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0x5CA6F6AA,	//0x1cd6		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG5,IN_PARALLEL)
0x62A1F704,	//0x1cd8		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)
0x5CA7DCA3,	//0x1cda		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,IN_PARALLEL)
0x5CAAC12B,	//0x1cdc		VoC_sw16inc_p(ACC1_LO,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)
0x411EF90B,	//0x1cde		VoC_add16_rr(REG6,REG4,REG3,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,IN_PARALLEL)
0x780EC15F,	//0x1ce0		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)
0x5C89F80F,	//0x1ce2		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0xE241F6A8,	//0x1ce4		VoC_lbinc_p(REG1)	|	VoC_movreg16(ACC0_LO,REG5,IN_PARALLEL)
0xDC8662A2,	//0x1ce6		VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0xE0CBE2A1,	//0x1ce8		VoC_movreg16(ACC1_HI,REG6,DEFAULT)	|	VoC_rbinc_i(REG5,0x8,DEFAULT)
0xF66E6124,	//0x1cea		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xF6EF412B,	//0x1cec		VoC_movreg16(RL7_HI,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG4,REG5,DEFAULT)
0xF6A9790B,	//0x1cee		VoC_movreg16(ACC0_HI,REG5,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0xC15F411E,	//0x1cf0		VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG3,DEFAULT)
0xF80F780E,	//0x1cf2		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xDC86FF2A,	//0x1cf4		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0xDC83DC8E,	//0x1cf6		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_sw16inc_p(RL7_LO,REG0,DEFAULT)
0xFF235C8F,	//0x1cf8		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_sw16inc_p(RL7_HI,REG0,DEFAULT)
0xC12B5C87,	//0x1cfa		VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0xF90B5CA4,	//0x1cfc		VoC_shru16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xC15F411E,	//0x1cfe		VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG3,DEFAULT)
0xF80F780E,	//0x1d00		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xDC89DC88,	//0x1d02		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDC89DC88,	//0x1d04		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDC89DC88,	//0x1d06		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDC89DC88,	//0x1d08		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDCA3DCA6,	//0x1d0a		VoC_sw16inc_p(REG3,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xDCA5DCA7,	//0x1d0c		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0xDCA5DCA5,	//0x1d0e		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xE580DCA5,	//0x1d10		VoC_return	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x1d12		COOLSAND_Double2Row_YUV
0xFFC0D9D2,	//0x1d12		VoC_NAD	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xD9DB6A08,	//0x1d14		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0xC17D4134,	//0x1d16		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xD9DB790C,	//0x1d18		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xD9D2F90D,	//0x1d1a		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
		//0x1d1c		VoC_endloop0
0xE580DDC2,	//0x1d1c		VoC_return	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x1d1e		COOLSAN_Encode422MCUBlock_YUV
0x5C481808,	//0x1d1e		VoC_lw16i_set_inc(REG0,0x5c48,0x2)
0x0F681805,	//0x1d20		VoC_lw16i_set_inc(REG1,0xf68,0x1)
0x0FA81806,	//0x1d22		VoC_lw16i_set_inc(REG2,0xfa8,0x1)
0x10681807,	//0x1d24		VoC_lw16i_set_inc(REG3,0x1068,0x1)
0x00800A85,	//0x1d26		VoC_lw16i(REG5,0x80)
0x1D4A2C11,	//0x1d28		VoC_loop_i(0x1,0x8)
0x1D392C08,	//0x1d2a		VoC_loop_i(0x0,0x4)
0xC3AED9C3,	//0x1d2c		VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x59C3C3EF,	//0x1d2e		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)
0x5C96F6E8,	//0x1d30		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG7,IN_PARALLEL)
0x5C38C3AE,	//0x1d32		VoC_sw16_p(ACC0_LO,REG3,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)
0x43EFE404,	//0x1d34		VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x40,IN_PARALLEL)
0x5C96C11C,	//0x1d36		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG3,IN_PARALLEL)
0xDCC7DE18,	//0x1d38		VoC_sw16inc_p(REG7,REG4,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
		//0x1d39		VoC_endloop0
0x1D492C08,	//0x1d3a		VoC_loop_i(0x0,0x4)
0xC3AED9C3,	//0x1d3c		VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x59C3C3EF,	//0x1d3e		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)
0x5CA6F6E8,	//0x1d40		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG7,IN_PARALLEL)
0x5C38C3AE,	//0x1d42		VoC_sw16_p(ACC0_LO,REG3,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)
0x43EFE404,	//0x1d44		VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x40,IN_PARALLEL)
0x5CA6C11C,	//0x1d46		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG3,IN_PARALLEL)
0xDCC7DE18,	//0x1d48		VoC_sw16inc_p(REG7,REG4,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
		//0x1d49		VoC_endloop0
		//0x1d4a		VoC_endloop1
0x1806FFC0,	//0x1d4a		VoC_lw16i_set_inc(REG2,0x10e9,0x1)(lo)	|	VoC_NOP
0x180410E9,	//0x1d4c		VoC_lw16i_set_inc(REG0,0xf68,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x10e9,0x1)(hi)
0x70040F68,	//0x1d4e		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xf68,0x1)(hi)
0xFFC0DFE9,	//0x1d50		VoC_NAD	|	VoC_push16(RA,IN_PARALLEL)
0x07CE2B80,	//0x1d52		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x1d54		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FA81804,	//0x1d56		VoC_lw16i_set_inc(REG0,0xfa8,0x1)
0xFFC0F004,	//0x1d58		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x1d5a		VoC_jal(COOLSAND_encode_block)
0x10EA1806,	//0x1d5c		VoC_lw16i_set_inc(REG2,0x10ea,0x1)
0x10681804,	//0x1d5e		VoC_lw16i_set_inc(REG0,0x1068,0x1)
0xFFC0F024,	//0x1d60		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x1d62		VoC_jal(COOLSAND_encode_block)
0x10EB1806,	//0x1d64		VoC_lw16i_set_inc(REG2,0x10eb,0x1)
0x10A81804,	//0x1d66		VoC_lw16i_set_inc(REG0,0x10a8,0x1)
0x2B80F024,	//0x1d68		VoC_jal(COOLSAND_encode_block)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xDFA907CE,	//0x1d6a		VoC_pop16(RA,DEFAULT)	|	VoC_jal(COOLSAND_encode_block)(hi)
0xE580FFC0,	//0x1d6c		VoC_return	|	VoC_NOP
		//0x1d6e		COOLSAND_MEMCopy_YUV
0xD9D6E904,	//0x1d6e		VoC_lw32inc_p(RL6,REG2,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xDDDED9D7,	//0x1d70		VoC_sw32inc_p(RL6,REG3,DEFAULT)	|	VoC_lw32inc_p(RL7,REG2,DEFAULT)
		//0x1d72		VoC_endloop0
0xE580DDDF,	//0x1d72		VoC_return	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
		//0x1d74		COOLSAND_1280BY1024_YUV422_JPEG
0xE0047065,	//0x1d74		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
0xFFC0DFE9,	//0x1d76		VoC_NAD	|	VoC_push16(RA,DEFAULT)
		//0x1d78		LABLE_START_1280BY1024_YUV
0xE4F05F42,	//0x1d78		VoC_lw16i_short(REG0,0x4f,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x10F21805,	//0x1d7a		VoC_lw16i_set_inc(REG1,0x10f2,0x1)
0x04B22B80,	//0x1d7c		VoC_jal(COOLSAND_DMAIRead_1280BY1024Even)
		//0x1d7e		LABLE_DO_BEGIN_FRONT_EVEN_YUV
0xDF405FC1,	//0x1d7e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x5C481804,	//0x1d80		VoC_lw16i_set_inc(REG0,0x5c48,0x1)
0x1C6A2B80,	//0x1d82		VoC_jal(COOLSAND_Double2Single_YUV)
0x5C48180A,	//0x1d84		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C68180B,	//0x1d86		VoC_lw16i_set_inc(REG3,0x5c68,0x2)
0x1D6E2B80,	//0x1d88		VoC_jal(COOLSAND_MEMCopy_YUV)
0x5C48180A,	//0x1d8a		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C88180B,	//0x1d8c		VoC_lw16i_set_inc(REG3,0x5c88,0x2)
0x1D6E2B80,	//0x1d8e		VoC_jal(COOLSAND_MEMCopy_YUV)
0x5C48180A,	//0x1d90		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5CA8180B,	//0x1d92		VoC_lw16i_set_inc(REG3,0x5ca8,0x2)
0x1D6E2B80,	//0x1d94		VoC_jal(COOLSAND_MEMCopy_YUV)
0x1400DF81,	//0x1d96		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xF8080D62,	//0x1d98		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1d9a		VoC_lw16i_set_inc(REG0,0x5d28,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xFFC05D28,	//0x1d9c		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5d28,0x1)(hi)
0x1C6A2B80,	//0x1d9e		VoC_jal(COOLSAND_Double2Single_YUV)
0x5CA8180A,	//0x1da0		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5D28180B,	//0x1da2		VoC_lw16i_set_inc(REG3,0x5d28,0x2)
0x5CE81808,	//0x1da4		VoC_lw16i_set_inc(REG0,0x5ce8,0x2)
0x1D122B80,	//0x1da6		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CA8180A,	//0x1da8		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5CE8180B,	//0x1daa		VoC_lw16i_set_inc(REG3,0x5ce8,0x2)
0x5CC81808,	//0x1dac		VoC_lw16i_set_inc(REG0,0x5cc8,0x2)
0x1D122B80,	//0x1dae		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CE8180A,	//0x1db0		VoC_lw16i_set_inc(REG2,0x5ce8,0x2)
0x5D28180B,	//0x1db2		VoC_lw16i_set_inc(REG3,0x5d28,0x2)
0x5D081808,	//0x1db4		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x1D122B80,	//0x1db6		VoC_jal(COOLSAND_Double2Row_YUV)
0x1D1E2B80,	//0x1db8		VoC_jal(COOLSAN_Encode422MCUBlock_YUV)
0x0709DF00,	//0x1dba		VoC_add16_rd(REG1,REG1,0xd24)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x07800D24,	//0x1dbc		VoC_sub16_rd(REG0,REG0,0xd17)(lo)	|	VoC_add16_rd(REG1,REG1,0xd24)(hi)
0x31400D17,	//0x1dbe		VoC_bngtz16_r(LABLE_LASTROW1_YUV,REG0)(lo)	|	VoC_sub16_rd(REG0,REG0,0xd17)(hi)
0x2B001DC3,	//0x1dc0		VoC_jump_lg(LABLE_DO_BEGIN_FRONT_EVEN_YUV)(lo)	|	VoC_bngtz16_r(LABLE_LASTROW1_YUV,REG0)(hi)
0xDFC11D7E,	//0x1dc2		VoC_push16(REG1,DEFAULT)	|	VoC_jump_lg(LABLE_DO_BEGIN_FRONT_EVEN_YUV)(hi)
		//0x1dc3		LABLE_LASTROW1_YUV
0x5C481804,	//0x1dc4		VoC_lw16i_set_inc(REG0,0x5c48,0x1)
0x1CB42B80,	//0x1dc6		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x5C48180A,	//0x1dc8		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C68180B,	//0x1dca		VoC_lw16i_set_inc(REG3,0x5c68,0x2)
0x1D6E2B80,	//0x1dcc		VoC_jal(COOLSAND_MEMCopy_YUV)
0x5C48180A,	//0x1dce		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C88180B,	//0x1dd0		VoC_lw16i_set_inc(REG3,0x5c88,0x2)
0x1D6E2B80,	//0x1dd2		VoC_jal(COOLSAND_MEMCopy_YUV)
0x5C48180A,	//0x1dd4		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5CA8180B,	//0x1dd6		VoC_lw16i_set_inc(REG3,0x5ca8,0x2)
0x1D6E2B80,	//0x1dd8		VoC_jal(COOLSAND_MEMCopy_YUV)
0x1400DF81,	//0x1dda		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xF8080D62,	//0x1ddc		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1dde		VoC_lw16i_set_inc(REG0,0x5d28,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xFFC05D28,	//0x1de0		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5d28,0x1)(hi)
0x1CB42B80,	//0x1de2		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x5CA8180A,	//0x1de4		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5D28180B,	//0x1de6		VoC_lw16i_set_inc(REG3,0x5d28,0x2)
0x5CE81808,	//0x1de8		VoC_lw16i_set_inc(REG0,0x5ce8,0x2)
0x1D122B80,	//0x1dea		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CA8180A,	//0x1dec		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5CE8180B,	//0x1dee		VoC_lw16i_set_inc(REG3,0x5ce8,0x2)
0x5CC81808,	//0x1df0		VoC_lw16i_set_inc(REG0,0x5cc8,0x2)
0x1D122B80,	//0x1df2		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CE8180A,	//0x1df4		VoC_lw16i_set_inc(REG2,0x5ce8,0x2)
0x5D28180B,	//0x1df6		VoC_lw16i_set_inc(REG3,0x5d28,0x2)
0x5D081808,	//0x1df8		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x1D122B80,	//0x1dfa		VoC_jal(COOLSAND_Double2Row_YUV)
0x1D1E2B80,	//0x1dfc		VoC_jal(COOLSAN_Encode422MCUBlock_YUV)
0x12321805,	//0x1dfe		VoC_lw16i_set_inc(REG1,0x1232,0x1)
0x004F0A80,	//0x1e00		VoC_lw16i(REG0,0x4f)
		//0x1e02		LABLE_DO_BEGIN_BEHIND_EVEN_YUV
0x5F081804,	//0x1e02		VoC_lw16i_set_inc(REG0,0x5f08,0x1)
0xDF405FC1,	//0x1e04		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x1C6A2B80,	//0x1e06		VoC_jal(COOLSAND_Double2Single_YUV)
0x1400D611,	//0x1e08		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xF8080D62,	//0x1e0a		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1e0c		VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xDA115CA8,	//0x1e0e		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(hi)
0x1C6A2B80,	//0x1e10		VoC_jal(COOLSAND_Double2Single_YUV)
0x1400DF81,	//0x1e12		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xF8080D62,	//0x1e14		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1e16		VoC_lw16i_set_inc(REG0,0x5d28,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xFFC05D28,	//0x1e18		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5d28,0x1)(hi)
0x1C6A2B80,	//0x1e1a		VoC_jal(COOLSAND_Double2Single_YUV)
0x5F08180A,	//0x1e1c		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5CA8180B,	//0x1e1e		VoC_lw16i_set_inc(REG3,0x5ca8,0x2)
0x5C681808,	//0x1e20		VoC_lw16i_set_inc(REG0,0x5c68,0x2)
0x1D122B80,	//0x1e22		VoC_jal(COOLSAND_Double2Row_YUV)
0x5F08180A,	//0x1e24		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5C68180B,	//0x1e26		VoC_lw16i_set_inc(REG3,0x5c68,0x2)
0x5C481808,	//0x1e28		VoC_lw16i_set_inc(REG0,0x5c48,0x2)
0x1D122B80,	//0x1e2a		VoC_jal(COOLSAND_Double2Row_YUV)
0x5C68180A,	//0x1e2c		VoC_lw16i_set_inc(REG2,0x5c68,0x2)
0x5CA8180B,	//0x1e2e		VoC_lw16i_set_inc(REG3,0x5ca8,0x2)
0x5C881808,	//0x1e30		VoC_lw16i_set_inc(REG0,0x5c88,0x2)
0x1D122B80,	//0x1e32		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CA8180A,	//0x1e34		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5D28180B,	//0x1e36		VoC_lw16i_set_inc(REG3,0x5d28,0x2)
0x5CE81808,	//0x1e38		VoC_lw16i_set_inc(REG0,0x5ce8,0x2)
0x1D122B80,	//0x1e3a		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CA8180A,	//0x1e3c		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5CE8180B,	//0x1e3e		VoC_lw16i_set_inc(REG3,0x5ce8,0x2)
0x5CC81808,	//0x1e40		VoC_lw16i_set_inc(REG0,0x5cc8,0x2)
0x1D122B80,	//0x1e42		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CE8180A,	//0x1e44		VoC_lw16i_set_inc(REG2,0x5ce8,0x2)
0x5D28180B,	//0x1e46		VoC_lw16i_set_inc(REG3,0x5d28,0x2)
0x5D081808,	//0x1e48		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x1D122B80,	//0x1e4a		VoC_jal(COOLSAND_Double2Row_YUV)
0x1D1E2B80,	//0x1e4c		VoC_jal(COOLSAN_Encode422MCUBlock_YUV)
0x0709DF00,	//0x1e4e		VoC_add16_rd(REG1,REG1,0xd24)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x07800D24,	//0x1e50		VoC_sub16_rd(REG0,REG0,0xd17)(lo)	|	VoC_add16_rd(REG1,REG1,0xd24)(hi)
0x31400D17,	//0x1e52		VoC_bngtz16_r(LABLE_LASTROW2_YUV,REG0)(lo)	|	VoC_sub16_rd(REG0,REG0,0xd17)(hi)
0x2B001E57,	//0x1e54		VoC_jump_lg(LABLE_DO_BEGIN_BEHIND_EVEN_YUV)(lo)	|	VoC_bngtz16_r(LABLE_LASTROW2_YUV,REG0)(hi)
0xDFC11E02,	//0x1e56		VoC_push16(REG1,DEFAULT)	|	VoC_jump_lg(LABLE_DO_BEGIN_BEHIND_EVEN_YUV)(hi)
		//0x1e57		LABLE_LASTROW2_YUV
0x5F081804,	//0x1e58		VoC_lw16i_set_inc(REG0,0x5f08,0x1)
0x1CB42B80,	//0x1e5a		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x1400D611,	//0x1e5c		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xF8080D62,	//0x1e5e		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1e60		VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xDA115CA8,	//0x1e62		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5ca8,0x1)(hi)
0x1CB42B80,	//0x1e64		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x1400DF81,	//0x1e66		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xF8080D62,	//0x1e68		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1e6a		VoC_lw16i_set_inc(REG0,0x5d28,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xFFC05D28,	//0x1e6c		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5d28,0x1)(hi)
0x1CB42B80,	//0x1e6e		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x5F08180A,	//0x1e70		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5CA8180B,	//0x1e72		VoC_lw16i_set_inc(REG3,0x5ca8,0x2)
0x5C681808,	//0x1e74		VoC_lw16i_set_inc(REG0,0x5c68,0x2)
0x1D122B80,	//0x1e76		VoC_jal(COOLSAND_Double2Row_YUV)
0x5F08180A,	//0x1e78		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5C68180B,	//0x1e7a		VoC_lw16i_set_inc(REG3,0x5c68,0x2)
0x5C481808,	//0x1e7c		VoC_lw16i_set_inc(REG0,0x5c48,0x2)
0x1D122B80,	//0x1e7e		VoC_jal(COOLSAND_Double2Row_YUV)
0x5C68180A,	//0x1e80		VoC_lw16i_set_inc(REG2,0x5c68,0x2)
0x5CA8180B,	//0x1e82		VoC_lw16i_set_inc(REG3,0x5ca8,0x2)
0x5C881808,	//0x1e84		VoC_lw16i_set_inc(REG0,0x5c88,0x2)
0x1D122B80,	//0x1e86		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CA8180A,	//0x1e88		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5D28180B,	//0x1e8a		VoC_lw16i_set_inc(REG3,0x5d28,0x2)
0x5CE81808,	//0x1e8c		VoC_lw16i_set_inc(REG0,0x5ce8,0x2)
0x1D122B80,	//0x1e8e		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CA8180A,	//0x1e90		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5CE8180B,	//0x1e92		VoC_lw16i_set_inc(REG3,0x5ce8,0x2)
0x5CC81808,	//0x1e94		VoC_lw16i_set_inc(REG0,0x5cc8,0x2)
0x1D122B80,	//0x1e96		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CE8180A,	//0x1e98		VoC_lw16i_set_inc(REG2,0x5ce8,0x2)
0x5D28180B,	//0x1e9a		VoC_lw16i_set_inc(REG3,0x5d28,0x2)
0x5D081808,	//0x1e9c		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x1D122B80,	//0x1e9e		VoC_jal(COOLSAND_Double2Row_YUV)
0x1D1E2B80,	//0x1ea0		VoC_jal(COOLSAN_Encode422MCUBlock_YUV)
0xE036590A,	//0x1ea2		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xC1754134,	//0x1ea4		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x04C72B80,	//0x1ea6		VoC_jal(COOLSAND_DMAIRead_1280BY1024Odd)
0xE4F05D0A,	//0x1ea8		VoC_lw16i_short(REG0,0x4f,IN_PARALLEL)	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
0x10F21805,	//0x1eaa		VoC_lw16i_set_inc(REG1,0x10f2,0x1)
		//0x1eac		LABLE_DO_BEGIN_FRONT_ODD_YUV
0x5F081804,	//0x1eac		VoC_lw16i_set_inc(REG0,0x5f08,0x1)
0xDF405FC1,	//0x1eae		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x1C6A2B80,	//0x1eb0		VoC_jal(COOLSAND_Double2Single_YUV)
0x1400D611,	//0x1eb2		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xF8080D62,	//0x1eb4		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1eb6		VoC_lw16i_set_inc(REG0,0x5cc8,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xDA115CC8,	//0x1eb8		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5cc8,0x1)(hi)
0x1C6A2B80,	//0x1eba		VoC_jal(COOLSAND_Double2Single_YUV)
0x1400DF81,	//0x1ebc		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xF8080D62,	//0x1ebe		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1ec0		VoC_lw16i_set_inc(REG0,0x5f38,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xFFC05F38,	//0x1ec2		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5f38,0x1)(hi)
0x1C6A2B80,	//0x1ec4		VoC_jal(COOLSAND_Double2Single_YUV)
0x5F08180A,	//0x1ec6		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5CC8180B,	//0x1ec8		VoC_lw16i_set_inc(REG3,0x5cc8,0x2)
0x5C881808,	//0x1eca		VoC_lw16i_set_inc(REG0,0x5c88,0x2)
0x1D122B80,	//0x1ecc		VoC_jal(COOLSAND_Double2Row_YUV)
0x5F08180A,	//0x1ece		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5C88180B,	//0x1ed0		VoC_lw16i_set_inc(REG3,0x5c88,0x2)
0x5C481808,	//0x1ed2		VoC_lw16i_set_inc(REG0,0x5c48,0x2)
0x1D122B80,	//0x1ed4		VoC_jal(COOLSAND_Double2Row_YUV)
0x5C48180A,	//0x1ed6		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C68180B,	//0x1ed8		VoC_lw16i_set_inc(REG3,0x5c68,0x2)
0x1D6E2B80,	//0x1eda		VoC_jal(COOLSAND_MEMCopy_YUV)
0x5C88180A,	//0x1edc		VoC_lw16i_set_inc(REG2,0x5c88,0x2)
0x5CC8180B,	//0x1ede		VoC_lw16i_set_inc(REG3,0x5cc8,0x2)
0x5CA81808,	//0x1ee0		VoC_lw16i_set_inc(REG0,0x5ca8,0x2)
0x1D122B80,	//0x1ee2		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1ee4		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5F38180B,	//0x1ee6		VoC_lw16i_set_inc(REG3,0x5f38,0x2)
0x5D081808,	//0x1ee8		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x1D122B80,	//0x1eea		VoC_jal(COOLSAND_Double2Row_YUV)
0x5D08180A,	//0x1eec		VoC_lw16i_set_inc(REG2,0x5d08,0x2)
0x5F38180B,	//0x1eee		VoC_lw16i_set_inc(REG3,0x5f38,0x2)
0x5D281808,	//0x1ef0		VoC_lw16i_set_inc(REG0,0x5d28,0x2)
0x1D122B80,	//0x1ef2		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1ef4		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5D08180B,	//0x1ef6		VoC_lw16i_set_inc(REG3,0x5d08,0x2)
0x5CE81808,	//0x1ef8		VoC_lw16i_set_inc(REG0,0x5ce8,0x2)
0x1D122B80,	//0x1efa		VoC_jal(COOLSAND_Double2Row_YUV)
0x1D1E2B80,	//0x1efc		VoC_jal(COOLSAN_Encode422MCUBlock_YUV)
0x0709DF00,	//0x1efe		VoC_add16_rd(REG1,REG1,0xd24)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x07800D24,	//0x1f00		VoC_sub16_rd(REG0,REG0,0xd17)(lo)	|	VoC_add16_rd(REG1,REG1,0xd24)(hi)
0x31400D17,	//0x1f02		VoC_bngtz16_r(LABLE_LASTROW3_YUV,REG0)(lo)	|	VoC_sub16_rd(REG0,REG0,0xd17)(hi)
0x2B001F07,	//0x1f04		VoC_jump_lg(LABLE_DO_BEGIN_FRONT_ODD_YUV)(lo)	|	VoC_bngtz16_r(LABLE_LASTROW3_YUV,REG0)(hi)
0xDFC11EAC,	//0x1f06		VoC_push16(REG1,DEFAULT)	|	VoC_jump_lg(LABLE_DO_BEGIN_FRONT_ODD_YUV)(hi)
		//0x1f07		LABLE_LASTROW3_YUV
0x5F081804,	//0x1f08		VoC_lw16i_set_inc(REG0,0x5f08,0x1)
0x1CB42B80,	//0x1f0a		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x1400D611,	//0x1f0c		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xF8080D62,	//0x1f0e		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1f10		VoC_lw16i_set_inc(REG0,0x5cc8,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xDA115CC8,	//0x1f12		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5cc8,0x1)(hi)
0x1CB42B80,	//0x1f14		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x1400DF81,	//0x1f16		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xF8080D62,	//0x1f18		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1f1a		VoC_lw16i_set_inc(REG0,0x5f38,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xFFC05F38,	//0x1f1c		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5f38,0x1)(hi)
0x1CB42B80,	//0x1f1e		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x5F08180A,	//0x1f20		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5CC8180B,	//0x1f22		VoC_lw16i_set_inc(REG3,0x5cc8,0x2)
0x5C881808,	//0x1f24		VoC_lw16i_set_inc(REG0,0x5c88,0x2)
0x1D122B80,	//0x1f26		VoC_jal(COOLSAND_Double2Row_YUV)
0x5F08180A,	//0x1f28		VoC_lw16i_set_inc(REG2,0x5f08,0x2)
0x5C88180B,	//0x1f2a		VoC_lw16i_set_inc(REG3,0x5c88,0x2)
0x5C481808,	//0x1f2c		VoC_lw16i_set_inc(REG0,0x5c48,0x2)
0x1D122B80,	//0x1f2e		VoC_jal(COOLSAND_Double2Row_YUV)
0x5C48180A,	//0x1f30		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C68180B,	//0x1f32		VoC_lw16i_set_inc(REG3,0x5c68,0x2)
0x1D6E2B80,	//0x1f34		VoC_jal(COOLSAND_MEMCopy_YUV)
0x5C88180A,	//0x1f36		VoC_lw16i_set_inc(REG2,0x5c88,0x2)
0x5CC8180B,	//0x1f38		VoC_lw16i_set_inc(REG3,0x5cc8,0x2)
0x5CA81808,	//0x1f3a		VoC_lw16i_set_inc(REG0,0x5ca8,0x2)
0x1D122B80,	//0x1f3c		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1f3e		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5F38180B,	//0x1f40		VoC_lw16i_set_inc(REG3,0x5f38,0x2)
0x5D081808,	//0x1f42		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x1D122B80,	//0x1f44		VoC_jal(COOLSAND_Double2Row_YUV)
0x5D08180A,	//0x1f46		VoC_lw16i_set_inc(REG2,0x5d08,0x2)
0x5F38180B,	//0x1f48		VoC_lw16i_set_inc(REG3,0x5f38,0x2)
0x5D281808,	//0x1f4a		VoC_lw16i_set_inc(REG0,0x5d28,0x2)
0x1D122B80,	//0x1f4c		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1f4e		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5D08180B,	//0x1f50		VoC_lw16i_set_inc(REG3,0x5d08,0x2)
0x5CE81808,	//0x1f52		VoC_lw16i_set_inc(REG0,0x5ce8,0x2)
0x1D122B80,	//0x1f54		VoC_jal(COOLSAND_Double2Row_YUV)
0x1D1E2B80,	//0x1f56		VoC_jal(COOLSAN_Encode422MCUBlock_YUV)
0x13721805,	//0x1f58		VoC_lw16i_set_inc(REG1,0x1372,0x1)
0x004F0A80,	//0x1f5a		VoC_lw16i(REG0,0x4f)
		//0x1f5c		LABLE_DO_BEGIN_BEHIND_ODD_YUV
0x5C481804,	//0x1f5c		VoC_lw16i_set_inc(REG0,0x5c48,0x1)
0xDF405FC1,	//0x1f5e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x1C6A2B80,	//0x1f60		VoC_jal(COOLSAND_Double2Single_YUV)
0x1400D611,	//0x1f62		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xF8080D62,	//0x1f64		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1f66		VoC_lw16i_set_inc(REG0,0x5cc8,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xDA115CC8,	//0x1f68		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5cc8,0x1)(hi)
0x1C6A2B80,	//0x1f6a		VoC_jal(COOLSAND_Double2Single_YUV)
0x1400DF81,	//0x1f6c		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xF8080D62,	//0x1f6e		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1f70		VoC_lw16i_set_inc(REG0,0x5f08,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xFFC05F08,	//0x1f72		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5f08,0x1)(hi)
0x1C6A2B80,	//0x1f74		VoC_jal(COOLSAND_Double2Single_YUV)
0x5C48180A,	//0x1f76		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5CC8180B,	//0x1f78		VoC_lw16i_set_inc(REG3,0x5cc8,0x2)
0x5C881808,	//0x1f7a		VoC_lw16i_set_inc(REG0,0x5c88,0x2)
0x1D122B80,	//0x1f7c		VoC_jal(COOLSAND_Double2Row_YUV)
0x5C48180A,	//0x1f7e		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C88180B,	//0x1f80		VoC_lw16i_set_inc(REG3,0x5c88,0x2)
0x5C681808,	//0x1f82		VoC_lw16i_set_inc(REG0,0x5c68,0x2)
0x1D122B80,	//0x1f84		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1f86		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5C88180B,	//0x1f88		VoC_lw16i_set_inc(REG3,0x5c88,0x2)
0x5CA81808,	//0x1f8a		VoC_lw16i_set_inc(REG0,0x5ca8,0x2)
0x1D122B80,	//0x1f8c		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1f8e		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5F08180B,	//0x1f90		VoC_lw16i_set_inc(REG3,0x5f08,0x2)
0x5D081808,	//0x1f92		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x1D122B80,	//0x1f94		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CA8180A,	//0x1f96		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5F08180B,	//0x1f98		VoC_lw16i_set_inc(REG3,0x5f08,0x2)
0x5D281808,	//0x1f9a		VoC_lw16i_set_inc(REG0,0x5d28,0x2)
0x1D122B80,	//0x1f9c		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1f9e		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5D08180B,	//0x1fa0		VoC_lw16i_set_inc(REG3,0x5d08,0x2)
0x5CE81808,	//0x1fa2		VoC_lw16i_set_inc(REG0,0x5ce8,0x2)
0x1D122B80,	//0x1fa4		VoC_jal(COOLSAND_Double2Row_YUV)
0x1D1E2B80,	//0x1fa6		VoC_jal(COOLSAN_Encode422MCUBlock_YUV)
0x0709DF00,	//0x1fa8		VoC_add16_rd(REG1,REG1,0xd24)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x07800D24,	//0x1faa		VoC_sub16_rd(REG0,REG0,0xd17)(lo)	|	VoC_add16_rd(REG1,REG1,0xd24)(hi)
0x31400D17,	//0x1fac		VoC_bngtz16_r(LABLE_LASTROW4_YUV,REG0)(lo)	|	VoC_sub16_rd(REG0,REG0,0xd17)(hi)
0x2B001FB1,	//0x1fae		VoC_jump_lg(LABLE_DO_BEGIN_BEHIND_ODD_YUV)(lo)	|	VoC_bngtz16_r(LABLE_LASTROW4_YUV,REG0)(hi)
0xDFC11F5C,	//0x1fb0		VoC_push16(REG1,DEFAULT)	|	VoC_jump_lg(LABLE_DO_BEGIN_BEHIND_ODD_YUV)(hi)
		//0x1fb1		LABLE_LASTROW4_YUV
0x5C481804,	//0x1fb2		VoC_lw16i_set_inc(REG0,0x5c48,0x1)
0x1CB42B80,	//0x1fb4		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x1400D611,	//0x1fb6		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xF8080D62,	//0x1fb8		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1fba		VoC_lw16i_set_inc(REG0,0x5cc8,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xDA115CC8,	//0x1fbc		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5cc8,0x1)(hi)
0x1CB42B80,	//0x1fbe		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x1400DF81,	//0x1fc0		VoC_lw16_d(REG0,0xd62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xF8080D62,	//0x1fc2		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xd62)(hi)
0x1804C041,	//0x1fc4		VoC_lw16i_set_inc(REG0,0x5f08,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xFFC05F08,	//0x1fc6		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x5f08,0x1)(hi)
0x1CB42B80,	//0x1fc8		VoC_jal(COOLSAND_Double2SingleLastRow_YUV)
0x5C48180A,	//0x1fca		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5CC8180B,	//0x1fcc		VoC_lw16i_set_inc(REG3,0x5cc8,0x2)
0x5C881808,	//0x1fce		VoC_lw16i_set_inc(REG0,0x5c88,0x2)
0x1D122B80,	//0x1fd0		VoC_jal(COOLSAND_Double2Row_YUV)
0x5C48180A,	//0x1fd2		VoC_lw16i_set_inc(REG2,0x5c48,0x2)
0x5C88180B,	//0x1fd4		VoC_lw16i_set_inc(REG3,0x5c88,0x2)
0x5C681808,	//0x1fd6		VoC_lw16i_set_inc(REG0,0x5c68,0x2)
0x1D122B80,	//0x1fd8		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1fda		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5C88180B,	//0x1fdc		VoC_lw16i_set_inc(REG3,0x5c88,0x2)
0x5CA81808,	//0x1fde		VoC_lw16i_set_inc(REG0,0x5ca8,0x2)
0x1D122B80,	//0x1fe0		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1fe2		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5F08180B,	//0x1fe4		VoC_lw16i_set_inc(REG3,0x5f08,0x2)
0x5D081808,	//0x1fe6		VoC_lw16i_set_inc(REG0,0x5d08,0x2)
0x1D122B80,	//0x1fe8		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CA8180A,	//0x1fea		VoC_lw16i_set_inc(REG2,0x5ca8,0x2)
0x5F08180B,	//0x1fec		VoC_lw16i_set_inc(REG3,0x5f08,0x2)
0x5D281808,	//0x1fee		VoC_lw16i_set_inc(REG0,0x5d28,0x2)
0x1D122B80,	//0x1ff0		VoC_jal(COOLSAND_Double2Row_YUV)
0x5CC8180A,	//0x1ff2		VoC_lw16i_set_inc(REG2,0x5cc8,0x2)
0x5D08180B,	//0x1ff4		VoC_lw16i_set_inc(REG3,0x5d08,0x2)
0x5CE81808,	//0x1ff6		VoC_lw16i_set_inc(REG0,0x5ce8,0x2)
0x1D122B80,	//0x1ff8		VoC_jal(COOLSAND_Double2Row_YUV)
0x1D1E2B80,	//0x1ffa		VoC_jal(COOLSAN_Encode422MCUBlock_YUV)
0xE0465F02,	//0x1ffc		VoC_lw16i_short(REG6,0x4,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xC1754134,	//0x1ffe		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x00DF0A86,	//0x2000		VoC_lw16i(REG6,0xdf)
0x2006342E,	//0x2002		VoC_bgt16_rr(LABLE_END_1280BY1024_YUV,REG5,REG6)
0x1D782B00,	//0x2004		VoC_jump_lg(LABLE_START_1280BY1024_YUV)
		//0x2006		LABLE_END_1280BY1024_YUV
0x096E2B80,	//0x2006		VoC_jal(COOLSNAD_flush_bits)
0xFFC0DFA9,	//0x2008		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x200a		VoC_NAD	|	VoC_return
		//0x200c		Coolsand_zoomline_yuv
0x7FFF0A83,	//0x200c		VoC_lw16i(REG3,0x7fff)
0xFF477F43,	//0x200e		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x400A0711,	//0x2010		VoC_add16_rd(REG1,REG2,0x400a)
0xF0087024,	//0x2012		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x400A1405,	//0x2014		VoC_lw16_d(REG5,0x400a)
0x4365F90D,	//0x2016		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0xFFC0E004,	//0x2018		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x203D2E28,	//0x201a		VoC_loop_r(0,REG5)
0xF68579FC,	//0x201c		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xffffffff,DEFAULT)
0xFF066001,	//0x201e		VoC_movreg32(RL6,REG01,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xC2F74810,	//0x2020		VoC_sub16_rr(REG7,REG3,REG6,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG01,REG45,DEFAULT)
0x2176093F,	//0x2022		VoC_add32_rd(RL7,RL7,0x2176)
0xF00559C2,	//0x2024		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF9457944,	//0x2026		VoC_shru16_ri(REG5,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x8,DEFAULT)
0xCD3D4D7C,	//0x2028		VoC_multf32_rr(ACC1,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)
0xF0065982,	//0x202a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xF9457944,	//0x202c		VoC_shru16_ri(REG5,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x8,DEFAULT)
0xCE264E2E,	//0x202e		VoC_mac32_rr(REG4,REG6,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0x5815D894,	//0x2030		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x2982FF30,	//0x2032		VoC_and32_rd(REG45,0x217c)(lo)	|	VoC_movreg32(REG01,RL6,IN_PARALLEL)
0x5C9B217C,	//0x2034		VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_and32_rd(REG45,0x217c)(hi)
0x4E3CCDAC,	//0x2036		VoC_mac32_rr(REG7,REG4,DEFAULT)	|	VoC_multf32_rr(ACC0,REG6,REG5,IN_PARALLEL)
0x7F3BDC99,	//0x2038		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,IN_PARALLEL)
0x2983FF3A,	//0x203a		VoC_and32_rd(REG67,0x217a)(lo)	|	VoC_movreg32(REG45,RL7,IN_PARALLEL)
0x5CA9217A,	//0x203c		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_and32_rd(REG67,0x217a)(hi)
		//0x203d		VoC_endloop0
0x078DFC7A,	//0x203e		VoC_sub16_rd(REG5,REG1,0xd1b)(lo)	|	VoC_shru32_ri(REG45,0xf,IN_PARALLEL)
0x14850D1B,	//0x2040		VoC_lw32_d(ACC1,0x217a)(lo)	|	VoC_sub16_rd(REG5,REG1,0xd1b)(hi)
0xD9AC217A,	//0x2042		VoC_lw32_p(ACC0,REG5,DEFAULT)	|	VoC_lw32_d(ACC1,0x217a)(hi)
0x400A1405,	//0x2044		VoC_lw16_d(REG5,0x400a)
0x5D8CC021,	//0x2046		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG4,DEFAULT)
0xFFC0F90D,	//0x2048		VoC_NAD	|	VoC_shru16_ri(REG5,0x1,IN_PARALLEL)
0x20592E28,	//0x204a		VoC_loop_r(0,REG5)
0x2176093F,	//0x204c		VoC_add32_rd(RL7,RL7,0x2176)
0xC2F75895,	//0x204e		VoC_sub16_rr(REG7,REG3,REG6,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xFF445814,	//0x2050		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG1,DEFAULT)
0x217C2982,	//0x2052		VoC_and32_rd(REG45,0x217c)
0x7F3ACF26,	//0x2054		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_bimac32_rr(REG45,REG67)
0x64EBFF3B,	//0x2056		VoC_and32_rr(REG67,ACC1,DEFAULT)	|	VoC_movreg32(REG67,RL7,IN_PARALLEL)
0x5CA9FC7A,	//0x2058		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_shru32_ri(REG45,0xf,IN_PARALLEL)
		//0x2059		VoC_endloop0
0xDCA9C021,	//0x205a		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG4,IN_PARALLEL)
0xFFC0E580,	//0x205c		VoC_NAD	|	VoC_return
		//0x205e		COOLSAND_AverageTwoLine
0xE0147051,	//0x205e		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x21842904,	//0x2060		VoC_xor16_rd(REG4,0x2184)
0x00800A80,	//0x2062		VoC_lw16i(REG0,0x80)
0x21841504,	//0x2064		VoC_sw16_d(REG4,0x2184)
0x400A1404,	//0x2066		VoC_lw16_d(REG4,0x400a)
0x1B9CF914,	//0x2068		VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0xFFC09B9D,	//0x206a		VoC_NAD	|	VoC_multf32inc_rp(ACC1,REG6,REG3,IN_PARALLEL)
0x207F2E20,	//0x206c		VoC_loop_r(0,REG4)
0xD13A513A,	//0x206e		VoC_mac32inc_rp(REG7,REG2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG2,DEFAULT)
0x9B9D1B9C,	//0x2070		VoC_multf32inc_rp(ACC1,REG6,REG3,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)
0xF7656124,	//0x2072		VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xD13A513A,	//0x2074		VoC_mac32inc_rp(REG7,REG2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG2,DEFAULT)
0xC3454304,	//0x2076		VoC_sub16_rr(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG0,DEFAULT)
0xF7656124,	//0x2078		VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xC3045DCA,	//0x207a		VoC_sub16_rr(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0x1B9CC345,	//0x207c		VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG0,DEFAULT)
0xDDCA9B9D,	//0x207e		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG6,REG3,IN_PARALLEL)
		//0x207f		VoC_endloop0
0x21846E04,	//0x2080		VoC_bnez16_d(LABLE_COMPUTE_UV,0x2184)
0xFFC0E580,	//0x2082		VoC_NAD	|	VoC_return
		//0x2084		LABLE_COMPUTE_UV
0x400A1404,	//0x2084		VoC_lw16_d(REG4,0x400a)
0xFFC0F914,	//0x2086		VoC_NAD	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0x209B2E20,	//0x2088		VoC_loop_r(0,REG4)
0xD13A513A,	//0x208a		VoC_mac32inc_rp(REG7,REG2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG2,DEFAULT)
0x9B9D1B9C,	//0x208c		VoC_multf32inc_rp(ACC1,REG6,REG3,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)
0xF7656124,	//0x208e		VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xD13A513A,	//0x2090		VoC_mac32inc_rp(REG7,REG2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG2,DEFAULT)
0xC3454304,	//0x2092		VoC_sub16_rr(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG0,DEFAULT)
0xF7656124,	//0x2094		VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xC3045DCA,	//0x2096		VoC_sub16_rr(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0x1B9CC345,	//0x2098		VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG0,DEFAULT)
0xDDCA9B9D,	//0x209a		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG6,REG3,IN_PARALLEL)
		//0x209b		VoC_endloop0
0xFFC0E580,	//0x209c		VoC_NAD	|	VoC_return
		//0x209e		CoolSand_SignBits2
0xEE257023,	//0x209e		VoC_lw16i_short(REG5,0xffffffe2,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x20a0		Lable_X_L1
0xC15D790C,	//0x20a0		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x20A031C4,	//0x20a2		VoC_bnez16_r(Lable_X_L1,REG4)
0xFFC0E580,	//0x20a4		VoC_NAD	|	VoC_return
		//0x20a6		CoolSand_Div2
0xF3FF5FE9,	//0x20a6		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF4460C4,	//0x20a8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x209E2B80,	//0x20aa		VoC_jal(CoolSand_SignBits2)
0xF6C860A6,	//0x20ac		VoC_movreg16(ACC0_LO,REG6,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
0xFF4560E4,	//0x20ae		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x209E2B80,	//0x20b0		VoC_jal(CoolSand_SignBits2)
0xFEF460EA,	//0x20b2		VoC_shru32_rr(ACC0,REG6,IN_PARALLEL)	|	VoC_movreg16(ACC1_LO,REG7,DEFAULT)
0xC3747EED,	//0x20b4		VoC_sub16_rr(REG4,REG5,REG6,IN_PARALLEL)	|	VoC_shru32_rr(ACC1,REG5,DEFAULT)
0xE0167087,	//0x20b6		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xE007413C,	//0x20b8		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xFF467263,	//0x20ba		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x13,DEFAULT)
		//0x20bc		LABLE_DIV_COUNTDOWN
0x20C0362C,	//0x20bc		VoC_bgt32_rr(LABLE_DIV_L0,ACC1,ACC0)
0xC99E4B2C,	//0x20be		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
		//0x20c0		LABLE_DIV_L0
0xFDFC7DFE,	//0x20c0		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xffffffff,DEFAULT)
0x31C3DE18,	//0x20c2		VoC_bnez16_r(LABLE_DIV_COUNTDOWN,REG3)(lo)	|	VoC_inc_p(REG3,DEFAULT)
0x5FA920BC,	//0x20c4		VoC_pop16(RA,DEFAULT)	|	VoC_bnez16_r(LABLE_DIV_COUNTDOWN,REG3)(hi)
0xFEE6F00B,	//0x20c6		VoC_shru32_rr(RL6,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xFFC0E580,	//0x20c8		VoC_NAD	|	VoC_return
		//0x20ca		COOLSAND_ENCODE_YUVBLOCK
0x400A1407,	//0x20ca		VoC_lw16_d(REG7,0x400a)
0x0D1907BC,	//0x20cc		VoC_sub16_rd(REG4,REG7,0xd19)
0x400A1401,	//0x20ce		VoC_lw16_d(REG1,0x400a)
0xC1E57921,	//0x20d0		VoC_add16_rr(REG5,REG7,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0x4,DEFAULT)
0x10F21808,	//0x20d2		VoC_lw16i_set_inc(REG0,0x10f2,0x2)
0xDF425FC7,	//0x20d4		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
		//0x20d6		LABLE_LOOP_LINEBY16
0xDFE95F40,	//0x20d6		VoC_push16(RA,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x0F68180A,	//0x20d8		VoC_lw16i_set_inc(REG2,0xf68,0x2)
0x0FA8180B,	//0x20da		VoC_lw16i_set_inc(REG3,0xfa8,0x2)
0x21052C05,	//0x20dc		VoC_loop_i(0x1,0x2)
0x21022C08,	//0x20de		VoC_loop_i(0x0,0x4)
0xD9C4D9C4,	//0x20e0		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDD4DDD4,	//0x20e2		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD9C4D9C4,	//0x20e4		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDD4DDD4,	//0x20e6		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD9C4D9C4,	//0x20e8		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDDCDDDC,	//0x20ea		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x59C4D9C4,	//0x20ec		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x5DDCD912,	//0x20ee		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32_sd(REG45,0x1,IN_PARALLEL)
0xDDDCC028,	//0x20f0		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)
0xD9C4D9C4,	//0x20f2		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDD4DDD4,	//0x20f4		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD9C4D9C4,	//0x20f6		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDD4DDD4,	//0x20f8		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD9C4D9C4,	//0x20fa		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDDCDDDC,	//0x20fc		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xD9C4D9C4,	//0x20fe		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xC0205DDC,	//0x2100		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x2102		VoC_endloop0
0x180ADDDC,	//0x2102		VoC_lw16i_set_inc(REG2,0xfe8,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x180B0FE8,	//0x2104		VoC_lw16i_set_inc(REG3,0x1028,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0xfe8,0x2)(hi)
		//0x2105		VoC_endloop1
0x59081028,	//0x2106		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1028,0x2)(hi)
0x4038D627,	//0x2108		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16_sd(REG7,0x1,IN_PARALLEL)
0x180AC17E,	//0x210a		VoC_lw16i_set_inc(REG2,0x1068,0x2)(lo)	|	VoC_add16_rr(REG6,REG5,REG7,IN_PARALLEL)
0x180B1068,	//0x210c		VoC_lw16i_set_inc(REG3,0x10a8,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x1068,0x2)(hi)
0x2C1010A8,	//0x210e		VoC_loop_i(0x0,0x8)(lo)	|	VoC_lw16i_set_inc(REG3,0x10a8,0x2)(hi)
0xD9C42129,	//0x2110		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x8)(hi)
0x6149D9C5,	//0x2112		VoC_movreg16(ACC0_HI,ACC1_LO,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xD9C6F72A,	//0x2114		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_movreg16(ACC1_LO,ACC0_HI,IN_PARALLEL)
0x61CDD9C7,	//0x2116		VoC_movreg16(RL6_HI,RL7_LO,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xDDD4F7AE,	//0x2118		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_movreg16(RL7_LO,RL6_HI,IN_PARALLEL)
0xDDD6DDDD,	//0x211a		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0xD9C4DDDF,	//0x211c		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
0x6149D9C5,	//0x211e		VoC_movreg16(ACC0_HI,ACC1_LO,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xD9C6F72A,	//0x2120		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_movreg16(ACC1_LO,ACC0_HI,IN_PARALLEL)
0x61CDD9C7,	//0x2122		VoC_movreg16(RL6_HI,RL7_LO,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xDDD4F7AE,	//0x2124		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_movreg16(RL7_LO,RL6_HI,IN_PARALLEL)
0x5DD6DDDD,	//0x2126		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0x5DDFC030,	//0x2128		VoC_sw32inc_p(RL7,REG3,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)
		//0x2129		VoC_endloop0
0x1806E004,	//0x212a		VoC_lw16i_set_inc(REG2,0x10e9,0x1)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x180410E9,	//0x212c		VoC_lw16i_set_inc(REG0,0xf68,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x10e9,0x1)(hi)
0xFFC00F68,	//0x212e		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0xf68,0x1)(hi)
0x07CE2B80,	//0x2130		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x2132		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FA81804,	//0x2134		VoC_lw16i_set_inc(REG0,0xfa8,0x1)
0xFFC0F004,	//0x2136		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x2138		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x213a		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x0FE81804,	//0x213c		VoC_lw16i_set_inc(REG0,0xfe8,0x1)
0xFFC0F004,	//0x213e		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x2140		VoC_jal(COOLSAND_encode_block)
0x10E91806,	//0x2142		VoC_lw16i_set_inc(REG2,0x10e9,0x1)
0x10281804,	//0x2144		VoC_lw16i_set_inc(REG0,0x1028,0x1)
0xFFC0F004,	//0x2146		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x07CE2B80,	//0x2148		VoC_jal(COOLSAND_encode_block)
0x10EA1806,	//0x214a		VoC_lw16i_set_inc(REG2,0x10ea,0x1)
0x10681804,	//0x214c		VoC_lw16i_set_inc(REG0,0x1068,0x1)
0xFFC0F024,	//0x214e		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x2150		VoC_jal(COOLSAND_encode_block)
0x10EB1806,	//0x2152		VoC_lw16i_set_inc(REG2,0x10eb,0x1)
0x10A81804,	//0x2154		VoC_lw16i_set_inc(REG0,0x10a8,0x1)
0xFFC0F024,	//0x2156		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x07CE2B80,	//0x2158		VoC_jal(COOLSAND_encode_block)
0xE1065F00,	//0x215a		VoC_lw16i_short(REG6,0x10,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xC2794030,	//0x215c		VoC_sub16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0xF0085FA9,	//0x215e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x21643181,	//0x2160		VoC_bez16_r(LABLE_QUITE_ENCODE_IMCU,REG1)
0x20D62B00,	//0x2162		VoC_jump_lg(LABLE_LOOP_LINEBY16)
		//0x2164		LABLE_QUITE_ENCODE_IMCU
0xDF025F87,	//0x2164		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDFE9E580,	//0x2166		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2167		COOLSAND_ZOOM_JpgeEnc
0x40061483,	//0x2168		VoC_lw32_d(REG67,0x4006)
0x400A1487,	//0x216a		VoC_lw32_d(RL7,0x400a)
0xF6EE61C7,	//0x216c		VoC_movreg16(RL7_LO,REG7,IN_PARALLEL)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0x20A62B80,	//0x216e		VoC_jal(CoolSand_Div2)
0x1586FF3B,	//0x2170		VoC_sw32_d(RL6,0x2176)(lo)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0xFFC02176,	//0x2172		VoC_NAD	|	VoC_sw32_d(RL6,0x2176)(hi)
0x20A62B80,	//0x2174		VoC_jal(CoolSand_Div2)
0x21781586,	//0x2176		VoC_sw32_d(RL6,0x2178)
0xE5067125,	//0x2178		VoC_lw16i_short(REG6,0x50,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x9,DEFAULT)
0xF5F145AD,	//0x217a		VoC_lw16i_short(FORMAT32,0xfffffffe,IN_PARALLEL)	|	VoC_mult16_rr(REG5,REG6,REG5,DEFAULT)
0x00FF0A8A,	//0x217c		VoC_lw16i(ACC1_LO,0xff)
0xF74B7104,	//0x217e		VoC_movreg16(ACC1_HI,ACC1_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0xFF464D34,	//0x2180		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG6,DEFAULT)
0x21721582,	//0x2182		VoC_sw32_d(REG45,0x2172)
0x7FFE0A8C,	//0x2184		VoC_lw16i(RL6_LO,0x7ffe)
0x21741584,	//0x2186		VoC_sw32_d(ACC0,0x2174)
0xE00777C6,	//0x2188		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xfffffffe,DEFAULT)
0x217C1585,	//0x218a		VoC_sw32_d(ACC1,0x217c)
0x217E1583,	//0x218c		VoC_sw32_d(REG67,0x217e)
0x21841507,	//0x218e		VoC_sw16_d(REG7,0x2184)
0x21860A86,	//0x2190		VoC_lw16i(REG6,0x2186)
0x082DF305,	//0x2192		VoC_mult16_rd(REG5,REG5,0x400a)(lo)	|	VoC_lw16i_short(REG5,0x18,DEFAULT)
0x0A87400A,	//0x2194		VoC_lw16i(REG7,0x10f2)(lo)	|	VoC_mult16_rd(REG5,REG5,0x400a)(hi)
0xC17F10F2,	//0x2196		VoC_add16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_lw16i(REG7,0x10f2)(hi)
0x217A1586,	//0x2198		VoC_sw32_d(RL6,0x217a)
0x21821583,	//0x219a		VoC_sw32_d(REG67,0x2182)
0x10C30A85,	//0x219c		VoC_lw16i(REG5,0x10c3)
0x21731404,	//0x219e		VoC_lw16_d(REG4,0x2173)
0x40021484,	//0x21a0		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x21a2		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x21a4		VoC_sw32_d(ACC0,0xffc4)
0x21740924,	//0x21a6		VoC_add32_rd(ACC0,ACC0,0x2174)
0x1584FFC0,	//0x21a8		VoC_sw32_d(ACC0,0x4002)(lo)	|	VoC_NOP
0x14044002,	//0x21aa		VoC_lw16_d(REG4,0x400b)(lo)	|	VoC_sw32_d(ACC0,0x4002)(hi)
0xFF43400B,	//0x21ac		VoC_lw32z(REG67,DEFAULT)	|	VoC_lw16_d(REG4,0x400b)(hi)
0xF5F977FA,	//0x21ae		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xffffffff,DEFAULT)
0x10F20A81,	//0x21b0		VoC_lw16i(REG1,0x10f2)
0xDE80DFC7,	//0x21b2		VoC_cfg(0x0)	|	VoC_push16(REG7,DEFAULT)
0x1794FFC0,	//0x21b4		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xD6150008,	//0x21b6		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
		//0x21b7		LABLE_LOOP_ZOOM
0xDF435FC4,	//0x21b8		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xDFC17C7B,	//0x21ba		VoC_push16(REG1,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xf,DEFAULT)
0x1407C3AE,	//0x21bc		VoC_lw16_d(REG7,0x217e)(lo)	|	VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)
0x499E217E,	//0x21be		VoC_blt16_rd(LABLE_PREVIEW_L0,REG6,0x2172)(lo)	|	VoC_lw16_d(REG7,0x217e)(hi)
0x0A852172,	//0x21c0		VoC_lw16i(REG5,0x10c3)(lo)	|	VoC_blt16_rd(LABLE_PREVIEW_L0,REG6,0x2172)(hi)
0x140410C3,	//0x21c2		VoC_lw16_d(REG4,0x2173)(lo)	|	VoC_lw16i(REG5,0x10c3)(hi)
0x14842173,	//0x21c4		VoC_lw32_d(ACC0,0x4002)(lo)	|	VoC_lw16_d(REG4,0x2173)(hi)
0x15C24002,	//0x21c6		VoC_sw32_d(REG45,0xffc2)(lo)	|	VoC_lw32_d(ACC0,0x4002)(hi)
0x15C47FC2,	//0x21c8		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw32_d(REG45,0xffc2)(hi)
0x09247FC4,	//0x21ca		VoC_add32_rd(ACC0,ACC0,0x2174)(lo)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x14052174,	//0x21cc		VoC_lw16_d(REG5,0x2172)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x2174)(hi)
0x15842172,	//0x21ce		VoC_sw32_d(ACC0,0x4002)(lo)	|	VoC_lw16_d(REG5,0x2172)(hi)
0x56344002,	//0x21d0		VoC_lw16_sd(REG4,0x2,DEFAULT)	|	VoC_sw32_d(ACC0,0x4002)(hi)
0xC12CC3AE,	//0x21d2		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)
0xDA34C3EF,	//0x21d4		VoC_sw16_sd(REG4,0x2,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)
0xFFC0DE80,	//0x21d6		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x21d8		VoC_cfg_lg(0x8,)
		//0x21da		LABLE_PREVIEW_L0
0x00A00A85,	//0x21da		VoC_lw16i(REG5,0xa0)
0xC3BF45AC,	//0x21dc		VoC_sub16_rr(REG7,REG6,REG7,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG6,REG5,DEFAULT)
0x217E1506,	//0x21de		VoC_sw16_d(REG6,0x217e)
0x21820724,	//0x21e0		VoC_add16_rd(REG4,REG4,0x2182)
0xE016412D,	//0x21e2		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG4,REG5,DEFAULT)
0x220435BE,	//0x21e4		VoC_bne16_rr(LABLE_PREVIEW_L1,REG7,REG6)
0x217F6E10,	//0x21e6		VoC_bnez16_d(LABLE_PREVIEW_L3,0x217f)
0x5C48180B,	//0x21e8		VoC_lw16i_set_inc(REG3,0x5c48,0x2)
0x5DA81806,	//0x21ea		VoC_lw16i_set_inc(REG2,0x5da8,0x1)
0x217F1506,	//0x21ec		VoC_sw16_d(REG6,0x217f)
0x21801581,	//0x21ee		VoC_sw32_d(REG23,0x2180)
0xF6A06062,	//0x21f0		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x200C2B80,	//0x21f2		VoC_jal(Coolsand_zoomline_yuv)
0x22182B00,	//0x21f4		VoC_jump_lg(LABLE_PREVIEW_L2)
		//0x21f6		LABLE_PREVIEW_L3
0x180BF006,	//0x21f6		VoC_lw16i_set_inc(REG3,0x5da8,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18065DA8,	//0x21f8		VoC_lw16i_set_inc(REG2,0x5c48,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x5da8,0x2)(hi)
0x15065C48,	//0x21fa		VoC_sw16_d(REG6,0x217f)(lo)	|	VoC_lw16i_set_inc(REG2,0x5c48,0x1)(hi)
0x1581217F,	//0x21fc		VoC_sw32_d(REG23,0x2180)(lo)	|	VoC_sw16_d(REG6,0x217f)(hi)
0x60622180,	//0x21fe		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw32_d(REG23,0x2180)(hi)
0x2B80F6A0,	//0x2200		VoC_jal(Coolsand_zoomline_yuv)(lo)	|	VoC_movreg16(REG0,REG5,IN_PARALLEL)
0xE5D5200C,	//0x2202		VoC_jump(LABLE_PREVIEW_L2)	|	VoC_jal(Coolsand_zoomline_yuv)(hi)
		//0x2204		LABLE_PREVIEW_L1
0x22183187,	//0x2204		VoC_bez16_r(LABLE_PREVIEW_L2,REG7)
0x180BF006,	//0x2206		VoC_lw16i_set_inc(REG3,0x5da8,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18065DA8,	//0x2208		VoC_lw16i_set_inc(REG2,0x5c48,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x5da8,0x2)(hi)
0x15065C48,	//0x220a		VoC_sw16_d(REG6,0x217f)(lo)	|	VoC_lw16i_set_inc(REG2,0x5c48,0x1)(hi)
0x6080217F,	//0x220c		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_sw16_d(REG6,0x217f)(hi)
0x1581DFC5,	//0x220e		VoC_sw32_d(REG23,0x2180)(lo)	|	VoC_push16(REG5,IN_PARALLEL)
0x2B802180,	//0x2210		VoC_jal(Coolsand_zoomline_yuv)(lo)	|	VoC_sw32_d(REG23,0x2180)(hi)
0xDF80200C,	//0x2212		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(Coolsand_zoomline_yuv)(hi)
0x5DA80A82,	//0x2214		VoC_lw16i(REG2,0x5da8)
0x200C2B80,	//0x2216		VoC_jal(Coolsand_zoomline_yuv)
		//0x2218		LABLE_PREVIEW_L2
0x7FFF180B,	//0x2218		VoC_lw16i_set_inc(REG3,0x7fff,0x2)
0xF00A590B,	//0x221a		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x217A2983,	//0x221c		VoC_and32_rd(REG67,0x217a)
0xDF8142F7,	//0x221e		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG3,REG6,DEFAULT)
0x21801481,	//0x2220		VoC_lw32_d(REG23,0x2180)
0x205E2B80,	//0x2222		VoC_jal(COOLSAND_AverageTwoLine)
0x21834481,	//0x2224		VoC_bne16_rd(LABLE_JUMP2LOOP,REG1,0x2183)
0x20CA2B80,	//0x2226		VoC_jal(COOLSAND_ENCODE_YUVBLOCK)
0x10F20A81,	//0x2228		VoC_lw16i(REG1,0x10f2)
0xF5F977FA,	//0x222a		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xffffffff,DEFAULT)
		//0x222c		LABLE_JUMP2LOOP
0xE0155F84,	//0x222c		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0xDF03432C,	//0x222e		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)
0x2178091B,	//0x2230		VoC_add32_rd(REG67,REG67,0x2178)
0x22363184,	//0x2232		VoC_bez16_r(LABLE_QUITE,REG4)
0x21B72B00,	//0x2234		VoC_jump_lg(LABLE_LOOP_ZOOM)
		//0x2236		LABLE_QUITE
0x2804F1E4,	//0x2236		VoC_and16_rd(REG4,0x400b)(lo)	|	VoC_lw16i_short(REG4,0xf,DEFAULT)
0x3184400B,	//0x2238		VoC_bez16_r(LABLE_ZOOM_ENC_HEIGHT_LOOP_END,REG4)(lo)	|	VoC_and16_rd(REG4,0x400b)(hi)
0xFFC0223E,	//0x223a		VoC_NAD	|	VoC_bez16_r(LABLE_ZOOM_ENC_HEIGHT_LOOP_END,REG4)(hi)
0x20CA2B80,	//0x223c		VoC_jal(COOLSAND_ENCODE_YUVBLOCK)
		//0x223e		LABLE_ZOOM_ENC_HEIGHT_LOOP_END
0x096E2B80,	//0x223e		VoC_jal(COOLSNAD_flush_bits)
0xDFA9DF83,	//0x2240		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xE580FFC0,	//0x2242		VoC_return	|	VoC_NOP
