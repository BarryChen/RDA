  		//0x000e		VoC_code_section_1
		//0x000e		CII_prvDecodeFrame_VOC
0x6E09DFE9,	//0x000e		VoC_bnez16_d(DecFrame_GetPCM,0x2553)(lo)	|	VoC_push16(RA,DEFAULT)
0xFFC02553,	//0x0010		VoC_NAD	|	VoC_bnez16_d(DecFrame_GetPCM,0x2553)(hi)
		//0x0012		NEWFRAME
0x00242B80,	//0x0012		VoC_jal(CII_WMAFileDecodeData_VOC)
0x0C371500,	//0x0014		VoC_sw16_d(REG0,0xc37)
0x002031C0,	//0x0016		VoC_bnez16_r(DecFrame_return,REG0)
		//0x0018		DecFrame_GetPCM
0x08000A82,	//0x0018		VoC_lw16i(REG2,0x800)
0xFFC06045,	//0x001a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG2,DEFAULT)
0x01412B80,	//0x001c		VoC_jal(CII_GetPCM_VOC)
0x25536DB4,	//0x001e		VoC_bez16_d(NEWFRAME,0x2553)
		//0x0020		DecFrame_return
0x1400DFA9,	//0x0020		VoC_lw16_d(REG0,0xc37)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800C37,	//0x0022		VoC_return	|	VoC_lw16_d(REG0,0xc37)(hi)
		//0x0024		CII_WMAFileDecodeData_VOC
0xFFC05FE9,	//0x0024		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
		//0x0026		Label_LOOP_start
0x08061406,	//0x0026		VoC_lw16_d(REG6,0x806)
0x11984086,	//0x0028		VoC_be16_rd(Label_case_csWMA_DecodePayloadHeader,REG6,0x1198)
0x11994426,	//0x002a		VoC_bne16_rd(Label_case_csWMA_DecodeLoopNOTStart,REG6,0x1199)
0x00722B00,	//0x002c		VoC_jump_lg(Label_case_csWMA_DecodeLoopStart)
		//0x002e		Label_case_csWMA_DecodeLoopNOTStart
0x00F02B00,	//0x002e		VoC_jump_lg(Label_case_default)
		//0x0030		Label_case_csWMA_DecodePayloadHeader
0xE0767021,	//0x0030		VoC_lw16i_short(REG6,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x088B4431,	//0x0032		VoC_bne16_rd(Label_JudgeFrameState,REG1,0x88b)
0x08061506,	//0x0034		VoC_sw16_d(REG6,0x806)
0xFFC065F0,	//0x0036		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_LOOP_start)
		//0x0038		Label_JudgeFrameState
0xE0227000,	//0x0038		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x408AF021,	//0x003a		VoC_be16_rd(Label_waitstate,REG2,0x88b)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x4099088B,	//0x003c		VoC_be16_rd(Label_allFramedone,REG1,0x890)(lo)	|	VoC_be16_rd(Label_waitstate,REG2,0x88b)(hi)
0x40980890,	//0x003e		VoC_be16_rd(Label_first,REG0,0x891)(lo)	|	VoC_be16_rd(Label_allFramedone,REG1,0x890)(hi)
0x2B000891,	//0x0040		VoC_jump_lg(Label_state_change)(lo)	|	VoC_be16_rd(Label_first,REG0,0x891)(hi)
0xFFC0006B,	//0x0042		VoC_NAD	|	VoC_jump_lg(Label_state_change)(hi)
		//0x0044		Label_waitstate
0x088B1500,	//0x0044		VoC_sw16_d(REG0,0x88b)
0xFFC065C4,	//0x0046		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_first)
		//0x0048		Label_allFramedone
0x08901500,	//0x0048		VoC_sw16_d(REG0,0x890)
		//0x004a		Label_first
0x08911501,	//0x004a		VoC_sw16_d(REG1,0x891)
0x02342B80,	//0x004c		VoC_jal(CII_audecDecodeInfo_VOC)
0x04040AC4,	//0x004e		VoC_lw16i(REG4,0x8404)
0x04010AC3,	//0x0050		VoC_lw16i(REG3,0x8401)
0x006235A7,	//0x0052		VoC_bne16_rr(Label_LOSTPACKET,REG4,REG7)
0x08941487,	//0x0054		VoC_lw32_d(RL7,0x894)
0x5087F042,	//0x0056		VoC_bgt32_rd(Label_else_GT,RL7,0x898)(lo)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x70070898,	//0x0058		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bgt32_rd(Label_else_GT,RL7,0x898)(hi)
0x1502E000,	//0x005a		VoC_sw16_d(REG2,0x88b)(lo)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
0x2B00088B,	//0x005c		VoC_jump_lg(Label_FileDecode_exit)(lo)	|	VoC_sw16_d(REG2,0x88b)(hi)
0xF0C000F6,	//0x005e		VoC_lw16i_short(REG0,0x6,DEFAULT)	|	VoC_jump_lg(Label_FileDecode_exit)(hi)
		//0x005f		Label_else_GT
0x00F62B00,	//0x0060		VoC_jump_lg(Label_FileDecode_exit)
		//0x0062		Label_LOSTPACKET
0x0066359F,	//0x0062		VoC_bne16_rr(Label_Failed,REG3,REG7)
0xFFC07007,	//0x0064		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0066		Label_Failed
0x006B3247,	//0x0066		VoC_bnltz16_r(Label_state_change,REG7)
0x2B00F020,	//0x0068		VoC_jump_lg(Label_FileDecode_exit)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xF0E600F6,	//0x006a		VoC_lw16i_short(REG6,0x7,DEFAULT)	|	VoC_jump_lg(Label_FileDecode_exit)(hi)
		//0x006b		Label_state_change
0x1506FFC0,	//0x006c		VoC_sw16_d(REG6,0x806)(lo)	|	VoC_NOP
0x2B000806,	//0x006e		VoC_jump_lg(Label_LOOP_start)(lo)	|	VoC_sw16_d(REG6,0x806)(hi)
0xFFC00026,	//0x0070		VoC_NAD	|	VoC_jump_lg(Label_LOOP_start)(hi)
		//0x0072		Label_case_csWMA_DecodeLoopStart
0xE0667021,	//0x0072		VoC_lw16i_short(REG6,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x4439F000,	//0x0074		VoC_bne16_rd(Label_audecDecodeData,REG1,0x88b)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x1506088B,	//0x0076		VoC_sw16_d(REG6,0x806)(lo)	|	VoC_bne16_rd(Label_audecDecodeData,REG1,0x88b)(hi)
0x15000806,	//0x0078		VoC_sw16_d(REG0,0x88b)(lo)	|	VoC_sw16_d(REG6,0x806)(hi)
0xFFC0088B,	//0x007a		VoC_NAD	|	VoC_sw16_d(REG0,0x88b)(hi)
		//0x007c		Label_audecDecodeData
0x02D02B80,	//0x007c		VoC_jal(CII_audecDecodeData_VOC)
0x0C371407,	//0x007e		VoC_lw16_d(REG7,0xc37)
0xE0117084,	//0x0080		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x04010AC3,	//0x0082		VoC_lw16i(REG3,0x8401)
0x04020AC2,	//0x0084		VoC_lw16i(REG2,0x8402)
0x04040AC5,	//0x0086		VoC_lw16i(REG5,0x8404)
0x008C35BC,	//0x0088		VoC_bne16_rr(Label_LOSTPACKET2,REG7,REG4)
0x08901501,	//0x008a		VoC_sw16_d(REG1,0x890)
		//0x008c		Label_LOSTPACKET2
0x009435BB,	//0x008c		VoC_bne16_rr(Label_BROKEN_FRAME,REG7,REG3)
0xE00770C6,	//0x008e		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x6,DEFAULT)
0x08901501,	//0x0090		VoC_sw16_d(REG1,0x890)
0x08061506,	//0x0092		VoC_sw16_d(REG6,0x806)
		//0x0094		Label_BROKEN_FRAME
0x00B635BA,	//0x0094		VoC_bne16_rr(Label_ONHOLD,REG7,REG2)
0xFF467000,	//0x0096		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x1500F0A5,	//0x0098		VoC_sw16_d(REG0,0x8d7)(lo)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0x158608D7,	//0x009a		VoC_sw32_d(RL6,0x8d8)(lo)	|	VoC_sw16_d(REG0,0x8d7)(hi)
0x150008D8,	//0x009c		VoC_sw16_d(REG0,0x8db)(lo)	|	VoC_sw32_d(RL6,0x8d8)(hi)
0x150108DB,	//0x009e		VoC_sw16_d(REG1,0x8dd)(lo)	|	VoC_sw16_d(REG0,0x8db)(hi)
0x158608DD,	//0x00a0		VoC_sw32_d(RL6,0x8d2)(lo)	|	VoC_sw16_d(REG1,0x8dd)(hi)
0x0ACF08D2,	//0x00a2		VoC_lw16i(RL7_HI,0xffff)(lo)	|	VoC_sw32_d(RL6,0x8d2)(hi)
0x0ACE7FFF,	//0x00a4		VoC_lw16i(RL7_LO,0xfffe)(lo)	|	VoC_lw16i(RL7_HI,0xffff)(hi)
0x442D7FFE,	//0x00a6		VoC_bne16_rd(Label_PacketCurr,REG5,0x8f6)(lo)	|	VoC_lw16i(RL7_LO,0xfffe)(hi)
0x150108F6,	//0x00a8		VoC_sw16_d(REG1,0x8f6)(lo)	|	VoC_bne16_rd(Label_PacketCurr,REG5,0x8f6)(hi)
0xFFC008F6,	//0x00aa		VoC_NAD	|	VoC_sw16_d(REG1,0x8f6)(hi)
		//0x00ac		Label_PacketCurr
0x08E81587,	//0x00ac		VoC_sw32_d(RL7,0x8e8)
0x1501F106,	//0x00ae		VoC_sw16_d(REG1,0x890)(lo)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0x15060890,	//0x00b0		VoC_sw16_d(REG6,0x806)(lo)	|	VoC_sw16_d(REG1,0x890)(hi)
0x2B000806,	//0x00b2		VoC_jump_lg(Label_LOOP_start)(lo)	|	VoC_sw16_d(REG6,0x806)(hi)
0xFFC00026,	//0x00b4		VoC_NAD	|	VoC_jump_lg(Label_LOOP_start)(hi)
		//0x00b6		Label_ONHOLD
0x00C635BD,	//0x00b6		VoC_bne16_rr(Label_NotOK,REG7,REG5)
0x08941487,	//0x00b8		VoC_lw32_d(RL7,0x894)
0x5087F021,	//0x00ba		VoC_bgt32_rd(Label_else_GT2,RL7,0x898)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x70070898,	//0x00bc		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bgt32_rd(Label_else_GT2,RL7,0x898)(hi)
0x1501E000,	//0x00be		VoC_sw16_d(REG1,0x88b)(lo)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
0x2B00088B,	//0x00c0		VoC_jump_lg(Label_FileDecode_exit)(lo)	|	VoC_sw16_d(REG1,0x88b)(hi)
0xF0C000F6,	//0x00c2		VoC_lw16i_short(REG0,0x6,DEFAULT)	|	VoC_jump_lg(Label_FileDecode_exit)(hi)
		//0x00c3		Label_else_GT2
0x00F62B00,	//0x00c4		VoC_jump_lg(Label_FileDecode_exit)
		//0x00c6		Label_NotOK
0x00ED3187,	//0x00c6		VoC_bez16_r(Label_DecodeLoopReturn,REG7)
0x4427F0C0,	//0x00c8		VoC_bne16_rd(Label_FileDecode_con,REG7,0x1197)(lo)	|	VoC_lw16i_short(REG0,0x6,DEFAULT)
0x2B001197,	//0x00ca		VoC_jump_lg(Label_FileDecode_exit)(lo)	|	VoC_bne16_rd(Label_FileDecode_con,REG7,0x1197)(hi)
0xF00000F6,	//0x00cc		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jump_lg(Label_FileDecode_exit)(hi)
		//0x00cd		Label_FileDecode_con
0x00F6353B,	//0x00ce		VoC_be16_rr(Label_FileDecode_exit,REG7,REG3)
0x00E83247,	//0x00d0		VoC_bnltz16_r(Label_NotFailed,REG7)
0xE0557F46,	//0x00d2		VoC_lw16i_short(REG5,0x5,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x08D71500,	//0x00d4		VoC_sw16_d(REG0,0x8d7)
0x08D81586,	//0x00d6		VoC_sw32_d(RL6,0x8d8)
0x08DB1500,	//0x00d8		VoC_sw16_d(REG0,0x8db)
0x08DD1501,	//0x00da		VoC_sw16_d(REG1,0x8dd)
0x08D21586,	//0x00dc		VoC_sw32_d(RL6,0x8d2)
0x7FFF0ACF,	//0x00de		VoC_lw16i(RL7_HI,0xffff)
0x7FFE0ACE,	//0x00e0		VoC_lw16i(RL7_LO,0xfffe)
0x08F64425,	//0x00e2		VoC_bne16_rd(Label_PacketCurr2,REG5,0x8f6)
0x08F61501,	//0x00e4		VoC_sw16_d(REG1,0x8f6)
		//0x00e6		Label_PacketCurr2
0x08E81587,	//0x00e6		VoC_sw32_d(RL7,0x8e8)
		//0x00e8		Label_NotFailed
0xF000F0C6,	//0x00e8		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(REG6,0x6,DEFAULT)
0x08061506,	//0x00ea		VoC_sw16_d(REG6,0x806)
0xF000E5CA,	//0x00ec		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jump(Label_FileDecode_exit)
		//0x00ed		Label_DecodeLoopReturn
0xFFC065C8,	//0x00ee		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_FileDecode_exit)
		//0x00f0		Label_case_default
0x15FD2B80,	//0x00f0		VoC_jal(CII_WMAF_UpdateNewPayload_VOC)
0x00263187,	//0x00f2		VoC_bez16_r(Label_LOOP_start,REG7)
0xE5C1E0E0,	//0x00f4		VoC_jump(Label_FileDecode_exit)	|	VoC_movreg16(REG0,REG7,DEFAULT)
		//0x00f6		Label_FileDecode_exit
0xFFC0DFA9,	//0x00f6		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x00f8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x00f9		CII_MixPCM_VOC
0x25446C19,	//0x00fa		VoC_bez16_d(VoC_Mixer_end,0x2544)
0xDFC1E080,	//0x00fc		VoC_push16(REG1,DEFAULT)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0xE001F8F8,	//0x00fe		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x00020A90,	//0x0100		VoC_lw16i(INC0,0x2)
0x00020A91,	//0x0102		VoC_lw16i(INC1,0x2)
0x0A85D9C1,	//0x0104		VoC_lw16i(REG5,0x0)(lo)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0xFFC00000,	//0x0106		VoC_NAD	|	VoC_lw16i(REG5,0x0)(hi)
		//0x0108		VoC_Mixer_begain1
0xF80B780A,	//0x0108		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xE043C09A,	//0x010a		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x1193072D,	//0x010c		VoC_add16_rd(REG5,REG5,0x1193)
0xDDC9D9C1,	//0x010e		VoC_sw32inc_p(REG23,REG1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x01083435,	//0x0110		VoC_bgt16_rr(VoC_Mixer_begain1,REG6,REG5)
0xDFA9DF81,	//0x0112		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
		//0x0113		VoC_Mixer_end
0xE580FFC0,	//0x0114		VoC_return	|	VoC_NOP
		//0x0116		CII_Adjust_EQ_Curve_VOC
0xDFC5DFE9,	//0x0116		VoC_push16(REG5,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x25451406,	//0x0118		VoC_lw16_d(REG6,0x2545)
0x013D3186,	//0x011a		VoC_bez16_r(Adjust_EQ_curve_end,REG6)
0x25461406,	//0x011c		VoC_lw16_d(REG6,0x2546)
0x013D31C6,	//0x011e		VoC_bnez16_r(Adjust_EQ_curve_end,REG6)
0x25481805,	//0x0120		VoC_lw16i_set_inc(REG1,0x2548,0x1)
0x24AE1804,	//0x0122		VoC_lw16i_set_inc(REG0,0x24ae,0x1)
0x24AE1806,	//0x0124		VoC_lw16i_set_inc(REG2,0x24ae,0x1)
0xF4617025,	//0x0126		VoC_lw16i_short(FORMAT32,0xc,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x25461505,	//0x0128		VoC_sw16_d(REG5,0x2546)
0x00200A96,	//0x012a		VoC_lw16i(STATUS,0x20)
0x2C10D884,	//0x012c		VoC_loop_i(0x0,0x8)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD893013C,	//0x012e		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x8)(hi)
0x01392C15,	//0x0130		VoC_loop_i(0x1,0xa)
0xD884CCE4,	//0x0132		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG4,DEFAULT)
0x11BA6024,	//0x0134		VoC_blt32_rd(Adjust_EQ_Curve_L0,ACC0,0x11ba)
0x11BA1484,	//0x0136		VoC_lw32_d(ACC0,0x11ba)
		//0x0138		Adjust_EQ_Curve_L0
0xDCA8D893,	//0x0138		VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
		//0x0139		VoC_endloop1
0x25480A81,	//0x013a		VoC_lw16i(REG1,0x2548)
		//0x013c		VoC_endloop0
0xDF85FFC0,	//0x013c		VoC_pop16(REG5,DEFAULT)	|	VoC_NOP
		//0x013d		Adjust_EQ_curve_end
0xFFC0DFA9,	//0x013e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0140		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0141		CII_GetPCM_VOC
0x258C1505,	//0x0142		VoC_sw16_d(REG5,0x258c)
0x08E01400,	//0x0144		VoC_lw16_d(REG0,0x8e0)
0x08E01401,	//0x0146		VoC_lw16_d(REG1,0x8e0)
0x11934090,	//0x0148		VoC_be16_rd(CASE_LOOP_BEGIN,REG0,0x1193)
0x11944081,	//0x014a		VoC_be16_rd(CASE_LOOP_BEGIN,REG1,0x1194)
0xFFC0F005,	//0x014c		VoC_NOP	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x25531505,	//0x014e		VoC_sw16_d(REG5,0x2553)
0x022F2B00,	//0x0150		VoC_jump_lg(GPFUNCTION_END)
		//0x0152		CASE_LOOP_BEGIN
0x258C1400,	//0x0152		VoC_lw16_d(REG0,0x258c)
0x3410F023,	//0x0154		VoC_bgt16_rr(Get_u32MaxSamplesReq,REG2,REG0)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xE5C30158,	//0x0156		VoC_jump(Get_u32MaxSamplesReq_END)	|	VoC_bgt16_rr(Get_u32MaxSamplesReq,REG2,REG0)(hi)
		//0x0158		Get_u32MaxSamplesReq
0xE5C1E002,	//0x0158		VoC_jump(Get_u32MaxSamplesReq_END)	|	VoC_movreg16(REG2,REG0,DEFAULT)
		//0x015a		Get_u32MaxSamplesReq_END
0x341AF88B,	//0x015a		VoC_bgt16_rr(Get_cSamplesREQ,REG3,REG2)(lo)	|	VoC_shr16_ri(REG3,0xfffffff1,DEFAULT)
0x15030160,	//0x015c		VoC_sw16_d(REG3,0x2553)(lo)	|	VoC_bgt16_rr(Get_cSamplesREQ,REG3,REG2)(hi)
0xE5C42553,	//0x015e		VoC_jump(Get_cSamplesREQ_END)	|	VoC_sw16_d(REG3,0x2553)(hi)
		//0x0160		Get_cSamplesREQ
0x25531502,	//0x0160		VoC_sw16_d(REG2,0x2553)
0xF007E5C1,	//0x0162		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jump(Get_cSamplesREQ_END)
		//0x0163		Get_cSamplesREQ_END
0x25531406,	//0x0164		VoC_lw16_d(REG6,0x2553)
0x05CA2B80,	//0x0166		VoC_jal(CII_auReconMono_Tbl_VOC)
0x25531506,	//0x0168		VoC_sw16_d(REG6,0x2553)
0x4018F040,	//0x016a		VoC_be16_rd(CASE_CHANNEL2,REG0,0x8f9)(lo)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xE5CF08F9,	//0x016c		VoC_jump(CASE_CHANNEL_END)	|	VoC_be16_rd(CASE_CHANNEL2,REG0,0x8f9)(hi)
		//0x016e		CASE_CHANNEL2
0x09EE0A80,	//0x016e		VoC_lw16i(REG0,0x9ee)
0x09C60A81,	//0x0170		VoC_lw16i(REG1,0x9c6)
0x25531406,	//0x0172		VoC_lw16_d(REG6,0x2553)
0xFFC0420F,	//0x0174		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG0,REG1,DEFAULT)
0x05CA2B80,	//0x0176		VoC_jal(CII_auReconMono_Tbl_VOC)
0x25531506,	//0x0178		VoC_sw16_d(REG6,0x2553)
0xFFC065C2,	//0x017a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CASE_CHANNEL_END)
		//0x017c		CASE_CHANNEL_END
0x08F90836,	//0x017c		VoC_mult16_rd(REG6,REG6,0x8f9)
0x0A0A1486,	//0x017e		VoC_lw32_d(RL6,0xa0a)
0xF80E700E,	//0x0180		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x0,DEFAULT)
0x40000A8F,	//0x0182		VoC_lw16i(RL7_HI,0x4000)
0x08DF0A84,	//0x0184		VoC_lw16i(REG4,0x8df)
0x3186E537,	//0x0186		VoC_bez16_r(LABLE_DMA_DONE,REG6)(lo)	|	VoC_or32_rr(RL7,RL6,DEFAULT)
0xFFC001CE,	//0x0188		VoC_NAD	|	VoC_bez16_r(LABLE_DMA_DONE,REG6)(hi)
		//0x018a		LABLE_DMA_START
0x0C3A39B6,	//0x018a		VoC_bgt16_rd(LABLE_DMA_1,REG6,0xc3a)
0x0C3A41A6,	//0x018c		VoC_be16_rd(LABLE_DMA_1,REG6,0xc3a)
0x0C3A0B31,	//0x018e		VoC_sub16_dr(REG1,0xc3a,REG6)
0x00F92B80,	//0x0190		VoC_jal(CII_MixPCM_VOC)
0x00081792,	//0x0192		VoC_cfg_lg(0x8,)
0x7FC31544,	//0x0194		VoC_sw16_d(REG4,0xffc3)
0x7FC21546,	//0x0196		VoC_sw16_d(REG6,0xffc2)
0x7FC415C7,	//0x0198		VoC_sw32_d(RL7,0xffc4)
0x700DDE80,	//0x019a		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_cfg(0x0)
0x1794F6CC,	//0x019c		VoC_cfg_lg(0x8,)(lo)	|	VoC_movreg16(RL6_LO,REG6,IN_PARALLEL)
0x15010008,	//0x019e		VoC_sw16_d(REG1,0xc3a)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xFDF60C3A,	//0x01a0		VoC_shru32_ri(RL6,0xfffffffe,DEFAULT)	|	VoC_sw16_d(REG1,0xc3a)(hi)
0xFFC0C9F7,	//0x01a2		VoC_NOP	|	VoC_add32_rr(RL7,RL7,RL6,DEFAULT)
0x0A0A1587,	//0x01a4		VoC_sw32_d(RL7,0xa0a)
0x01CE2B00,	//0x01a6		VoC_jump_lg(LABLE_DMA_DONE)
		//0x01a8		LABLE_DMA_1
0x0C3A07B1,	//0x01a8		VoC_sub16_rd(REG1,REG6,0xc3a)
0x04000A80,	//0x01aa		VoC_lw16i(REG0,0x400)
0x0C3A1406,	//0x01ac		VoC_lw16_d(REG6,0xc3a)
0x1500FFC0,	//0x01ae		VoC_sw16_d(REG0,0xc3a)(lo)	|	VoC_NOP
0xFFC00C3A,	//0x01b0		VoC_NAD	|	VoC_sw16_d(REG0,0xc3a)(hi)
0x00F92B80,	//0x01b2		VoC_jal(CII_MixPCM_VOC)
0x00081792,	//0x01b4		VoC_cfg_lg(0x8,)
0x7FC31544,	//0x01b6		VoC_sw16_d(REG4,0xffc3)
0x7FC21546,	//0x01b8		VoC_sw16_d(REG6,0xffc2)
0x7FC415C7,	//0x01ba		VoC_sw32_d(RL7,0xffc4)
0xFFC0DE80,	//0x01bc		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x01be		VoC_cfg_lg(0x8,)
0x1794FFC0,	//0x01c0		VoC_cfg_lg(0x3f,)(lo)	|	VoC_NOP
0x1792003F,	//0x01c2		VoC_cfg_lg(0x10,)(lo)	|	VoC_cfg_lg(0x3f,)(hi)
0xDEA00010,	//0x01c4		VoC_cfg(0x20)	|	VoC_cfg_lg(0x10,)(hi)
0x01CE3181,	//0x01c6		VoC_bez16_r(LABLE_DMA_DONE,REG1)
0xF62641A4,	//0x01c8		VoC_movreg16(REG6,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG6,REG4,DEFAULT)
0x0A0A1487,	//0x01ca		VoC_lw32_d(RL7,0xa0a)
0x018A2B00,	//0x01cc		VoC_jump_lg(LABLE_DMA_START)
		//0x01ce		LABLE_DMA_DONE
0x25531401,	//0x01ce		VoC_lw16_d(REG1,0x2553)
0x258C0B08,	//0x01d0		VoC_sub16_dr(REG0,0x258c,REG1)
0x1500FFC0,	//0x01d2		VoC_sw16_d(REG0,0x258c)(lo)	|	VoC_NOP
0x3181258C,	//0x01d4		VoC_bez16_r(CASE_LOOP_END,REG1)(lo)	|	VoC_sw16_d(REG0,0x258c)(hi)
0x6E050226,	//0x01d6		VoC_bnez16_d(CASE_DISCARDSILENCE_NOT,0x9b9)(lo)	|	VoC_bez16_r(CASE_LOOP_END,REG1)(hi)
0x2B0009B9,	//0x01d8		VoC_jump_lg(CASE_DISCARDSILENCE)(lo)	|	VoC_bnez16_d(CASE_DISCARDSILENCE_NOT,0x9b9)(hi)
0xFFC0021F,	//0x01da		VoC_NAD	|	VoC_jump_lg(CASE_DISCARDSILENCE)(hi)
		//0x01dc		CASE_DISCARDSILENCE_NOT
0x09B93821,	//0x01dc		VoC_bgt16_rd(NGT_DISCARDSILENCE_not,REG1,0x9b9)
0x02162B00,	//0x01de		VoC_jump_lg(NGT_DISCARDSILENCE)
		//0x01e0		NGT_DISCARDSILENCE_not
0x09B91400,	//0x01e0		VoC_lw16_d(REG0,0x9b9)
0x08F91403,	//0x01e2		VoC_lw16_d(REG3,0x8f9)
0xC41CC242,	//0x01e4		VoC_mult16_rr(REG4,REG0,REG3,DEFAULT)	|	VoC_sub16_rr(REG2,REG1,REG0,DEFAULT)
0x1486C49A,	//0x01e6		VoC_lw32_d(RL6,0xa0a)(lo)	|	VoC_mult16_rr(REG2,REG2,REG3,DEFAULT)
0x60860A0A,	//0x01e8		VoC_movreg16(REG6,REG4,DEFAULT)	|	VoC_lw32_d(RL6,0xa0a)(hi)
0xF007F812,	//0x01ea		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_shr16_ri(REG2,0x2,IN_PARALLEL)
0x0A84C99F,	//0x01ec		VoC_lw16i(REG4,0x8df)(lo)	|	VoC_add32_rr(RL7,RL6,REG67,DEFAULT)
0x179208DF,	//0x01ee		VoC_cfg_lg(0x8,)(lo)	|	VoC_lw16i(REG4,0x8df)(hi)
0x15440008,	//0x01f0		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15427FC3,	//0x01f2		VoC_sw16_d(REG2,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C77FC2,	//0x01f4		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw16_d(REG2,0xffc2)(hi)
0xDE807FC4,	//0x01f6		VoC_cfg(0x0)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x1794FFC0,	//0x01f8		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xF00E0008,	//0x01fa		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x40000A8F,	//0x01fc		VoC_lw16i(RL7_HI,0x4000)
0x1792E537,	//0x01fe		VoC_cfg_lg(0x8,)(lo)	|	VoC_or32_rr(RL7,RL6,DEFAULT)
0x15440008,	//0x0200		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15427FC3,	//0x0202		VoC_sw16_d(REG2,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C77FC2,	//0x0204		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw16_d(REG2,0xffc2)(hi)
0xDE807FC4,	//0x0206		VoC_cfg(0x0)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x1794FFC0,	//0x0208		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14000008,	//0x020a		VoC_lw16_d(REG0,0x9b9)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x0B0109B9,	//0x020c		VoC_sub16_dr(REG1,0x2553,REG0)(lo)	|	VoC_lw16_d(REG0,0x9b9)(hi)
0xF0002553,	//0x020e		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sub16_dr(REG1,0x2553,REG0)(hi)
0x25531501,	//0x0210		VoC_sw16_d(REG1,0x2553)
0x09B91500,	//0x0212		VoC_sw16_d(REG0,0x9b9)
0xFFC065CB,	//0x0214		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CASE_DISCARDSILENCE)
		//0x0216		NGT_DISCARDSILENCE
0x09B91400,	//0x0216		VoC_lw16_d(REG0,0x9b9)
0xF001C208,	//0x0218		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)
0x09B91500,	//0x021a		VoC_sw16_d(REG0,0x9b9)
0x25531501,	//0x021c		VoC_sw16_d(REG1,0x2553)
0xF000E5C1,	//0x021e		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jump(CASE_DISCARDSILENCE)
		//0x021f		CASE_DISCARDSILENCE
0x25534430,	//0x0220		VoC_bne16_rd(CASE_LOOP_END,REG0,0x2553)
0x258C4020,	//0x0222		VoC_be16_rd(CASE_LOOP_END,REG0,0x258c)
0x01522B00,	//0x0224		VoC_jump_lg(CASE_LOOP_BEGIN)
		//0x0226		CASE_LOOP_END
0x08F61400,	//0x0226		VoC_lw16_d(REG0,0x8f6)
0x11954438,	//0x0228		VoC_bne16_rd(CASE_STATUS_END,REG0,0x1195)
0x11931400,	//0x022a		VoC_lw16_d(REG0,0x1193)
0x1500FFC0,	//0x022c		VoC_sw16_d(REG0,0x8f6)(lo)	|	VoC_NOP
0xF00708F6,	//0x022e		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw16_d(REG0,0x8f6)(hi)
		//0x022f		CASE_STATUS_END
		//0x022f		GPFUNCTION_END
0x1507DFA9,	//0x0230		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800C37,	//0x0232		VoC_return	|	VoC_sw16_d(REG7,0xc37)(hi)
		//0x0234		CII_audecDecodeInfo_VOC
0x5F46DFE9,	//0x0234		VoC_push32(RL6,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x7025E006,	//0x0236		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0x1506E007,	//0x0238		VoC_sw16_d(REG6,0x8e0)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x150608E0,	//0x023a		VoC_sw16_d(REG6,0x8de)(lo)	|	VoC_sw16_d(REG6,0x8e0)(hi)
0x150508DE,	//0x023c		VoC_sw16_d(REG5,0x8df)(lo)	|	VoC_sw16_d(REG6,0x8de)(hi)
0xDFC608DF,	//0x023e		VoC_push16(REG6,DEFAULT)	|	VoC_sw16_d(REG5,0x8df)(hi)
0x08FD6E04,	//0x0240		VoC_bnez16_d(LOOP_BEGIN_1,0x8fd)
0x02822B00,	//0x0242		VoC_jump_lg(MFALLOWSUPERFRAME_FALSE)
		//0x0244		LOOP_BEGIN_1
0x08D27A0E,	//0x0244		VoC_bnez32_d(LOOP_END_1,0x8d2)
0x11B42B80,	//0x0246		VoC_jal(CII_ibstrmReset_VOC)
0x2B80D90E,	//0x0248		VoC_jal(CII_ibstrmGetMoreData_VOC)(lo)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0xE0A71054,	//0x024a		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_jal(CII_ibstrmGetMoreData_VOC)(hi)
0x08E66DB8,	//0x024c		VoC_bez16_d(LOOP_BEGIN_1,0x8e6)
0x00040AC7,	//0x024e		VoC_lw16i(REG7,0x8004)
0x02CA2B00,	//0x0250		VoC_jump_lg(DIFUNCTION_END)
		//0x0252		LOOP_END_1
0x08D21480,	//0x0252		VoC_lw32_d(REG01,0x8d2)
0xFCE0F004,	//0x0254		VoC_shru32_ri(REG01,0x1c,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x08E80987,	//0x0256		VoC_sub32_rd(RL7,REG01,0x8e8)
0x08DE1504,	//0x0258		VoC_sw16_d(REG4,0x8de)
0x11AE09B9,	//0x025a		VoC_sub32_rd(REG23,RL7,0x11ae)
0x02683301,	//0x025c		VoC_bez32_r(SET_MFPACKETLOSS_END,REG23)
0x11B00939,	//0x025e		VoC_add32_rd(REG23,RL7,0x11b0)
0x02633341,	//0x0260		VoC_bnez32_r(SET_MFPACKETLOSS_TRUE,REG23)
0xF024E5C6,	//0x0262		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_jump(SET_MFPACKETLOSS_END)
		//0x0263		SET_MFPACKETLOSS_TRUE
0x1504FFC0,	//0x0264		VoC_sw16_d(REG4,0x8de)(lo)	|	VoC_NOP
0xFFC008DE,	//0x0266		VoC_NAD	|	VoC_sw16_d(REG4,0x8de)(hi)
		//0x0268		SET_MFPACKETLOSS_END
0x08E81580,	//0x0268		VoC_sw32_d(REG01,0x8e8)
0x08D21480,	//0x026a		VoC_lw32_d(REG01,0x8d2)
0xE023F3A2,	//0x026c		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x1d,DEFAULT)
0x08EA0792,	//0x026e		VoC_sub16_rd(REG2,REG2,0x8ea)
0xFDC07943,	//0x0270		VoC_shru32_ri(REG01,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x8,DEFAULT)
0x000F1603,	//0x0272		VoC_and16_ri(REG3,0xf)
0x1503FED0,	//0x0274		VoC_sw16_d(REG3,0x8df)(lo)	|	VoC_shru32_rr(REG01,REG2,DEFAULT)
0xDA1008DF,	//0x0276		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_d(REG3,0x8df)(hi)
0x027C31C0,	//0x0278		VoC_bnez16_r(CBITLEFTOVER_NEZ,REG0)
0x118D2B80,	//0x027a		VoC_jal(CII_ibstrmResetPacket_VOC)
		//0x027c		CBITLEFTOVER_NEZ
0xFFC0FF40,	//0x027c		VoC_NOP	|	VoC_lw32z(REG01,DEFAULT)
0x08D21580,	//0x027e		VoC_sw32_d(REG01,0x8d2)
0x02AA2B00,	//0x0280		VoC_jump_lg(MFALLOWSUPERFRAME_END)
		//0x0282		MFALLOWSUPERFRAME_FALSE
0x08D21480,	//0x0282		VoC_lw32_d(REG01,0x8d2)
0x08E87204,	//0x0284		VoC_bnltz16_d(MIPACKETCURR_NLTZ,0x8e8)
0x08E81580,	//0x0286		VoC_sw32_d(REG01,0x8e8)
		//0x0288		MIPACKETCURR_NLTZ
0x08E80981,	//0x0288		VoC_sub32_rd(REG23,REG01,0x8e8)
0x028E3301,	//0x028a		VoC_bez32_r(ICURRPREVDIFF_EZ,REG23)
0x118D2B80,	//0x028c		VoC_jal(CII_ibstrmResetPacket_VOC)
		//0x028e		ICURRPREVDIFF_EZ
		//0x028e		LOOP_BEGIN_2
0x08D21480,	//0x028e		VoC_lw32_d(REG01,0x8d2)
0x08E85CB0,	//0x0290		VoC_bne32_rd(LOOP_END_2,REG01,0x8e8)
0x11B42B80,	//0x0292		VoC_jal(CII_ibstrmReset_VOC)
0x2B80D90E,	//0x0294		VoC_jal(CII_ibstrmGetMoreData_VOC)(lo)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0xE0A71054,	//0x0296		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_jal(CII_ibstrmGetMoreData_VOC)(hi)
0x08E66DB6,	//0x0298		VoC_bez16_d(LOOP_BEGIN_2,0x8e6)
0x00040AC7,	//0x029a		VoC_lw16i(REG7,0x8004)
0x02CA2B00,	//0x029c		VoC_jump_lg(DIFUNCTION_END)
		//0x029e		LOOP_END_2
0x08D21480,	//0x029e		VoC_lw32_d(REG01,0x8d2)
0x1580FFC0,	//0x02a0		VoC_sw32_d(REG01,0x8e8)(lo)	|	VoC_NOP
0x6C0708E8,	//0x02a2		VoC_bez16_d(MFALLOWSUPERFRAME_END,0x8e6)(lo)	|	VoC_sw32_d(REG01,0x8e8)(hi)
0x0AC708E6,	//0x02a4		VoC_lw16i(REG7,0x8005)(lo)	|	VoC_bez16_d(MFALLOWSUPERFRAME_END,0x8e6)(hi)
0x2B000005,	//0x02a6		VoC_jump_lg(DIFUNCTION_END)(lo)	|	VoC_lw16i(REG7,0x8005)(hi)
0xFFC002CA,	//0x02a8		VoC_NAD	|	VoC_jump_lg(DIFUNCTION_END)(hi)
		//0x02aa		MFALLOWSUPERFRAME_END
0x08DE6E04,	//0x02aa		VoC_bnez16_d(MFPACKETLOSS_TRUE,0x8de)
0xE5DDF007,	//0x02ac		VoC_jump(DIFUNCTION_END)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x02ae		MFPACKETLOSS_TRUE
0xE1865610,	//0x02ae		VoC_lw16i_short(REG6,0x18,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
		//0x02b0		LOOP_BEGIN_3
0x3486D90E,	//0x02b0		VoC_bngt16_rr(LOOP_END_3,REG0,REG6)(lo)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0xDFC002BA,	//0x02b2		VoC_push16(REG0,DEFAULT)	|	VoC_bngt16_rr(LOOP_END_3,REG0,REG6)(hi)
0x0FB62B80,	//0x02b4		VoC_jal(CII_ibstrmFlushBits_VOC)
0xC230DF80,	//0x02b6		VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xFFC065F8,	//0x02b8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LOOP_BEGIN_3)
		//0x02ba		LOOP_END_3
0xF606590E,	//0x02ba		VoC_movreg16(REG6,REG0,IN_PARALLEL)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0x0FB62B80,	//0x02bc		VoC_jal(CII_ibstrmFlushBits_VOC)
0x7FFF0A80,	//0x02be		VoC_lw16i(REG0,0x7fff)
0x1500F024,	//0x02c0		VoC_sw16_d(REG0,0x9d8)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x150009D8,	//0x02c2		VoC_sw16_d(REG0,0xa00)(lo)	|	VoC_sw16_d(REG0,0x9d8)(hi)
0x15040A00,	//0x02c4		VoC_sw16_d(REG4,0x8f8)(lo)	|	VoC_sw16_d(REG0,0xa00)(hi)
0x150408F8,	//0x02c6		VoC_sw16_d(REG4,0x8f7)(lo)	|	VoC_sw16_d(REG4,0x8f8)(hi)
0xF00708F7,	//0x02c8		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw16_d(REG4,0x8f7)(hi)
		//0x02ca		DIFUNCTION_END
0xDFA9DF86,	//0x02ca		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0x1507DF06,	//0x02cc		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_pop32(RL6,DEFAULT)
0xE5800C37,	//0x02ce		VoC_return	|	VoC_sw16_d(REG7,0xc37)(hi)
		//0x02d0		CII_audecDecodeData_VOC
0xDFE9F007,	//0x02d0		VoC_push16(RA,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x0C371507,	//0x02d2		VoC_sw16_d(REG7,0xc37)
0x08E66C06,	//0x02d4		VoC_bez16_d(Label_while_start,0x8e6)
0x10542B80,	//0x02d6		VoC_jal(CII_ibstrmGetMoreData_VOC)
0x0C371505,	//0x02d8		VoC_sw16_d(REG5,0xc37)
		//0x02da		Label_while_start
0x08E01406,	//0x02da		VoC_lw16_d(REG6,0x8e0)
0x03773186,	//0x02dc		VoC_bez16_r(Label_case_BEGIN_PACKET,REG6)
0x11934426,	//0x02de		VoC_bne16_rd(Label_case_BEGIN_FRAME_not,REG6,0x1193)
0x037E2B00,	//0x02e0		VoC_jump_lg(Label_case_BEGIN_FRAME)
		//0x02e2		Label_case_BEGIN_FRAME_not
0x11944106,	//0x02e2		VoC_be16_rd(Label_case_BEGIN_SUBFRAME,REG6,0x1194)
0x11954426,	//0x02e4		VoC_bne16_rd(Label_case_DECODE_SUBFRAME_not,REG6,0x1195)
0x033A2B00,	//0x02e6		VoC_jump_lg(Label_case_DECODE_SUBFRAME)
		//0x02e8		Label_case_DECODE_SUBFRAME_not
0x11964426,	//0x02e8		VoC_bne16_rd(Label_case_END_SUBFRAME1_con,REG6,0x1196)
0x034A2B00,	//0x02ea		VoC_jump_lg(Label_case_END_SUBFRAME1)
		//0x02ec		Label_case_END_SUBFRAME1_con
0x11974426,	//0x02ec		VoC_bne16_rd(Label_case_END_SUBFRAME2_con,REG6,0x1197)
0x03522B00,	//0x02ee		VoC_jump_lg(Label_case_END_SUBFRAME2)
		//0x02f0		Label_case_END_SUBFRAME2_con
0x03952B00,	//0x02f0		VoC_jump_lg(Label_exit)
		//0x02f2		Label_case_BEGIN_SUBFRAME
0x6C05F000,	//0x02f2		VoC_bez16_d(Label_LastSubFrame_not,0x8e7)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x2B0008E7,	//0x02f4		VoC_jump_lg(Label_LastSubFrame)(lo)	|	VoC_bez16_d(Label_LastSubFrame_not,0x8e7)(hi)
0xFFC00336,	//0x02f6		VoC_NAD	|	VoC_jump_lg(Label_LastSubFrame)(hi)
		//0x02f8		Label_LastSubFrame_not
0x0C381500,	//0x02f8		VoC_sw16_d(REG0,0xc38)
		//0x02fa		Label_loop_channel_start
0x09D81406,	//0x02fa		VoC_lw16_d(REG6,0x9d8)
0x6C07F007,	//0x02fc		VoC_bez16_d(Label_channel_select_over,0xc38)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x14060C38,	//0x02fe		VoC_lw16_d(REG6,0xa00)(lo)	|	VoC_bez16_d(Label_channel_select_over,0xc38)(hi)
0x0A870A00,	//0x0300		VoC_lw16i(REG7,0x28)(lo)	|	VoC_lw16_d(REG6,0xa00)(hi)
0xFFC00028,	//0x0302		VoC_NAD	|	VoC_lw16i(REG7,0x28)(hi)
		//0x0304		Label_channel_select_over
0x09B740A6,	//0x0304		VoC_be16_rd(Label_NormalFrame,REG6,0x9b7)
0x09B84C96,	//0x0306		VoC_bnlt16_rd(Label_NormalFrame,REG6,0x9b8)
0x04020AC7,	//0x0308		VoC_lw16i(REG7,0x8402)
0x1507FFC0,	//0x030a		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_NOP
0x2B000C37,	//0x030c		VoC_jump_lg(Label_exit)(lo)	|	VoC_sw16_d(REG7,0xc37)(hi)
0xFFC00395,	//0x030e		VoC_NAD	|	VoC_jump_lg(Label_exit)(hi)
		//0x0310		Label_NormalFrame
0x03982B80,	//0x0310		VoC_jal(CII_auSaveHistoryMono_Tbl_VOC)
0x0C371507,	//0x0312		VoC_sw16_d(REG7,0xc37)
0x03953207,	//0x0314		VoC_bltz16_r(Label_exit,REG7)
0x0C381401,	//0x0316		VoC_lw16_d(REG1,0xc38)
0x09D80A85,	//0x0318		VoC_lw16i(REG5,0x9d8)
0x0C386C04,	//0x031a		VoC_bez16_d(Label_channel_select_over2,0xc38)
0x0A000A85,	//0x031c		VoC_lw16i(REG5,0xa00)
		//0x031e		Label_channel_select_over2
0x11930709,	//0x031e		VoC_add16_rd(REG1,REG1,0x1193)
0x7FFF0A86,	//0x0320		VoC_lw16i(REG6,0x7fff)
0x0C381501,	//0x0322		VoC_sw16_d(REG1,0xc38)
0x4C21DC56,	//0x0324		VoC_bnlt16_rd(Label_loop_channel_end,REG1,0x8f9)(lo)	|	VoC_sw16_p(REG6,REG5,DEFAULT)
0x2B0008F9,	//0x0326		VoC_jump_lg(Label_loop_channel_start)(lo)	|	VoC_bnlt16_rd(Label_loop_channel_end,REG1,0x8f9)(hi)
0xF06302FA,	//0x0328		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_jump_lg(Label_loop_channel_start)(hi)
		//0x0329		Label_loop_channel_end
0x1503F000,	//0x032a		VoC_sw16_d(REG3,0x8e0)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x150008E0,	//0x032c		VoC_sw16_d(REG0,0x8e1)(lo)	|	VoC_sw16_d(REG3,0x8e0)(hi)
0x150008E1,	//0x032e		VoC_sw16_d(REG0,0x8e2)(lo)	|	VoC_sw16_d(REG0,0x8e1)(hi)
0x150008E2,	//0x0330		VoC_sw16_d(REG0,0x8e4)(lo)	|	VoC_sw16_d(REG0,0x8e2)(hi)
0x150008E4,	//0x0332		VoC_sw16_d(REG0,0x8e5)(lo)	|	VoC_sw16_d(REG0,0x8e4)(hi)
0xE5C508E5,	//0x0334		VoC_jump(Label_case_DECODE_SUBFRAME)	|	VoC_sw16_d(REG0,0x8e5)(hi)
		//0x0336		Label_LastSubFrame
0xFFC0F0A5,	//0x0336		VoC_NOP	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0x08E01505,	//0x0338		VoC_sw16_d(REG5,0x8e0)
		//0x033a		Label_case_DECODE_SUBFRAME
0x09A96C08,	//0x033a		VoC_bez16_d(Label_LowMidRate,0x9a9)
0x08EE6E06,	//0x033c		VoC_bnez16_d(Label_LowMidRate,0x8ee)
0x17562B80,	//0x033e		VoC_jal(CII_prvDecodeSubFrameHighRate_VOC)
0xFFC065C4,	//0x0340		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_DecodeSubFrame_over)
		//0x0342		Label_LowMidRate
0x17582B80,	//0x0342		VoC_jal(CII_prvDecodeSubFrame_VOC)
		//0x0344		Label_DecodeSubFrame_over
0xE0447042,	//0x0344		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x08E14422,	//0x0346		VoC_bne16_rd(Label_case_END_SUBFRAME1,REG2,0x8e1)
0x08E01504,	//0x0348		VoC_sw16_d(REG4,0x8e0)
		//0x034a		Label_case_END_SUBFRAME1
0x04C62B80,	//0x034a		VoC_jal(CII_auPreGetPCM_VOC)
0x0709F021,	//0x034c		VoC_add16_rd(REG1,REG1,0x901)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xFFC00901,	//0x034e		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x901)(hi)
0x09011501,	//0x0350		VoC_sw16_d(REG1,0x901)
		//0x0352		Label_case_END_SUBFRAME2
0x08E76C20,	//0x0352		VoC_bez16_d(Label_NotLastSubFrame,0x8e7)
0x08FD6C0E,	//0x0354		VoC_bez16_d(Label_NO_AllowSuperFrame,0x8fd)
0x090C1808,	//0x0356		VoC_lw16i_set_inc(REG0,0x90c,0x2)
0x093E1809,	//0x0358		VoC_lw16i_set_inc(REG1,0x93e,0x2)
0x0970180A,	//0x035a		VoC_lw16i_set_inc(REG2,0x970,0x2)
0x03612C32,	//0x035c		VoC_loop_i(0x0,0x19)
0xD98FD9D6,	//0x035e		VoC_lw32_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG2,DEFAULT)
0xDDC7DDCE,	//0x0360		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
		//0x0361		VoC_endloop0
		//0x0362		Label_NO_AllowSuperFrame
0x0B0AF021,	//0x0362		VoC_sub16_dr(REG2,0x8df,REG1)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x150108DF,	//0x0364		VoC_sw16_d(REG1,0x8e0)(lo)	|	VoC_sub16_dr(REG2,0x8df,REG1)(hi)
0x150208E0,	//0x0366		VoC_sw16_d(REG2,0x8df)(lo)	|	VoC_sw16_d(REG1,0x8e0)(hi)
0x310208DF,	//0x0368		VoC_bgtz16_r(Label_exit,REG2)(lo)	|	VoC_sw16_d(REG2,0x8df)(hi)
0x0A870395,	//0x036a		VoC_lw16i(REG7,0x4)(lo)	|	VoC_bgtz16_r(Label_exit,REG2)(hi)
0xFFC00004,	//0x036c		VoC_NOP	|	VoC_lw16i(REG7,0x4)(hi)
0x0C371507,	//0x036e		VoC_sw16_d(REG7,0xc37)
0x03952B00,	//0x0370		VoC_jump_lg(Label_exit)
		//0x0372		Label_NotLastSubFrame
0xFFC0F042,	//0x0372		VoC_NOP	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x08E01502,	//0x0374		VoC_sw16_d(REG2,0x8e0)
0xF021E5DF,	//0x0376		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_jump(Label_exit)
		//0x0377		Label_case_BEGIN_PACKET
0x1501FFC0,	//0x0378		VoC_sw16_d(REG1,0x902)(lo)	|	VoC_NOP
0x15010902,	//0x037a		VoC_sw16_d(REG1,0x8e0)(lo)	|	VoC_sw16_d(REG1,0x902)(hi)
0xFFC008E0,	//0x037c		VoC_NAD	|	VoC_sw16_d(REG1,0x8e0)(hi)
		//0x037e		Label_case_BEGIN_FRAME
0xE0117000,	//0x037e		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x0709F042,	//0x0380		VoC_add16_rd(REG1,REG1,0x9bd)(lo)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x150009BD,	//0x0382		VoC_sw16_d(REG0,0x901)(lo)	|	VoC_add16_rd(REG1,REG1,0x9bd)(hi)
0x15000901,	//0x0384		VoC_sw16_d(REG0,0x8e7)(lo)	|	VoC_sw16_d(REG0,0x901)(hi)
0x150108E7,	//0x0386		VoC_sw16_d(REG1,0x9bd)(lo)	|	VoC_sw16_d(REG0,0x8e7)(hi)
0x150209BD,	//0x0388		VoC_sw16_d(REG2,0x8e0)(lo)	|	VoC_sw16_d(REG1,0x9bd)(hi)
0x6C0508E0,	//0x038a		VoC_bez16_d(Label_while_end,0x8df)(lo)	|	VoC_sw16_d(REG2,0x8e0)(hi)
0x2B0008DF,	//0x038c		VoC_jump_lg(Label_while_start)(lo)	|	VoC_bez16_d(Label_while_end,0x8df)(hi)
0xFFC002DA,	//0x038e		VoC_NAD	|	VoC_jump_lg(Label_while_start)(hi)
		//0x0390		Label_while_end
0x00040A87,	//0x0390		VoC_lw16i(REG7,0x4)
0x1507FFC0,	//0x0392		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_NOP
0xDFA90C37,	//0x0394		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG7,0xc37)(hi)
		//0x0395		Label_exit
0xE580FFC0,	//0x0396		VoC_return	|	VoC_NOP
		//0x0398		CII_auSaveHistoryMono_Tbl_VOC
0x09D80A83,	//0x0398		VoC_lw16i(REG3,0x9d8)
0x25521507,	//0x039a		VoC_sw16_d(REG7,0x2552)
0xF7D0C0FB,	//0x039c		VoC_lw16i_short(INC0,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x0A81D833,	//0x039e		VoC_lw16i(REG1,0x9d9)(lo)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0x148709D9,	//0x03a0		VoC_lw32_d(RL7,0xa0c)(lo)	|	VoC_lw16i(REG1,0x9d9)(hi)
0x40790A0C,	//0x03a2		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw32_d(RL7,0xa0c)(hi)
0x0A8CE00D,	//0x03a4		VoC_lw16i(RL6_LO,0x1000)(lo)	|	VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)
0x31871000,	//0x03a6		VoC_bez16_r(GET_PIDST_END,REG7)(lo)	|	VoC_lw16i(RL6_LO,0x1000)(hi)
0xC9F703AA,	//0x03a8		VoC_add32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_bez16_r(GET_PIDST_END,REG7)(hi)
		//0x03aa		GET_PIDST_END
0x1587D811,	//0x03aa		VoC_sw32_d(RL7,0x25c4)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x140425C4,	//0x03ac		VoC_lw16_d(REG4,0x90b)(lo)	|	VoC_sw32_d(RL7,0x25c4)(hi)
0xF032090B,	//0x03ae		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16_d(REG4,0x90b)(hi)
0x11950824,	//0x03b0		VoC_mult16_rd(REG4,REG4,0x1195)
0x0A061486,	//0x03b2		VoC_lw32_d(RL6,0xa06)
0x0ACEC31C,	//0x03b4		VoC_lw16i(RL7_LO,0x8000)(lo)	|	VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)
0x0ACF0000,	//0x03b6		VoC_lw16i(RL7_HI,0xffff)(lo)	|	VoC_lw16i(RL7_LO,0x8000)(hi)
0x15867FFF,	//0x03b8		VoC_sw32_d(RL6,0x258a)(lo)	|	VoC_lw16i(RL7_HI,0xffff)(hi)
0x1587258A,	//0x03ba		VoC_sw32_d(RL7,0x2588)(lo)	|	VoC_sw32_d(RL6,0x258a)(hi)
0x31442588,	//0x03bc		VoC_bngtz16_r(I_NLT_CSUBFRAMESAMPLE3QUAD,REG4)(lo)	|	VoC_sw32_d(RL7,0x2588)(hi)
0xC0E3043C,	//0x03be		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_bngtz16_r(I_NLT_CSUBFRAMESAMPLE3QUAD,REG4)(hi)
0xF3F97924,	//0x03c0		VoC_lw16i_short(INC1,0xfffffffe,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0x11940789,	//0x03c2		VoC_sub16_rd(REG1,REG1,0x1194)
0xF421727A,	//0x03c4		VoC_lw16i_short(FORMAT32,0x4,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x13,DEFAULT)
0x00200A96,	//0x03c6		VoC_lw16i(STATUS,0x20)
0x11923834,	//0x03c8		VoC_bgt16_rd(Lable_L1,REG4,0x1192)
0x070E0AC7,	//0x03ca		VoC_lw16i(REG7,0x870e)
0x04BA2B00,	//0x03cc		VoC_jump_lg(I_NLT_ICOEFRECURQ4)
		//0x03ce		Lable_L1
0x04372E21,	//0x03ce		VoC_loop_r(1,REG4)
0x258A1486,	//0x03d0		VoC_lw32_d(RL6,0x258a)
0x643EF205,	//0x03d2		VoC_bnlt32_rd(Lable_L5,RL6,0x11b8)(lo)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x0AC711B8,	//0x03d4		VoC_lw16i(REG7,0x870e)(lo)	|	VoC_bnlt32_rd(Lable_L5,RL6,0x11b8)(hi)
0x2B00070E,	//0x03d6		VoC_jump_lg(I_NLT_ICOEFRECURQ4)(lo)	|	VoC_lw16i(REG7,0x870e)(hi)
0xFFC004BA,	//0x03d8		VoC_NAD	|	VoC_jump_lg(I_NLT_ICOEFRECURQ4)(hi)
		//0x03da		Lable_L5
0x11B809B6,	//0x03da		VoC_sub32_rd(RL6,RL6,0x11b8)
0x25B40A82,	//0x03dc		VoC_lw16i(REG2,0x25b4)
0x258A1586,	//0x03de		VoC_sw32_d(RL6,0x258a)
0x12AC0A84,	//0x03e0		VoC_lw16i(REG4,0x12ac)
0x00081792,	//0x03e2		VoC_cfg_lg(0x8,)
0x7FC31544,	//0x03e4		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x03e6		VoC_sw16_d(REG5,0xffc2)
0x7FC415C6,	//0x03e8		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x03ea		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x03ec		VoC_cfg_lg(0x8,)
0x25760A80,	//0x03ee		VoC_lw16i(REG0,0x2576)
0x04162C10,	//0x03f0		VoC_loop_i(0x0,0x8)
0xD9CBD9C2,	//0x03f2		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF90C4DEC,	//0x03f4		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x03f6		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD9C2CE75,	//0x03f8		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xFF2659CB,	//0x03fa		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF90C4DEC,	//0x03fc		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x03fe		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0x542ECE75,	//0x0400		VoC_bngt32_rd(SHPCM1_BNGT_0X7FFF,RL6,0x11ba)(lo)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x0A8C11BA,	//0x0402		VoC_lw16i(RL6_LO,0x7fff)(lo)	|	VoC_bngt32_rd(SHPCM1_BNGT_0X7FFF,RL6,0x11ba)(hi)
0xE5C57FFF,	//0x0404		VoC_jump(SHGET_PCM1_END)	|	VoC_lw16i(RL6_LO,0x7fff)(hi)
		//0x0406		SHPCM1_BNGT_0X7FFF
0x25886426,	//0x0406		VoC_bnlt32_rd(SHGET_PCM1_END,RL6,0x2588)
0x00000ACC,	//0x0408		VoC_lw16i(RL6_LO,0x8000)
		//0x040a		SHGET_PCM1_END
0xDCAC7F27,	//0x040a		VoC_sw16inc_p(RL6_LO,REG2,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x11BA5437,	//0x040c		VoC_bngt32_rd(SHPCM2_BNGT_0X7FFF,RL7,0x11ba)
0x7FFF0A8E,	//0x040e		VoC_lw16i(RL7_LO,0x7fff)
0xFFC065C6,	//0x0410		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SHGET_PCM2_END)
		//0x0412		SHPCM2_BNGT_0X7FFF
0x25886427,	//0x0412		VoC_bnlt32_rd(SHGET_PCM2_END,RL7,0x2588)
0x00000ACE,	//0x0414		VoC_lw16i(RL7_LO,0x8000)
		//0x0416		SHGET_PCM2_END
		//0x0416		VoC_endloop0
0x1486DCAE,	//0x0416		VoC_lw32_d(RL6,0x25c4)(lo)	|	VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)
0xF00E25C4,	//0x0418		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw32_d(RL6,0x25c4)(hi)
0x40000A8F,	//0x041a		VoC_lw16i(RL7_HI,0x4000)
0x12DA0A84,	//0x041c		VoC_lw16i(REG4,0x12da)
0xE0856537,	//0x041e		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_or32_rr(RL7,RL6,DEFAULT)
0x11B66437,	//0x0420		VoC_bnlt32_rd(Lable_L10,RL7,0x11b6)
0x070E0AC7,	//0x0422		VoC_lw16i(REG7,0x870e)
0x04BA2B00,	//0x0424		VoC_jump_lg(I_NLT_ICOEFRECURQ4)
		//0x0426		Lable_L10
0x00081792,	//0x0426		VoC_cfg_lg(0x8,)
0x7FC31544,	//0x0428		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x042a		VoC_sw16_d(REG5,0xffc2)
0x7FC415C7,	//0x042c		VoC_sw32_d(RL7,0xffc4)
0xFFC0DE80,	//0x042e		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0430		VoC_cfg_lg(0x8,)
0x0A84F005,	//0x0432		VoC_lw16i(REG4,0x20)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC9960020,	//0x0434		VoC_add32_rr(RL6,RL6,REG45,DEFAULT)	|	VoC_lw16i(REG4,0x20)(hi)
0x1586FFC0,	//0x0436		VoC_sw32_d(RL6,0x25c4)(lo)	|	VoC_NOP
		//0x0437		VoC_endloop1
0x070925C4,	//0x0438		VoC_add16_rd(REG1,REG1,0x1194)(lo)	|	VoC_sw32_d(RL6,0x25c4)(hi)
0xFFC01194,	//0x043a		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x1194)(hi)
		//0x043c		I_NLT_CSUBFRAMESAMPLE3QUAD
0x09B80B1C,	//0x043c		VoC_sub16_dr(REG4,0x9b8,REG3)
0x04BA3144,	//0x043e		VoC_bngtz16_r(I_NLT_ICOEFRECURQ4,REG4)
0x7924C0E3,	//0x0440		VoC_shru16_ri(REG4,0x4,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x383CF009,	//0x0442		VoC_bgt16_rd(Lable_L2,REG4,0x1192)(lo)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x0AC71192,	//0x0444		VoC_lw16i(REG7,0x870e)(lo)	|	VoC_bgt16_rd(Lable_L2,REG4,0x1192)(hi)
0x2B00070E,	//0x0446		VoC_jump_lg(I_NLT_ICOEFRECURQ4)(lo)	|	VoC_lw16i(REG7,0x870e)(hi)
0xFFC004BA,	//0x0448		VoC_NAD	|	VoC_jump_lg(I_NLT_ICOEFRECURQ4)(hi)
		//0x044a		Lable_L2
0x04B72E21,	//0x044a		VoC_loop_r(1,REG4)
0x25B40A82,	//0x044c		VoC_lw16i(REG2,0x25b4)
0x258A1486,	//0x044e		VoC_lw32_d(RL6,0x258a)
0x11B809B6,	//0x0450		VoC_sub32_rd(RL6,RL6,0x11b8)
0x1586F205,	//0x0452		VoC_sw32_d(RL6,0x258a)(lo)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x0A84258A,	//0x0454		VoC_lw16i(REG4,0x12ac)(lo)	|	VoC_sw32_d(RL6,0x258a)(hi)
0x328612AC,	//0x0456		VoC_bgtz32_r(auSaveHistoryMono_Tbl_VOC_L1,RL6)(lo)	|	VoC_lw16i(REG4,0x12ac)(hi)
0x0AC70460,	//0x0458		VoC_lw16i(REG7,0x8404)(lo)	|	VoC_bgtz32_r(auSaveHistoryMono_Tbl_VOC_L1,RL6)(hi)
0xFFC00404,	//0x045a		VoC_NOP	|	VoC_lw16i(REG7,0x8404)(hi)
0x0C371507,	//0x045c		VoC_sw16_d(REG7,0xc37)
0xFFC06580,	//0x045e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0460		auSaveHistoryMono_Tbl_VOC_L1
0x00081792,	//0x0460		VoC_cfg_lg(0x8,)
0x7FC31544,	//0x0462		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x0464		VoC_sw16_d(REG5,0xffc2)
0x7FC415C6,	//0x0466		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x0468		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x046a		VoC_cfg_lg(0x8,)
0x25760A80,	//0x046c		VoC_lw16i(REG0,0x2576)
0x04972C10,	//0x046e		VoC_loop_i(0x0,0x8)
0xD9CBD9C2,	//0x0470		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF90C4DEC,	//0x0472		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0474		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD9C2CE75,	//0x0476		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xFF2659CB,	//0x0478		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF90C4DEC,	//0x047a		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x047c		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0x0BB6CE75,	//0x047e		VoC_sub32_dr(RL6,0x11b6,RL6)(lo)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x0BA711B6,	//0x0480		VoC_sub32_dr(RL7,0x11b6,ACC0)(lo)	|	VoC_sub32_dr(RL6,0x11b6,RL6)(hi)
0x542E11B6,	//0x0482		VoC_bngt32_rd(SHPCM3_BNGT_0X7FFF,RL6,0x11ba)(lo)	|	VoC_sub32_dr(RL7,0x11b6,ACC0)(hi)
0x0A8C11BA,	//0x0484		VoC_lw16i(RL6_LO,0x7fff)(lo)	|	VoC_bngt32_rd(SHPCM3_BNGT_0X7FFF,RL6,0x11ba)(hi)
0xE5C57FFF,	//0x0486		VoC_jump(SHGET_PCM3_END)	|	VoC_lw16i(RL6_LO,0x7fff)(hi)
		//0x0488		SHPCM3_BNGT_0X7FFF
0x25886426,	//0x0488		VoC_bnlt32_rd(SHGET_PCM3_END,RL6,0x2588)
0x00000ACC,	//0x048a		VoC_lw16i(RL6_LO,0x8000)
		//0x048c		SHGET_PCM3_END
0x11BA5437,	//0x048c		VoC_bngt32_rd(SHPCM4_BNGT_0X7FFF,RL7,0x11ba)
0x7FFF0A8E,	//0x048e		VoC_lw16i(RL7_LO,0x7fff)
0xFFC065C6,	//0x0490		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SHGET_PCM4_END)
		//0x0492		SHPCM4_BNGT_0X7FFF
0x25886427,	//0x0492		VoC_bnlt32_rd(SHGET_PCM4_END,RL7,0x2588)
0x00000ACE,	//0x0494		VoC_lw16i(RL7_LO,0x8000)
		//0x0496		SHGET_PCM4_END
0xDCAEDCAC,	//0x0496		VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x0497		VoC_endloop0
0x25C41486,	//0x0498		VoC_lw32_d(RL6,0x25c4)
0x0A8FF00E,	//0x049a		VoC_lw16i(RL7_HI,0x4000)(lo)	|	VoC_lw16i_short(RL7_LO,0x0,DEFAULT)
0x0A844000,	//0x049c		VoC_lw16i(REG4,0x12da)(lo)	|	VoC_lw16i(RL7_HI,0x4000)(hi)
0x653712DA,	//0x049e		VoC_or32_rr(RL7,RL6,DEFAULT)	|	VoC_lw16i(REG4,0x12da)(hi)
0x642FE085,	//0x04a0		VoC_bnlt32_rd(Lable_L11,RL7,0x11b6)(lo)	|	VoC_lw16i_short(REG5,0x8,IN_PARALLEL)
0x0AC711B6,	//0x04a2		VoC_lw16i(REG7,0x870e)(lo)	|	VoC_bnlt32_rd(Lable_L11,RL7,0x11b6)(hi)
0xE5D5070E,	//0x04a4		VoC_jump(I_NLT_ICOEFRECURQ4)	|	VoC_lw16i(REG7,0x870e)(hi)
		//0x04a6		Lable_L11
0x00081792,	//0x04a6		VoC_cfg_lg(0x8,)
0x7FC31544,	//0x04a8		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x04aa		VoC_sw16_d(REG5,0xffc2)
0x7FC415C7,	//0x04ac		VoC_sw32_d(RL7,0xffc4)
0xFFC0DE80,	//0x04ae		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x04b0		VoC_cfg_lg(0x8,)
0x0A84F005,	//0x04b2		VoC_lw16i(REG4,0x20)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC9960020,	//0x04b4		VoC_add32_rr(RL6,RL6,REG45,DEFAULT)	|	VoC_lw16i(REG4,0x20)(hi)
0x1586FFC0,	//0x04b6		VoC_sw32_d(RL6,0x25c4)(lo)	|	VoC_NOP
		//0x04b7		VoC_endloop1
0xF00725C4,	//0x04b8		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw32_d(RL6,0x25c4)(hi)
		//0x04ba		I_NLT_ICOEFRECURQ4
0x0A84F019,	//0x04ba		VoC_lw16i(REG4,0x9d8)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x0A9609D8,	//0x04bc		VoC_lw16i(STATUS,0x60)(lo)	|	VoC_lw16i(REG4,0x9d8)(hi)
0x07240060,	//0x04be		VoC_add16_rd(REG4,REG4,0x2552)(lo)	|	VoC_lw16i(STATUS,0x60)(hi)
0x15072552,	//0x04c0		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_add16_rd(REG4,REG4,0x2552)(hi)
0xDC430C37,	//0x04c2		VoC_sw16_p(REG3,REG4,DEFAULT)	|	VoC_sw16_d(REG7,0xc37)(hi)
0xFFC06580,	//0x04c4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x04c6		CII_auPreGetPCM_VOC
0x09D51406,	//0x04c6		VoC_lw16_d(REG6,0x9d5)
0x0736F001,	//0x04c8		VoC_add16_rd(REG6,REG6,0x8fc)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x150108FC,	//0x04ca		VoC_sw16_d(REG1,0x9d8)(lo)	|	VoC_add16_rd(REG6,REG6,0x8fc)(hi)
0x140409D8,	//0x04cc		VoC_lw16_d(REG4,0x8f9)(lo)	|	VoC_sw16_d(REG1,0x9d8)(hi)
0x148608F9,	//0x04ce		VoC_lw32_d(RL6,0xa0c)(lo)	|	VoC_lw16_d(REG4,0x8f9)(hi)
0x15060A0C,	//0x04d0		VoC_sw16_d(REG6,0x9d9)(lo)	|	VoC_lw32_d(RL6,0xa0c)(hi)
0x158609D9,	//0x04d2		VoC_sw32_d(RL6,0x9da)(lo)	|	VoC_sw16_d(REG6,0x9d9)(hi)
0x450C09DA,	//0x04d4		VoC_bne16_rd(Label_MonoChannel0,REG4,0x1194)(lo)	|	VoC_sw32_d(RL6,0x9da)(hi)
0x0A8E1194,	//0x04d6		VoC_lw16i(RL7_LO,0x1000)(lo)	|	VoC_bne16_rd(Label_MonoChannel0,REG4,0x1194)(hi)
0xF00F1000,	//0x04d8		VoC_lw16i_short(RL7_HI,0x0,DEFAULT)	|	VoC_lw16i(RL7_LO,0x1000)(hi)
0x09FD1406,	//0x04da		VoC_lw16_d(REG6,0x9fd)
0x1501C9BE,	//0x04dc		VoC_sw16_d(REG1,0xa00)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0x07360A00,	//0x04de		VoC_add16_rd(REG6,REG6,0x8fc)(lo)	|	VoC_sw16_d(REG1,0xa00)(hi)
0x158608FC,	//0x04e0		VoC_sw32_d(RL6,0xa02)(lo)	|	VoC_add16_rd(REG6,REG6,0x8fc)(hi)
0x15060A02,	//0x04e2		VoC_sw16_d(REG6,0xa01)(lo)	|	VoC_sw32_d(RL6,0xa02)(hi)
0xFFC00A01,	//0x04e4		VoC_NAD	|	VoC_sw16_d(REG6,0xa01)(hi)
		//0x04e6		Label_MonoChannel0
0x09B31406,	//0x04e6		VoC_lw16_d(REG6,0x9b3)
0x09B207B6,	//0x04e8		VoC_sub16_rd(REG6,REG6,0x9b2)
0x090A1407,	//0x04ea		VoC_lw16_d(REG7,0x90a)
0x05043146,	//0x04ec		VoC_bngtz16_r(Label_iWinDiffNGTZ,REG6)
0xC3F7F80E,	//0x04ee		VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x0733C1B5,	//0x04f0		VoC_add16_rd(REG3,REG6,0x9d8)(lo)	|	VoC_add16_rr(REG5,REG6,REG6,DEFAULT)
0x072D09D8,	//0x04f2		VoC_add16_rd(REG5,REG5,0x9d9)(lo)	|	VoC_add16_rd(REG3,REG6,0x9d8)(hi)
0x150309D9,	//0x04f4		VoC_sw16_d(REG3,0x9d8)(lo)	|	VoC_add16_rd(REG5,REG5,0x9d9)(hi)
0x150509D8,	//0x04f6		VoC_sw16_d(REG5,0x9d9)(lo)	|	VoC_sw16_d(REG3,0x9d8)(hi)
0x449C09D9,	//0x04f8		VoC_bne16_rd(Label_iWinDiffNGTZ,REG4,0x1194)(lo)	|	VoC_sw16_d(REG5,0x9d9)(hi)
0xC1B51194,	//0x04fa		VoC_add16_rr(REG5,REG6,REG6,DEFAULT)	|	VoC_bne16_rd(Label_iWinDiffNGTZ,REG4,0x1194)(hi)
0x0A000733,	//0x04fc		VoC_add16_rd(REG3,REG6,0xa00)
0x0A01072D,	//0x04fe		VoC_add16_rd(REG5,REG5,0xa01)
0x0A001503,	//0x0500		VoC_sw16_d(REG3,0xa00)
0x0A011505,	//0x0502		VoC_sw16_d(REG5,0xa01)
		//0x0504		Label_iWinDiffNGTZ
0x09B31406,	//0x0504		VoC_lw16_d(REG6,0x9b3)
0x09B407B6,	//0x0506		VoC_sub16_rd(REG6,REG6,0x9b4)
0x08F61405,	//0x0508		VoC_lw16_d(REG5,0x8f6)
0x050E3146,	//0x050a		VoC_bngtz16_r(Label_iWinDiffNGTZ1,REG6)
0xC1F7F80E,	//0x050c		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x050e		Label_iWinDiffNGTZ1
0x08F81404,	//0x050e		VoC_lw16_d(REG4,0x8f8)
0x11954025,	//0x0510		VoC_be16_rd(Label_NotCodecBegin_not,REG5,0x1195)
0xFFC065DE,	//0x0512		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_NotCodecBegin)
		//0x0514		Label_NotCodecBegin_not
0x08F91402,	//0x0514		VoC_lw16_d(REG2,0x8f9)
0x09606C10,	//0x0516		VoC_bez16_d(Label_EZandRetrun,0x960)
0x09D06C0E,	//0x0518		VoC_bez16_d(Label_EZandRetrun,0x9d0)
0x09D26E0C,	//0x051a		VoC_bnez16_d(Label_EZandRetrun,0x9d2)
0x11944832,	//0x051c		VoC_blt16_rd(Label_NEZandRetrun,REG2,0x1194)
0x09F86C08,	//0x051e		VoC_bez16_d(Label_EZandRetrun,0x9f8)
0x09FA6E06,	//0x0520		VoC_bnez16_d(Label_EZandRetrun,0x9fa)
		//0x0522		Label_NEZandRetrun
0x1402F001,	//0x0522		VoC_lw16_d(REG2,0x9a3)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xE5C509A3,	//0x0524		VoC_jump(Label_sw_DiscardSilence)	|	VoC_lw16_d(REG2,0x9a3)(hi)
		//0x0526		Label_EZandRetrun
0x1402F021,	//0x0526		VoC_lw16_d(REG2,0x90a)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xFFC0090A,	//0x0528		VoC_NAD	|	VoC_lw16_d(REG2,0x90a)(hi)
		//0x052a		Label_sw_DiscardSilence
0x08F71501,	//0x052a		VoC_sw16_d(REG1,0x8f7)
0x09B91502,	//0x052c		VoC_sw16_d(REG2,0x9b9)
0xFFC065CB,	//0x052e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_Not_fPacketLossAdj)
		//0x0530		Label_NotCodecBegin
0x1193448C,	//0x0530		VoC_bne16_rd(Label_Not_fPacketLossAdj,REG4,0x1193)
0x09B61406,	//0x0532		VoC_lw16_d(REG6,0x9b6)
0x09B507B6,	//0x0534		VoC_sub16_rd(REG6,REG6,0x9b5)
0x1506FFC0,	//0x0536		VoC_sw16_d(REG6,0x9b9)(lo)	|	VoC_NOP
0xF00509B9,	//0x0538		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw16_d(REG6,0x9b9)(hi)
		//0x0539		Label_Not_fPacketLossAdj
0x1505FFC0,	//0x053a		VoC_sw16_d(REG5,0x8f8)(lo)	|	VoC_NOP
0x6E0508F8,	//0x053c		VoC_bnez16_d(PGPLabel_con,0x9b9)(lo)	|	VoC_sw16_d(REG5,0x8f8)(hi)
0x2B0009B9,	//0x053e		VoC_jump_lg(PGPLabel_return)(lo)	|	VoC_bnez16_d(PGPLabel_con,0x9b9)(hi)
0xFFC005C8,	//0x0540		VoC_NAD	|	VoC_jump_lg(PGPLabel_return)(hi)
		//0x0542		PGPLabel_con
0x09B93837,	//0x0542		VoC_bgt16_rd(Label_GTDiscardSilence,REG7,0x9b9)
0xF6E57006,	//0x0544		VoC_movreg16(REG5,REG7,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xFFC065C5,	//0x0546		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_continiue0)
		//0x0548		Label_GTDiscardSilence
0x09B91405,	//0x0548		VoC_lw16_d(REG5,0x9b9)
0xF000F026,	//0x054a		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x054b		Label_continiue0
0x1500C3EF,	//0x054c		VoC_sw16_d(REG0,0x8e4)(lo)	|	VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)
0xFFC008E4,	//0x054e		VoC_NAD	|	VoC_sw16_d(REG0,0x8e4)(hi)
		//0x0550		Lable_LorRchannel
0x09D81403,	//0x0550		VoC_lw16_d(REG3,0x9d8)
0x08E46C04,	//0x0552		VoC_bez16_d(Label_channel0,0x8e4)
0x0A001403,	//0x0554		VoC_lw16_d(REG3,0xa00)
		//0x0556		Label_channel0
0x09B60B1C,	//0x0556		VoC_sub16_dr(REG4,0x9b6,REG3)
0x055C342C,	//0x0558		VoC_bgt16_rr(Label_lessone,REG5,REG4)
0xFFC060A4,	//0x055a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x055c		Label_lessone
0xE00040EA,	//0x055c		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG3,REG5,DEFAULT)
0x090B4C93,	//0x055e		VoC_bnlt16_rd(Label_continiue1,REG3,0x90b)
0x4822E041,	//0x0560		VoC_blt16_rd(Label_LT1,REG2,0x90b)(lo)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x1401090B,	//0x0562		VoC_lw16_d(REG1,0x90b)(lo)	|	VoC_blt16_rd(Label_LT1,REG2,0x90b)(hi)
0xC259090B,	//0x0564		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x90b)(hi)
		//0x0565		Label_LT1
0xC008C0CB,	//0x0566		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
		//0x0568		Label_continiue1
0x09B64C93,	//0x0568		VoC_bnlt16_rd(Label_continiue2,REG3,0x9b6)
0x4822E041,	//0x056a		VoC_blt16_rd(Label_LT2,REG2,0x9b6)(lo)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x140109B6,	//0x056c		VoC_lw16_d(REG1,0x9b6)(lo)	|	VoC_blt16_rd(Label_LT2,REG2,0x9b6)(hi)
0xC25909B6,	//0x056e		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x9b6)(hi)
		//0x056f		Label_LT2
0xC208C0CB,	//0x0570		VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
		//0x0572		Label_continiue2
0x09B74C93,	//0x0572		VoC_bnlt16_rd(Label_continiue3,REG3,0x9b7)
0x4822E041,	//0x0574		VoC_blt16_rd(Label_LT3,REG2,0x9b7)(lo)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x140109B7,	//0x0576		VoC_lw16_d(REG1,0x9b7)(lo)	|	VoC_blt16_rd(Label_LT3,REG2,0x9b7)(hi)
0xC25909B7,	//0x0578		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x9b7)(hi)
		//0x0579		Label_LT3
0xE023C208,	//0x057a		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)
		//0x057c		Label_continiue3
0xF8FC700D,	//0x057c		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0xE08CF8F8,	//0x057e		VoC_movreg16(RL6_LO,REG4,DEFAULT)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x08E46E10,	//0x0580		VoC_bnez16_d(Label_channel1,0x8e4)
0x09D90700,	//0x0582		VoC_add16_rd(REG0,REG0,0x9d9)
0x09DA0936,	//0x0584		VoC_add32_rd(RL6,RL6,0x9da)
0x09D8072B,	//0x0586		VoC_add16_rd(REG3,REG5,0x9d8)
0x09D91500,	//0x0588		VoC_sw16_d(REG0,0x9d9)
0x09DA1586,	//0x058a		VoC_sw32_d(RL6,0x9da)
0x09D81503,	//0x058c		VoC_sw16_d(REG3,0x9d8)
0xFFC065CE,	//0x058e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Lable_ChannelAdd)
		//0x0590		Label_channel1
0x0A010700,	//0x0590		VoC_add16_rd(REG0,REG0,0xa01)
0x0A020936,	//0x0592		VoC_add32_rd(RL6,RL6,0xa02)
0x0A00072B,	//0x0594		VoC_add16_rd(REG3,REG5,0xa00)
0x0A011500,	//0x0596		VoC_sw16_d(REG0,0xa01)
0x0A021586,	//0x0598		VoC_sw32_d(RL6,0xa02)
0x0A001503,	//0x059a		VoC_sw16_d(REG3,0xa00)
		//0x059c		Lable_ChannelAdd
0x08E41401,	//0x059c		VoC_lw16_d(REG1,0x8e4)
0x11930709,	//0x059e		VoC_add16_rd(REG1,REG1,0x1193)
0x1501FFC0,	//0x05a0		VoC_sw16_d(REG1,0x8e4)(lo)	|	VoC_NOP
0x4C2908E4,	//0x05a2		VoC_bnlt16_rd(Lable_LorRchannel_finish,REG1,0x8f9)(lo)	|	VoC_sw16_d(REG1,0x8e4)(hi)
0x2B0008F9,	//0x05a4		VoC_jump_lg(Lable_LorRchannel)(lo)	|	VoC_bnlt16_rd(Lable_LorRchannel_finish,REG1,0x8f9)(hi)
0xFFC00550,	//0x05a6		VoC_NAD	|	VoC_jump_lg(Lable_LorRchannel)(hi)
		//0x05a8		Lable_LorRchannel_finish
0x09D81401,	//0x05a8		VoC_lw16_d(REG1,0x9d8)
0x05BC3186,	//0x05aa		VoC_bez16_r(Label_continiue4,REG6)
0x09B64D01,	//0x05ac		VoC_bnlt16_rd(Label_continiue4,REG1,0x9b6)
0x09B60B08,	//0x05ae		VoC_sub16_dr(REG0,0x9b6,REG1)
0x09C41486,	//0x05b0		VoC_lw32_d(RL6,0x9c4)
0x05B53429,	//0x05b2		VoC_bgt16_rr(Label_NLT4,REG5,REG1)
0xF001E0A0,	//0x05b4		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_movreg16(REG0,REG5,DEFAULT)
		//0x05b5		Label_NLT4
0xC986F9F0,	//0x05b6		VoC_add32_rr(RL6,RL6,REG01,DEFAULT)	|	VoC_shru16_ri(REG0,0xfffffffe,DEFAULT)
0x1586FFC0,	//0x05b8		VoC_sw32_d(RL6,0x9c4)(lo)	|	VoC_NOP
0xFFC009C4,	//0x05ba		VoC_NAD	|	VoC_sw32_d(RL6,0x9c4)(hi)
		//0x05bc		Label_continiue4
0x09B90B2D,	//0x05bc		VoC_sub16_dr(REG5,0x9b9,REG5)
0x08F61402,	//0x05be		VoC_lw16_d(REG2,0x8f6)
0x09B91505,	//0x05c0		VoC_sw16_d(REG5,0x9b9)
0x11954432,	//0x05c2		VoC_bne16_rd(PGPLabel_return,REG2,0x1195)
0xFFC0F022,	//0x05c4		VoC_NOP	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x08F61502,	//0x05c6		VoC_sw16_d(REG2,0x8f6)
		//0x05c8		PGPLabel_return
0xFFC06580,	//0x05c8		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x05ca		CII_auReconMono_Tbl_VOC
0x09D80A81,	//0x05ca		VoC_lw16i(REG1,0x9d8)
0x09C41486,	//0x05cc		VoC_lw32_d(RL6,0x9c4)
0x1586C079,	//0x05ce		VoC_sw32_d(RL6,0x258a)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x7005258A,	//0x05d0		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw32_d(RL6,0x258a)(hi)
0x1507D810,	//0x05d2		VoC_sw16_d(REG7,0x2552)(lo)	|	VoC_lw16_p(REG0,REG1,IN_PARALLEL)
0xC0342552,	//0x05d4		VoC_add16_rr(REG4,REG0,REG6,DEFAULT)	|	VoC_sw16_d(REG7,0x2552)(hi)
0x00000ACC,	//0x05d6		VoC_lw16i(RL6_LO,0x8000)
0x7FFF0ACD,	//0x05d8		VoC_lw16i(RL6_HI,0xffff)
0x25531505,	//0x05da		VoC_sw16_d(REG5,0x2553)
0x25541504,	//0x05dc		VoC_sw16_d(REG4,0x2554)
0x25561500,	//0x05de		VoC_sw16_d(REG0,0x2556)
0x25881586,	//0x05e0		VoC_sw32_d(RL6,0x2588)
0x1412F050,	//0x05e2		VoC_lw16_d(INC2,0x8f9)(lo)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x0A8208F9,	//0x05e4		VoC_lw16i(REG2,0x11be)(lo)	|	VoC_lw16_d(INC2,0x8f9)(hi)
0x318711BE,	//0x05e6		VoC_bez16_r(SET_OUTPCM_BUFF_END,REG7)(lo)	|	VoC_lw16i(REG2,0x11be)(hi)
0x071205EC,	//0x05e8		VoC_add16_rd(REG2,REG2,0x1193)(lo)	|	VoC_bez16_r(SET_OUTPCM_BUFF_END,REG7)(hi)
0xFFC01193,	//0x05ea		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x1193)(hi)
		//0x05ec		SET_OUTPCM_BUFF_END
0x09DA1807,	//0x05ec		VoC_lw16i_set_inc(REG3,0x9da,0x1)
0x09D90A81,	//0x05ee		VoC_lw16i(REG1,0x9d9)
0x2552071B,	//0x05f0		VoC_add16_rd(REG3,REG3,0x2552)
0x25520709,	//0x05f2		VoC_add16_rd(REG1,REG1,0x2552)
0xD811D99E,	//0x05f4		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw32_p(RL6,REG3,DEFAULT)
0x25C61586,	//0x05f6		VoC_sw32_d(RL6,0x25c6)
0xF419725A,	//0x05f8		VoC_lw16i_short(FORMAT32,0x3,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x12,DEFAULT)
0x00200A96,	//0x05fa		VoC_lw16i(STATUS,0x20)
0x090B4820,	//0x05fc		VoC_blt16_rd(I_NLT_CSUBFRAMESAMPLEQUAD_not,REG0,0x90b)
0x068C2B00,	//0x05fe		VoC_jump_lg(I_NLT_CSUBFRAMESAMPLEQUAD)
		//0x0600		I_NLT_CSUBFRAMESAMPLEQUAD_not
0x090B3C24,	//0x0600		VoC_bngt16_rd(GET_ISEGEND_END,REG4,0x90b)
0x090B1404,	//0x0602		VoC_lw16_d(REG4,0x90b)
		//0x0604		GET_ISEGEND_END
0x3144C304,	//0x0604		VoC_bngtz16_r(I_NLT_CSUBFRAMESAMPLEQUAD,REG4)(lo)	|	VoC_sub16_rr(REG4,REG4,REG0,DEFAULT)
0xC020068C,	//0x0606		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_bngtz16_r(I_NLT_CSUBFRAMESAMPLEQUAD,REG4)(hi)
0x25531504,	//0x0608		VoC_sw16_d(REG4,0x2553)
0xF0097924,	//0x060a		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0x25561500,	//0x060c		VoC_sw16_d(REG0,0x2556)
0x11923834,	//0x060e		VoC_bgt16_rd(Lable_L3,REG4,0x1192)
0x070E0AC7,	//0x0610		VoC_lw16i(REG7,0x870e)
0x077C2B00,	//0x0612		VoC_jump_lg(Lable_Error_L4)
		//0x0614		Lable_L3
0x068A2E21,	//0x0614		VoC_loop_r(1,REG4)
0x25C61487,	//0x0616		VoC_lw32_d(RL7,0x25c6)
0x258A1486,	//0x0618		VoC_lw32_d(RL6,0x258a)
0x648EF205,	//0x061a		VoC_bnlt32_rd(Lable_L7,RL6,0x11b6)(lo)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x643F11B6,	//0x061c		VoC_bnlt32_rd(Lable_L7,RL7,0x11b6)(lo)	|	VoC_bnlt32_rd(Lable_L7,RL6,0x11b6)(hi)
0x0AC711B6,	//0x061e		VoC_lw16i(REG7,0x870e)(lo)	|	VoC_bnlt32_rd(Lable_L7,RL7,0x11b6)(hi)
0x2B00070E,	//0x0620		VoC_jump_lg(Lable_Error_L4)(lo)	|	VoC_lw16i(REG7,0x870e)(hi)
0xFFC0077C,	//0x0622		VoC_NAD	|	VoC_jump_lg(Lable_Error_L4)(hi)
		//0x0624		Lable_L7
0x25580A80,	//0x0624		VoC_lw16i(REG0,0x2558)
0x25B40A83,	//0x0626		VoC_lw16i(REG3,0x25b4)
0x12AC0A84,	//0x0628		VoC_lw16i(REG4,0x12ac)
0x00081792,	//0x062a		VoC_cfg_lg(0x8,)
0x7FC31544,	//0x062c		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x062e		VoC_sw16_d(REG5,0xffc2)
0x7FC415C6,	//0x0630		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x0632		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0634		VoC_cfg_lg(0x8,)
0x12DA0A84,	//0x0636		VoC_lw16i(REG4,0x12da)
0x1792F105,	//0x0638		VoC_cfg_lg(0x8,)(lo)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x15440008,	//0x063a		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15457FC3,	//0x063c		VoC_sw16_d(REG5,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C77FC2,	//0x063e		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw16_d(REG5,0xffc2)(hi)
0xDE807FC4,	//0x0640		VoC_cfg(0x0)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x00081794,	//0x0642		VoC_cfg_lg(0x8,)
0x00200A84,	//0x0644		VoC_lw16i(REG4,0x20)
0x0936F005,	//0x0646		VoC_add32_rd(RL6,RL6,0x11b8)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC9D711B8,	//0x0648		VoC_add32_rr(RL7,RL7,REG45,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x11b8)(hi)
0x258A1586,	//0x064a		VoC_sw32_d(RL6,0x258a)
0x25C61587,	//0x064c		VoC_sw32_d(RL7,0x25c6)
0x06852C10,	//0x064e		VoC_loop_i(0x0,0x8)
0xD9CBD9C2,	//0x0650		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF90C4DEC,	//0x0652		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0654		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD9C2CE75,	//0x0656		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xFF2659CB,	//0x0658		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF90C4DEC,	//0x065a		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x065c		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD8B4CE75,	//0x065e		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xE0057F27,	//0x0660		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x06663244,	//0x0662		VoC_bnltz16_r(GET_SIGN_END_1,REG4)
0x7FFF0AC5,	//0x0664		VoC_lw16i(REG5,0xffff)
		//0x0666		GET_SIGN_END_1
0xE00758B6,	//0x0666		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0x066C3246,	//0x0668		VoC_bnltz16_r(GET_SIGN_END_2,REG6)
0x7FFF0AC7,	//0x066a		VoC_lw16i(REG7,0xffff)
		//0x066c		GET_SIGN_END_2
0xFBFB7BFA,	//0x066c		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xC8FF48B6,	//0x066e		VoC_add32_rr(RL7,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(RL6,REG45,RL6,DEFAULT)
0x11BA5436,	//0x0670		VoC_bngt32_rd(PCM1_BNGT_0X7FFF,RL6,0x11ba)
0x7FFF0A8C,	//0x0672		VoC_lw16i(RL6_LO,0x7fff)
0xFFC065C6,	//0x0674		VoC_NAD(IN_PARALLEL)	|	VoC_jump(GET_PCM1_END)
		//0x0676		PCM1_BNGT_0X7FFF
0x25886426,	//0x0676		VoC_bnlt32_rd(GET_PCM1_END,RL6,0x2588)
0x00000ACC,	//0x0678		VoC_lw16i(RL6_LO,0x8000)
		//0x067a		GET_PCM1_END
0x11BA5437,	//0x067a		VoC_bngt32_rd(PCM2_BNGT_0X7FFF,RL7,0x11ba)
0x7FFF0A8E,	//0x067c		VoC_lw16i(RL7_LO,0x7fff)
0xFFC065C6,	//0x067e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(GET_PCM2_END)
		//0x0680		PCM2_BNGT_0X7FFF
0x25886427,	//0x0680		VoC_bnlt32_rd(GET_PCM2_END,RL7,0x2588)
0x00000ACE,	//0x0682		VoC_lw16i(RL7_LO,0x8000)
		//0x0684		GET_PCM2_END
0xDCAEDCAC,	//0x0684		VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x0685		VoC_endloop0
0x003F1794,	//0x0686		VoC_cfg_lg(0x3f,)
0x00101792,	//0x0688		VoC_cfg_lg(0x10,)
		//0x068a		VoC_endloop1
0xFFC07FC0,	//0x068a		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x068c		I_NLT_CSUBFRAMESAMPLEQUAD
0x25561400,	//0x068c		VoC_lw16_d(REG0,0x2556)
0x25541404,	//0x068e		VoC_lw16_d(REG4,0x2554)
0x09B64820,	//0x0690		VoC_blt16_rd(I_NLT_ICOEFRECURQ2_con1,REG0,0x9b6)
0x07242B00,	//0x0692		VoC_jump_lg(I_NLT_ICOEFRECURQ2)
		//0x0694		I_NLT_ICOEFRECURQ2_con1
0x09B63C24,	//0x0694		VoC_bngt16_rd(GET_ISEGEND_END_2,REG4,0x9b6)
0x09B61404,	//0x0696		VoC_lw16_d(REG4,0x9b6)
		//0x0698		GET_ISEGEND_END_2
0x3144C304,	//0x0698		VoC_bngtz16_r(I_NLT_ICOEFRECURQ2,REG4)(lo)	|	VoC_sub16_rr(REG4,REG4,REG0,DEFAULT)
0xC0200724,	//0x069a		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_bngtz16_r(I_NLT_ICOEFRECURQ2,REG4)(hi)
0x25530725,	//0x069c		VoC_add16_rd(REG5,REG4,0x2553)
0xF3F97924,	//0x069e		VoC_lw16i_short(INC1,0xfffffffe,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0x25531505,	//0x06a0		VoC_sw16_d(REG5,0x2553)
0x25561500,	//0x06a2		VoC_sw16_d(REG0,0x2556)
0x11940789,	//0x06a4		VoC_sub16_rd(REG1,REG1,0x1194)
0x11923834,	//0x06a6		VoC_bgt16_rd(Lable_L4,REG4,0x1192)
0x070E0AC7,	//0x06a8		VoC_lw16i(REG7,0x870e)
0x077C2B00,	//0x06aa		VoC_jump_lg(Lable_Error_L4)
		//0x06ac		Lable_L4
0x07202E21,	//0x06ac		VoC_loop_r(1,REG4)
0x25C61487,	//0x06ae		VoC_lw32_d(RL7,0x25c6)
0x258A1486,	//0x06b0		VoC_lw32_d(RL6,0x258a)
0x648EF205,	//0x06b2		VoC_bnlt32_rd(Lable_L8,RL6,0x11b6)(lo)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x643F11B6,	//0x06b4		VoC_bnlt32_rd(Lable_L8,RL7,0x11b6)(lo)	|	VoC_bnlt32_rd(Lable_L8,RL6,0x11b6)(hi)
0x0AC711B6,	//0x06b6		VoC_lw16i(REG7,0x870e)(lo)	|	VoC_bnlt32_rd(Lable_L8,RL7,0x11b6)(hi)
0x2B00070E,	//0x06b8		VoC_jump_lg(Lable_Error_L4)(lo)	|	VoC_lw16i(REG7,0x870e)(hi)
0xFFC0077C,	//0x06ba		VoC_NAD	|	VoC_jump_lg(Lable_Error_L4)(hi)
		//0x06bc		Lable_L8
0x25580A80,	//0x06bc		VoC_lw16i(REG0,0x2558)
0x25B40A83,	//0x06be		VoC_lw16i(REG3,0x25b4)
0x12AC0A84,	//0x06c0		VoC_lw16i(REG4,0x12ac)
0x00081792,	//0x06c2		VoC_cfg_lg(0x8,)
0x7FC31544,	//0x06c4		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x06c6		VoC_sw16_d(REG5,0xffc2)
0x7FC415C6,	//0x06c8		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x06ca		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x06cc		VoC_cfg_lg(0x8,)
0x12DA0A84,	//0x06ce		VoC_lw16i(REG4,0x12da)
0x1792F105,	//0x06d0		VoC_cfg_lg(0x8,)(lo)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x15440008,	//0x06d2		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15457FC3,	//0x06d4		VoC_sw16_d(REG5,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C77FC2,	//0x06d6		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw16_d(REG5,0xffc2)(hi)
0xDE807FC4,	//0x06d8		VoC_cfg(0x0)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x1794FFC0,	//0x06da		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x0A840008,	//0x06dc		VoC_lw16i(REG4,0x20)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xF0050020,	//0x06de		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16i(REG4,0x20)(hi)
0x11B80936,	//0x06e0		VoC_add32_rd(RL6,RL6,0x11b8)
0x1586C9D7,	//0x06e2		VoC_sw32_d(RL6,0x258a)(lo)	|	VoC_add32_rr(RL7,RL7,REG45,DEFAULT)
0x1587258A,	//0x06e4		VoC_sw32_d(RL7,0x25c6)(lo)	|	VoC_sw32_d(RL6,0x258a)(hi)
0x2C1025C6,	//0x06e6		VoC_loop_i(0x0,0x8)(lo)	|	VoC_sw32_d(RL7,0x25c6)(hi)
0xD9C2071F,	//0x06e8		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x8)(hi)
0x4DECD9CB,	//0x06ea		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0x4E7CF90C,	//0x06ec		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x06ee		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x59CBD9C2,	//0x06f0		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x4DECFF26,	//0x06f2		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x4E7CF90C,	//0x06f4		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x06f6		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x7F27D8B4,	//0x06f8		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x3244E005,	//0x06fa		VoC_bnltz16_r(GET_SIGN_END_3,REG4)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0AC50700,	//0x06fc		VoC_lw16i(REG5,0xffff)(lo)	|	VoC_bnltz16_r(GET_SIGN_END_3,REG4)(hi)
0xFFC07FFF,	//0x06fe		VoC_NAD	|	VoC_lw16i(REG5,0xffff)(hi)
		//0x0700		GET_SIGN_END_3
0xE00758B6,	//0x0700		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0x07063246,	//0x0702		VoC_bnltz16_r(GET_SIGN_END_4,REG6)
0x7FFF0AC7,	//0x0704		VoC_lw16i(REG7,0xffff)
		//0x0706		GET_SIGN_END_4
0xFBFB7BFA,	//0x0706		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xC8FF48B6,	//0x0708		VoC_add32_rr(RL7,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(RL6,REG45,RL6,DEFAULT)
0x11BA5436,	//0x070a		VoC_bngt32_rd(PCM3_BNGT_0X7FFF,RL6,0x11ba)
0x7FFF0A8C,	//0x070c		VoC_lw16i(RL6_LO,0x7fff)
0xFFC065C6,	//0x070e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(GET_PCM3_END)
		//0x0710		PCM3_BNGT_0X7FFF
0x25886426,	//0x0710		VoC_bnlt32_rd(GET_PCM3_END,RL6,0x2588)
0x00000ACC,	//0x0712		VoC_lw16i(RL6_LO,0x8000)
		//0x0714		GET_PCM3_END
0x11BA5437,	//0x0714		VoC_bngt32_rd(PCM4_BNGT_0X7FFF,RL7,0x11ba)
0x7FFF0A8E,	//0x0716		VoC_lw16i(RL7_LO,0x7fff)
0xFFC065C6,	//0x0718		VoC_NAD(IN_PARALLEL)	|	VoC_jump(GET_PCM4_END)
		//0x071a		PCM4_BNGT_0X7FFF
0x25886427,	//0x071a		VoC_bnlt32_rd(GET_PCM4_END,RL7,0x2588)
0x00000ACE,	//0x071c		VoC_lw16i(RL7_LO,0x8000)
		//0x071e		GET_PCM4_END
0xDCAEDCAC,	//0x071e		VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x071f		VoC_endloop0
		//0x0720		VoC_endloop1
0x0709FFC0,	//0x0720		VoC_add16_rd(REG1,REG1,0x1194)(lo)	|	VoC_NOP
0xFFC01194,	//0x0722		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x1194)(hi)
		//0x0724		I_NLT_ICOEFRECURQ2
0x25561400,	//0x0724		VoC_lw16_d(REG0,0x2556)
0x25541404,	//0x0726		VoC_lw16_d(REG4,0x2554)
0x09B74820,	//0x0728		VoC_blt16_rd(I_NLT_ICOEFRECURQ3_con,REG0,0x9b7)
0x07602B00,	//0x072a		VoC_jump_lg(I_NLT_ICOEFRECURQ3)
		//0x072c		I_NLT_ICOEFRECURQ3_con
0x09B73C24,	//0x072c		VoC_bngt16_rd(GET_ISEGEND_END_3,REG4,0x9b7)
0x09B71404,	//0x072e		VoC_lw16_d(REG4,0x9b7)
		//0x0730		GET_ISEGEND_END_3
0x3144C304,	//0x0730		VoC_bngtz16_r(I_NLT_ICOEFRECURQ3,REG4)(lo)	|	VoC_sub16_rr(REG4,REG4,REG0,DEFAULT)
0xC0200760,	//0x0732		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_bngtz16_r(I_NLT_ICOEFRECURQ3,REG4)(hi)
0x25530725,	//0x0734		VoC_add16_rd(REG5,REG4,0x2553)
0xF3F97924,	//0x0736		VoC_lw16i_short(INC1,0xfffffffe,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0x25531505,	//0x0738		VoC_sw16_d(REG5,0x2553)
0x25561500,	//0x073a		VoC_sw16_d(REG0,0x2556)
0x11940789,	//0x073c		VoC_sub16_rd(REG1,REG1,0x1194)
0x075C2E21,	//0x073e		VoC_loop_r(1,REG4)
0x075B2C10,	//0x0740		VoC_loop_i(0x0,0x8)
0xD9CFD9CE,	//0x0742		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0xFA2F7A2E,	//0x0744		VoC_shr32_ri(RL7,0x5,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x5,DEFAULT)
0x11BA5436,	//0x0746		VoC_bngt32_rd(PCM5_BNGT_0X7FFF,RL6,0x11ba)
0x7FFF0A8C,	//0x0748		VoC_lw16i(RL6_LO,0x7fff)
0xFFC065C6,	//0x074a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(GET_PCM5_END)
		//0x074c		PCM5_BNGT_0X7FFF
0x25886426,	//0x074c		VoC_bnlt32_rd(GET_PCM5_END,RL6,0x2588)
0x00000ACC,	//0x074e		VoC_lw16i(RL6_LO,0x8000)
		//0x0750		GET_PCM5_END
0x11BA5437,	//0x0750		VoC_bngt32_rd(PCM6_BNGT_0X7FFF,RL7,0x11ba)
0x7FFF0A8E,	//0x0752		VoC_lw16i(RL7_LO,0x7fff)
0xFFC065C6,	//0x0754		VoC_NAD(IN_PARALLEL)	|	VoC_jump(GET_PCM6_END)
		//0x0756		PCM6_BNGT_0X7FFF
0x25886427,	//0x0756		VoC_bnlt32_rd(GET_PCM6_END,RL7,0x2588)
0x00000ACE,	//0x0758		VoC_lw16i(RL7_LO,0x8000)
		//0x075a		GET_PCM6_END
0xDCAEDCAC,	//0x075a		VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x075b		VoC_endloop0
		//0x075c		VoC_endloop1
0x0709FFC0,	//0x075c		VoC_add16_rd(REG1,REG1,0x1194)(lo)	|	VoC_NOP
0xFFC01194,	//0x075e		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x1194)(hi)
		//0x0760		I_NLT_ICOEFRECURQ3
0x08F91406,	//0x0760		VoC_lw16_d(REG6,0x8f9)
0x258A1486,	//0x0762		VoC_lw32_d(RL6,0x258a)
0x11944826,	//0x0764		VoC_blt16_rd(UPDATE_PISIN,REG6,0x1194)
0x25526C04,	//0x0766		VoC_bez16_d(UPDATE_PISIN_END,0x2552)
		//0x0768		UPDATE_PISIN
0x09C41586,	//0x0768		VoC_sw32_d(RL6,0x9c4)
		//0x076a		UPDATE_PISIN_END
0x09D90A84,	//0x076a		VoC_lw16i(REG4,0x9d9)
0x09D80A85,	//0x076c		VoC_lw16i(REG5,0x9d8)
0x09DA0A86,	//0x076e		VoC_lw16i(REG6,0x9da)
0x25561407,	//0x0770		VoC_lw16_d(REG7,0x2556)
0x25520724,	//0x0772		VoC_add16_rd(REG4,REG4,0x2552)
0x2552072D,	//0x0774		VoC_add16_rd(REG5,REG5,0x2552)
0x25520736,	//0x0776		VoC_add16_rd(REG6,REG6,0x2552)
0xDC57DC41,	//0x0778		VoC_sw16_p(REG7,REG5,DEFAULT)	|	VoC_sw16_p(REG1,REG4,DEFAULT)
0xF007DC63,	//0x077a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw16_p(REG3,REG6,DEFAULT)
		//0x077c		Lable_Error_L4
0x0A96F019,	//0x077c		VoC_lw16i(STATUS,0x60)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x14060060,	//0x077e		VoC_lw16_d(REG6,0x2553)(lo)	|	VoC_lw16i(STATUS,0x60)(hi)
0x15072553,	//0x0780		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_lw16_d(REG6,0x2553)(hi)
0xE5800C37,	//0x0782		VoC_return	|	VoC_sw16_d(REG7,0xc37)(hi)
		//0x0784		CII_prvDecodeFrameHeader_VOC
0xE0005FE9,	//0x0784		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x08E21406,	//0x0786		VoC_lw16_d(REG6,0x8e2)
0x25531500,	//0x0788		VoC_sw16_d(REG0,0x2553)
0x25541500,	//0x078a		VoC_sw16_d(REG0,0x2554)
0x25551500,	//0x078c		VoC_sw16_d(REG0,0x2555)
0x07A43186,	//0x078e		VoC_bez16_r(Lable_HDR_SIZE,REG6)
0x119340A6,	//0x0790		VoC_be16_rd(Lable_HDR_QUANT_JUMP,REG6,0x1193)
0x119440A6,	//0x0792		VoC_be16_rd(Lable_HDR_NOISE_JUMP,REG6,0x1194)
0x11954096,	//0x0794		VoC_be16_rd(Lable_HDR_NOISE_JUMP,REG6,0x1195)
0x11964096,	//0x0796		VoC_be16_rd(Lable_HDR_MSKUPD_JUMP,REG6,0x1196)
0x11974096,	//0x0798		VoC_be16_rd(Lable_HDR_BARK_JUMP,REG6,0x1197)
0x09902B00,	//0x079a		VoC_jump_lg(Lable_DecFramHeader_exit)
		//0x079c		Lable_HDR_QUANT_JUMP
0x08642B00,	//0x079c		VoC_jump_lg(Lable_HDR_QUANT)
		//0x079e		Lable_HDR_NOISE_JUMP
0x08A62B00,	//0x079e		VoC_jump_lg(Lable_HDR_NOISE)
		//0x07a0		Lable_HDR_MSKUPD_JUMP
0x08AF2B00,	//0x07a0		VoC_jump_lg(Lable_HDR_MSKUPD)
		//0x07a2		Lable_HDR_BARK_JUMP
0x08F82B00,	//0x07a2		VoC_jump_lg(Lable_HDR_BARK)
		//0x07a4		Lable_HDR_SIZE
0x08FE6E04,	//0x07a4		VoC_bnez16_d(Lable_AllowSubFrame,0x8fe)
0x07FE2B00,	//0x07a6		VoC_jump_lg(Lable_Not_AllowSubFrame)
		//0x07a8		Lable_AllowSubFrame
0xE0327201,	//0x07a8		VoC_lw16i_short(REG2,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x10,DEFAULT)
0x09064039,	//0x07aa		VoC_be16_rd(Lable_Out,REG1,0x906)
0xE0227081,	//0x07ac		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x09063C19,	//0x07ae		VoC_bngt16_rd(Lable_Out,REG1,0x906)
0xF180F022,	//0x07b0		VoC_lw16i_short(REG0,0xc,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x07b1		Lable_Out
0x25521502,	//0x07b2		VoC_sw16_d(REG2,0x2552)
0x11172B80,	//0x07b4		VoC_jal(CII_ibstrmLookForBits_VOC)
0x09903207,	//0x07b6		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x09026C2E,	//0x07b8		VoC_bez16_d(Lable_Not_HeaderReset,0x902)
0x25521406,	//0x07ba		VoC_lw16_d(REG6,0x2552)
0x0FF02B80,	//0x07bc		VoC_jal(CII_ibstrmGetBits_VOC)
0x09903207,	//0x07be		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x1400E1C1,	//0x07c0		VoC_lw16_d(REG0,0x9a4)(lo)	|	VoC_movreg16(REG1,RL7_LO,DEFAULT)
0xFE0809A4,	//0x07c2		VoC_shr16_rr(REG0,REG1,DEFAULT)	|	VoC_lw16_d(REG0,0x9a4)(hi)
0x25521406,	//0x07c4		VoC_lw16_d(REG6,0x2552)
0x25531500,	//0x07c6		VoC_sw16_d(REG0,0x2553)
0x0FF02B80,	//0x07c8		VoC_jal(CII_ibstrmGetBits_VOC)
0x09903207,	//0x07ca		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0xE00361C1,	//0x07cc		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_movreg16(REG1,RL7_LO,DEFAULT)
0x09A41400,	//0x07ce		VoC_lw16_d(REG0,0x9a4)
0x09021503,	//0x07d0		VoC_sw16_d(REG3,0x902)
0x1402FE08,	//0x07d2		VoC_lw16_d(REG2,0x2553)(lo)	|	VoC_shr16_rr(REG0,REG1,DEFAULT)
0x15002553,	//0x07d4		VoC_sw16_d(REG0,0x2554)(lo)	|	VoC_lw16_d(REG2,0x2553)(hi)
0x4CBA2554,	//0x07d6		VoC_bnlt16_rd(Lable_Not_HeaderReset,REG2,0x907)(lo)	|	VoC_sw16_d(REG0,0x2554)(hi)
0x4CA80907,	//0x07d8		VoC_bnlt16_rd(Lable_Not_HeaderReset,REG0,0x907)(lo)	|	VoC_bnlt16_rd(Lable_Not_HeaderReset,REG2,0x907)(hi)
0x3C9A0907,	//0x07da		VoC_bngt16_rd(Lable_Not_HeaderReset,REG2,0x9a4)(lo)	|	VoC_bnlt16_rd(Lable_Not_HeaderReset,REG0,0x907)(hi)
0x3C8809A4,	//0x07dc		VoC_bngt16_rd(Lable_Not_HeaderReset,REG0,0x9a4)(lo)	|	VoC_bngt16_rd(Lable_Not_HeaderReset,REG2,0x9a4)(hi)
0x0AC709A4,	//0x07de		VoC_lw16i(REG7,0x8402)(lo)	|	VoC_bngt16_rd(Lable_Not_HeaderReset,REG0,0x9a4)(hi)
0xFFC00402,	//0x07e0		VoC_NOP	|	VoC_lw16i(REG7,0x8402)(hi)
0x0C371507,	//0x07e2		VoC_sw16_d(REG7,0xc37)
0x09902B00,	//0x07e4		VoC_jump_lg(Lable_DecFramHeader_exit)
		//0x07e6		Lable_Not_HeaderReset
0x25521406,	//0x07e6		VoC_lw16_d(REG6,0x2552)
0x0FF02B80,	//0x07e8		VoC_jal(CII_ibstrmGetBits_VOC)
0x09903207,	//0x07ea		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x1400E1C1,	//0x07ec		VoC_lw16_d(REG0,0x9a4)(lo)	|	VoC_movreg16(REG1,RL7_LO,DEFAULT)
0xFE0809A4,	//0x07ee		VoC_shr16_rr(REG0,REG1,DEFAULT)	|	VoC_lw16_d(REG0,0x9a4)(hi)
0x1500FFC0,	//0x07f0		VoC_sw16_d(REG0,0x2555)(lo)	|	VoC_NOP
0x4C982555,	//0x07f2		VoC_bnlt16_rd(Lable_Not_AllowSubFrame,REG0,0x907)(lo)	|	VoC_sw16_d(REG0,0x2555)(hi)
0x3C880907,	//0x07f4		VoC_bngt16_rd(Lable_Not_AllowSubFrame,REG0,0x9a4)(lo)	|	VoC_bnlt16_rd(Lable_Not_AllowSubFrame,REG0,0x907)(hi)
0x0AC709A4,	//0x07f6		VoC_lw16i(REG7,0x8402)(lo)	|	VoC_bngt16_rd(Lable_Not_AllowSubFrame,REG0,0x9a4)(hi)
0xFFC00402,	//0x07f8		VoC_NOP	|	VoC_lw16i(REG7,0x8402)(hi)
0x0C371507,	//0x07fa		VoC_sw16_d(REG7,0xc37)
0x09902B00,	//0x07fc		VoC_jump_lg(Lable_DecFramHeader_exit)
		//0x07fe		Lable_Not_AllowSubFrame
0x25531402,	//0x07fe		VoC_lw16_d(REG2,0x2553)
0x25541403,	//0x0800		VoC_lw16_d(REG3,0x2554)
0x25551404,	//0x0802		VoC_lw16_d(REG4,0x2555)
0x09942B80,	//0x0804		VoC_jal(CII_prvUpdateSubFrameConfig_VOC)
0x0C371507,	//0x0806		VoC_sw16_d(REG7,0xc37)
0x09903207,	//0x0808		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x09E82B80,	//0x080a		VoC_jal(CII_auAdaptToSubFrameConfig_VOC)
0xE0227021,	//0x080c		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x08F94031,	//0x080e		VoC_be16_rd(Lable_Channel_1,REG1,0x8f9)
0x08F94182,	//0x0810		VoC_be16_rd(Lable_Channel_2,REG2,0x8f9)
0x08522B00,	//0x0812		VoC_jump_lg(Lable_Channel_out)
		//0x0814		Lable_Channel_1
0xFFC07026,	//0x0814		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0FF02B80,	//0x0816		VoC_jal(CII_ibstrmGetBits_VOC)
0x0C371507,	//0x0818		VoC_sw16_d(REG7,0xc37)
0x3207E1C6,	//0x081a		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0xF0200990,	//0x081c		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0x08223186,	//0x081e		VoC_bez16_r(Label_SkipFlag,REG6)
0xFFC07000,	//0x0820		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x0822		Label_SkipFlag
0x09D0150E,	//0x0822		VoC_sw16_d(RL7_LO,0x9d0)
0x25561500,	//0x0824		VoC_sw16_d(REG0,0x2556)
0x08522B00,	//0x0826		VoC_jump_lg(Lable_Channel_out)
		//0x0828		Lable_Channel_2
0xFFC07026,	//0x0828		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0FF02B80,	//0x082a		VoC_jal(CII_ibstrmGetBits_VOC)
0x0C371507,	//0x082c		VoC_sw16_d(REG7,0xc37)
0x09903207,	//0x082e		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x0903150E,	//0x0830		VoC_sw16_d(RL7_LO,0x903)
0xFFC07026,	//0x0832		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0FF02B80,	//0x0834		VoC_jal(CII_ibstrmGetBits_VOC)
0x0C371507,	//0x0836		VoC_sw16_d(REG7,0xc37)
0x3207E1C6,	//0x0838		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0x150E0990,	//0x083a		VoC_sw16_d(RL7_LO,0x9d0)(lo)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0xF02609D0,	//0x083c		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_sw16_d(RL7_LO,0x9d0)(hi)
0x0FF02B80,	//0x083e		VoC_jal(CII_ibstrmGetBits_VOC)
0x1507E1C0,	//0x0840		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x32070C37,	//0x0842		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_sw16_d(REG7,0xc37)(hi)
0x150E0990,	//0x0844		VoC_sw16_d(RL7_LO,0x9f8)(lo)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0xF00009F8,	//0x0846		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sw16_d(RL7_LO,0x9f8)(hi)
0x09D06E06,	//0x0848		VoC_bnez16_d(Label_fSkipallEZ2,0x9d0)
0x09F86E04,	//0x084a		VoC_bnez16_d(Label_fSkipallEZ2,0x9f8)
0xFFC0F020,	//0x084c		VoC_NOP	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
		//0x084e		Label_fSkipallEZ2
0x25561500,	//0x084e		VoC_sw16_d(REG0,0x2556)
0x09EE0A86,	//0x0850		VoC_lw16i(REG6,0x9ee)
		//0x0852		Lable_Channel_out
0xFFC0F020,	//0x0852		VoC_NOP	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x09AB1500,	//0x0854		VoC_sw16_d(REG0,0x9ab)
0x25566C0C,	//0x0856		VoC_bez16_d(Lable_zero_skipall,0x2556)
0x09A96E04,	//0x0858		VoC_bnez16_d(Label_not_LPC,0x9a9)
0x1A2E2B80,	//0x085a		VoC_jal(CII_prvDecodeFrameHeaderLpc_VOC)
		//0x085c		Label_not_LPC
0xF021F0C6,	//0x085c		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x6,DEFAULT)
0x08E21506,	//0x085e		VoC_sw16_d(REG6,0x8e2)
0x09902B00,	//0x0860		VoC_jump_lg(Lable_DecFramHeader_exit)
		//0x0862		Lable_zero_skipall
0x08E21500,	//0x0862		VoC_sw16_d(REG0,0x8e2)
		//0x0864		Lable_HDR_QUANT
0xFFC072A0,	//0x0864		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x15,DEFAULT)
0x11172B80,	//0x0866		VoC_jal(CII_ibstrmLookForBits_VOC)
0x0C371507,	//0x0868		VoC_sw16_d(REG7,0xc37)
0x09903207,	//0x086a		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
		//0x086c		Lable_While_loop
0xFFC070E6,	//0x086c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0x0FF02B80,	//0x086e		VoC_jal(CII_ibstrmGetBits_VOC)
0x007F0A82,	//0x0870		VoC_lw16i(REG2,0x7f)
0x1507E1C0,	//0x0872		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x32070C37,	//0x0874		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_sw16_d(REG7,0xc37)(hi)
0x35020990,	//0x0876		VoC_be16_rr(Label_escape_code,REG0,REG2)(lo)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0x07000880,	//0x0878		VoC_add16_rd(REG0,REG0,0x9ab)(lo)	|	VoC_be16_rr(Label_escape_code,REG0,REG2)(hi)
0xFFC009AB,	//0x087a		VoC_NOP	|	VoC_add16_rd(REG0,REG0,0x9ab)(hi)
0x09AB1500,	//0x087c		VoC_sw16_d(REG0,0x9ab)
0xFFC065C8,	//0x087e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Lable_out_while)
		//0x0880		Label_escape_code
0x09AB0710,	//0x0880		VoC_add16_rd(REG0,REG2,0x9ab)
0x1500FFC0,	//0x0882		VoC_sw16_d(REG0,0x9ab)(lo)	|	VoC_NOP
0xE5E709AB,	//0x0884		VoC_jump(Lable_While_loop)	|	VoC_sw16_d(REG0,0x9ab)(hi)
		//0x0886		Lable_out_while
0xE0D071E3,	//0x0886		VoC_lw16i_short(REG0,0xd,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0xf,DEFAULT)
0x09AB3913,	//0x0888		VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)
0x00200A83,	//0x088a		VoC_lw16i(REG3,0x20)
0x38ABF180,	//0x088c		VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)(lo)	|	VoC_lw16i_short(REG0,0xc,DEFAULT)
0x0A8309AB,	//0x088e		VoC_lw16i(REG3,0x28)(lo)	|	VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)(hi)
0xF1600028,	//0x0890		VoC_lw16i_short(REG0,0xb,DEFAULT)	|	VoC_lw16i(REG3,0x28)(hi)
0x09AB3883,	//0x0892		VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)
0x002D0A83,	//0x0894		VoC_lw16i(REG3,0x2d)
0x381BF140,	//0x0896		VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)(lo)	|	VoC_lw16i_short(REG0,0xa,DEFAULT)
0xF12009AB,	//0x0898		VoC_lw16i_short(REG0,0x9,DEFAULT)	|	VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)(hi)
		//0x089a		DFHL_GET_IMAXESCLEVEL
0x09BB1403,	//0x089a		VoC_lw16_d(REG3,0x9bb)
0x08EF1500,	//0x089c		VoC_sw16_d(REG0,0x8ef)
0xE0007042,	//0x089e		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x08E51503,	//0x08a0		VoC_sw16_d(REG3,0x8e5)
0x08E41500,	//0x08a2		VoC_sw16_d(REG0,0x8e4)
0x08E21502,	//0x08a4		VoC_sw16_d(REG2,0x8e2)
		//0x08a6		Lable_HDR_NOISE
0x4421F021,	//0x08a6		VoC_bne16_rd(Lable_change_state,REG1,0x8ee)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x2B8008EE,	//0x08a8		VoC_jal(CII_prvDecodeFrameHeaderNoiseSub_VOC)(lo)	|	VoC_bne16_rd(Lable_change_state,REG1,0x8ee)(hi)
0xF08418BB,	//0x08aa		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_jal(CII_prvDecodeFrameHeaderNoiseSub_VOC)(hi)
		//0x08ab		Lable_change_state
0x1504FFC0,	//0x08ac		VoC_sw16_d(REG4,0x8e2)(lo)	|	VoC_NOP
0xF02008E2,	//0x08ae		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_sw16_d(REG4,0x8e2)(hi)
		//0x08af		Lable_HDR_MSKUPD
0x11172B80,	//0x08b0		VoC_jal(CII_ibstrmLookForBits_VOC)
0x0C371507,	//0x08b2		VoC_sw16_d(REG7,0xc37)
0x09903207,	//0x08b4		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x40000A87,	//0x08b6		VoC_lw16i(REG7,0x4000)
0xF0057000,	//0x08b8		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x09A3073F,	//0x08ba		VoC_add16_rd(REG7,REG7,0x9a3)
0x09CE07B9,	//0x08bc		VoC_sub16_rd(REG1,REG7,0x9ce)
0x1501F042,	//0x08be		VoC_sw16_d(REG1,0x9c6)(lo)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x6C0709C6,	//0x08c0		VoC_bez16_d(Label_judge_Stero,0x9ce)(lo)	|	VoC_sw16_d(REG1,0x9c6)(hi)
0xDC9009CE,	//0x08c2		VoC_sw16inc_p(REG0,REG1,DEFAULT)	|	VoC_bez16_d(Label_judge_Stero,0x9ce)(hi)
		//0x08c3		LOOP_memset_left
0x3439FFC0,	//0x08c4		VoC_bgt16_rr(LOOP_memset_left,REG7,REG1)(lo)	|	VoC_NOP
0xFFC008C3,	//0x08c6		VoC_NAD	|	VoC_bgt16_rr(LOOP_memset_left,REG7,REG1)(hi)
		//0x08c8		Label_judge_Stero
0x08F94502,	//0x08c8		VoC_bne16_rd(Label_Not_Stero,REG2,0x8f9)
0x09A3073F,	//0x08ca		VoC_add16_rd(REG7,REG7,0x9a3)
0x07B9F031,	//0x08cc		VoC_sub16_rd(REG1,REG7,0x9f6)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xFFC009F6,	//0x08ce		VoC_NOP	|	VoC_sub16_rd(REG1,REG7,0x9f6)(hi)
0x09EE1501,	//0x08d0		VoC_sw16_d(REG1,0x9ee)
0x09F66C06,	//0x08d2		VoC_bez16_d(Label_Not_Stero,0x9f6)
		//0x08d4		LOOP_memset_right
0x3439DC90,	//0x08d4		VoC_bgt16_rr(LOOP_memset_right,REG7,REG1)(lo)	|	VoC_sw16inc_p(REG0,REG1,DEFAULT)
0xFFC008D4,	//0x08d6		VoC_NAD	|	VoC_bgt16_rr(LOOP_memset_right,REG7,REG1)(hi)
		//0x08d8		Label_Not_Stero
0x09600A80,	//0x08d8		VoC_lw16i(REG0,0x960)
0x09010700,	//0x08da		VoC_add16_rd(REG0,REG0,0x901)
0x1500F021,	//0x08dc		VoC_sw16_d(REG0,0x2557)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xDC012557,	//0x08de		VoC_sw16_p(REG1,REG0,DEFAULT)	|	VoC_sw16_d(REG0,0x2557)(hi)
0x08FE6C0F,	//0x08e0		VoC_bez16_d(Label_NotAllow,0x8fe)
0x093E4CA9,	//0x08e2		VoC_bnlt16_rd(Label_NotAllow,REG1,0x93e)
0xFFC07026,	//0x08e4		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0FF02B80,	//0x08e6		VoC_jal(CII_ibstrmGetBits_VOC)
0x0C371507,	//0x08e8		VoC_sw16_d(REG7,0xc37)
0x25571400,	//0x08ea		VoC_lw16_d(REG0,0x2557)
0x09903207,	//0x08ec		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0xF000DC0E,	//0x08ee		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sw16_p(RL7_LO,REG0,DEFAULT)
		//0x08ef		Label_NotAllow
0x1500F0A5,	//0x08f0		VoC_sw16_d(REG0,0x8e4)(lo)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0x150008E4,	//0x08f2		VoC_sw16_d(REG0,0x8e5)(lo)	|	VoC_sw16_d(REG0,0x8e4)(hi)
0x150508E5,	//0x08f4		VoC_sw16_d(REG5,0x8e2)(lo)	|	VoC_sw16_d(REG0,0x8e5)(hi)
0xFFC008E2,	//0x08f6		VoC_NAD	|	VoC_sw16_d(REG5,0x8e2)(hi)
		//0x08f8		Lable_HDR_BARK
0x09600A80,	//0x08f8		VoC_lw16i(REG0,0x960)
0x0700FFC0,	//0x08fa		VoC_add16_rd(REG0,REG0,0x901)(lo)	|	VoC_NOP
0xF0210901,	//0x08fc		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x901)(hi)
0x25571500,	//0x08fe		VoC_sw16_d(REG0,0x2557)
0x09A96E04,	//0x0900		VoC_bnez16_d(Lable_Begin_channel_Loop,0x9a9)
0x09862B00,	//0x0902		VoC_jump_lg(Lable_LPC)
		//0x0904		Lable_Begin_channel_Loop
0x09D01405,	//0x0904		VoC_lw16_d(REG5,0x9d0)
0x0BFC0A82,	//0x0906		VoC_lw16i(REG2,0xbfc)
0x09D60A83,	//0x0908		VoC_lw16i(REG3,0x9d6)
0x08E46C08,	//0x090a		VoC_bez16_d(channel_select_over,0x8e4)
0x09F81405,	//0x090c		VoC_lw16_d(REG5,0x9f8)
0x0C150A82,	//0x090e		VoC_lw16i(REG2,0xc15)
0x09FE0A83,	//0x0910		VoC_lw16i(REG3,0x9fe)
		//0x0912		channel_select_over
0x25581502,	//0x0912		VoC_sw16_d(REG2,0x2558)
0x25591503,	//0x0914		VoC_sw16_d(REG3,0x2559)
0x25571400,	//0x0916		VoC_lw16_d(REG0,0x2557)
0xD806F021,	//0x0918		VoC_lw16_p(REG6,REG0,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x09703185,	//0x091a		VoC_bez16_r(Lable_iPower_Zero,REG5)
0x095C35B1,	//0x091c		VoC_bne16_rr(DFHLable_Next,REG6,REG1)
		//0x091e		Label_mask_start
0x08E51406,	//0x091e		VoC_lw16_d(REG6,0x8e5)
0x482EFFC0,	//0x0920		VoC_blt16_rd(Label_mask_end_NOT,REG6,0x9ac)(lo)	|	VoC_NOP
0x2B0009AC,	//0x0922		VoC_jump_lg(Label_mask_end)(lo)	|	VoC_blt16_rd(Label_mask_end_NOT,REG6,0x9ac)(hi)
0xFFC0094E,	//0x0924		VoC_NAD	|	VoC_jump_lg(Label_mask_end)(hi)
		//0x0926		Label_mask_end_NOT
0x60420A81,	//0x0926		VoC_lw16i(REG1,0x6042)
0x0B152B80,	//0x0928		VoC_jal(CII_huffDecGet_VOC)
0xDFC5E006,	//0x092a		VoC_push16(REG5,DEFAULT)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0x0FB62B80,	//0x092c		VoC_jal(CII_ibstrmFlushBits_VOC)
0x0A84DF85,	//0x092e		VoC_lw16i(REG4,0x3c)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x1507003C,	//0x0930		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_lw16i(REG4,0x3c)(hi)
0x32070C37,	//0x0932		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_sw16_d(REG7,0xc37)(hi)
0x43650990,	//0x0934		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0x0A84E011,	//0x0936		VoC_lw16i(REG4,0x24)(lo)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0x6C090024,	//0x0938		VoC_bez16_d(Label_save_rgiMaskQ,0x8e5)(lo)	|	VoC_lw16i(REG4,0x24)(hi)
0x0B0908E5,	//0x093a		VoC_sub16_dr(REG1,0x8e5,REG1)(lo)	|	VoC_bez16_d(Label_save_rgiMaskQ,0x8e5)(hi)
0xFFC008E5,	//0x093c		VoC_NOP	|	VoC_sub16_dr(REG1,0x8e5,REG1)(hi)
0x25580709,	//0x093e		VoC_add16_rd(REG1,REG1,0x2558)
0xD814FFC0,	//0x0940		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_NOP
		//0x0942		Label_save_rgiMaskQ
0x08E51401,	//0x0942		VoC_lw16_d(REG1,0x8e5)
0x070BC165,	//0x0944		VoC_add16_rd(REG3,REG1,0x2558)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x07092558,	//0x0946		VoC_add16_rd(REG1,REG1,0x1193)(lo)	|	VoC_add16_rd(REG3,REG1,0x2558)(hi)
0xDC351193,	//0x0948		VoC_sw16_p(REG5,REG3,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x1193)(hi)
0x08E51501,	//0x094a		VoC_sw16_d(REG1,0x8e5)
0x091E2B00,	//0x094c		VoC_jump_lg(Label_mask_start)
		//0x094e		Label_mask_end
0x0A84F000,	//0x094e		VoC_lw16i(REG4,0x940)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x07240940,	//0x0950		VoC_add16_rd(REG4,REG4,0x901)(lo)	|	VoC_lw16i(REG4,0x940)(hi)
0x15000901,	//0x0952		VoC_sw16_d(REG0,0x8e5)(lo)	|	VoC_add16_rd(REG4,REG4,0x901)(hi)
0x140608E5,	//0x0954		VoC_lw16_d(REG6,0x2557)(lo)	|	VoC_sw16_d(REG0,0x8e5)(hi)
0xD8442557,	//0x0956		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16_d(REG6,0x2557)(hi)
0x1504D866,	//0x0958		VoC_sw16_d(REG4,0x904)(lo)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xFFC00904,	//0x095a		VoC_NAD	|	VoC_sw16_d(REG4,0x904)(hi)
		//0x095c		DFHLable_Next
0x097A3186,	//0x095c		VoC_bez16_r(Lable_Begin_channel_end,REG6)
0x25582006,	//0x095e		VoC_lw16d_set_inc(REG2,0x2558,0x1)
0xD823F020,	//0x0960		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x09AC0B07,	//0x0962		VoC_sub16_dr(REG7,0x9ac,REG0)
0xE7C5C082,	//0x0964		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x348BD8A1,	//0x0966		VoC_bngt16_rr(Lable_Max_Not_Change,REG1,REG3)(lo)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0xE023096A,	//0x0968		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_bngt16_rr(Lable_Max_Not_Change,REG1,REG3)(hi)
		//0x096a		Lable_Max_Not_Change
		//0x096a		VoC_endloop0
0x1401FFC0,	//0x096a		VoC_lw16_d(REG1,0x2559)(lo)	|	VoC_NOP
0xFFC02559,	//0x096c		VoC_NOP	|	VoC_lw16_d(REG1,0x2559)(hi)
0xE5CBDC13,	//0x096e		VoC_jump(Lable_Begin_channel_end)	|	VoC_sw16_p(REG3,REG1,DEFAULT)
		//0x0970		Lable_iPower_Zero
0x097A35B1,	//0x0970		VoC_bne16_rr(Lable_Begin_channel_end,REG6,REG1)
0x25582006,	//0x0972		VoC_lw16d_set_inc(REG2,0x2558,0x1)
0x09AC1407,	//0x0974		VoC_lw16_d(REG7,0x9ac)
0xE7C1F000,	//0x0976		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x0978		VoC_endloop0
0xFFC05CA0,	//0x0978		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
		//0x097a		Lable_Begin_channel_end
0x08E41401,	//0x097a		VoC_lw16_d(REG1,0x8e4)
0x0709FFC0,	//0x097c		VoC_add16_rd(REG1,REG1,0x1193)(lo)	|	VoC_NOP
0xFFC01193,	//0x097e		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x1193)(hi)
0x08E41501,	//0x0980		VoC_sw16_d(REG1,0x8e4)
0x08F94C91,	//0x0982		VoC_bnlt16_rd(Lable_DONE,REG1,0x8f9)
0x09042B00,	//0x0984		VoC_jump_lg(Lable_Begin_channel_Loop)
		//0x0986		Lable_LPC
0x1A2E2B80,	//0x0986		VoC_jal(CII_prvDecodeFrameHeaderLpc_VOC)
0x08EE6C04,	//0x0988		VoC_bez16_d(Lable_DONE,0x8ee)
0x23672B80,	//0x098a		VoC_jal(CII_prvGetBandWeightLowRate_VOC)
		//0x098c		Lable_DONE
0xFFC0F0C1,	//0x098c		VoC_NOP	|	VoC_lw16i_short(REG1,0x6,DEFAULT)
0x08E21501,	//0x098e		VoC_sw16_d(REG1,0x8e2)
		//0x0990		Lable_DecFramHeader_exit
0xFFC0DFA9,	//0x0990		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0992		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0994		CII_prvUpdateSubFrameConfig_VOC
0xE0105FE9,	//0x0994		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x31C4F001,	//0x0996		VoC_bnez16_r(Label_Prev,REG4)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x1500099E,	//0x0998		VoC_sw16_d(REG0,0x8e7)(lo)	|	VoC_bnez16_r(Label_Prev,REG4)(hi)
0x2B0008E7,	//0x099a		VoC_jump_lg(USFLabel_Exit)(lo)	|	VoC_sw16_d(REG0,0x8e7)(hi)
0xFFC009E4,	//0x099c		VoC_NAD	|	VoC_jump_lg(USFLabel_Exit)(hi)
		//0x099e		Label_Prev
0x09A43182,	//0x099e		VoC_bez16_r(Label_Curr,REG2)
0x090C1500,	//0x09a0		VoC_sw16_d(REG0,0x90c)
0x090E1502,	//0x09a2		VoC_sw16_d(REG2,0x90e)
		//0x09a4		Label_Curr
0x09AC3183,	//0x09a4		VoC_bez16_r(Label_Main,REG3)
0x093E1500,	//0x09a6		VoC_sw16_d(REG0,0x93e)
0x09401503,	//0x09a8		VoC_sw16_d(REG3,0x940)
0x09501501,	//0x09aa		VoC_sw16_d(REG1,0x950)
		//0x09ac		Label_Main
0x09500A82,	//0x09ac		VoC_lw16i(REG2,0x950)
0x09400A83,	//0x09ae		VoC_lw16i(REG3,0x940)
0x09010712,	//0x09b0		VoC_add16_rd(REG2,REG2,0x901)
0x0901071B,	//0x09b2		VoC_add16_rd(REG3,REG3,0x901)
0xD833D822,	//0x09b4		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xC09DFFC0,	//0x09b6		VoC_add16_rr(REG5,REG2,REG3,DEFAULT)	|	VoC_NOP
0x09A448B5,	//0x09b8		VoC_blt16_rd(USFCLabel_Else,REG5,0x9a4)
0x08E71500,	//0x09ba		VoC_sw16_d(REG0,0x8e7)
0x09701501,	//0x09bc		VoC_sw16_d(REG1,0x970)
0x09721504,	//0x09be		VoC_sw16_d(REG4,0x972)
0x09821501,	//0x09c0		VoC_sw16_d(REG1,0x982)
0x09701500,	//0x09c2		VoC_sw16_d(REG0,0x970)
0x09E42B00,	//0x09c4		VoC_jump_lg(USFLabel_Exit)
		//0x09c6		USFCLabel_Else
0x09011403,	//0x09c6		VoC_lw16_d(REG3,0x901)
0x09400A82,	//0x09c8		VoC_lw16i(REG2,0x940)
0xC085C09A,	//0x09ca		VoC_add16_rr(REG5,REG2,REG0,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0xDC54FFC0,	//0x09cc		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_NOP
0x09500A86,	//0x09ce		VoC_lw16i(REG6,0x950)
0xFFC0C19C,	//0x09d0		VoC_NOP	|	VoC_add16_rr(REG4,REG6,REG3,DEFAULT)
0xD821D847,	//0x09d2		VoC_lw16_p(REG1,REG2,DEFAULT)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
0xC07FFFC0,	//0x09d4		VoC_add16_rr(REG7,REG1,REG7,DEFAULT)	|	VoC_NOP
0xFFC0C104,	//0x09d6		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG0,DEFAULT)
0x81EADC47,	//0x09d8		VoC_add16_rp(REG2,REG7,REG5,DEFAULT)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
0x093E0701,	//0x09da		VoC_add16_rd(REG1,REG0,0x93e)
0x1501FFC0,	//0x09dc		VoC_sw16_d(REG1,0x93e)(lo)	|	VoC_NOP
0x3C2A093E,	//0x09de		VoC_bngt16_rd(USFLabel_Exit,REG2,0x9a4)(lo)	|	VoC_sw16_d(REG1,0x93e)(hi)
0x0AC709A4,	//0x09e0		VoC_lw16i(REG7,0x8002)(lo)	|	VoC_bngt16_rd(USFLabel_Exit,REG2,0x9a4)(hi)
0xE5C20002,	//0x09e2		VoC_jump(Lable_allExit)	|	VoC_lw16i(REG7,0x8002)(hi)
		//0x09e4		USFLabel_Exit
0xDFA9F007,	//0x09e4		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x09e5		Lable_allExit
0xE580FFC0,	//0x09e6		VoC_return	|	VoC_NOP
		//0x09e8		CII_auAdaptToSubFrameConfig_VOC
0x09400A81,	//0x09e8		VoC_lw16i(REG1,0x940)
0x093E1402,	//0x09ea		VoC_lw16_d(REG2,0x93e)
0x0901070E,	//0x09ec		VoC_add16_rd(REG6,REG1,0x901)
0x09A41403,	//0x09ee		VoC_lw16_d(REG3,0x9a4)
0xF82BD860,	//0x09f0		VoC_shr16_ri(REG3,0x5,DEFAULT)	|	VoC_lw16_p(REG0,REG6,DEFAULT)
0x09B31500,	//0x09f2		VoC_sw16_d(REG0,0x9b3)
0xFFC070A1,	//0x09f4		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x5,DEFAULT)
		//0x09f6		LOG_FRAMESAMPLEHALF_BEGIN
0x11933C33,	//0x09f6		VoC_bngt16_rd(LOG_FRAMESAMPLEHALF_END,REG3,0x1193)
0x0709F80B,	//0x09f8		VoC_add16_rd(REG1,REG1,0x1193)(lo)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0xE5FB1193,	//0x09fa		VoC_jump(LOG_FRAMESAMPLEHALF_BEGIN)	|	VoC_add16_rd(REG1,REG1,0x1193)(hi)
		//0x09fc		LOG_FRAMESAMPLEHALF_END
0x11933822,	//0x09fc		VoC_bgt16_rd(MCSUBFRAME_NGT_1_not,REG2,0x1193)
0x0A202B00,	//0x09fe		VoC_jump_lg(MCSUBFRAME_NGT_1)
		//0x0a00		MCSUBFRAME_NGT_1_not
0xE0527828,	//0x0a00		VoC_lw16i_short(REG2,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x5,DEFAULT)
		//0x0a02		LOG_ISIZECURR_BEGIN
0x11933C30,	//0x0a02		VoC_bngt16_rd(LOG_ISIZECURR_END,REG0,0x1193)
0x0712F808,	//0x0a04		VoC_add16_rd(REG2,REG2,0x1193)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xE5FB1193,	//0x0a06		VoC_jump(LOG_ISIZECURR_BEGIN)	|	VoC_add16_rd(REG2,REG2,0x1193)(hi)
		//0x0a08		LOG_ISIZECURR_END
0xFFC0C252,	//0x0a08		VoC_NOP	|	VoC_sub16_rr(REG2,REG1,REG2,DEFAULT)
0x09081502,	//0x0a0a		VoC_sw16_d(REG2,0x908)
0x09054832,	//0x0a0c		VoC_blt16_rd(MIINCR_LT_POSSIBELWINSIZE,REG2,0x905)
0x04020AC7,	//0x0a0e		VoC_lw16i(REG7,0x8402)
0x0B122B00,	//0x0a10		VoC_jump_lg(ATSFCFUNCTION_END)
		//0x0a12		MIINCR_LT_POSSIBELWINSIZE
0x11A20813,	//0x0a12		VoC_mult16_rd(REG3,REG2,0x11a2)
0x0A940A80,	//0x0a14		VoC_lw16i(REG0,0xa94)
0x0A120A84,	//0x0a16		VoC_lw16i(REG4,0xa12)
0xC11CC010,	//0x0a18		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x1504D800,	//0x0a1a		VoC_sw16_d(REG4,0x9ad)(lo)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x150009AD,	//0x0a1c		VoC_sw16_d(REG0,0x9ac)(lo)	|	VoC_sw16_d(REG4,0x9ad)(hi)
0xE5CC09AC,	//0x0a1e		VoC_jump(MCSUBFRAME_END)	|	VoC_sw16_d(REG0,0x9ac)(hi)
		//0x0a20		MCSUBFRAME_NGT_1
0x1402F000,	//0x0a20		VoC_lw16_d(REG2,0xa94)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x0A830A94,	//0x0a22		VoC_lw16i(REG3,0xa12)(lo)	|	VoC_lw16_d(REG2,0xa94)(hi)
0x15000A12,	//0x0a24		VoC_sw16_d(REG0,0x908)(lo)	|	VoC_lw16i(REG3,0xa12)(hi)
0x15020908,	//0x0a26		VoC_sw16_d(REG2,0x9ac)(lo)	|	VoC_sw16_d(REG0,0x908)(hi)
0x150309AC,	//0x0a28		VoC_sw16_d(REG3,0x9ad)(lo)	|	VoC_sw16_d(REG2,0x9ac)(hi)
0xD86009AD,	//0x0a2a		VoC_lw16_p(REG0,REG6,DEFAULT)	|	VoC_sw16_d(REG3,0x9ad)(hi)
		//0x0a2b		MCSUBFRAME_END
0x1500D864,	//0x0a2c		VoC_sw16_d(REG0,0x90a)(lo)	|	VoC_lw16_p(REG4,REG6,DEFAULT)
0x1500090A,	//0x0a2e		VoC_sw16_d(REG0,0x8fc)(lo)	|	VoC_sw16_d(REG0,0x90a)(hi)
0x0A2108FC,	//0x0a30		VoC_multf32_rd(REG23,REG4,0x9a7)(lo)	|	VoC_sw16_d(REG0,0x8fc)(hi)
0x0A2209A7,	//0x0a32		VoC_multf32_rd(REG45,REG4,0x9a8)(lo)	|	VoC_multf32_rd(REG23,REG4,0x9a7)(hi)
0x600709A8,	//0x0a34		VoC_movreg16(REG7,REG0,DEFAULT)	|	VoC_multf32_rd(REG45,REG4,0x9a8)(hi)
0xFE8AFE89,	//0x0a36		VoC_shr32_rr(REG45,REG1,DEFAULT)	|	VoC_shr32_rr(REG23,REG1,IN_PARALLEL)
0xF80F78F8,	//0x0a38		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x1502C315,	//0x0a3a		VoC_sw16_d(REG2,0x9a5)(lo)	|	VoC_sub16_rr(REG5,REG4,REG2,DEFAULT)
0x150409A5,	//0x0a3c		VoC_sw16_d(REG4,0x9a6)(lo)	|	VoC_sw16_d(REG2,0x9a5)(hi)
0x150009A6,	//0x0a3e		VoC_sw16_d(REG0,0x909)(lo)	|	VoC_sw16_d(REG4,0x9a6)(hi)
0xF0240909,	//0x0a40		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sw16_d(REG0,0x909)(hi)
0x090B1507,	//0x0a42		VoC_sw16_d(REG7,0x90b)
0x09CE1505,	//0x0a44		VoC_sw16_d(REG5,0x9ce)
0x09F61505,	//0x0a46		VoC_sw16_d(REG5,0x9f6)
0x458CF007,	//0x0a48		VoC_bne16_rd(NOISESUB_NE_1,REG4,0x8ee)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x140008EE,	//0x0a4a		VoC_lw16_d(REG0,0x909)(lo)	|	VoC_bne16_rd(NOISESUB_NE_1,REG4,0x8ee)(hi)
0xF00F0909,	//0x0a4c		VoC_lw16i_short(RL7_HI,0x0,DEFAULT)	|	VoC_lw16_d(REG0,0x909)(hi)
0x09BA0A01,	//0x0a4e		VoC_multf32_rd(REG23,REG0,0x9ba)
0x40000A8E,	//0x0a50		VoC_lw16i(RL7_LO,0x4000)
0x0A990A81,	//0x0a52		VoC_lw16i(REG1,0xa99)
0x0709C879,	//0x0a54		VoC_add16_rd(REG1,REG1,0x908)(lo)	|	VoC_add32_rr(REG23,REG23,RL7,DEFAULT)
0xFA790908,	//0x0a56		VoC_shr32_ri(REG23,0xf,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x908)(hi)
0x3C2AD811,	//0x0a58		VoC_bngt16_rd(FIRSTNOISEINDEX_NGT_SUBBAND,REG2,0x8fc)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x140208FC,	//0x0a5a		VoC_lw16_d(REG2,0x8fc)(lo)	|	VoC_bngt16_rd(FIRSTNOISEINDEX_NGT_SUBBAND,REG2,0x8fc)(hi)
0xFFC008FC,	//0x0a5c		VoC_NAD	|	VoC_lw16_d(REG2,0x8fc)(hi)
		//0x0a5e		FIRSTNOISEINDEX_NGT_SUBBAND
0x09BB1501,	//0x0a5e		VoC_sw16_d(REG1,0x9bb)
0x09BC1502,	//0x0a60		VoC_sw16_d(REG2,0x9bc)
		//0x0a62		NOISESUB_NE_1
0x090E0A81,	//0x0a62		VoC_lw16i(REG1,0x90e)
0x09011402,	//0x0a64		VoC_lw16_d(REG2,0x901)
0x090C0709,	//0x0a66		VoC_add16_rd(REG1,REG1,0x90c)
0x119307B6,	//0x0a68		VoC_sub16_rd(REG6,REG6,0x1193)
0x11930789,	//0x0a6a		VoC_sub16_rd(REG1,REG1,0x1193)
0x3102D863,	//0x0a6c		VoC_bgtz16_r(GET_SIZEPREV_END,REG2)(lo)	|	VoC_lw16_p(REG3,REG6,DEFAULT)
0xD8130A70,	//0x0a6e		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_bgtz16_r(GET_SIZEPREV_END,REG2)(hi)
		//0x0a70		GET_SIZEPREV_END
0x11930712,	//0x0a70		VoC_add16_rd(REG2,REG2,0x1193)
0x09B21503,	//0x0a72		VoC_sw16_d(REG3,0x9b2)
0x11940736,	//0x0a74		VoC_add16_rd(REG6,REG6,0x1194)
0x09721403,	//0x0a76		VoC_lw16_d(REG3,0x972)
0x093E4C22,	//0x0a78		VoC_bnlt16_rd(GET_SIZENEXT_END,REG2,0x93e)
0xFFC05863,	//0x0a7a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG3,REG6,DEFAULT)
		//0x0a7c		GET_SIZENEXT_END
0x09B31400,	//0x0a7c		VoC_lw16_d(REG0,0x9b3)
0x09B41503,	//0x0a7e		VoC_sw16_d(REG3,0x9b4)
0x09B23880,	//0x0a80		VoC_bgt16_rd(SIZEPREV_LT_SIZECURR,REG0,0x9b2)
0x1500F001,	//0x0a82		VoC_sw16_d(REG0,0x9b6)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x150109B6,	//0x0a84		VoC_sw16_d(REG1,0x9b5)(lo)	|	VoC_sw16_d(REG0,0x9b6)(hi)
0xE5CB09B5,	//0x0a86		VoC_jump(UPDATA_COEFRECURQ12_END)	|	VoC_sw16_d(REG1,0x9b5)(hi)
		//0x0a88		SIZEPREV_LT_SIZECURR
0x09B20781,	//0x0a88		VoC_sub16_rd(REG1,REG0,0x9b2)
0x09B20702,	//0x0a8a		VoC_add16_rd(REG2,REG0,0x9b2)
0xF80AF809,	//0x0a8c		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0x09B51501,	//0x0a8e		VoC_sw16_d(REG1,0x9b5)
0x09B61502,	//0x0a90		VoC_sw16_d(REG2,0x9b6)
		//0x0a92		UPDATA_COEFRECURQ12_END
0x09B438A0,	//0x0a92		VoC_bgt16_rd(SIZENEXT_LT_SIZECURR,REG0,0x9b4)
0x090A1401,	//0x0a94		VoC_lw16_d(REG1,0x90a)
0x09091402,	//0x0a96		VoC_lw16_d(REG2,0x909)
0x09B71501,	//0x0a98		VoC_sw16_d(REG1,0x9b7)
0x09B81502,	//0x0a9a		VoC_sw16_d(REG2,0x9b8)
0xFFC065D0,	//0x0a9c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(UPDATA_COEFRECURQ34_END)
		//0x0a9e		SIZENEXT_LT_SIZECURR
0x09B40781,	//0x0a9e		VoC_sub16_rd(REG1,REG0,0x9b4)
0x09B40702,	//0x0aa0		VoC_add16_rd(REG2,REG0,0x9b4)
0xF80A7809,	//0x0aa2		VoC_shr16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0x090A0709,	//0x0aa4		VoC_add16_rd(REG1,REG1,0x90a)
0x090A0712,	//0x0aa6		VoC_add16_rd(REG2,REG2,0x90a)
0x09B71501,	//0x0aa8		VoC_sw16_d(REG1,0x9b7)
0x09B81502,	//0x0aaa		VoC_sw16_d(REG2,0x9b8)
		//0x0aac		UPDATA_COEFRECURQ34_END
0x3C28E001,	//0x0aac		VoC_bngt16_rd(GET_RECONSIZE_END,REG0,0x9b2)(lo)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x140109B2,	//0x0aae		VoC_lw16_d(REG1,0x9b2)(lo)	|	VoC_bngt16_rd(GET_RECONSIZE_END,REG0,0x9b2)(hi)
0xFFC009B2,	//0x0ab0		VoC_NAD	|	VoC_lw16_d(REG1,0x9b2)(hi)
		//0x0ab2		GET_RECONSIZE_END
0x0A081486,	//0x0ab2		VoC_lw32_d(RL6,0xa08)
0x4429FF47,	//0x0ab4		VoC_bne16_rd(SET_PISINFORRECON_con,REG1,0x11ad)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x2B0011AD,	//0x0ab6		VoC_jump_lg(SET_PISINFORRECON_END)(lo)	|	VoC_bne16_rd(SET_PISINFORRECON_con,REG1,0x11ad)(hi)
0xFFC00ADC,	//0x0ab8		VoC_NAD	|	VoC_jump_lg(SET_PISINFORRECON_END)(hi)
		//0x0aba		SET_PISINFORRECON_con
0x11AC4431,	//0x0aba		VoC_bne16_rd(RECONSIZE_E_512,REG1,0x11ac)
0x20000A8E,	//0x0abc		VoC_lw16i(RL7_LO,0x2000)
0xFFC065DE,	//0x0abe		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0ac0		RECONSIZE_E_512
0x11AB4431,	//0x0ac0		VoC_bne16_rd(RECONSIZE_E_256,REG1,0x11ab)
0x30000A8E,	//0x0ac2		VoC_lw16i(RL7_LO,0x3000)
0xFFC065D8,	//0x0ac4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0ac6		RECONSIZE_E_256
0x11AA4431,	//0x0ac6		VoC_bne16_rd(RECONSIZE_E_128,REG1,0x11aa)
0x38000A8E,	//0x0ac8		VoC_lw16i(RL7_LO,0x3800)
0xFFC065D2,	//0x0aca		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0acc		RECONSIZE_E_128
0x11A84431,	//0x0acc		VoC_bne16_rd(RECONSIZE_E_64,REG1,0x11a8)
0x3C000A8E,	//0x0ace		VoC_lw16i(RL7_LO,0x3c00)
0xFFC065CC,	//0x0ad0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0ad2		RECONSIZE_E_64
0x11A54431,	//0x0ad2		VoC_bne16_rd(RECONSIZE_DEFAULT,REG1,0x11a5)
0x3E000A8E,	//0x0ad4		VoC_lw16i(RL7_LO,0x3e00)
0xFFC065C6,	//0x0ad6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0ad8		RECONSIZE_DEFAULT
0x04020AC7,	//0x0ad8		VoC_lw16i(REG7,0x8402)
0x0B122B00,	//0x0ada		VoC_jump_lg(ATSFCFUNCTION_END)
		//0x0adc		SET_PISINFORRECON_END
0xE001C9BF,	//0x0adc		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_add32_rr(RL7,RL6,RL7,DEFAULT)
0x09C41587,	//0x0ade		VoC_sw32_d(RL7,0x9c4)
0x09B43C20,	//0x0ae0		VoC_bngt16_rd(GET_SAVESIZE_END,REG0,0x9b4)
0x09B41401,	//0x0ae2		VoC_lw16_d(REG1,0x9b4)
		//0x0ae4		GET_SAVESIZE_END
0x4439FF47,	//0x0ae4		VoC_bne16_rd(SAVESIZE_E_1024,REG1,0x11ad)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x0A8E11AD,	//0x0ae6		VoC_lw16i(RL7_LO,0x2000)(lo)	|	VoC_bne16_rd(SAVESIZE_E_1024,REG1,0x11ad)(hi)
0x2B002000,	//0x0ae8		VoC_jump_lg(SET_PISINFORSAVEHISTORY_END)(lo)	|	VoC_lw16i(RL7_LO,0x2000)(hi)
0xFFC00B0D,	//0x0aea		VoC_NAD	|	VoC_jump_lg(SET_PISINFORSAVEHISTORY_END)(hi)
		//0x0aec		SAVESIZE_E_1024
0x11AC4431,	//0x0aec		VoC_bne16_rd(SAVESIZE_E_512,REG1,0x11ac)
0x30000A8E,	//0x0aee		VoC_lw16i(RL7_LO,0x3000)
0xFFC065DD,	//0x0af0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0af2		SAVESIZE_E_512
0x11AB4431,	//0x0af2		VoC_bne16_rd(SAVESIZE_E_256,REG1,0x11ab)
0x38000A8E,	//0x0af4		VoC_lw16i(RL7_LO,0x3800)
0xFFC065D7,	//0x0af6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0af8		SAVESIZE_E_256
0x11AA4431,	//0x0af8		VoC_bne16_rd(SAVESIZE_E_128,REG1,0x11aa)
0x3C000A8E,	//0x0afa		VoC_lw16i(RL7_LO,0x3c00)
0xFFC065D1,	//0x0afc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0afe		SAVESIZE_E_128
0x11A84431,	//0x0afe		VoC_bne16_rd(SAVESIZE_E_64,REG1,0x11a8)
0x3E000A8E,	//0x0b00		VoC_lw16i(RL7_LO,0x3e00)
0xFFC065CB,	//0x0b02		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0b04		SAVESIZE_E_64
0x11A54431,	//0x0b04		VoC_bne16_rd(SAVESIZE_DEFAULT,REG1,0x11a5)
0x3F000A8E,	//0x0b06		VoC_lw16i(RL7_LO,0x3f00)
0xFFC065C5,	//0x0b08		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0b0a		SAVESIZE_DEFAULT
0x04020AC7,	//0x0b0a		VoC_lw16i(REG7,0x8402)
0xC9BFE5C6,	//0x0b0c		VoC_add32_rr(RL7,RL6,RL7,DEFAULT)	|	VoC_jump(ATSFCFUNCTION_END)
		//0x0b0d		SET_PISINFORSAVEHISTORY_END
0x1587FFC0,	//0x0b0e		VoC_sw32_d(RL7,0xa06)(lo)	|	VoC_NOP
0xFFC00A06,	//0x0b10		VoC_NAD	|	VoC_sw32_d(RL7,0xa06)(hi)
		//0x0b12		ATSFCFUNCTION_END
0x0C371507,	//0x0b12		VoC_sw16_d(REG7,0xc37)
0xDFE9E580,	//0x0b14		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0b15		CII_huffDecGet_VOC
0xFFC05FC1,	//0x0b16		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x11502B80,	//0x0b18		VoC_jal(CII_ibstrmPeekBits_VOC)
0x0C371507,	//0x0b1a		VoC_sw16_d(REG7,0xc37)
0xFF3EDF81,	//0x0b1c		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0xE1A0E90E,	//0x0b1e		VoC_movreg16(REG0,RL6_HI,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x1640FFC0,	//0x0b20		VoC_and16_ri(REG0,0xc000)(lo)	|	VoC_NOP
0xF9704000,	//0x0b22		VoC_shru16_ri(REG0,0xe,DEFAULT)	|	VoC_and16_ri(REG0,0xc000)(hi)
0x0AC0C041,	//0x0b24		VoC_lw16i(REG0,0x8000)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xD8120000,	//0x0b26		VoC_lw16_p(REG2,REG1,DEFAULT)	|	VoC_lw16i(REG0,0x8000)(hi)
0x31C0E410,	//0x0b28		VoC_bnez16_r(HUF_DECODE_COMPLETE,REG0)(lo)	|	VoC_and16_rr(REG0,REG2,DEFAULT)
0xC0510B3C,	//0x0b2a		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_bnez16_r(HUF_DECODE_COMPLETE,REG0)(hi)
		//0x0b2c		VoC_endloop0
0xE8CEFDF6,	//0x0b2c		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_shru32_ri(RL6,0xfffffffe,DEFAULT)
0xFFC0E1A0,	//0x0b2e		VoC_NOP	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x00001640,	//0x0b30		VoC_and16_ri(REG0,0x8000)
0xC041F978,	//0x0b32		VoC_add16_rr(REG1,REG1,REG0,DEFAULT)	|	VoC_shru16_ri(REG0,0xf,DEFAULT)
0x00000AC0,	//0x0b34		VoC_lw16i(REG0,0x8000)
0xE410D812,	//0x0b36		VoC_and16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16_p(REG2,REG1,DEFAULT)
0x0B3C31C0,	//0x0b38		VoC_bnez16_r(HUF_DECODE_COMPLETE,REG0)
0xFDFEC051,	//0x0b3a		VoC_shru32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
		//0x0b3b		VoC_endloop0
		//0x0b3c		HUF_DECODE_COMPLETE
0xF950E040,	//0x0b3c		VoC_shru16_ri(REG0,0xa,DEFAULT)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0x03FF1602,	//0x0b3e		VoC_and16_ri(REG2,0x3ff)
0x001F1600,	//0x0b40		VoC_and16_ri(REG0,0x1f)
0x03FC0A83,	//0x0b42		VoC_lw16i(REG3,0x3fc)
0x341AE045,	//0x0b44		VoC_bgt16_rr(PURESULT_LESS_0X3FC,REG3,REG2)(lo)	|	VoC_movreg16(REG5,REG2,DEFAULT)
0x16020B4E,	//0x0b46		VoC_and16_ri(REG2,0x3)(lo)	|	VoC_bgt16_rr(PURESULT_LESS_0X3FC,REG3,REG2)(hi)
0xC0540003,	//0x0b48		VoC_add16_rr(REG4,REG1,REG2,DEFAULT)	|	VoC_and16_ri(REG2,0x3)(hi)
0xC11CF023,	//0x0b4a		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xD845FFC0,	//0x0b4c		VoC_lw16_p(REG5,REG4,DEFAULT)	|	VoC_NOP
		//0x0b4e		PURESULT_LESS_0X3FC
0x11920B04,	//0x0b4e		VoC_sub16_dr(REG4,0x1192,REG0)
0xFEE7DFA9,	//0x0b50		VoC_shru32_rr(RL7,REG4,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0b52		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0b53		CII_prvGetNextRunDEC_VOC
0x08E36C04,	//0x0b54		VoC_bez16_d(Lable_ESCAPE_NOT,0x8e3)
0x0BD22B00,	//0x0b56		VoC_jump_lg(Lable_ESCAPE)
		//0x0b58		Lable_ESCAPE_NOT
0xC182F0A0,	//0x0b58		VoC_add16_rr(REG2,REG6,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x5,DEFAULT)
0xD821DFC6,	//0x0b5a		VoC_lw16_p(REG1,REG2,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x0B152B80,	//0x0b5c		VoC_jal(CII_huffDecGet_VOC)
0x25581505,	//0x0b5e		VoC_sw16_d(REG5,0x2558)
0x255A1587,	//0x0b60		VoC_sw32_d(RL7,0x255a)
0xFFC06006,	//0x0b62		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0x0FB62B80,	//0x0b64		VoC_jal(CII_ibstrmFlushBits_VOC)
0x0C371507,	//0x0b66		VoC_sw16_d(REG7,0xc37)
0x25581400,	//0x0b68		VoC_lw16_d(REG0,0x2558)
0xDF867021,	//0x0b6a		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x0BD23180,	//0x0b6c		VoC_bez16_r(Lable_ESCAPE,REG0)
0x0B823581,	//0x0b6e		VoC_bne16_rr(Lable_iEntry_NotOne,REG0,REG1)
0xEFF17000,	//0x0b70		VoC_lw16i_short(REG1,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x119A0734,	//0x0b72		VoC_add16_rd(REG4,REG6,0x119a)
0x09001407,	//0x0b74		VoC_lw16_d(REG7,0x900)
0x08F21501,	//0x0b76		VoC_sw16_d(REG1,0x8f2)
0x1501B93D,	//0x0b78		VoC_sw16_d(REG1,0x8f4)(lo)	|	VoC_sub16_pr(REG5,REG4,REG7,DEFAULT)
0xC14E08F4,	//0x0b7a		VoC_add16_rr(REG6,REG5,REG1,DEFAULT)	|	VoC_sw16_d(REG1,0x8f4)(hi)
0x08ED1500,	//0x0b7c		VoC_sw16_d(REG0,0x8ed)
0x08EC1506,	//0x0b7e		VoC_sw16_d(REG6,0x8ec)
0x0BF92B00,	//0x0b80		VoC_jump_lg(Lable_Exit)
		//0x0b82		Lable_iEntry_NotOne
0x25591506,	//0x0b82		VoC_sw16_d(REG6,0x2559)
0x2B80F026,	//0x0b84		VoC_jal(CII_ibstrmFlushBits_VOC)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF0410FB6,	//0x0b86		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_jal(CII_ibstrmFlushBits_VOC)(hi)
0x25580B08,	//0x0b88		VoC_sub16_dr(REG0,0x2558,REG1)
0x25591406,	//0x0b8a		VoC_lw16_d(REG6,0x2559)
0x1507E001,	//0x0b8c		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xF9090C37,	//0x0b8e		VoC_shru16_ri(REG1,0x1,DEFAULT)	|	VoC_sw16_d(REG7,0xc37)(hi)
0x11980734,	//0x0b90		VoC_add16_rd(REG4,REG6,0x1198)
0xD847E023,	//0x0b92		VoC_lw16_p(REG7,REG4,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x0A85F9FB,	//0x0b94		VoC_lw16i(REG5,0x1990)(lo)	|	VoC_shru16_ri(REG3,0xffffffff,DEFAULT)
0xC21B1990,	//0x0b96		VoC_sub16_rr(REG3,REG0,REG3,DEFAULT)	|	VoC_lw16i(REG5,0x1990)(hi)
0x0BA4353D,	//0x0b98		VoC_be16_rr(Label_NoCompress1,REG7,REG5)
0x169A0A85,	//0x0b9a		VoC_lw16i(REG5,0x169a)
0x0BA4353D,	//0x0b9c		VoC_be16_rr(Label_NoCompress1,REG7,REG5)
0x160E0A85,	//0x0b9e		VoC_lw16i(REG5,0x160e)
0x0BA4353D,	//0x0ba0		VoC_be16_rr(Label_NoCompress1,REG7,REG5)
0xE5C58065,	//0x0ba2		VoC_jump(Label_jump1)	|	VoC_add16_rp(REG5,REG1,REG4,DEFAULT)
		//0x0ba4		Label_NoCompress1
0xFFC08025,	//0x0ba4		VoC_NOP	|	VoC_add16_rp(REG5,REG0,REG4,DEFAULT)
0xE5C9D852,	//0x0ba6		VoC_jump(Label_Save1)	|	VoC_lw16_p(REG2,REG5,DEFAULT)
		//0x0ba8		Label_jump1
0xD852FFC0,	//0x0ba8		VoC_lw16_p(REG2,REG5,DEFAULT)	|	VoC_NOP
0x0BAF31C3,	//0x0baa		VoC_bnez16_r(Lable_Even1,REG3)
0x00FF1602,	//0x0bac		VoC_and16_ri(REG2,0xff)
0xF942E5C2,	//0x0bae		VoC_shru16_ri(REG2,0x8,DEFAULT)	|	VoC_jump(Label_Save1)
		//0x0baf		Lable_Even1
		//0x0bb0		Label_Save1
0x11990734,	//0x0bb0		VoC_add16_rd(REG4,REG6,0x1199)
0x1F790A85,	//0x0bb2		VoC_lw16i(REG5,0x1f79)
0x1502D847,	//0x0bb4		VoC_sw16_d(REG2,0x8ec)(lo)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
0x353D08EC,	//0x0bb6		VoC_be16_rr(Label_NoCompress2,REG7,REG5)(lo)	|	VoC_sw16_d(REG2,0x8ec)(hi)
0x80650BBB,	//0x0bb8		VoC_add16_rp(REG5,REG1,REG4,DEFAULT)	|	VoC_be16_rr(Label_NoCompress2,REG7,REG5)(hi)
0x8025E5C5,	//0x0bba		VoC_add16_rp(REG5,REG0,REG4,DEFAULT)	|	VoC_jump(Label_jump2)
		//0x0bbb		Label_NoCompress2
0xD852FFC0,	//0x0bbc		VoC_lw16_p(REG2,REG5,DEFAULT)	|	VoC_NOP
0xD852E5C8,	//0x0bbe		VoC_lw16_p(REG2,REG5,DEFAULT)	|	VoC_jump(Label_Save2)
		//0x0bbf		Label_jump2
0x0BC531C3,	//0x0bc0		VoC_bnez16_r(Lable_Even2,REG3)
0x00FF1602,	//0x0bc2		VoC_and16_ri(REG2,0xff)
0xF942E5C2,	//0x0bc4		VoC_shru16_ri(REG2,0x8,DEFAULT)	|	VoC_jump(Label_Save2)
		//0x0bc5		Lable_Even2
		//0x0bc6		Label_Save2
0x255A1487,	//0x0bc6		VoC_lw32_d(RL7,0x255a)
0x08ED1502,	//0x0bc8		VoC_sw16_d(REG2,0x8ed)
0x09B9FCFF,	//0x0bca		VoC_sub32_rd(REG23,RL7,0x11ae)(lo)	|	VoC_shru32_ri(RL7,0x1f,DEFAULT)
0xFFC011AE,	//0x0bcc		VoC_NOP	|	VoC_sub32_rd(REG23,RL7,0x11ae)(hi)
0x08F01581,	//0x0bce		VoC_sw32_d(REG23,0x8f0)
0x0BF92B00,	//0x0bd0		VoC_jump_lg(Lable_Exit)
		//0x0bd2		Lable_ESCAPE
0x08EF1400,	//0x0bd2		VoC_lw16_d(REG0,0x8ef)
0x09A20702,	//0x0bd4		VoC_add16_rd(REG2,REG0,0x9a2)
0x11930710,	//0x0bd6		VoC_add16_rd(REG0,REG2,0x1193)
0xDFC0FFC0,	//0x0bd8		VoC_push16(REG0,DEFAULT)	|	VoC_NOP
0x11172B80,	//0x0bda		VoC_jal(CII_ibstrmLookForBits_VOC)
0xFFC05F86,	//0x0bdc		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x0FF02B80,	//0x0bde		VoC_jal(CII_ibstrmGetBits_VOC)
0xDF477020,	//0x0be0		VoC_push32(RL7,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x09A20702,	//0x0be2		VoC_add16_rd(REG2,REG0,0x9a2)
0xFED7D90A,	//0x0be4		VoC_shru32_rr(RL7,REG2,DEFAULT)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x150EE404,	//0x0be6		VoC_sw16_d(RL7_LO,0x8ed)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0x700108ED,	//0x0be8		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_sw16_d(RL7_LO,0x8ed)(hi)
0xDF04C306,	//0x0bea		VoC_pop32(ACC0,DEFAULT)	|	VoC_sub16_rr(REG6,REG4,REG0,IN_PARALLEL)
0x08F01506,	//0x0bec		VoC_sw16_d(REG6,0x8f0)
0x11A30B15,	//0x0bee		VoC_sub16_dr(REG5,0x11a3,REG2)
0x11B41483,	//0x0bf0		VoC_lw32_d(REG67,0x11b4)
0xE4E3FEEB,	//0x0bf2		VoC_and32_rr(REG67,ACC0,DEFAULT)	|	VoC_shru32_rr(REG67,REG5,DEFAULT)
0x1501F80E,	//0x0bf4		VoC_sw16_d(REG1,0x8e3)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x150608E3,	//0x0bf6		VoC_sw16_d(REG6,0x8ec)(lo)	|	VoC_sw16_d(REG1,0x8e3)(hi)
0xDFA908EC,	//0x0bf8		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG6,0x8ec)(hi)
		//0x0bf9		Lable_Exit
0xE580FFC0,	//0x0bfa		VoC_return	|	VoC_NOP
		//0x0bfc		CII_qstCalcQuantStep_VOC
0xE0077244,	//0x0bfc		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x12,DEFAULT)
0x00920A85,	//0x0bfe		VoC_lw16i(REG5,0x92)
0x0C1E3426,	//0x0c00		VoC_bgt16_rr(Label_lt18,REG4,REG6)
0x0C08342E,	//0x0c02		VoC_bgt16_rr(Label_lt146,REG5,REG6)
0x2B00FF47,	//0x0c04		VoC_jump_lg(CQSLabel_RETURN)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xFFC00C2D,	//0x0c06		VoC_NAD	|	VoC_jump_lg(CQSLabel_RETURN)(hi)
		//0x0c08		Label_lt146
0xE18543A4,	//0x0c08		VoC_lw16i_short(REG5,0x18,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)
0x0A80F8FC,	//0x0c0a		VoC_lw16i(REG0,0x622a)(lo)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xC104622A,	//0x0c0c		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG0,0x622a)(hi)
0x59A7F81E,	//0x0c0e		VoC_lw32_p(RL7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
0x3307C376,	//0x0c10		VoC_bez32_r(CQSLabel_RETURN,RL7)(lo)	|	VoC_sub16_rr(REG6,REG5,REG6,IN_PARALLEL)
0x0AC40C2D,	//0x0c12		VoC_lw16i(REG4,0xffff)(lo)	|	VoC_bez32_r(CQSLabel_RETURN,RL7)(hi)
0x0A857FFF,	//0x0c14		VoC_lw16i(REG5,0x3fff)(lo)	|	VoC_lw16i(REG4,0xffff)(hi)
0xF0203FFF,	//0x0c16		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_lw16i(REG5,0x3fff)(hi)
		//0x0c18		Loop_NormUInt_start
0x0C2D3697,	//0x0c18		VoC_bngt32_rr(CQSLabel_RETURN,REG45,RL7)
0xC1867BFF,	//0x0c1a		VoC_add16_rr(REG6,REG6,REG0,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0xffffffff,DEFAULT)
0xFFC065FC,	//0x0c1c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Loop_NormUInt_start)
		//0x0c1e		Label_lt18
0x39B10A8E,	//0x0c1e		VoC_lw16i(RL7_LO,0x39b1)
0x0DE90A8F,	//0x0c20		VoC_lw16i(RL7_HI,0xde9)
0x3106F005,	//0x0c22		VoC_bgtz16_r(Label_gtz,REG6)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC3360C2A,	//0x0c24		VoC_sub16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_bgtz16_r(Label_gtz,REG6)(hi)
0x09BF0ACE,	//0x0c26		VoC_lw16i(RL7_LO,0x89bf)
0x06200A8F,	//0x0c28		VoC_lw16i(RL7_HI,0x620)
		//0x0c2a		Label_gtz
0xF364F81E,	//0x0c2a		VoC_lw16i_short(REG4,0x1b,DEFAULT)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
0xE580C336,	//0x0c2c		VoC_return	|	VoC_sub16_rr(REG6,REG4,REG6,DEFAULT)
		//0x0c2d		CQSLabel_RETURN
		//0x0c2e		CII_prvSetDetTable_VOC
0x09AA1401,	//0x0c2e		VoC_lw16_d(REG1,0x9aa)
0x09031402,	//0x0c30		VoC_lw16_d(REG2,0x903)
0x0A80FF47,	//0x0c32		VoC_lw16i(REG0,0x9cb)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x0A8409CB,	//0x0c34		VoC_lw16i(REG4,0x9cc)(lo)	|	VoC_lw16i(REG0,0x9cb)(hi)
0x0A8509CC,	//0x0c36		VoC_lw16i(REG5,0x9cd)(lo)	|	VoC_lw16i(REG4,0x9cc)(hi)
0x6C0909CD,	//0x0c38		VoC_bez16_d(Label_DMAHuffmanDecTbl,0x8e4)(lo)	|	VoC_lw16i(REG5,0x9cd)(hi)
0x0A8008E4,	//0x0c3a		VoC_lw16i(REG0,0x9f3)(lo)	|	VoC_bez16_d(Label_DMAHuffmanDecTbl,0x8e4)(hi)
0x0A8409F3,	//0x0c3c		VoC_lw16i(REG4,0x9f4)(lo)	|	VoC_lw16i(REG0,0x9f3)(hi)
0x0A8509F4,	//0x0c3e		VoC_lw16i(REG5,0x9f5)(lo)	|	VoC_lw16i(REG4,0x9f4)(hi)
0xFFC009F5,	//0x0c40		VoC_NAD	|	VoC_lw16i(REG5,0x9f5)(hi)
		//0x0c42		Label_DMAHuffmanDecTbl
0x11954021,	//0x0c42		VoC_be16_rd(Label_FOURTYFOURS_QB_CON,REG1,0x1195)
0x0C682B00,	//0x0c44		VoC_jump_lg(Label_FOURTYFOURS_QB)
		//0x0c46		Label_FOURTYFOURS_QB_CON
0x08E46C12,	//0x0c46		VoC_bez16_d(Label_Else1,0x8e4)
0x11934502,	//0x0c48		VoC_bne16_rd(Label_Else1,REG2,0x1193)
0x02810A86,	//0x0c4a		VoC_lw16i(REG6,0x281)
0x11BE0A88,	//0x0c4c		VoC_lw16i(ACC0_LO,0x11be)
0x150E0A89,	//0x0c4e		VoC_lw16i(ACC0_HI,0x150e)
0x15E70A8A,	//0x0c50		VoC_lw16i(ACC1_LO,0x15e7)
0xDC49DC08,	//0x0c52		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B00DC5A,	//0x0c54		VoC_jump_lg(prvSetDetTable_Label_Exit)(lo)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
0xFFC00CB4,	//0x0c56		VoC_NAD	|	VoC_jump_lg(prvSetDetTable_Label_Exit)(hi)
		//0x0c58		Label_Else1
0x0A040A8E,	//0x0c58		VoC_lw16i(RL7_LO,0xa04)
0x02A10A86,	//0x0c5a		VoC_lw16i(REG6,0x2a1)
0x11BE0A88,	//0x0c5c		VoC_lw16i(ACC0_LO,0x11be)
0x15260A89,	//0x0c5e		VoC_lw16i(ACC0_HI,0x1526)
0x16130A8A,	//0x0c60		VoC_lw16i(ACC1_LO,0x1613)
0xDC49DC08,	//0x0c62		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B00DC5A,	//0x0c64		VoC_jump_lg(prvSetDetTable_Label_Exit)(lo)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
0xFFC00CB4,	//0x0c66		VoC_NAD	|	VoC_jump_lg(prvSetDetTable_Label_Exit)(hi)
		//0x0c68		Label_FOURTYFOURS_QB
0x11934021,	//0x0c68		VoC_be16_rd(Label_FOURTYFOURS_OB_CON,REG1,0x1193)
0x0C902B00,	//0x0c6a		VoC_jump_lg(Label_FOURTYFOURS_OB)
		//0x0c6c		Label_FOURTYFOURS_OB_CON
0x08E46C14,	//0x0c6c		VoC_bez16_d(Label_Else2,0x8e4)
0x11934512,	//0x0c6e		VoC_bne16_rd(Label_Else2,REG2,0x1193)
0x14880A8E,	//0x0c70		VoC_lw16i(RL7_LO,0x1488)
0x03C70A86,	//0x0c72		VoC_lw16i(REG6,0x3c7)
0x11BE0A88,	//0x0c74		VoC_lw16i(ACC0_LO,0x11be)
0x160E0A89,	//0x0c76		VoC_lw16i(ACC0_HI,0x160e)
0x18370A8A,	//0x0c78		VoC_lw16i(ACC1_LO,0x1837)
0xDC49DC08,	//0x0c7a		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B00DC5A,	//0x0c7c		VoC_jump_lg(prvSetDetTable_Label_Exit)(lo)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
0xFFC00CB4,	//0x0c7e		VoC_NAD	|	VoC_jump_lg(prvSetDetTable_Label_Exit)(hi)
		//0x0c80		Label_Else2
0x23A40A8E,	//0x0c80		VoC_lw16i(RL7_LO,0x23a4)
0x04600A86,	//0x0c82		VoC_lw16i(REG6,0x460)
0x11BE0A88,	//0x0c84		VoC_lw16i(ACC0_LO,0x11be)
0x169A0A89,	//0x0c86		VoC_lw16i(ACC0_HI,0x169a)
0x19320A8A,	//0x0c88		VoC_lw16i(ACC1_LO,0x1932)
0xDC49DC08,	//0x0c8a		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B00DC5A,	//0x0c8c		VoC_jump_lg(prvSetDetTable_Label_Exit)(lo)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
0xFFC00CB4,	//0x0c8e		VoC_NAD	|	VoC_jump_lg(prvSetDetTable_Label_Exit)(hi)
		//0x0c90		Label_FOURTYFOURS_OB
0x11944021,	//0x0c90		VoC_be16_rd(prvSetDetTable_Label_Exit_NOT,REG1,0x1194)
0x0CB42B00,	//0x0c92		VoC_jump_lg(prvSetDetTable_Label_Exit)
		//0x0c94		prvSetDetTable_Label_Exit_NOT
0x08E46C12,	//0x0c94		VoC_bez16_d(Label_Else3,0x8e4)
0x11934502,	//0x0c96		VoC_bne16_rd(Label_Else3,REG2,0x1193)
0x35240A8E,	//0x0c98		VoC_lw16i(RL7_LO,0x3524)
0x070C0A86,	//0x0c9a		VoC_lw16i(REG6,0x70c)
0x11BE0A88,	//0x0c9c		VoC_lw16i(ACC0_LO,0x11be)
0x19900A89,	//0x0c9e		VoC_lw16i(ACC0_HI,0x1990)
0x1DBD0A8A,	//0x0ca0		VoC_lw16i(ACC1_LO,0x1dbd)
0xDC49DC08,	//0x0ca2		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0xE5CFDC5A,	//0x0ca4		VoC_jump(prvSetDetTable_Label_Exit)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
		//0x0ca6		Label_Else3
0x51500A8E,	//0x0ca6		VoC_lw16i(RL7_LO,0x5150)
0x09780A86,	//0x0ca8		VoC_lw16i(REG6,0x978)
0x11BE0A88,	//0x0caa		VoC_lw16i(ACC0_LO,0x11be)
0x1CDE0A89,	//0x0cac		VoC_lw16i(ACC0_HI,0x1cde)
0x1F790A8A,	//0x0cae		VoC_lw16i(ACC1_LO,0x1f79)
0xDC49DC08,	//0x0cb0		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0xFFC05C5A,	//0x0cb2		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
		//0x0cb4		prvSetDetTable_Label_Exit
0x08DF0A83,	//0x0cb4		VoC_lw16i(REG3,0x8df)
0x0A0E093E,	//0x0cb6		VoC_add32_rd(RL6,RL7,0xa0e)
0x00081792,	//0x0cb8		VoC_cfg_lg(0x8,)
0x7FC31543,	//0x0cba		VoC_sw16_d(REG3,0xffc3)
0x7FC21546,	//0x0cbc		VoC_sw16_d(REG6,0xffc2)
0x7FC415C6,	//0x0cbe		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x0cc0		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0cc2		VoC_cfg_lg(0x8,)
0xDF41E580,	//0x0cc4		VoC_push32(REG23,DEFAULT)	|	VoC_return
		//0x0cc5		CII_FFTBUTTERFLY_N_32_VOC
0xD9DA5983,	//0x0cc6		VoC_lw32inc_p(REG45,REG3,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xF90C4DEC,	//0x0cc8		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0cca		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD98BCE75,	//0x0ccc		VoC_lw32_p(REG67,REG1,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xFF264DEC,	//0x0cce		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0cd0		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD99ACE75,	//0x0cd2		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xFF274DEC,	//0x0cd4		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90C4E75,	//0x0cd6		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xD983CE7C,	//0x0cd8		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xCDEC4BA6,	//0x0cda		VoC_multf32_rr(ACC0,REG7,REG5,IN_PARALLEL)	|	VoC_sub32_rr(RL6,RL6,ACC0,DEFAULT)
0xF90E4E7C,	//0x0cdc		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD9D24E75,	//0x0cde		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xC93F5993,	//0x0ce0		VoC_add32_rr(RL7,ACC0,RL7,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG2,DEFAULT)
0xFA0B7A0A,	//0x0ce2		VoC_shr32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
0x4AB6DF01,	//0x0ce4		VoC_sub32_rr(RL6,REG45,RL6,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x48FDC8B4,	//0x0ce6		VoC_add32_rr(ACC1,REG67,RL7,DEFAULT)	|	VoC_add32_rr(ACC0,REG45,RL6,IN_PARALLEL)
0xDDD4CAFF,	//0x0ce8		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_rr(RL7,REG67,RL7,IN_PARALLEL)
0xDD95DDDE,	//0x0cea		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(RL6,REG3,DEFAULT)
0xE580DD9F,	//0x0cec		VoC_return	|	VoC_sw32_p(RL7,REG3,DEFAULT)
		//0x0cee		CII_prvFFT4DCT_VOC
0x0B00F021,	//0x0cee		VoC_sub16_dr(REG0,0x1192,REG0)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xDFE91192,	//0x0cf0		VoC_push16(RA,DEFAULT)	|	VoC_sub16_dr(REG0,0x1192,REG0)(hi)
0x1505FE01,	//0x0cf2		VoC_sw16_d(REG5,0x2652)(lo)	|	VoC_shr16_rr(REG1,REG0,DEFAULT)
0x60262652,	//0x0cf4		VoC_movreg16(REG6,REG1,DEFAULT)	|	VoC_sw16_d(REG5,0x2652)(hi)
0x77F9F472,	//0x0cf6		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xe,IN_PARALLEL)
0xF8FEE000,	//0x0cf8		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
0x1506F004,	//0x0cfa		VoC_sw16_d(REG6,0x2653)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x382E2653,	//0x0cfc		VoC_bgt16_rd(Label_return_not,REG6,0x1196)(lo)	|	VoC_sw16_d(REG6,0x2653)(hi)
0x2B001196,	//0x0cfe		VoC_jump_lg(Label_return)(lo)	|	VoC_bgt16_rd(Label_return_not,REG6,0x1196)(hi)
0xFFC00E04,	//0x0d00		VoC_NAD	|	VoC_jump_lg(Label_return)(hi)
		//0x0d02		Label_return_not
0xF00B7052,	//0x0d02		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
		//0x0d04		Label_loop_sort_start
0x0D083430,	//0x0d04		VoC_bgt16_rr(Label_loop_sort_con,REG6,REG0)
0x0D362B00,	//0x0d06		VoC_jump_lg(Label_loop_sort_end)
		//0x0d08		Label_loop_sort_con
0x0D1E34A0,	//0x0d08		VoC_bngt16_rr(Label_iNLTj,REG4,REG0)
0xC142C163,	//0x0d0a		VoC_add16_rr(REG2,REG5,REG0,DEFAULT)	|	VoC_add16_rr(REG3,REG5,REG4,DEFAULT)
0xD997D99E,	//0x0d0c		VoC_lw32_p(RL7,REG2,DEFAULT)	|	VoC_lw32_p(RL6,REG3,DEFAULT)
0xDDDFDDD6,	//0x0d0e		VoC_sw32inc_p(RL7,REG3,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0xD99CD995,	//0x0d10		VoC_lw32_p(ACC0,REG3,DEFAULT)	|	VoC_lw32_p(ACC1,REG2,DEFAULT)
0xDDD4DDDD,	//0x0d12		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0xC0B2C0F3,	//0x0d14		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0xD997D99E,	//0x0d16		VoC_lw32_p(RL7,REG2,DEFAULT)	|	VoC_lw32_p(RL6,REG3,DEFAULT)
0xDDDFDDD6,	//0x0d18		VoC_sw32inc_p(RL7,REG3,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0xD99CD995,	//0x0d1a		VoC_lw32_p(ACC0,REG3,DEFAULT)	|	VoC_lw32_p(ACC1,REG2,DEFAULT)
0xDD94DD9D,	//0x0d1c		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_sw32_p(ACC1,REG3,DEFAULT)
		//0x0d1e		Label_iNLTj
0xC1634142,	//0x0d1e		VoC_add16_rr(REG3,REG5,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG5,REG0,DEFAULT)
0x11960712,	//0x0d20		VoC_add16_rd(REG2,REG2,0x1196)
0xD997C0F3,	//0x0d22		VoC_lw32_p(RL7,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0xDDDFD99E,	//0x0d24		VoC_sw32inc_p(RL7,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG3,DEFAULT)
0xD99CDDD6,	//0x0d26		VoC_lw32_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0xE027D995,	//0x0d28		VoC_movreg16(REG7,REG1,DEFAULT)	|	VoC_lw32_p(ACC1,REG2,DEFAULT)
0xDD94DD9D,	//0x0d2a		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_sw32_p(ACC1,REG3,DEFAULT)
		//0x0d2c		Label_loop_updatej
0x0D31343C,	//0x0d2c		VoC_bgt16_rr(Label_loop_updatej_end,REG7,REG4)
0xF80FC33C,	//0x0d2e		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG7,DEFAULT)
0xC13CE5FC,	//0x0d30		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_jump(Label_loop_updatej)
		//0x0d31		Label_loop_updatej_end
0x119A0700,	//0x0d32		VoC_add16_rd(REG0,REG0,0x119a)
0x0D042B00,	//0x0d34		VoC_jump_lg(Label_loop_sort_start)
		//0x0d36		Label_loop_sort_end
0x26521402,	//0x0d36		VoC_lw16_d(REG2,0x2652)
0x1502F007,	//0x0d38		VoC_sw16_d(REG2,0x2662)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xFFC02662,	//0x0d3a		VoC_NAD	|	VoC_sw16_d(REG2,0x2662)(hi)
		//0x0d3c		Label_loop_i_start
0x26534827,	//0x0d3c		VoC_blt16_rd(Label_loop_i_con,REG7,0x2653)
0x0D9E2B00,	//0x0d3e		VoC_jump_lg(Label_loop_i_end)
		//0x0d40		Label_loop_i_con
0x26621402,	//0x0d40		VoC_lw16_d(REG2,0x2662)
0x26541507,	//0x0d42		VoC_sw16_d(REG7,0x2654)
0x11960713,	//0x0d44		VoC_add16_rd(REG3,REG2,0x1196)
0x0D542C21,	//0x0d46		VoC_loop_i(0x1,0x10)
0x919CD996,	//0x0d48		VoC_add32_rp(ACC0,RL6,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xDDD4959D,	//0x0d4a		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_rp(ACC1,RL6,REG3,DEFAULT)
0xD996DDDD,	//0x0d4c		VoC_lw32_p(RL6,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0x959D919C,	//0x0d4e		VoC_sub32_rp(ACC1,RL6,REG3,DEFAULT)	|	VoC_add32_rp(ACC0,RL6,REG3,DEFAULT)
0xDDDDDDD4,	//0x0d50		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x11960712,	//0x0d52		VoC_add16_rd(REG2,REG2,0x1196)
		//0x0d54		VoC_endloop1
0x1196071B,	//0x0d54		VoC_add16_rd(REG3,REG3,0x1196)
0xE0847201,	//0x0d56		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x10,DEFAULT)
0x2C09F7C6,	//0x0d58		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16i_short(REG6,0xfffffffe,DEFAULT)
0xF0070D90,	//0x0d5a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0x26581501,	//0x0d5c		VoC_sw16_d(REG1,0x2658)
0x26611504,	//0x0d5e		VoC_sw16_d(REG4,0x2661)
0x26591506,	//0x0d60		VoC_sw16_d(REG6,0x2659)
		//0x0d62		Label_loop_j_start
0x26614827,	//0x0d62		VoC_blt16_rd(Label_loop_j_end_not,REG7,0x2661)
0x0D862B00,	//0x0d64		VoC_jump_lg(Label_loop_j_end)
		//0x0d66		Label_loop_j_end_not
0x11BE0A80,	//0x0d66		VoC_lw16i(REG0,0x11be)
0xFE35E0E5,	//0x0d68		VoC_shr16_rr(REG5,REG6,DEFAULT)	|	VoC_movreg16(REG5,REG7,DEFAULT)
0x26551507,	//0x0d6a		VoC_sw16_d(REG7,0x2655)
0x0701C028,	//0x0d6c		VoC_add16_rd(REG1,REG0,0x11a3)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xFFC011A3,	//0x0d6e		VoC_NAD	|	VoC_add16_rd(REG1,REG0,0x11a3)(hi)
		//0x0d70		Label_loop_k_start
0x2662073A,	//0x0d70		VoC_add16_rd(REG2,REG7,0x2662)
0x11A84CA7,	//0x0d72		VoC_bnlt16_rd(Label_loop_k_end,REG7,0x11a8)
0x0713DFC7,	//0x0d74		VoC_add16_rd(REG3,REG2,0x2661)(lo)	|	VoC_push16(REG7,DEFAULT)
0x2B802661,	//0x0d76		VoC_jal(CII_FFTBUTTERFLY_N_32_VOC)(lo)	|	VoC_add16_rd(REG3,REG2,0x2661)(hi)
0xDF870CC5,	//0x0d78		VoC_pop16(REG7,DEFAULT)	|	VoC_jal(CII_FFTBUTTERFLY_N_32_VOC)(hi)
0x2658073F,	//0x0d7a		VoC_add16_rd(REG7,REG7,0x2658)
0xFFC065F4,	//0x0d7c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_loop_k_start)
		//0x0d7e		Label_loop_k_end
0x26551407,	//0x0d7e		VoC_lw16_d(REG7,0x2655)
0x26591406,	//0x0d80		VoC_lw16_d(REG6,0x2659)
0x1196073F,	//0x0d82		VoC_add16_rd(REG7,REG7,0x1196)
0x0D622B00,	//0x0d84		VoC_jump_lg(Label_loop_j_start)
		//0x0d86		Label_loop_j_end
0x26581401,	//0x0d86		VoC_lw16_d(REG1,0x2658)
0x26611404,	//0x0d88		VoC_lw16_d(REG4,0x2661)
0x26591406,	//0x0d8a		VoC_lw16_d(REG6,0x2659)
0x0736F8F9,	//0x0d8c		VoC_add16_rd(REG6,REG6,0x1193)(lo)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xF8FC1193,	//0x0d8e		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x1193)(hi)
		//0x0d90		VoC_endloop1
0x26591506,	//0x0d90		VoC_sw16_d(REG6,0x2659)
0x26621402,	//0x0d92		VoC_lw16_d(REG2,0x2662)
0x26541407,	//0x0d94		VoC_lw16_d(REG7,0x2654)
0x11A80712,	//0x0d96		VoC_add16_rd(REG2,REG2,0x11a8)
0x11A5073F,	//0x0d98		VoC_add16_rd(REG7,REG7,0x11a5)
0x26621502,	//0x0d9a		VoC_sw16_d(REG2,0x2662)
0x0D3C2B00,	//0x0d9c		VoC_jump_lg(Label_loop_i_start)
		//0x0d9e		Label_loop_i_end
0x26531405,	//0x0d9e		VoC_lw16_d(REG5,0x2653)
0x00400A81,	//0x0da0		VoC_lw16i(REG1,0x40)
0xE08670C3,	//0x0da2		VoC_lw16i_short(REG6,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x6,DEFAULT)
0x00800A84,	//0x0da4		VoC_lw16i(REG4,0x80)
0xF007F82D,	//0x0da6		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_shr16_ri(REG5,0x5,DEFAULT)
		//0x0da7		Label_fft32_t_start
0x26534821,	//0x0da8		VoC_blt16_rd(Label_fft32_t_con,REG1,0x2653)
0x0E042B00,	//0x0daa		VoC_jump_lg(Label_fft32_t_end)
		//0x0dac		Label_fft32_t_con
0x265E1505,	//0x0dac		VoC_sw16_d(REG5,0x265e)
0x26591506,	//0x0dae		VoC_sw16_d(REG6,0x2659)
0x26601504,	//0x0db0		VoC_sw16_d(REG4,0x2660)
0x26581501,	//0x0db2		VoC_sw16_d(REG1,0x2658)
0x26631503,	//0x0db4		VoC_sw16_d(REG3,0x2663)
		//0x0db6		Label_fft32_i_start
0x482FF000,	//0x0db6		VoC_blt16_rd(Label_fft32_i_con,REG7,0x265e)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x2B00265E,	//0x0db8		VoC_jump_lg(Label_fft32_i_end)(lo)	|	VoC_blt16_rd(Label_fft32_i_con,REG7,0x265e)(hi)
0xFFC00DF2,	//0x0dba		VoC_NAD	|	VoC_jump_lg(Label_fft32_i_end)(hi)
		//0x0dbc		Label_fft32_i_con
0x26541507,	//0x0dbc		VoC_sw16_d(REG7,0x2654)
		//0x0dbe		Label_fft32_j_start
0x26594820,	//0x0dbe		VoC_blt16_rd(Label_fft32_j_con,REG0,0x2659)
0x0DEC2B00,	//0x0dc0		VoC_jump_lg(Label_fft32_j_end)
		//0x0dc2		Label_fft32_j_con
0x26551500,	//0x0dc2		VoC_sw16_d(REG0,0x2655)
0x26631401,	//0x0dc4		VoC_lw16_d(REG1,0x2663)
0x26520705,	//0x0dc6		VoC_add16_rd(REG5,REG0,0x2652)
0x1403F1C4,	//0x0dc8		VoC_lw16_d(REG3,0x2654)(lo)	|	VoC_lw16i_short(REG4,0xe,DEFAULT)
0xC2642654,	//0x0dca		VoC_sub16_rr(REG4,REG1,REG4,DEFAULT)	|	VoC_lw16_d(REG3,0x2654)(hi)
0x11920B09,	//0x0dcc		VoC_sub16_dr(REG1,0x1192,REG1)
0xFE0BFE20,	//0x0dce		VoC_shr16_rr(REG3,REG1,DEFAULT)	|	VoC_shr16_rr(REG0,REG4,DEFAULT)
0x11BE0A84,	//0x0dd0		VoC_lw16i(REG4,0x11be)
0xC020C15A,	//0x0dd2		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG5,REG3,DEFAULT)
0x11A30701,	//0x0dd4		VoC_add16_rd(REG1,REG0,0x11a3)
0x0DE42C21,	//0x0dd6		VoC_loop_i(0x1,0x10)
0x265F1502,	//0x0dd8		VoC_sw16_d(REG2,0x265f)
0x26600713,	//0x0dda		VoC_add16_rd(REG3,REG2,0x2660)
0x0CC52B80,	//0x0ddc		VoC_jal(CII_FFTBUTTERFLY_N_32_VOC)
0x265F1402,	//0x0dde		VoC_lw16_d(REG2,0x265f)
0x11940700,	//0x0de0		VoC_add16_rd(REG0,REG0,0x1194)
0x26590712,	//0x0de2		VoC_add16_rd(REG2,REG2,0x2659)
		//0x0de4		VoC_endloop1
0x11940709,	//0x0de4		VoC_add16_rd(REG1,REG1,0x1194)
0x26551400,	//0x0de6		VoC_lw16_d(REG0,0x2655)
0x11960700,	//0x0de8		VoC_add16_rd(REG0,REG0,0x1196)
0x0DBE2B00,	//0x0dea		VoC_jump_lg(Label_fft32_j_start)
		//0x0dec		Label_fft32_j_end
0x26541407,	//0x0dec		VoC_lw16_d(REG7,0x2654)
0x1196073F,	//0x0dee		VoC_add16_rd(REG7,REG7,0x1196)
0x0DB62B00,	//0x0df0		VoC_jump_lg(Label_fft32_i_start)
		//0x0df2		Label_fft32_i_end
0x26581401,	//0x0df2		VoC_lw16_d(REG1,0x2658)
0x26631403,	//0x0df4		VoC_lw16_d(REG3,0x2663)
0x26591406,	//0x0df6		VoC_lw16_d(REG6,0x2659)
0x26601404,	//0x0df8		VoC_lw16_d(REG4,0x2660)
0x265E1405,	//0x0dfa		VoC_lw16_d(REG5,0x265e)
0x1193071B,	//0x0dfc		VoC_add16_rd(REG3,REG3,0x1193)
0xF8FE78F9,	//0x0dfe		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xF80D78FC,	//0x0e00		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x0DA72B00,	//0x0e02		VoC_jump_lg(Label_fft32_t_start)
		//0x0e04		Label_fft32_t_end
		//0x0e04		Label_return
0x701ADFA9,	//0x0e04		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE580F401,	//0x0e06		VoC_return	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
		//0x0e08		CII_INBF_VOC
0x1483D98A,	//0x0e08		VoC_lw32_d(REG67,0x2554)(lo)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0x4DEC2554,	//0x0e0a		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_lw32_d(REG67,0x2554)(hi)
0x4E7CF90C,	//0x0e0c		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x0e0e		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x25521483,	//0x0e10		VoC_lw32_d(REG67,0x2552)
0xFF2659D2,	//0x0e12		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xF90C4DEC,	//0x0e14		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0e16		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0x1483CE75,	//0x0e18		VoC_lw32_d(REG67,0x2554)(lo)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x4DEC2554,	//0x0e1a		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_lw32_d(REG67,0x2554)(hi)
0x4E7CCBA6,	//0x0e1c		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0xCE75F90E,	//0x0e1e		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x25521483,	//0x0e20		VoC_lw32_d(REG67,0x2552)
0xFF27598A,	//0x0e22		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0xF90C4DEC,	//0x0e24		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0e26		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xDDCE4E75,	//0x0e28		VoC_sw32inc_p(RL6,REG1,IN_PARALLEL)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x25901482,	//0x0e2a		VoC_lw32_d(REG45,0x2590)
0x4DECC9E7,	//0x0e2c		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0xCE7CF90C,	//0x0e2e		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xDDCF4E75,	//0x0e30		VoC_sw32inc_p(RL7,REG1,IN_PARALLEL)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x25541483,	//0x0e32		VoC_lw32_d(REG67,0x2554)
0xFF264DEC,	//0x0e34		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0e36		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0x0BB6CE75,	//0x0e38		VoC_sub32_dr(RL6,0x2558,RL6)(lo)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x09272558,	//0x0e3a		VoC_add32_rd(RL7,ACC0,0x2556)(lo)	|	VoC_sub32_dr(RL6,0x2558,RL6)(hi)
0x14842556,	//0x0e3c		VoC_lw32_d(ACC0,0x2554)(lo)	|	VoC_add32_rd(RL7,ACC0,0x2556)(hi)
0x15862554,	//0x0e3e		VoC_sw32_d(RL6,0x2554)(lo)	|	VoC_lw32_d(ACC0,0x2554)(hi)
0x15842554,	//0x0e40		VoC_sw32_d(ACC0,0x2558)(lo)	|	VoC_sw32_d(RL6,0x2554)(hi)
0x14852558,	//0x0e42		VoC_lw32_d(ACC1,0x2552)(lo)	|	VoC_sw32_d(ACC0,0x2558)(hi)
0x15872552,	//0x0e44		VoC_sw32_d(RL7,0x2552)(lo)	|	VoC_lw32_d(ACC1,0x2552)(hi)
0x15852552,	//0x0e46		VoC_sw32_d(ACC1,0x2556)(lo)	|	VoC_sw32_d(RL7,0x2552)(hi)
0xE5802556,	//0x0e48		VoC_return	|	VoC_sw32_d(ACC1,0x2556)(hi)
		//0x0e4a		CII_auDctIV_VOC
0x5FC5DFE9,	//0x0e4a		VoC_push16(REG5,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1406F005,	//0x0e4c		VoC_lw16_d(REG6,0x9ec)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x0A8109EC,	//0x0e4e		VoC_lw16i(REG1,0x24ae)(lo)	|	VoC_lw16_d(REG6,0x9ec)(hi)
0x318624AE,	//0x0e50		VoC_bez16_r(EQtypeEnd,REG6)(lo)	|	VoC_lw16i(REG1,0x24ae)(hi)
0x07090E72,	//0x0e52		VoC_add16_rd(REG1,REG1,0x119c)(lo)	|	VoC_bez16_r(EQtypeEnd,REG6)(hi)
0x41AE119C,	//0x0e54		VoC_be16_rd(EQtypeEnd,REG6,0x1193)(lo)	|	VoC_add16_rd(REG1,REG1,0x119c)(hi)
0x07091193,	//0x0e56		VoC_add16_rd(REG1,REG1,0x119c)(lo)	|	VoC_be16_rd(EQtypeEnd,REG6,0x1193)(hi)
0x418E119C,	//0x0e58		VoC_be16_rd(EQtypeEnd,REG6,0x1194)(lo)	|	VoC_add16_rd(REG1,REG1,0x119c)(hi)
0x07091194,	//0x0e5a		VoC_add16_rd(REG1,REG1,0x119c)(lo)	|	VoC_be16_rd(EQtypeEnd,REG6,0x1194)(hi)
0x412E119C,	//0x0e5c		VoC_be16_rd(EQtypeEnd,REG6,0x1195)(lo)	|	VoC_add16_rd(REG1,REG1,0x119c)(hi)
0x07091195,	//0x0e5e		VoC_add16_rd(REG1,REG1,0x119c)(lo)	|	VoC_be16_rd(EQtypeEnd,REG6,0x1195)(hi)
0x410E119C,	//0x0e60		VoC_be16_rd(EQtypeEnd,REG6,0x1196)(lo)	|	VoC_add16_rd(REG1,REG1,0x119c)(hi)
0x07091196,	//0x0e62		VoC_add16_rd(REG1,REG1,0x119c)(lo)	|	VoC_be16_rd(EQtypeEnd,REG6,0x1196)(hi)
0x40AE119C,	//0x0e64		VoC_be16_rd(EQtypeEnd,REG6,0x1197)(lo)	|	VoC_add16_rd(REG1,REG1,0x119c)(hi)
0x07091197,	//0x0e66		VoC_add16_rd(REG1,REG1,0x119c)(lo)	|	VoC_be16_rd(EQtypeEnd,REG6,0x1197)(hi)
0x408E119C,	//0x0e68		VoC_be16_rd(EQtypeEnd,REG6,0x1198)(lo)	|	VoC_add16_rd(REG1,REG1,0x119c)(hi)
0x07091198,	//0x0e6a		VoC_add16_rd(REG1,REG1,0x119c)(lo)	|	VoC_be16_rd(EQtypeEnd,REG6,0x1198)(hi)
0x402E119C,	//0x0e6c		VoC_be16_rd(EQtypeEnd,REG6,0x1199)(lo)	|	VoC_add16_rd(REG1,REG1,0x119c)(hi)
0x2B001199,	//0x0e6e		VoC_jump_lg(EQ_end)(lo)	|	VoC_be16_rd(EQtypeEnd,REG6,0x1199)(hi)
0xFFC00EB4,	//0x0e70		VoC_NAD	|	VoC_jump_lg(EQ_end)(hi)
		//0x0e72		EQtypeEnd
0x08FA1406,	//0x0e72		VoC_lw16_d(REG6,0x8fa)
0xF966F032,	//0x0e74		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x24FE0A82,	//0x0e76		VoC_lw16i(REG2,0x24fe)
0x11934186,	//0x0e78		VoC_be16_rd(BandFreqEnd,REG6,0x1193)
0x119C0712,	//0x0e7a		VoC_add16_rd(REG2,REG2,0x119c)
0x11944126,	//0x0e7c		VoC_be16_rd(BandFreqEnd,REG6,0x1194)
0x119C0712,	//0x0e7e		VoC_add16_rd(REG2,REG2,0x119c)
0x11954106,	//0x0e80		VoC_be16_rd(BandFreqEnd,REG6,0x1195)
0x119C0712,	//0x0e82		VoC_add16_rd(REG2,REG2,0x119c)
0x119740A6,	//0x0e84		VoC_be16_rd(BandFreqEnd,REG6,0x1197)
0x119C0712,	//0x0e86		VoC_add16_rd(REG2,REG2,0x119c)
0x11994086,	//0x0e88		VoC_be16_rd(BandFreqEnd,REG6,0x1199)
0x119C0712,	//0x0e8a		VoC_add16_rd(REG2,REG2,0x119c)
0x119C4026,	//0x0e8c		VoC_be16_rd(BandFreqEnd,REG6,0x119c)
0x119C0712,	//0x0e8e		VoC_add16_rd(REG2,REG2,0x119c)
		//0x0e90		BandFreqEnd
0xF5E1717A,	//0x0e90		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xb,DEFAULT)
0x00200A96,	//0x0e92		VoC_lw16i(STATUS,0x20)
0xF00860A0,	//0x0e94		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
		//0x0e96		BandChange
0x08FC1403,	//0x0e96		VoC_lw16_d(REG3,0x8fc)
0x11AD1407,	//0x0e98		VoC_lw16_d(REG7,0x11ad)
0xFFC058A4,	//0x0e9a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x0e9c		SubbandAdaptStart
0x0EA2351F,	//0x0e9c		VoC_be16_rr(SubbandAdaptEnd,REG3,REG7)
0xF80C780F,	//0x0e9e		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xFFC065FC,	//0x0ea0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SubbandAdaptStart)
		//0x0ea2		SubbandAdaptEnd
0xD89578FB,	//0x0ea2		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0xD61678FC,	//0x0ea4		VoC_lw16_sd(REG6,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xC13440F3,	//0x0ea6		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
		//0x0ea8		BandWeightMult
0x0EB43498,	//0x0ea8		VoC_bngt16_rr(EQ_end,REG3,REG0)
0x0E9634A0,	//0x0eaa		VoC_bngt16_rr(BandChange,REG4,REG0)
0x4DECD983,	//0x0eac		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xCE75F90E,	//0x0eae		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0xFFC0FFC0,	//0x0eb0		VoC_NOP	|	VoC_NOP
0xE5F5DDC4,	//0x0eb2		VoC_jump(BandWeightMult)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0eb4		EQ_end
0x08FC1400,	//0x0eb4		VoC_lw16_d(REG0,0x8fc)
0x61240A81,	//0x0eb6		VoC_lw16i(REG1,0x6124)
0xC041F838,	//0x0eb8		VoC_add16_rr(REG1,REG1,REG0,DEFAULT)	|	VoC_shr16_ri(REG0,0x7,DEFAULT)
0x5810F050,	//0x0eba		VoC_lw16_p(REG0,REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x0703FF43,	//0x0ebc		VoC_add16_rd(REG3,REG0,0x11a0)(lo)	|	VoC_lw32z(REG67,IN_PARALLEL)
0x070411A0,	//0x0ebe		VoC_add16_rd(REG4,REG0,0x119c)(lo)	|	VoC_add16_rd(REG3,REG0,0x11a0)(hi)
0x0705119C,	//0x0ec0		VoC_add16_rd(REG5,REG0,0x119a)(lo)	|	VoC_add16_rd(REG4,REG0,0x119c)(hi)
0x94DE119A,	//0x0ec2		VoC_sub32_rp(RL6,REG67,REG3,DEFAULT)	|	VoC_add16_rd(REG5,REG0,0x119a)(hi)
0xD9ACD9A7,	//0x0ec4		VoC_lw32_p(ACC0,REG5,DEFAULT)	|	VoC_lw32_p(RL7,REG4,DEFAULT)
0x25901586,	//0x0ec6		VoC_sw32_d(RL6,0x2590)
0x25921587,	//0x0ec8		VoC_sw32_d(RL7,0x2592)
0x25941584,	//0x0eca		VoC_sw32_d(ACC0,0x2594)
0x08FC1401,	//0x0ecc		VoC_lw16_d(REG1,0x8fc)
0xD9C796C6,	//0x0ece		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_sub32inc_rp(RL6,REG67,REG0,DEFAULT)
0xD9C5D9C4,	//0x0ed0		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xFA0F7A0E,	//0x0ed2		VoC_shr32_ri(RL7,0x1,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0xFA0D7A0C,	//0x0ed4		VoC_shr32_ri(ACC1,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x25521586,	//0x0ed6		VoC_sw32_d(RL6,0x2552)
0x25541587,	//0x0ed8		VoC_sw32_d(RL7,0x2554)
0x25561584,	//0x0eda		VoC_sw32_d(ACC0,0x2556)
0x25581585,	//0x0edc		VoC_sw32_d(ACC1,0x2558)
0xF5F971DA,	//0x0ede		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xe,DEFAULT)
0x00200A96,	//0x0ee0		VoC_lw16i(STATUS,0x20)
0x08FC1404,	//0x0ee2		VoC_lw16_d(REG4,0x8fc)
0x07A4D611,	//0x0ee4		VoC_sub16_rd(REG4,REG4,0x1193)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x14001193,	//0x0ee6		VoC_lw16_d(REG0,0x8fc)(lo)	|	VoC_sub16_rd(REG4,REG4,0x1193)(hi)
0xF8FC08FC,	//0x0ee8		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG0,0x8fc)(hi)
0xC0637810,	//0x0eea		VoC_add16_rr(REG3,REG1,REG4,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0xF0127051,	//0x0eec		VoC_lw16i_short(INC2,0x4,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x1194070A,	//0x0eee		VoC_add16_rd(REG2,REG1,0x1194)
		//0x0ef0		PREFFT_LOOP_1_BEGIN
0x0EFE3180,	//0x0ef0		VoC_bez16_r(PREFFT_LOOP_1_END,REG0)
0xD996D99C,	//0x0ef2		VoC_lw32_p(RL6,REG2,DEFAULT)	|	VoC_lw32_p(ACC0,REG3,DEFAULT)
0xDD9EDD94,	//0x0ef4		VoC_sw32_p(RL6,REG3,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0x0E082B80,	//0x0ef6		VoC_jal(CII_INBF_VOC)
0x11930780,	//0x0ef8		VoC_sub16_rd(REG0,REG0,0x1193)
0x1196079B,	//0x0efa		VoC_sub16_rd(REG3,REG3,0x1196)
0xFFC065F4,	//0x0efc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(PREFFT_LOOP_1_BEGIN)
		//0x0efe		PREFFT_LOOP_1_END
0x08FC1400,	//0x0efe		VoC_lw16_d(REG0,0x8fc)
		//0x0f00		PREFFT_LOOP_2_BEGIN
0x0F083180,	//0x0f00		VoC_bez16_r(PREFFT_LOOP_2_END,REG0)
0x0E082B80,	//0x0f02		VoC_jal(CII_INBF_VOC)
0x11960780,	//0x0f04		VoC_sub16_rd(REG0,REG0,0x1196)
0xFFC065FA,	//0x0f06		VoC_NAD(IN_PARALLEL)	|	VoC_jump(PREFFT_LOOP_2_BEGIN)
		//0x0f08		PREFFT_LOOP_2_END
0x08FC1401,	//0x0f08		VoC_lw16_d(REG1,0x8fc)
0x7831F0A0,	//0x0f0a		VoC_shr16_ri(REG1,0x6,DEFAULT)	|	VoC_lw16i_short(REG0,0x5,DEFAULT)
0xFFC0D615,	//0x0f0c		VoC_NAD	|	VoC_lw16_sd(REG5,0x0,IN_PARALLEL)
		//0x0f0e		LOG_BEGIN
0x11933C31,	//0x0f0e		VoC_bngt16_rd(LOG_END,REG1,0x1193)
0x0700F809,	//0x0f10		VoC_add16_rd(REG0,REG0,0x1193)(lo)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0xE5FB1193,	//0x0f12		VoC_jump(LOG_BEGIN)	|	VoC_add16_rd(REG0,REG0,0x1193)(hi)
		//0x0f14		LOG_END
0xF401701A,	//0x0f14		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0xFFC07036,	//0x0f16		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x1,DEFAULT)
0x0CEE2B80,	//0x0f18		VoC_jal(CII_prvFFT4DCT_VOC)
0x00410A96,	//0x0f1a		VoC_lw16i(STATUS,0x41)
0xF5F971DA,	//0x0f1c		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xe,DEFAULT)
0x08FC1400,	//0x0f1e		VoC_lw16_d(REG0,0x8fc)
0x0782D611,	//0x0f20		VoC_sub16_rd(REG2,REG0,0x1194)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xFF461194,	//0x0f22		VoC_lw32z(RL6,DEFAULT)	|	VoC_sub16_rd(REG2,REG0,0x1194)(hi)
0x1487F8FA,	//0x0f24		VoC_lw32_d(RL7,0x11b2)(lo)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0xC08A11B2,	//0x0f26		VoC_add16_rr(REG2,REG2,REG1,DEFAULT)	|	VoC_lw32_d(RL7,0x11b2)(hi)
0x25521586,	//0x0f28		VoC_sw32_d(RL6,0x2552)
0x25541587,	//0x0f2a		VoC_sw32_d(RL7,0x2554)
		//0x0f2c		POSTFFT_LOOP_BEGIN
0x0FAC3180,	//0x0f2c		VoC_bez16_r(POSTFFT_LOOP_END,REG0)
0x1483D98A,	//0x0f2e		VoC_lw32_d(REG67,0x2554)(lo)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0x15822554,	//0x0f30		VoC_sw32_d(REG45,0x255a)(lo)	|	VoC_lw32_d(REG67,0x2554)(hi)
0x4DEC255A,	//0x0f32		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_sw32_d(REG45,0x255a)(hi)
0x4E7CF90C,	//0x0f34		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x0f36		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x1194070B,	//0x0f38		VoC_add16_rd(REG3,REG1,0x1194)
0x25521483,	//0x0f3a		VoC_lw32_d(REG67,0x2552)
0xFF26599A,	//0x0f3c		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG3,DEFAULT)
0xF90C4DEC,	//0x0f3e		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0f40		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0x1482CE75,	//0x0f42		VoC_lw32_d(REG45,0x255a)(lo)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x4DEC255A,	//0x0f44		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_lw32_d(REG45,0x255a)(hi)
0x4E75CBA6,	//0x0f46		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0x4E7CF90C,	//0x0f48		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0x1483DD8E,	//0x0f4a		VoC_lw32_d(REG67,0x2554)(lo)	|	VoC_sw32_p(RL6,REG1,IN_PARALLEL)
0x599A2554,	//0x0f4c		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_lw32_d(REG67,0x2554)(hi)
0x4DECFF26,	//0x0f4e		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x4E7CF90C,	//0x0f50		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x0f52		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x11940713,	//0x0f54		VoC_add16_rd(REG3,REG2,0x1194)
0xD99AC9A6,	//0x0f56		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)
0x11B60BB6,	//0x0f58		VoC_sub32_dr(RL6,0x11b6,RL6)
0x255A1582,	//0x0f5a		VoC_sw32_d(REG45,0x255a)
0x1482DD9E,	//0x0f5c		VoC_lw32_d(REG45,0x2590)(lo)	|	VoC_sw32_p(RL6,REG3,DEFAULT)
0x14832590,	//0x0f5e		VoC_lw32_d(REG67,0x2552)(lo)	|	VoC_lw32_d(REG45,0x2590)(hi)
0x4DEC2552,	//0x0f60		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_lw32_d(REG67,0x2552)(hi)
0x4E7CF90C,	//0x0f62		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x0f64		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x25541483,	//0x0f66		VoC_lw32_d(REG67,0x2554)
0xFF264DEC,	//0x0f68		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0f6a		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0x0BB6CE75,	//0x0f6c		VoC_sub32_dr(RL6,0x2592,RL6)(lo)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x09272592,	//0x0f6e		VoC_add32_rd(RL7,ACC0,0x2594)(lo)	|	VoC_sub32_dr(RL6,0x2592,RL6)(hi)
0x14842594,	//0x0f70		VoC_lw32_d(ACC0,0x2554)(lo)	|	VoC_add32_rd(RL7,ACC0,0x2594)(hi)
0x15862554,	//0x0f72		VoC_sw32_d(RL6,0x2554)(lo)	|	VoC_lw32_d(ACC0,0x2554)(hi)
0x15842554,	//0x0f74		VoC_sw32_d(ACC0,0x2592)(lo)	|	VoC_sw32_d(RL6,0x2554)(hi)
0x14852592,	//0x0f76		VoC_lw32_d(ACC1,0x2552)(lo)	|	VoC_sw32_d(ACC0,0x2592)(hi)
0x15872552,	//0x0f78		VoC_sw32_d(RL7,0x2552)(lo)	|	VoC_lw32_d(ACC1,0x2552)(hi)
0x15852552,	//0x0f7a		VoC_sw32_d(ACC1,0x2594)(lo)	|	VoC_sw32_d(RL7,0x2552)(hi)
0xD9922594,	//0x0f7c		VoC_lw32_p(REG45,REG2,DEFAULT)	|	VoC_sw32_d(ACC1,0x2594)(hi)
0x25541483,	//0x0f7e		VoC_lw32_d(REG67,0x2554)
0xF90C4DEC,	//0x0f80		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0f82		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0x1483CE75,	//0x0f84		VoC_lw32_d(REG67,0x2552)(lo)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x14822552,	//0x0f86		VoC_lw32_d(REG45,0x255a)(lo)	|	VoC_lw32_d(REG67,0x2552)(hi)
0xFF26255A,	//0x0f88		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw32_d(REG45,0x255a)(hi)
0xF90C4DEC,	//0x0f8a		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0f8c		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0x070BCE75,	//0x0f8e		VoC_add16_rd(REG3,REG1,0x1194)(lo)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x59921194,	//0x0f90		VoC_lw32_p(REG45,REG2,DEFAULT)	|	VoC_add16_rd(REG3,REG1,0x1194)(hi)
0x4DECC9A6,	//0x0f92		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0xCE7CF90C,	//0x0f94		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xDD9E4E75,	//0x0f96		VoC_sw32_p(RL6,REG3,IN_PARALLEL)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x25541483,	//0x0f98		VoC_lw32_d(REG67,0x2554)
0x255A1482,	//0x0f9a		VoC_lw32_d(REG45,0x255a)
0x4DECFF26,	//0x0f9c		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x4E7CF90C,	//0x0f9e		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x0fa0		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x11960709,	//0x0fa2		VoC_add16_rd(REG1,REG1,0x1196)
0x0780CB36,	//0x0fa4		VoC_sub16_rd(REG0,REG0,0x1196)(lo)	|	VoC_sub32_rr(RL6,ACC0,RL6,DEFAULT)
0xDD961196,	//0x0fa6		VoC_sw32_p(RL6,REG2,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x1196)(hi)
0x11960792,	//0x0fa8		VoC_sub16_rd(REG2,REG2,0x1196)
0x0F2C2B00,	//0x0faa		VoC_jump_lg(POSTFFT_LOOP_BEGIN)
		//0x0fac		POSTFFT_LOOP_END
0x701ADF82,	//0x0fac		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x0A96F401,	//0x0fae		VoC_lw16i(STATUS,0x60)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xF0070060,	//0x0fb0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i(STATUS,0x60)(hi)
0x1507DFA9,	//0x0fb2		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800C37,	//0x0fb4		VoC_return	|	VoC_sw16_d(REG7,0xc37)(hi)
		//0x0fb6		CII_ibstrmFlushBits_VOC
0xE0075FE9,	//0x0fb6		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0147300,	//0x0fb8		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x18,DEFAULT)
0x1401F105,	//0x0fba		VoC_lw16_d(REG1,0x8db)(lo)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x140308DB,	//0x0fbc		VoC_lw16_d(REG3,0x8d7)(lo)	|	VoC_lw16_d(REG1,0x8db)(hi)
0x148708D7,	//0x0fbe		VoC_lw32_d(RL7,0x8d8)(lo)	|	VoC_lw16_d(REG3,0x8d7)(hi)
0x7F4408D8,	//0x0fc0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_d(RL7,0x8d8)(hi)
0x1402F006,	//0x0fc2		VoC_lw16_d(REG2,0x8d5)(lo)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0xFFC008D5,	//0x0fc4		VoC_NAD	|	VoC_lw16_d(REG2,0x8d5)(hi)
		//0x0fc6		FBLOOP_BEGIN
0x0FD03418,	//0x0fc6		VoC_bgt16_rr(FBLOOP_END,REG3,REG0)
0x0FD03141,	//0x0fc8		VoC_bngtz16_r(FBLOOP_END,REG1)
0xFDC758A8,	//0x0fca		VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG2,DEFAULT)
0x6527C0EB,	//0x0fcc		VoC_or32_rr(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0xE5F7C261,	//0x0fce		VoC_jump(FBLOOP_BEGIN)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
		//0x0fd0		FBLOOP_END
0x08D81587,	//0x0fd0		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x0fd2		VoC_sw16_d(REG2,0x8d5)
0x08D71503,	//0x0fd4		VoC_sw16_d(REG3,0x8d7)
0x08DB1501,	//0x0fd6		VoC_sw16_d(REG1,0x8db)
0x08D74890,	//0x0fd8		VoC_blt16_rd(FBGETMOREDATE_END,REG0,0x8d7)
0x08DB6808,	//0x0fda		VoC_bgtz16_d(FBGETMOREDATE_END,0x8db)
0x2B80DFC6,	//0x0fdc		VoC_jal(CII_ibstrmGetMoreData_VOC)(lo)	|	VoC_push16(REG6,DEFAULT)
0xDF861054,	//0x0fde		VoC_pop16(REG6,DEFAULT)	|	VoC_jal(CII_ibstrmGetMoreData_VOC)(hi)
0xFFC060A7,	//0x0fe0		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0fe2		FBGETMOREDATE_END
0x08D73886,	//0x0fe2		VoC_bgt16_rd(FBDWNUMBITS_GT_DWBITSLEFT,REG6,0x8d7)
0x08D70B30,	//0x0fe4		VoC_sub16_dr(REG0,0x8d7,REG6)
0x1500FFC0,	//0x0fe6		VoC_sw16_d(REG0,0x8d7)(lo)	|	VoC_NOP
0xE5C308D7,	//0x0fe8		VoC_jump(FBFUNCTION_END)	|	VoC_sw16_d(REG0,0x8d7)(hi)
		//0x0fea		FBDWNUMBITS_GT_DWBITSLEFT
0x00040AC7,	//0x0fea		VoC_lw16i(REG7,0x8004)
		//0x0fec		FBFUNCTION_END
0xFFC0DFA9,	//0x0fec		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0fee		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0ff0		CII_ibstrmGetBits_VOC
0xE1805FE9,	//0x0ff0		VoC_lw16i_short(REG0,0x18,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x4898F007,	//0x0ff2		VoC_blt16_rd(GBGETMOREDATE_END,REG0,0x8d7)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x680908D7,	//0x0ff4		VoC_bgtz16_d(GBGETMOREDATE_END,0x8db)(lo)	|	VoC_blt16_rd(GBGETMOREDATE_END,REG0,0x8d7)(hi)
0xDF4608DB,	//0x0ff6		VoC_push32(RL6,DEFAULT)	|	VoC_bgtz16_d(GBGETMOREDATE_END,0x8db)(hi)
0x2B80DFC6,	//0x0ff8		VoC_jal(CII_ibstrmGetMoreData_VOC)(lo)	|	VoC_push16(REG6,DEFAULT)
0xDF861054,	//0x0ffa		VoC_pop16(REG6,DEFAULT)	|	VoC_jal(CII_ibstrmGetMoreData_VOC)(hi)
0xF6A75F06,	//0x0ffc		VoC_movreg16(REG7,REG5,IN_PARALLEL)	|	VoC_pop32(RL6,DEFAULT)
		//0x0ffe		GBGETMOREDATE_END
0x08DB1400,	//0x0ffe		VoC_lw16_d(REG0,0x8db)
0x1401F8E8,	//0x1000		VoC_lw16_d(REG1,0x8d7)(lo)	|	VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)
0x34B008D7,	//0x1002		VoC_bngt16_rr(DWNUMBITS_NGT_BEGIN,REG6,REG0)(lo)	|	VoC_lw16_d(REG1,0x8d7)(hi)
0xC0421008,	//0x1004		VoC_add16_rr(REG2,REG1,REG0,DEFAULT)	|	VoC_bngt16_rr(DWNUMBITS_NGT_BEGIN,REG6,REG0)(hi)
0x104E3432,	//0x1006		VoC_bgt16_rr(DWNUMBITS_NGT_END,REG6,REG2)
		//0x1008		DWNUMBITS_NGT_BEGIN
0x08D73926,	//0x1008		VoC_bgt16_rd(GBDWNUMBITS_GT_DWBITSLEFT,REG6,0x8d7)
0x0B30E0C2,	//0x100a		VoC_sub16_dr(REG0,0x8d7,REG6)(lo)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xF9FA08D7,	//0x100c		VoC_shru16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_sub16_dr(REG0,0x8d7,REG6)(hi)
0x08D71500,	//0x100e		VoC_sw16_d(REG0,0x8d7)
0x60000A83,	//0x1010		VoC_lw16i(REG3,0x6000)
0x08D81487,	//0x1012		VoC_lw32_d(RL7,0x8d8)
0xFEC7C0D3,	//0x1014		VoC_shru32_rr(RL7,REG0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xE007599A,	//0x1016		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG3,DEFAULT)
0x2B00E4D7,	//0x1018		VoC_jump_lg(GBFUNCTION_END)(lo)	|	VoC_and32_rr(RL7,REG45,DEFAULT)
0xFFC01051,	//0x101a		VoC_NAD	|	VoC_jump_lg(GBFUNCTION_END)(hi)
		//0x101c		GBDWNUMBITS_GT_DWBITSLEFT
0x08D71400,	//0x101c		VoC_lw16_d(REG0,0x8d7)
0x60000A81,	//0x101e		VoC_lw16i(REG1,0x6000)
0x1487F9F8,	//0x1020		VoC_lw32_d(RL7,0x8d8)(lo)	|	VoC_shru16_ri(REG0,0xffffffff,DEFAULT)
0xC00808D8,	//0x1022		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_lw32_d(RL7,0x8d8)(hi)
0x08D707B1,	//0x1024		VoC_sub16_rd(REG1,REG6,0x8d7)
0xF080D981,	//0x1026		VoC_lw16i_short(REG0,0x4,DEFAULT)	|	VoC_lw32_p(REG23,REG0,DEFAULT)
0x3C18E4CF,	//0x1028		VoC_bngt16_rd(MCBBUFLEN_LT_4_not,REG0,0x8db)(lo)	|	VoC_and32_rr(RL7,REG23,DEFAULT)
0xE5DF08DB,	//0x102a		VoC_jump(MCBBUFLEN_LT_4)	|	VoC_bngt16_rd(MCBBUFLEN_LT_4_not,REG0,0x8db)(hi)
		//0x102c		MCBBUFLEN_LT_4_not
0x08D52006,	//0x102c		VoC_lw16d_set_inc(REG2,0x8d5,0x1)
0xD8A5FFC0,	//0x102e		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_NOP
0xF9C5D8A6,	//0x1030		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xD8A4D8A3,	//0x1032		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG2,DEFAULT)
0xE475F9C3,	//0x1034		VoC_or16_rr(REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)
0x1502E45C,	//0x1036		VoC_sw16_d(REG2,0x8d5)(lo)	|	VoC_or16_rr(REG4,REG3,DEFAULT)
0x158208D5,	//0x1038		VoC_sw32_d(REG45,0x8d8)(lo)	|	VoC_sw16_d(REG2,0x8d5)(hi)
0x0B0B08D8,	//0x103a		VoC_sub16_dr(REG3,0x11a3,REG1)(lo)	|	VoC_sw32_d(REG45,0x8d8)(hi)
0x0B0211A3,	//0x103c		VoC_sub16_dr(REG2,0x8db,REG0)(lo)	|	VoC_sub16_dr(REG3,0x11a3,REG1)(hi)
0x0B0E08DB,	//0x103e		VoC_sub16_dr(REG6,0x1192,REG1)(lo)	|	VoC_sub16_dr(REG2,0x8db,REG0)(hi)
0x15021192,	//0x1040		VoC_sw16_d(REG2,0x8db)(lo)	|	VoC_sub16_dr(REG6,0x1192,REG1)(hi)
0xFEF708DB,	//0x1042		VoC_shru32_rr(RL7,REG6,DEFAULT)	|	VoC_sw16_d(REG2,0x8db)(hi)
0x1503FEDA,	//0x1044		VoC_sw16_d(REG3,0x8d7)(lo)	|	VoC_shru32_rr(REG45,REG3,DEFAULT)
0x651708D7,	//0x1046		VoC_or32_rr(RL7,REG45,DEFAULT)	|	VoC_sw16_d(REG3,0x8d7)(hi)
0xE5C8E007,	//0x1048		VoC_jump(GBFUNCTION_END)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
		//0x104a		MCBBUFLEN_LT_4
0x2B80E026,	//0x104a		VoC_jal(CII_prvFinalLoad_VOC)(lo)	|	VoC_movreg16(REG6,REG1,DEFAULT)
0xE5C411C0,	//0x104c		VoC_jump(GBFUNCTION_END)	|	VoC_jal(CII_prvFinalLoad_VOC)(hi)
		//0x104e		DWNUMBITS_NGT_END
0x0AC7FF47,	//0x104e		VoC_lw16i(REG7,0x8004)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xDFA90004,	//0x1050		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i(REG7,0x8004)(hi)
		//0x1051		GBFUNCTION_END
0xE580FFC0,	//0x1052		VoC_return	|	VoC_NOP
		//0x1054		CII_ibstrmGetMoreData_VOC
0xFFC05FE9,	//0x1054		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x12182B80,	//0x1056		VoC_jal(CII_WMARawDecCBGetData_VOC)
0x080A0A80,	//0x1058		VoC_lw16i(REG0,0x80a)
0x08DB1501,	//0x105a		VoC_sw16_d(REG1,0x8db)
0x08D51500,	//0x105c		VoC_sw16_d(REG0,0x8d5)
0x7100DFA9,	//0x105e		VoC_lw16i_short(REG0,0x8,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x441DE001,	//0x1060		VoC_bne16_rd(IF_NEW_PACKET_END,REG5,0x1195)(lo)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0xF0211195,	//0x1062		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_bne16_rd(IF_NEW_PACKET_END,REG5,0x1195)(hi)
		//0x1064		IF_NEW_PACKET_END
0x08DB6E09,	//0x1064		VoC_bnez16_d(MCBBUFFLEN_NEZ,0x8db)
0x7004F022,	//0x1066		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x1502E005,	//0x1068		VoC_sw16_d(REG2,0x8e6)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x2B0008E6,	//0x106a		VoC_jump_lg(GMDFUNCTION_END)(lo)	|	VoC_sw16_d(REG2,0x8e6)(hi)
0xF0021116,	//0x106c		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_jump_lg(GMDFUNCTION_END)(hi)
		//0x106d		MCBBUFFLEN_NEZ
0x1502FFC0,	//0x106e		VoC_sw16_d(REG2,0x8e6)(lo)	|	VoC_NOP
0x318108E6,	//0x1070		VoC_bez16_r(NEWPACKET_NEZ_1,REG1)(lo)	|	VoC_sw16_d(REG2,0x8e6)(hi)
0x1402107C,	//0x1072		VoC_lw16_d(REG2,0x8d5)(lo)	|	VoC_bez16_r(NEWPACKET_NEZ_1,REG1)(hi)
0x140308D5,	//0x1074		VoC_lw16_d(REG3,0x8db)(lo)	|	VoC_lw16_d(REG2,0x8d5)(hi)
0x150208DB,	//0x1076		VoC_sw16_d(REG2,0x8d4)(lo)	|	VoC_lw16_d(REG3,0x8db)(hi)
0x150308D4,	//0x1078		VoC_sw16_d(REG3,0x8d6)(lo)	|	VoC_sw16_d(REG2,0x8d4)(hi)
0xFFC008D6,	//0x107a		VoC_NAD	|	VoC_sw16_d(REG3,0x8d6)(hi)
		//0x107c		NEWPACKET_NEZ_1
0x08DC6E12,	//0x107c		VoC_bnez16_d(FALLOWPACKETS_NEZ,0x8dc)
0x10E03181,	//0x107e		VoC_bez16_r(FALLOWPACKETS_END,REG1)
0xE00D702C,	//0x1080		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
0x03FF0A86,	//0x1082		VoC_lw16i(REG6,0x3ff)
0x08D20931,	//0x1084		VoC_add32_rd(REG23,RL6,0x8d2)
0xE4D9F007,	//0x1086		VoC_and32_rr(REG23,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x1581FFC0,	//0x1088		VoC_sw32_d(REG23,0x8d2)(lo)	|	VoC_NOP
0x2B0008D2,	//0x108a		VoC_jump_lg(FALLOWPACKETS_END)(lo)	|	VoC_sw32_d(REG23,0x8d2)(hi)
0xFFC010E0,	//0x108c		VoC_NAD	|	VoC_jump_lg(FALLOWPACKETS_END)(hi)
		//0x108e		FALLOWPACKETS_NEZ
0x10E03181,	//0x108e		VoC_bez16_r(FALLOWPACKETS_END,REG1)
0x08FD6C06,	//0x1090		VoC_bez16_d(FALLOWSUPERFRAME_FALSE,0x8fd)
0x0711F162,	//0x1092		VoC_add16_rd(REG1,REG2,0x8ea)(lo)	|	VoC_lw16i_short(REG2,0xb,DEFAULT)
0xE5C208EA,	//0x1094		VoC_jump(FALLOWSUPERFRAME_END)	|	VoC_add16_rd(REG1,REG2,0x8ea)(hi)
		//0x1096		FALLOWSUPERFRAME_FALSE
0xFFC0F001,	//0x1096		VoC_NOP	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
		//0x1097		FALLOWSUPERFRAME_END
0x2006E020,	//0x1098		VoC_lw16d_set_inc(REG2,0x8d5,0x1)(lo)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x160008D5,	//0x109a		VoC_and16_ri(REG0,0x7)(lo)	|	VoC_lw16d_set_inc(REG2,0x8d5,0x1)(hi)
0xD8A30007,	//0x109c		VoC_lw16inc_p(REG3,REG2,DEFAULT)	|	VoC_and16_ri(REG0,0x7)(hi)
0xE066D8A7,	//0x109e		VoC_movreg16(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG7,REG2,DEFAULT)
0xF9C6F823,	//0x10a0		VoC_shru16_ri(REG6,0xfffffff8,DEFAULT)	|	VoC_shr16_ri(REG3,0x4,DEFAULT)
0xC1BB5FC3,	//0x10a2		VoC_add16_rr(REG3,REG6,REG7,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xD8A7D8A6,	//0x10a4		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xC1BAF9C6,	//0x10a6		VoC_add16_rr(REG2,REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffff8,DEFAULT)
0x119A0700,	//0x10a8		VoC_add16_rd(REG0,REG0,0x119a)
0x1581E024,	//0x10aa		VoC_sw32_d(REG23,0x8d2)(lo)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0xF91C08D2,	//0x10ac		VoC_shru16_ri(REG4,0x3,DEFAULT)	|	VoC_sw32_d(REG23,0x8d2)(hi)
0x08D50723,	//0x10ae		VoC_add16_rd(REG3,REG4,0x8d5)
0x08DB0B26,	//0x10b0		VoC_sub16_dr(REG6,0x8db,REG4)
0x08D51503,	//0x10b2		VoC_sw16_d(REG3,0x8d5)
0x08DB1506,	//0x10b4		VoC_sw16_d(REG6,0x8db)
0x1402DF83,	//0x10b6		VoC_lw16_d(REG2,0x8da)(lo)	|	VoC_pop16(REG3,DEFAULT)
0x150308DA,	//0x10b8		VoC_sw16_d(REG3,0x8da)(lo)	|	VoC_lw16_d(REG2,0x8da)(hi)
0x6E2008DA,	//0x10ba		VoC_bnez16_d(FSUPPRESSPACKETLOSS_TURE,0x8dd)(lo)	|	VoC_sw16_d(REG3,0x8da)(hi)
0x42D208DD,	//0x10bc		VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)	|	VoC_bnez16_d(FSUPPRESSPACKETLOSS_TURE,0x8dd)(hi)
0x0796E0F7,	//0x10be		VoC_sub16_rd(REG6,REG2,0x1193)(lo)	|	VoC_lw16i_short(REG7,0xf,IN_PARALLEL)
0xC0BF1193,	//0x10c0		VoC_add16_rr(REG7,REG2,REG7,DEFAULT)	|	VoC_sub16_rd(REG6,REG2,0x1193)(hi)
0x10E03186,	//0x10c2		VoC_bez16_r(FALLOWPACKETS_END,REG6)
0x10E03187,	//0x10c4		VoC_bez16_r(FALLOWPACKETS_END,REG7)
0xE0427004,	//0x10c6		VoC_lw16i_short(REG2,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x08D40716,	//0x10c8		VoC_add16_rd(REG6,REG2,0x8d4)
0x08D60B17,	//0x10ca		VoC_sub16_dr(REG7,0x8d6,REG2)
0x08D51506,	//0x10cc		VoC_sw16_d(REG6,0x8d5)
0x08DB1507,	//0x10ce		VoC_sw16_d(REG7,0x8db)
0x08D21481,	//0x10d0		VoC_lw32_d(REG23,0x8d2)
0x00200A86,	//0x10d2		VoC_lw16i(REG6,0x20)
0x1581C38E,	//0x10d4		VoC_sw32_d(REG23,0x8d8)(lo)	|	VoC_sub16_rr(REG6,REG6,REG1,DEFAULT)
0x150608D8,	//0x10d6		VoC_sw16_d(REG6,0x8d7)(lo)	|	VoC_sw32_d(REG23,0x8d8)(hi)
0x2B0008D7,	//0x10d8		VoC_jump_lg(GMDFUNCTION_END)(lo)	|	VoC_sw16_d(REG6,0x8d7)(hi)
0xF0021116,	//0x10da		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_jump_lg(GMDFUNCTION_END)(hi)
		//0x10db		FSUPPRESSPACKETLOSS_TURE
0x1502FFC0,	//0x10dc		VoC_sw16_d(REG2,0x8dd)(lo)	|	VoC_NOP
0xFFC008DD,	//0x10de		VoC_NAD	|	VoC_sw16_d(REG2,0x8dd)(hi)
		//0x10e0		FALLOWPACKETS_END
0x08D71406,	//0x10e0		VoC_lw16_d(REG6,0x8d7)
0x08DB1407,	//0x10e2		VoC_lw16_d(REG7,0x8db)
0x11A107B6,	//0x10e4		VoC_sub16_rd(REG6,REG6,0x11a1)
0x11143147,	//0x10e6		VoC_bngtz16_r(UPDATE_PIBUFLEN,REG7)
0x11143106,	//0x10e8		VoC_bgtz16_r(UPDATE_PIBUFLEN,REG6)
0x08D52005,	//0x10ea		VoC_lw16d_set_inc(REG1,0x8d5,0x1)
0x08D81484,	//0x10ec		VoC_lw32_d(ACC0,0x8d8)
0x119F0784,	//0x10ee		VoC_sub16_rd(REG4,REG0,0x119f)
0x11920B02,	//0x10f0		VoC_sub16_dr(REG2,0x1192,REG0)
0x07BFD893,	//0x10f2		VoC_sub16_rd(REG7,REG7,0x1193)(lo)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x7E531193,	//0x10f4		VoC_shru16_rr(REG3,REG2,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x1193)(hi)
0x7E43FEE4,	//0x10f6		VoC_shru16_rr(REG3,REG0,DEFAULT)	|	VoC_shru32_rr(ACC0,REG4,IN_PARALLEL)
0x606EE00F,	//0x10f8		VoC_movreg16(RL7_LO,REG3,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0x493CE082,	//0x10fa		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,IN_PARALLEL)
0xFFC0C3A6,	//0x10fc		VoC_NAD	|	VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)
		//0x10fe		GMDLOOP_BEGIN
0x110A3147,	//0x10fe		VoC_bngtz16_r(GMDLOOP_END,REG7)
0x110A3106,	//0x1100		VoC_bgtz16_r(GMDLOOP_END,REG6)
0x07BFD893,	//0x1102		VoC_sub16_rd(REG7,REG7,0x1193)(lo)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x7DC41193,	//0x1104		VoC_shru32_ri(ACC0,0xfffffff8,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x1193)(hi)
0xC196F66E,	//0x1106		VoC_add16_rr(REG6,REG6,REG2,DEFAULT)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0xE5F5C93C,	//0x1108		VoC_jump(GMDLOOP_BEGIN)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
		//0x110a		GMDLOOP_END
0x08D51501,	//0x110a		VoC_sw16_d(REG1,0x8d5)
0x11A10736,	//0x110c		VoC_add16_rd(REG6,REG6,0x11a1)
0x08DB1507,	//0x110e		VoC_sw16_d(REG7,0x8db)
0x08D71506,	//0x1110		VoC_sw16_d(REG6,0x8d7)
0x08D81584,	//0x1112		VoC_sw32_d(ACC0,0x8d8)
		//0x1114		UPDATE_PIBUFLEN
0x08DB1404,	//0x1114		VoC_lw16_d(REG4,0x8db)
		//0x1116		GMDFUNCTION_END
0xDFE9E580,	//0x1116		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1117		CII_ibstrmLookForBits_VOC
0x08DB27BD,	//0x1118		VoC_lw16d_set_inc(REG1,0x8db,0xffffffff)
0x119A080A,	//0x111a		VoC_mult16_rd(REG2,REG1,0x119a)
0x0712F007,	//0x111c		VoC_add16_rd(REG2,REG2,0x8d7)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x140308D7,	//0x111e		VoC_lw16_d(REG3,0x8d7)(lo)	|	VoC_add16_rd(REG2,REG2,0x8d7)(hi)
0x348208D7,	//0x1120		VoC_bngt16_rr(DWNUMBITS_END,REG0,REG2)(lo)	|	VoC_lw16_d(REG3,0x8d7)(hi)
0xFF441142,	//0x1122		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bngt16_rr(DWNUMBITS_END,REG0,REG2)(hi)
0x08D81487,	//0x1124		VoC_lw32_d(RL7,0x8d8)
0x08D52006,	//0x1126		VoC_lw16d_set_inc(REG2,0x8d5,0x1)
		//0x1128		LFBLOOP_BEGIN
0x11A138A3,	//0x1128		VoC_bgt16_rd(LFBLOOP_END,REG3,0x11a1)
0x11343141,	//0x112a		VoC_bngtz16_r(LFBLOOP_END,REG1)
0xFDC758A8,	//0x112c		VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG2,DEFAULT)
0x119A071B,	//0x112e		VoC_add16_rd(REG3,REG3,0x119a)
0xDE08E527,	//0x1130		VoC_inc_p(REG1,DEFAULT)	|	VoC_or32_rr(RL7,ACC0,DEFAULT)
0xFFC065F6,	//0x1132		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LFBLOOP_BEGIN)
		//0x1134		LFBLOOP_END
0x08D81587,	//0x1134		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x1136		VoC_sw16_d(REG2,0x8d5)
0x08D71503,	//0x1138		VoC_sw16_d(REG3,0x8d7)
0x08DB1501,	//0x113a		VoC_sw16_d(REG1,0x8db)
0xFFC05FC0,	//0x113c		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x10542B80,	//0x113e		VoC_jal(CII_ibstrmGetMoreData_VOC)
0xF6A75F80,	//0x1140		VoC_movreg16(REG7,REG5,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
		//0x1142		DWNUMBITS_END
0x08DB1401,	//0x1142		VoC_lw16_d(REG1,0x8db)
0x1403F9E9,	//0x1144		VoC_lw16_d(REG3,0x8d7)(lo)	|	VoC_shru16_ri(REG1,0xfffffffd,DEFAULT)
0x070A08D7,	//0x1146		VoC_add16_rd(REG2,REG1,0x8d7)(lo)	|	VoC_lw16_d(REG3,0x8d7)(hi)
0x348208D7,	//0x1148		VoC_bngt16_rr(LFBFUNCTION_END,REG0,REG2)(lo)	|	VoC_add16_rd(REG2,REG1,0x8d7)(hi)
0x0AC7114D,	//0x114a		VoC_lw16i(REG7,0x8004)(lo)	|	VoC_bngt16_rr(LFBFUNCTION_END,REG0,REG2)(hi)
0xDFA90004,	//0x114c		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i(REG7,0x8004)(hi)
		//0x114d		LFBFUNCTION_END
0xE580FFC0,	//0x114e		VoC_return	|	VoC_NOP
		//0x1150		CII_ibstrmPeekBits_VOC
0xE0075FE9,	//0x1150		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0147300,	//0x1152		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x18,DEFAULT)
0x1401F105,	//0x1154		VoC_lw16_d(REG1,0x8db)(lo)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x140308DB,	//0x1156		VoC_lw16_d(REG3,0x8d7)(lo)	|	VoC_lw16_d(REG1,0x8db)(hi)
0x148708D7,	//0x1158		VoC_lw32_d(RL7,0x8d8)(lo)	|	VoC_lw16_d(REG3,0x8d7)(hi)
0xFF4408D8,	//0x115a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_d(RL7,0x8d8)(hi)
0x08D52006,	//0x115c		VoC_lw16d_set_inc(REG2,0x8d5,0x1)
		//0x115e		PBLOOP_BEGIN
0x11683418,	//0x115e		VoC_bgt16_rr(PBLOOP_END,REG3,REG0)
0x11683141,	//0x1160		VoC_bngtz16_r(PBLOOP_END,REG1)
0x7DC7D8A8,	//0x1162		VoC_shru32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG2,DEFAULT)
0x6527C0EB,	//0x1164		VoC_or32_rr(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0xE5F7C261,	//0x1166		VoC_jump(PBLOOP_BEGIN)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
		//0x1168		PBLOOP_END
0x08D81587,	//0x1168		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x116a		VoC_sw16_d(REG2,0x8d5)
0x08D71503,	//0x116c		VoC_sw16_d(REG3,0x8d7)
0x08DB1501,	//0x116e		VoC_sw16_d(REG1,0x8db)
0x08D74838,	//0x1170		VoC_blt16_rd(PBGETMOREDATE_END,REG0,0x8d7)
0x08DB6805,	//0x1172		VoC_bgtz16_d(PBGETMOREDATE_END,0x8db)
0x10542B80,	//0x1174		VoC_jal(CII_ibstrmGetMoreData_VOC)
0xF2E0E0A7,	//0x1176		VoC_lw16i_short(REG0,0x17,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x1177		PBGETMOREDATE_END
0x08D73C90,	//0x1178		VoC_bngt16_rd(MDWBITSLEFT_NLT_DWNUMBITS,REG0,0x8d7)
0x08FD6C06,	//0x117a		VoC_bez16_d(ALLOWSUPERFRAME_FALSE,0x8fd)
0x00040AC7,	//0x117c		VoC_lw16i(REG7,0x8004)
0xFFC065CC,	//0x117e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(PBFUNCTION_END)
		//0x1180		ALLOWSUPERFRAME_FALSE
0x08D71400,	//0x1180		VoC_lw16_d(REG0,0x8d7)
		//0x1182		MDWBITSLEFT_NLT_DWNUMBITS
0x08D70B01,	//0x1182		VoC_sub16_dr(REG1,0x8d7,REG0)
0x08D81487,	//0x1184		VoC_lw32_d(RL7,0x8d8)
0x11A30782,	//0x1186		VoC_sub16_rd(REG2,REG0,0x11a3)
0xFED7FECF,	//0x1188		VoC_shru32_rr(RL7,REG2,DEFAULT)	|	VoC_shru32_rr(RL7,REG1,DEFAULT)
		//0x118a		PBFUNCTION_END
0xFFC0DFA9,	//0x118a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF160E580,	//0x118c		VoC_lw16i_short(REG0,0xb,DEFAULT)	|	VoC_return
		//0x118d		CII_ibstrmResetPacket_VOC
0x08FD6C05,	//0x118e		VoC_bez16_d(RPFALLOWSUPERFRAME_FALSE,0x8fd)
0x08EA0700,	//0x1190		VoC_add16_rd(REG0,REG0,0x8ea)
0xF000E5C2,	//0x1192		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jump(RPFALLOWSUPERFRAME_END)
		//0x1193		RPFALLOWSUPERFRAME_FALSE
		//0x1194		RPFALLOWSUPERFRAME_END
0x08D41401,	//0x1194		VoC_lw16_d(REG1,0x8d4)
0xF918E003,	//0x1196		VoC_shru16_ri(REG0,0x3,DEFAULT)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x00071603,	//0x1198		VoC_and16_ri(REG3,0x7)
0x08D60B04,	//0x119a		VoC_sub16_dr(REG4,0x8d6,REG0)
0x119A071B,	//0x119c		VoC_add16_rd(REG3,REG3,0x119a)
0x0B18C041,	//0x119e		VoC_sub16_dr(REG0,0x1192,REG3)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0x07A41192,	//0x11a0		VoC_sub16_rd(REG4,REG4,0x1193)(lo)	|	VoC_sub16_dr(REG0,0x1192,REG3)(hi)
0xD8121193,	//0x11a2		VoC_lw16_p(REG2,REG1,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x1193)(hi)
0x11930709,	//0x11a4		VoC_add16_rd(REG1,REG1,0x1193)
0x1504FE42,	//0x11a6		VoC_sw16_d(REG4,0x8db)(lo)	|	VoC_shru16_rr(REG2,REG0,DEFAULT)
0xFE5A08DB,	//0x11a8		VoC_shru16_rr(REG2,REG3,DEFAULT)	|	VoC_sw16_d(REG4,0x8db)(hi)
0x08D51501,	//0x11aa		VoC_sw16_d(REG1,0x8d5)
0x119F0B1C,	//0x11ac		VoC_sub16_dr(REG4,0x119f,REG3)
0x1504F003,	//0x11ae		VoC_sw16_d(REG4,0x8d7)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x158108D7,	//0x11b0		VoC_sw32_d(REG23,0x8d8)(lo)	|	VoC_sw16_d(REG4,0x8d7)(hi)
0xE58008D8,	//0x11b2		VoC_return	|	VoC_sw32_d(REG23,0x8d8)(hi)
		//0x11b4		CII_ibstrmReset_VOC
0xE0007F46,	//0x11b4		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x1586F022,	//0x11b6		VoC_sw32_d(RL6,0x8d8)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x150008D8,	//0x11b8		VoC_sw16_d(REG0,0x8d7)(lo)	|	VoC_sw32_d(RL6,0x8d8)(hi)
0x150008D7,	//0x11ba		VoC_sw16_d(REG0,0x8db)(lo)	|	VoC_sw16_d(REG0,0x8d7)(hi)
0x150208DB,	//0x11bc		VoC_sw16_d(REG2,0x8dd)(lo)	|	VoC_sw16_d(REG0,0x8db)(hi)
0xE58008DD,	//0x11be		VoC_return	|	VoC_sw16_d(REG2,0x8dd)(hi)
		//0x11c0		CII_prvFinalLoad_VOC
0xE0075FE9,	//0x11c0		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0835FC6,	//0x11c2		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xE0005F47,	//0x11c4		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0xE0057F47,	//0x11c6		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0x08DB1401,	//0x11c8		VoC_lw16_d(REG1,0x8db)
0x08D52006,	//0x11ca		VoC_lw16d_set_inc(REG2,0x8d5,0x1)
0xFFC07026,	//0x11cc		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x11ce		FLLOOP_BEGIN_1
0x11D63141,	//0x11ce		VoC_bngtz16_r(FLLOOP_END_1,REG1)
0x58A4FDC7,	//0x11d0		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff8,DEFAULT)
0x6517C271,	//0x11d2		VoC_or32_rr(RL7,REG45,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG6,IN_PARALLEL)
0xE5F9C018,	//0x11d4		VoC_jump(FLLOOP_BEGIN_1)	|	VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)
		//0x11d6		FLLOOP_END_1
0x08DB1501,	//0x11d6		VoC_sw16_d(REG1,0x8db)
0x08D81587,	//0x11d8		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x11da		VoC_sw16_d(REG2,0x8d5)
0x08D71500,	//0x11dc		VoC_sw16_d(REG0,0x8d7)
0x10542B80,	//0x11de		VoC_jal(CII_ibstrmGetMoreData_VOC)
0xDF86E0A7,	//0x11e0		VoC_pop16(REG6,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
0x12003184,	//0x11e2		VoC_bez16_r(IBUFLEN_EZ,REG4)
0x08D81487,	//0x11e4		VoC_lw32_d(RL7,0x8d8)
0x08D71400,	//0x11e6		VoC_lw16_d(REG0,0x8d7)
0x08DB1401,	//0x11e8		VoC_lw16_d(REG1,0x8db)
0x08D52006,	//0x11ea		VoC_lw16d_set_inc(REG2,0x8d5,0x1)
0xE0837F46,	//0x11ec		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xFFC07024,	//0x11ee		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
		//0x11f0		FLLOOP_BEGIN_2
0x11F834B0,	//0x11f0		VoC_bngt16_rr(FLLOOP_END_2,REG6,REG0)
0x58ACFDC7,	//0x11f2		VoC_lw16inc_p(RL6_LO,REG2,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff8,DEFAULT)
0x6537C261,	//0x11f4		VoC_or32_rr(RL7,RL6,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xE5F9C018,	//0x11f6		VoC_jump(FLLOOP_BEGIN_2)	|	VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)
		//0x11f8		FLLOOP_END_2
0x08DB1501,	//0x11f8		VoC_sw16_d(REG1,0x8db)
0x08D81587,	//0x11fa		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x11fc		VoC_sw16_d(REG2,0x8d5)
0x08D71500,	//0x11fe		VoC_sw16_d(REG0,0x8d7)
		//0x1200		IBUFLEN_EZ
0xE0C5DF07,	//0x1200		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0x11920B36,	//0x1202		VoC_sub16_dr(REG6,0x1192,REG6)
0x60000A81,	//0x1204		VoC_lw16i(REG1,0x6000)
0xF9FD7EF7,	//0x1206		VoC_shru16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_shru32_rr(RL7,REG6,DEFAULT)
0x08D81486,	//0x1208		VoC_lw32_d(RL6,0x8d8)
0x0730C069,	//0x120a		VoC_add16_rd(REG0,REG6,0x8d7)(lo)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x598908D7,	//0x120c		VoC_lw32_p(REG23,REG1,DEFAULT)	|	VoC_add16_rd(REG0,REG6,0x8d7)(hi)
0x0734FEC6,	//0x120e		VoC_add16_rd(REG4,REG6,0x8d7)(lo)	|	VoC_shru32_rr(RL6,REG0,IN_PARALLEL)
0xE4CE08D7,	//0x1210		VoC_and32_rr(RL6,REG23,DEFAULT)	|	VoC_add16_rd(REG4,REG6,0x8d7)(hi)
0x08D71504,	//0x1212		VoC_sw16_d(REG4,0x8d7)
0xDFA9E537,	//0x1214		VoC_pop16(RA,DEFAULT)	|	VoC_or32_rr(RL7,RL6,DEFAULT)
0xE580FFC0,	//0x1216		VoC_return	|	VoC_NOP
		//0x1218		CII_WMARawDecCBGetData_VOC
0x6E25DFE9,	//0x1218		VoC_bnez16_d(BLOCKLEFT_PAYLOADLEFT_EQZ_END,0x805)(lo)	|	VoC_push16(RA,DEFAULT)
0x6E230805,	//0x121a		VoC_bnez16_d(BLOCKLEFT_PAYLOADLEFT_EQZ_END,0x804)(lo)	|	VoC_bnez16_d(BLOCKLEFT_PAYLOADLEFT_EQZ_END,0x805)(hi)
0xF1010804,	//0x121c		VoC_lw16i_short(REG1,0x8,DEFAULT)	|	VoC_bnez16_d(BLOCKLEFT_PAYLOADLEFT_EQZ_END,0x804)(hi)
0x08061400,	//0x121e		VoC_lw16_d(REG0,0x806)
0x08061501,	//0x1220		VoC_sw16_d(REG1,0x806)
0xFFC05FC0,	//0x1222		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x15FD2B80,	//0x1224		VoC_jal(CII_WMAF_UpdateNewPayload_VOC)
0xE12260E1,	//0x1226		VoC_lw16i_short(REG2,0x12,IN_PARALLEL)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0x358ADF80,	//0x1228		VoC_bne16_rr(RC_EQ_NOMOREDATATHISTIME_END,REG1,REG2)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x70011230,	//0x122a		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_bne16_rr(RC_EQ_NOMOREDATATHISTIME_END,REG1,REG2)(hi)
0x2B00E005,	//0x122c		VoC_jump_lg(FUNCTION_END)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xFFC01278,	//0x122e		VoC_NAD	|	VoC_jump_lg(FUNCTION_END)(hi)
		//0x1230		RC_EQ_NOMOREDATATHISTIME_END
0x08061500,	//0x1230		VoC_sw16_d(REG0,0x806)
0x089E6C06,	//0x1232		VoC_bez16_d(COMPRESSEDPAYLOAD_EQ1_END,0x89e)
0xE0057001,	//0x1234		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x12782B00,	//0x1236		VoC_jump_lg(FUNCTION_END)
		//0x1238		COMPRESSEDPAYLOAD_EQ1_END
0x123E3181,	//0x1238		VoC_bez16_r(BLOCKLEFT_PAYLOADLEFT_EQZ_END,REG1)
0xE0357001,	//0x123a		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x12782B00,	//0x123c		VoC_jump_lg(FUNCTION_END)
		//0x123e		BLOCKLEFT_PAYLOADLEFT_EQZ_END
0x08056E16,	//0x123e		VoC_bnez16_d(BLOCKLEFT_EQZ_END,0x805)
0x08046E06,	//0x1240		VoC_bnez16_d(PAYLOADLEFT_EQZ_END,0x804)
0xE0357001,	//0x1242		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x12782B00,	//0x1244		VoC_jump_lg(FUNCTION_END)
		//0x1246		PAYLOADLEFT_EQZ_END
0x08041400,	//0x1246		VoC_lw16_d(REG0,0x804)
0x0781F022,	//0x1248		VoC_sub16_rd(REG1,REG0,0x89a)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x1403089A,	//0x124a		VoC_lw16_d(REG3,0x89a)(lo)	|	VoC_sub16_rd(REG1,REG0,0x89a)(hi)
0x1501089A,	//0x124c		VoC_sw16_d(REG1,0x804)(lo)	|	VoC_lw16_d(REG3,0x89a)(hi)
0x15020804,	//0x124e		VoC_sw16_d(REG2,0x807)(lo)	|	VoC_sw16_d(REG1,0x804)(hi)
0x15030807,	//0x1250		VoC_sw16_d(REG3,0x805)(lo)	|	VoC_sw16_d(REG2,0x807)(hi)
0xFFC00805,	//0x1252		VoC_NAD	|	VoC_sw16_d(REG3,0x805)(hi)
		//0x1254		BLOCKLEFT_EQZ_END
0x00800A81,	//0x1254		VoC_lw16i(REG1,0x80)
0x08053C21,	//0x1256		VoC_bngt16_rd(GET_NUM_BYTES_END,REG1,0x805)
0x08051401,	//0x1258		VoC_lw16_d(REG1,0x805)
		//0x125a		GET_NUM_BYTES_END
0x08081486,	//0x125a		VoC_lw32_d(RL6,0x808)
0x127C2B80,	//0x125c		VoC_jal(CII_WMAStrmCBGetData_RawDec_VOC)
0x1400FF07,	//0x125e		VoC_lw16_d(REG0,0x88a)(lo)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xFC87088A,	//0x1260		VoC_shru32_ri(RL7,0x10,DEFAULT)	|	VoC_lw16_d(REG0,0x88a)(hi)
0x08050B0B,	//0x1262		VoC_sub16_dr(REG3,0x805,REG1)
0x0808093E,	//0x1264		VoC_add32_rd(RL6,RL7,0x808)
0x08051503,	//0x1266		VoC_sw16_d(REG3,0x805)
0x08081586,	//0x1268		VoC_sw32_d(RL6,0x808)
0x08071402,	//0x126a		VoC_lw16_d(REG2,0x807)
0x12703180,	//0x126c		VoC_bez16_r(HAS_NO_DRM,REG0)
0xE5C9F065,	//0x126e		VoC_jump(FUNCTION_END)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
		//0x1270		HAS_NO_DRM
0x12773182,	//0x1270		VoC_bez16_r(NOT_BLOCK_START,REG2)
0xF065F000,	//0x1272		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x08071500,	//0x1274		VoC_sw16_d(REG0,0x807)
0xF005E5C2,	//0x1276		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_jump(FUNCTION_END)
		//0x1277		NOT_BLOCK_START
		//0x1278		FUNCTION_END
0xFFC0DFA9,	//0x1278		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x127a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x127c		CII_WMAStrmCBGetData_RawDec_VOC
0x080009B1,	//0x127c		VoC_sub32_rd(REG23,RL6,0x800)
0x08020B15,	//0x127e		VoC_sub16_dr(REG5,0x802,REG2)
0x1287348D,	//0x1280		VoC_bngt16_rr(WMAUPDATE_STRM_END,REG1,REG5)
0x2B80DFE9,	//0x1282		VoC_jal(CII_WMAFileCBGetData_VOC)(lo)	|	VoC_push16(RA,DEFAULT)
0xFFC016E4,	//0x1284		VoC_NOP	|	VoC_jal(CII_WMAFileCBGetData_VOC)(hi)
0xE040DFA9,	//0x1286		VoC_movreg16(REG0,REG2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
		//0x1287		WMAUPDATE_STRM_END
0x00000A84,	//0x1288		VoC_lw16i(REG4,0x0)
0xE0057808,	//0x128a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x1602C020,	//0x128c		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xF0300001,	//0x128e		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_and16_ri(REG2,0x1)(hi)
0xF0077027,	//0x1290		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x0A83D886,	//0x1292		VoC_lw16i(REG3,0x80a)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x31C2080A,	//0x1294		VoC_bnez16_r(CBGREAD_BYTE_2,REG2)(lo)	|	VoC_lw16i(REG3,0x80a)(hi)
0xE0C4129E,	//0x1296		VoC_movreg16(REG4,REG6,DEFAULT)	|	VoC_bnez16_r(CBGREAD_BYTE_2,REG2)(hi)
		//0x1297		CBGREAD_BYTE_1
0x12A5348D,	//0x1298		VoC_bngt16_rr(CBGGET_BYTES_END,REG1,REG5)
0x00FF1604,	//0x129a		VoC_and16_ri(REG4,0xff)
0xDCB4C17D,	//0x129c		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
		//0x129e		CBGREAD_BYTE_2
0x348DF946,	//0x129e		VoC_bngt16_rr(CBGGET_BYTES_END,REG1,REG5)(lo)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0xDCB612A5,	//0x12a0		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_bngt16_rr(CBGGET_BYTES_END,REG1,REG5)(hi)
0xD886C17D,	//0x12a2		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xE580E5F3,	//0x12a4		VoC_return	|	VoC_jump(CBGREAD_BYTE_1)
		//0x12a5		CBGGET_BYTES_END
		//0x12a6		CII_WMAStrmCBGetData_PHdrParse_VOC
0x09B1DFE9,	//0x12a6		VoC_sub32_rd(REG23,RL6,0x800)(lo)	|	VoC_push16(RA,DEFAULT)
0x0B150800,	//0x12a8		VoC_sub16_dr(REG5,0x802,REG2)(lo)	|	VoC_sub32_rd(REG23,RL6,0x800)(hi)
0x348D0802,	//0x12aa		VoC_bngt16_rr(CBDUPDATE_STRM_END,REG1,REG5)(lo)	|	VoC_sub16_dr(REG5,0x802,REG2)(hi)
0x2B8012AF,	//0x12ac		VoC_jal(CII_WMAFileCBGetData_VOC)(lo)	|	VoC_bngt16_rr(CBDUPDATE_STRM_END,REG1,REG5)(hi)
0xE04016E4,	//0x12ae		VoC_movreg16(REG0,REG2,DEFAULT)	|	VoC_jal(CII_WMAFileCBGetData_VOC)(hi)
		//0x12af		CBDUPDATE_STRM_END
0x00000A84,	//0x12b0		VoC_lw16i(REG4,0x0)
0xE0057808,	//0x12b2		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x7030C020,	//0x12b4		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x1602E017,	//0x12b6		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xD8860001,	//0x12b8		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_and16_ri(REG2,0x1)(hi)
0x0C2E1807,	//0x12ba		VoC_lw16i_set_inc(REG3,0xc2e,0x1)
0x12C531C2,	//0x12bc		VoC_bnez16_r(READ_BYTE_2,REG2)
		//0x12be		READ_BYTE_1
0x348DE0C4,	//0x12be		VoC_bngt16_rr(GET_BYTES_END,REG1,REG5)(lo)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x160412CC,	//0x12c0		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_bngt16_rr(GET_BYTES_END,REG1,REG5)(hi)
0xC17D00FF,	//0x12c2		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xF946DCB4,	//0x12c4		VoC_shru16_ri(REG6,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x12c5		READ_BYTE_2
0x12CC348D,	//0x12c6		VoC_bngt16_rr(GET_BYTES_END,REG1,REG5)
0xC17DDCB6,	//0x12c8		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xE5F3D886,	//0x12ca		VoC_jump(READ_BYTE_1)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x12cc		GET_BYTES_END
0xFFC0DFA9,	//0x12cc		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x12ce		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x12d0		CII_WMA_ParsePacketHeader_VOC
0xE0115FE9,	//0x12d0		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x08921486,	//0x12d2		VoC_lw32_d(RL6,0x892)
0x12A62B80,	//0x12d4		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x11934029,	//0x12d6		VoC_be16_rd(LOAD_1BYTES_OK,REG1,0x1193)
0x2B00F067,	//0x12d8		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFF4614CC,	//0x12da		VoC_lw32z(RL6,DEFAULT)	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x12db		LOAD_1BYTES_OK
0x0C2E1401,	//0x12dc		VoC_lw16_d(REG1,0xc2e)
0x08B41586,	//0x12de		VoC_sw32_d(RL6,0x8b4)
0xF9396020,	//0x12e0		VoC_shru16_ri(REG1,0x7,IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x08B0150C,	//0x12e2		VoC_sw16_d(RL6_LO,0x8b0)
0x08B11501,	//0x12e4		VoC_sw16_d(REG1,0x8b1)
0x08B2150C,	//0x12e6		VoC_sw16_d(RL6_LO,0x8b2)
0x08B16C2C,	//0x12e8		VoC_bez16_d(FECCPRESENT_FALSE,0x8b1)
0xE002E001,	//0x12ea		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x119F2801,	//0x12ec		VoC_and16_rd(REG1,0x119f)
0x11A72802,	//0x12ee		VoC_and16_rd(REG2,0x11a7)
0x12F83181,	//0x12f0		VoC_bez16_r(FALSE_1,REG1)
0xF007F023,	//0x12f2		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x08B01503,	//0x12f4		VoC_sw16_d(REG3,0x8b0)
0x14CC2B00,	//0x12f6		VoC_jump_lg(PPHFUNCTION_END)
		//0x12f8		FALSE_1
0x12FE3182,	//0x12f8		VoC_bez16_r(FALSE_2,REG2)
0x2B00F027,	//0x12fa		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC014CC,	//0x12fc		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x12fe		FALSE_2
0x119E2800,	//0x12fe		VoC_and16_rd(REG0,0x119e)
0x1500F003,	//0x1300		VoC_sw16_d(REG0,0x8b2)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x070208B2,	//0x1302		VoC_add16_rd(REG2,REG0,0x1193)(lo)	|	VoC_sw16_d(REG0,0x8b2)(hi)
0x40281193,	//0x1304		VoC_be16_rd(BECLEN_NE_2,REG0,0x1194)(lo)	|	VoC_add16_rd(REG2,REG0,0x1193)(hi)
0xF0271194,	//0x1306		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_be16_rd(BECLEN_NE_2,REG0,0x1194)(hi)
0x14CC2B00,	//0x1308		VoC_jump_lg(PPHFUNCTION_END)
		//0x130a		BECLEN_NE_2
0x08B41581,	//0x130a		VoC_sw32_d(REG23,0x8b4)
0x090EF021,	//0x130c		VoC_add32_rd(RL6,REG23,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xFFC00892,	//0x130e		VoC_NAD	|	VoC_add32_rd(RL6,REG23,0x892)(hi)
0x12A62B80,	//0x1310		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2E1400,	//0x1312		VoC_lw16_d(REG0,0xc2e)
		//0x1314		FECCPRESENT_FALSE
0x08B41486,	//0x1314		VoC_lw32_d(RL6,0x8b4)
0xE002E001,	//0x1316		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x11A72801,	//0x1318		VoC_and16_rd(REG1,0x11a7)
0x08B61586,	//0x131a		VoC_sw32_d(RL6,0x8b6)
0x2802F929,	//0x131c		VoC_and16_rd(REG2,0x11a1)(lo)	|	VoC_shru16_ri(REG1,0x5,DEFAULT)
0x150111A1,	//0x131e		VoC_sw16_d(REG1,0x8b3)(lo)	|	VoC_and16_rd(REG2,0x11a1)(hi)
0xF91A08B3,	//0x1320		VoC_shru16_ri(REG2,0x3,DEFAULT)	|	VoC_sw16_d(REG1,0x8b3)(hi)
0x132A3181,	//0x1322		VoC_bez16_r(BPACKETLENTYPE_NEZ,REG1)
0x11944031,	//0x1324		VoC_be16_rd(BPACKETLENTYPE_NEZ,REG1,0x1194)
0x2B00F027,	//0x1326		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC014CC,	//0x1328		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x132a		BPACKETLENTYPE_NEZ
0x08B81502,	//0x132a		VoC_sw16_d(REG2,0x8b8)
0x11954432,	//0x132c		VoC_bne16_rd(BPADLENTYPE_NE3,REG2,0x1195)
0x2B00F027,	//0x132e		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC014CC,	//0x1330		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x1332		BPADLENTYPE_NE3
0x11AE0936,	//0x1332		VoC_add32_rd(RL6,RL6,0x11ae)
0x1586E001,	//0x1334		VoC_sw32_d(RL6,0x8b4)(lo)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x280008B4,	//0x1336		VoC_and16_rd(REG0,0x1198)(lo)	|	VoC_sw32_d(RL6,0x8b4)(hi)
0x28011198,	//0x1338		VoC_and16_rd(REG1,0x1193)(lo)	|	VoC_and16_rd(REG0,0x1198)(hi)
0xF9081193,	//0x133a		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_rd(REG1,0x1193)(hi)
0x08BA1501,	//0x133c		VoC_sw16_d(REG1,0x8ba)
0x08B91500,	//0x133e		VoC_sw16_d(REG0,0x8b9)
0x0936F021,	//0x1340		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xFFC00892,	//0x1342		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x1344		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2E1400,	//0x1346		VoC_lw16_d(REG0,0xc2e)
0xF063F082,	//0x1348		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x08BB1502,	//0x134a		VoC_sw16_d(REG2,0x8bb)
0x08BC1503,	//0x134c		VoC_sw16_d(REG3,0x8bc)
0x11A64420,	//0x134e		VoC_bne16_rd(BE_0X5D_not,REG0,0x11a6)
0x137A2B00,	//0x1350		VoC_jump_lg(BE_0X5D)
		//0x1352		BE_0X5D_not
0xF6026001,	//0x1352		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x2801E003,	//0x1354		VoC_and16_rd(REG1,0x11a9)(lo)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x280211A9,	//0x1356		VoC_and16_rd(REG2,0x11a4)(lo)	|	VoC_and16_rd(REG1,0x11a9)(hi)
0x280311A4,	//0x1358		VoC_and16_rd(REG3,0x119d)(lo)	|	VoC_and16_rd(REG2,0x11a4)(hi)
0x4029119D,	//0x135a		VoC_be16_rd(BE_0X40,REG1,0x11a5)(lo)	|	VoC_and16_rd(REG3,0x119d)(hi)
0xF02711A5,	//0x135c		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_be16_rd(BE_0X40,REG1,0x11a5)(hi)
0x14CC2B00,	//0x135e		VoC_jump_lg(PPHFUNCTION_END)
		//0x1360		BE_0X40
0x119F402A,	//0x1360		VoC_be16_rd(BE_0X10,REG2,0x119f)
0x2B00F027,	//0x1362		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xF91314CC,	//0x1364		VoC_shru16_ri(REG3,0x2,DEFAULT)	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x1365		BE_0X10
0x11952800,	//0x1366		VoC_and16_rd(REG0,0x1195)
0x08BC1503,	//0x1368		VoC_sw16_d(REG3,0x8bc)
0x137031C3,	//0x136a		VoC_bnez16_r(BOFFSETLENTYPE_NEZ,REG3)
0x2B00F027,	//0x136c		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC014CC,	//0x136e		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x1370		BOFFSETLENTYPE_NEZ
0x11954C23,	//0x1370		VoC_bnlt16_rd(BOFFSETLENTYPE_NLT_3,REG3,0x1195)
0x08BB1503,	//0x1372		VoC_sw16_d(REG3,0x8bb)
		//0x1374		BOFFSETLENTYPE_NLT_3
0x11934030,	//0x1374		VoC_be16_rd(BE_0X5D,REG0,0x1193)
0x2B00F027,	//0x1376		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC014CC,	//0x1378		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x137a		BE_0X5D
0x08B41486,	//0x137a		VoC_lw32_d(RL6,0x8b4)
0x0936F021,	//0x137c		VoC_add32_rd(RL6,RL6,0x11ae)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x140611AE,	//0x137e		VoC_lw16_d(REG6,0x8b3)(lo)	|	VoC_add32_rd(RL6,RL6,0x11ae)(hi)
0x158608B3,	//0x1380		VoC_sw32_d(RL6,0x8be)(lo)	|	VoC_lw16_d(REG6,0x8b3)(hi)
0x158608BE,	//0x1382		VoC_sw32_d(RL6,0x8b4)(lo)	|	VoC_sw32_d(RL6,0x8be)(hi)
0x452E08B4,	//0x1384		VoC_bne16_rd(BPACKETLENTYPE_NE_OX01,REG6,0x1193)(lo)	|	VoC_sw32_d(RL6,0x8b4)(hi)
0x09361193,	//0x1386		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_bne16_rd(BPACKETLENTYPE_NE_OX01,REG6,0x1193)(hi)
0xFFC00892,	//0x1388		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x138a		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2E1400,	//0x138c		VoC_lw16_d(REG0,0xc2e)
0x08B41486,	//0x138e		VoC_lw32_d(RL6,0x8b4)
0x0936F001,	//0x1390		VoC_add32_rd(RL6,RL6,0x11ae)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x158011AE,	//0x1392		VoC_sw32_d(REG01,0x8c0)(lo)	|	VoC_add32_rd(RL6,RL6,0x11ae)(hi)
0x158608C0,	//0x1394		VoC_sw32_d(RL6,0x8b4)(lo)	|	VoC_sw32_d(REG01,0x8c0)(hi)
0x2B0008B4,	//0x1396		VoC_jump_lg(CASE_BPACKETLENTYPE_END)(lo)	|	VoC_sw32_d(RL6,0x8b4)(hi)
0xFFC013CC,	//0x1398		VoC_NAD	|	VoC_jump_lg(CASE_BPACKETLENTYPE_END)(hi)
		//0x139a		BPACKETLENTYPE_NE_OX01
0x11944586,	//0x139a		VoC_bne16_rd(BPACKETLENTYPE_NE_OX02,REG6,0x1194)
0x0936F041,	//0x139c		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC00892,	//0x139e		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x13a0		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1400,	//0x13a2		VoC_lw16_d(REG0,0xc2f)
0xE0227001,	//0x13a4		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xE00379C0,	//0x13a6		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C2E2880,	//0x13a8		VoC_or16_rd(REG0,0xc2e)
0x08B40909,	//0x13aa		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C01580,	//0x13ac		VoC_sw32_d(REG01,0x8c0)
0x08B41581,	//0x13ae		VoC_sw32_d(REG23,0x8b4)
0xFFC065DC,	//0x13b0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CASE_BPACKETLENTYPE_END)
		//0x13b2		BPACKETLENTYPE_NE_OX02
0x11954596,	//0x13b2		VoC_bne16_rd(CASE_BPACKETLENTYPE_END,REG6,0x1195)
0x0936F081,	//0x13b4		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xFFC00892,	//0x13b6		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x13b8		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1400,	//0x13ba		VoC_lw16_d(REG0,0xc2f)
0x0C311401,	//0x13bc		VoC_lw16_d(REG1,0xc31)
0xF9C07082,	//0x13be		VoC_shru16_ri(REG0,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xE00379C1,	//0x13c0		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0xfffffff8,DEFAULT)
0x0C2E2880,	//0x13c2		VoC_or16_rd(REG0,0xc2e)
0x0C302881,	//0x13c4		VoC_or16_rd(REG1,0xc30)
0x08B40909,	//0x13c6		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C01580,	//0x13c8		VoC_sw32_d(REG01,0x8c0)
0x08B41581,	//0x13ca		VoC_sw32_d(REG23,0x8b4)
		//0x13cc		CASE_BPACKETLENTYPE_END
0x08B41486,	//0x13cc		VoC_lw32_d(RL6,0x8b4)
0x08B91406,	//0x13ce		VoC_lw16_d(REG6,0x8b9)
0x08C21586,	//0x13d0		VoC_sw32_d(RL6,0x8c2)
0x11934526,	//0x13d2		VoC_bne16_rd(BSEQUENCELENTYPE_NE_0X01,REG6,0x1193)
0x0936F021,	//0x13d4		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x2B800892,	//0x13d6		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(lo)	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0xF00112A6,	//0x13d8		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(hi)
0x08B41486,	//0x13da		VoC_lw32_d(RL6,0x8b4)
0x0C2E1400,	//0x13dc		VoC_lw16_d(REG0,0xc2e)
0x11AE0936,	//0x13de		VoC_add32_rd(RL6,RL6,0x11ae)
0x08C41580,	//0x13e0		VoC_sw32_d(REG01,0x8c4)
0x08B41586,	//0x13e2		VoC_sw32_d(RL6,0x8b4)
0x14182B00,	//0x13e4		VoC_jump_lg(CASE_BSEQUENCELENTYPE_END)
		//0x13e6		BSEQUENCELENTYPE_NE_0X01
0x11944586,	//0x13e6		VoC_bne16_rd(BSEQUENCELENTYPE_NE_0X02,REG6,0x1194)
0x0936F041,	//0x13e8		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC00892,	//0x13ea		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x13ec		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1400,	//0x13ee		VoC_lw16_d(REG0,0xc2f)
0xE0227001,	//0x13f0		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xE00379C0,	//0x13f2		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C2E2880,	//0x13f4		VoC_or16_rd(REG0,0xc2e)
0x08B40909,	//0x13f6		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C41580,	//0x13f8		VoC_sw32_d(REG01,0x8c4)
0x08B41581,	//0x13fa		VoC_sw32_d(REG23,0x8b4)
0xFFC065DC,	//0x13fc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CASE_BSEQUENCELENTYPE_END)
		//0x13fe		BSEQUENCELENTYPE_NE_0X02
0x11954596,	//0x13fe		VoC_bne16_rd(CASE_BSEQUENCELENTYPE_END,REG6,0x1195)
0x0936F081,	//0x1400		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xFFC00892,	//0x1402		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x1404		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1400,	//0x1406		VoC_lw16_d(REG0,0xc2f)
0x0C311401,	//0x1408		VoC_lw16_d(REG1,0xc31)
0xF9C07082,	//0x140a		VoC_shru16_ri(REG0,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xE00379C1,	//0x140c		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0xfffffff8,DEFAULT)
0x0C2E2880,	//0x140e		VoC_or16_rd(REG0,0xc2e)
0x0C302881,	//0x1410		VoC_or16_rd(REG1,0xc30)
0x08B40909,	//0x1412		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C41580,	//0x1414		VoC_sw32_d(REG01,0x8c4)
0x08B41581,	//0x1416		VoC_sw32_d(REG23,0x8b4)
		//0x1418		CASE_BSEQUENCELENTYPE_END
0x08B41486,	//0x1418		VoC_lw32_d(RL6,0x8b4)
0x08B81406,	//0x141a		VoC_lw16_d(REG6,0x8b8)
0x08C61586,	//0x141c		VoC_sw32_d(RL6,0x8c6)
0x11934526,	//0x141e		VoC_bne16_rd(BPADLENTYPE_NE_0X01,REG6,0x1193)
0x0936F021,	//0x1420		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x2B800892,	//0x1422		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(lo)	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0xF00112A6,	//0x1424		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(hi)
0x08B41486,	//0x1426		VoC_lw32_d(RL6,0x8b4)
0x0C2E1400,	//0x1428		VoC_lw16_d(REG0,0xc2e)
0x11AE0936,	//0x142a		VoC_add32_rd(RL6,RL6,0x11ae)
0x08C81580,	//0x142c		VoC_sw32_d(REG01,0x8c8)
0x08B41586,	//0x142e		VoC_sw32_d(RL6,0x8b4)
0x14642B00,	//0x1430		VoC_jump_lg(CASE_BPADLENTYPE_END)
		//0x1432		BPADLENTYPE_NE_0X01
0x11944586,	//0x1432		VoC_bne16_rd(BPADLENTYPE_NE_0X02,REG6,0x1194)
0x0936F041,	//0x1434		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC00892,	//0x1436		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x1438		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1400,	//0x143a		VoC_lw16_d(REG0,0xc2f)
0xE0227001,	//0x143c		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xE00379C0,	//0x143e		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C2E2880,	//0x1440		VoC_or16_rd(REG0,0xc2e)
0x08B40909,	//0x1442		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C81580,	//0x1444		VoC_sw32_d(REG01,0x8c8)
0x08B41581,	//0x1446		VoC_sw32_d(REG23,0x8b4)
0xFFC065DC,	//0x1448		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CASE_BPADLENTYPE_END)
		//0x144a		BPADLENTYPE_NE_0X02
0x11954596,	//0x144a		VoC_bne16_rd(CASE_BPADLENTYPE_END,REG6,0x1195)
0x0936F081,	//0x144c		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xFFC00892,	//0x144e		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x1450		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1400,	//0x1452		VoC_lw16_d(REG0,0xc2f)
0x0C311401,	//0x1454		VoC_lw16_d(REG1,0xc31)
0xF9C07082,	//0x1456		VoC_shru16_ri(REG0,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xE00379C1,	//0x1458		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0xfffffff8,DEFAULT)
0x0C2E2880,	//0x145a		VoC_or16_rd(REG0,0xc2e)
0x0C302881,	//0x145c		VoC_or16_rd(REG1,0xc30)
0x08B40909,	//0x145e		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C81580,	//0x1460		VoC_sw32_d(REG01,0x8c8)
0x08B41581,	//0x1462		VoC_sw32_d(REG23,0x8b4)
		//0x1464		CASE_BPADLENTYPE_END
0x08B41486,	//0x1464		VoC_lw32_d(RL6,0x8b4)
0x0936F0C1,	//0x1466		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x6,DEFAULT)
0xFFC00892,	//0x1468		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x146a		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x11984031,	//0x146c		VoC_be16_rd(LOAD_6BYTES_OK,REG1,0x1198)
0x2B00F067,	//0x146e		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFFC014CC,	//0x1470		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x1472		LOAD_6BYTES_OK
0x0C2F1400,	//0x1472		VoC_lw16_d(REG0,0xc2f)
0x0C311401,	//0x1474		VoC_lw16_d(REG1,0xc31)
0x0C331402,	//0x1476		VoC_lw16_d(REG2,0xc33)
0xF9C179C0,	//0x1478		VoC_shru16_ri(REG1,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0xE06479C2,	//0x147a		VoC_lw16i_short(REG4,0x6,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)
0x2880F005,	//0x147c		VoC_or16_rd(REG0,0xc2e)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x28810C2E,	//0x147e		VoC_or16_rd(REG1,0xc30)(lo)	|	VoC_or16_rd(REG0,0xc2e)(hi)
0x28820C30,	//0x1480		VoC_or16_rd(REG2,0xc32)(lo)	|	VoC_or16_rd(REG1,0xc30)(hi)
0x09120C32,	//0x1482		VoC_add32_rd(REG45,REG45,0x8b4)(lo)	|	VoC_or16_rd(REG2,0xc32)(hi)
0x158008B4,	//0x1484		VoC_sw32_d(REG01,0x8ca)(lo)	|	VoC_add32_rd(REG45,REG45,0x8b4)(hi)
0x150208CA,	//0x1486		VoC_sw16_d(REG2,0x8bd)(lo)	|	VoC_sw32_d(REG01,0x8ca)(hi)
0x158208BD,	//0x1488		VoC_sw32_d(REG45,0x8b4)(lo)	|	VoC_sw16_d(REG2,0x8bd)(hi)
0x7F4108B4,	//0x148a		VoC_lw32z(REG23,DEFAULT)	|	VoC_sw32_d(REG45,0x8b4)(hi)
0xF001E010,	//0x148c		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0x08CE1581,	//0x148e		VoC_sw32_d(REG23,0x8ce)
0x08CC1501,	//0x1490		VoC_sw16_d(REG1,0x8cc)
0x08CD1501,	//0x1492		VoC_sw16_d(REG1,0x8cd)
0x08D01580,	//0x1494		VoC_sw32_d(REG01,0x8d0)
0x08BA6C35,	//0x1496		VoC_bez16_d(PPHFMULTIPACKET_FALSE,0x8ba)
0x08B41486,	//0x1498		VoC_lw32_d(RL6,0x8b4)
0x0936F021,	//0x149a		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xFFC00892,	//0x149c		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x12A62B80,	//0x149e		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x11934031,	//0x14a0		VoC_be16_rd(LOAD_1BYTES_OK_2,REG1,0x1193)
0x2B00F067,	//0x14a2		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFFC014CC,	//0x14a4		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x14a6		LOAD_1BYTES_OK_2
0x0C2E1402,	//0x14a6		VoC_lw16_d(REG2,0xc2e)
0x0C2E1400,	//0x14a8		VoC_lw16_d(REG0,0xc2e)
0x00C01602,	//0x14aa		VoC_and16_ri(REG2,0xc0)
0x08B41486,	//0x14ac		VoC_lw32_d(RL6,0x8b4)
0x1586F932,	//0x14ae		VoC_sw32_d(RL6,0x8ce)(lo)	|	VoC_shru16_ri(REG2,0x6,DEFAULT)
0x150208CE,	//0x14b0		VoC_sw16_d(REG2,0x8cc)(lo)	|	VoC_sw32_d(RL6,0x8ce)(hi)
0x403A08CC,	//0x14b2		VoC_be16_rd(BPAYLENTYPE_E2_E1,REG2,0x1194)(lo)	|	VoC_sw16_d(REG2,0x8cc)(hi)
0x402A1194,	//0x14b4		VoC_be16_rd(BPAYLENTYPE_E2_E1,REG2,0x1193)(lo)	|	VoC_be16_rd(BPAYLENTYPE_E2_E1,REG2,0x1194)(hi)
0xF0271193,	//0x14b6		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_be16_rd(BPAYLENTYPE_E2_E1,REG2,0x1193)(hi)
0xFFC065D4,	//0x14b8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(PPHFUNCTION_END)
		//0x14ba		BPAYLENTYPE_E2_E1
0x003F1600,	//0x14ba		VoC_and16_ri(REG0,0x3f)
0x1502F001,	//0x14bc		VoC_sw16_d(REG2,0x8cd)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x158008CD,	//0x14be		VoC_sw32_d(REG01,0x8d0)(lo)	|	VoC_sw16_d(REG2,0x8cd)(hi)
0x334008D0,	//0x14c0		VoC_bnez32_r(CPAYLOADS_NEZ,REG01)(lo)	|	VoC_sw32_d(REG01,0x8d0)(hi)
0xF02714C6,	//0x14c2		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bnez32_r(CPAYLOADS_NEZ,REG01)(hi)
0xFFC065C8,	//0x14c4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(PPHFUNCTION_END)
		//0x14c6		CPAYLOADS_NEZ
0x11AE0936,	//0x14c6		VoC_add32_rd(RL6,RL6,0x11ae)
0x1586FFC0,	//0x14c8		VoC_sw32_d(RL6,0x8b4)(lo)	|	VoC_NOP
0xF00708B4,	//0x14ca		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw32_d(RL6,0x8b4)(hi)
		//0x14cb		PPHFMULTIPACKET_FALSE
		//0x14cc		PPHFUNCTION_END
0x1507DFA9,	//0x14cc		VoC_sw16_d(REG7,0xc36)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800C36,	//0x14ce		VoC_return	|	VoC_sw16_d(REG7,0xc36)(hi)
		//0x14d0		CII_WMA_ParsePayloadHeader_VOC
0x1486DFE9,	//0x14d0		VoC_lw32_d(RL6,0x892)(lo)	|	VoC_push16(RA,DEFAULT)
0xF0410892,	//0x14d2		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_lw32_d(RL6,0x892)(hi)
0x08B40936,	//0x14d4		VoC_add32_rd(RL6,RL6,0x8b4)
0x12A62B80,	//0x14d6		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x11944031,	//0x14d8		VoC_be16_rd(LOAD_2BYTES_OK,REG1,0x1194)
0x2B00F067,	//0x14da		VoC_jump_lg(PPLHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFFC015F9,	//0x14dc		VoC_NAD	|	VoC_jump_lg(PPLHFUNCTION_END)(hi)
		//0x14de		LOAD_2BYTES_OK
0x08B41400,	//0x14de		VoC_lw16_d(REG0,0x8b4)
0x0C2E1401,	//0x14e0		VoC_lw16_d(REG1,0xc2e)
0x0C2F1402,	//0x14e2		VoC_lw16_d(REG2,0xc2f)
0x00031601,	//0x14e4		VoC_and16_ri(REG1,0x3)
0x08A01500,	//0x14e6		VoC_sw16_d(REG0,0x8a0)
0x089F1501,	//0x14e8		VoC_sw16_d(REG1,0x89f)
0x08A21502,	//0x14ea		VoC_sw16_d(REG2,0x8a2)
0x08921486,	//0x14ec		VoC_lw32_d(RL6,0x892)
0xE02E700F,	//0x14ee		VoC_lw16i_short(RL7_LO,0x2,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0x08B40936,	//0x14f0		VoC_add32_rd(RL6,RL6,0x8b4)
0x08BC1406,	//0x14f2		VoC_lw16_d(REG6,0x8bc)
0x44AEC9BE,	//0x14f4		VoC_bne16_rd(BOFFSETLENTYPE_NE_0X01,REG6,0x1193)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0xF0211193,	//0x14f6		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_bne16_rd(BOFFSETLENTYPE_NE_0X01,REG6,0x1193)(hi)
0x12A62B80,	//0x14f8		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x1400F001,	//0x14fa		VoC_lw16_d(REG0,0xc2e)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC00C2E,	//0x14fc		VoC_NOP	|	VoC_lw16_d(REG0,0xc2e)(hi)
0x08A41580,	//0x14fe		VoC_sw32_d(REG01,0x8a4)
0x15262B00,	//0x1500		VoC_jump_lg(SWITCH_BOFFSETLENTYPE_END)
		//0x1502		BOFFSETLENTYPE_NE_0X01
0x11944506,	//0x1502		VoC_bne16_rd(BOFFSETLENTYPE_NE_0X02,REG6,0x1194)
0xFFC07041,	//0x1504		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x12A62B80,	//0x1506		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1400,	//0x1508		VoC_lw16_d(REG0,0xc2f)
0xF001F9C0,	//0x150a		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C2E2880,	//0x150c		VoC_or16_rd(REG0,0xc2e)
0x1580FFC0,	//0x150e		VoC_sw32_d(REG01,0x8a4)(lo)	|	VoC_NOP
0xE5D508A4,	//0x1510		VoC_jump(SWITCH_BOFFSETLENTYPE_END)	|	VoC_sw32_d(REG01,0x8a4)(hi)
		//0x1512		BOFFSETLENTYPE_NE_0X02
0x11954526,	//0x1512		VoC_bne16_rd(SWITCH_BOFFSETLENTYPE_END,REG6,0x1195)
0xFFC07081,	//0x1514		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x12A62B80,	//0x1516		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1400,	//0x1518		VoC_lw16_d(REG0,0xc2f)
0x0C311401,	//0x151a		VoC_lw16_d(REG1,0xc31)
0xF9C179C0,	//0x151c		VoC_shru16_ri(REG1,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C2E2880,	//0x151e		VoC_or16_rd(REG0,0xc2e)
0x0C302881,	//0x1520		VoC_or16_rd(REG1,0xc30)
0x1580FFC0,	//0x1522		VoC_sw32_d(REG01,0x8a4)(lo)	|	VoC_NOP
0xFFC008A4,	//0x1524		VoC_NAD	|	VoC_sw32_d(REG01,0x8a4)(hi)
		//0x1526		SWITCH_BOFFSETLENTYPE_END
0x08BB1402,	//0x1526		VoC_lw16_d(REG2,0x8bb)
0xE0117003,	//0x1528		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xFFC0498E,	//0x152a		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,REG23,DEFAULT)
0x12A62B80,	//0x152c		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2E1400,	//0x152e		VoC_lw16_d(REG0,0xc2e)
0x11B41481,	//0x1530		VoC_lw32_d(REG23,0x11b4)
0x08AA1500,	//0x1532		VoC_sw16_d(REG0,0x8aa)
0x08A81581,	//0x1534		VoC_sw32_d(REG23,0x8a8)
0x0936F006,	//0x1536		VoC_add32_rd(RL6,RL6,0x11ae)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x45B811AE,	//0x1538		VoC_bne16_rd(CBREPDATA_NE_1,REG0,0x1193)(lo)	|	VoC_add32_rd(RL6,RL6,0x11ae)(hi)
0x14871193,	//0x153a		VoC_lw32_d(RL7,0x8a4)(lo)	|	VoC_bne16_rd(CBREPDATA_NE_1,REG0,0x1193)(hi)
0x702408A4,	//0x153c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw32_d(RL7,0x8a4)(hi)
0x1587FF41,	//0x153e		VoC_sw32_d(RL7,0x8a8)(lo)	|	VoC_lw32z(REG23,IN_PARALLEL)
0x158108A8,	//0x1540		VoC_sw32_d(REG23,0x8a4)(lo)	|	VoC_sw32_d(RL7,0x8a8)(hi)
0x158108A4,	//0x1542		VoC_sw32_d(REG23,0x8a6)(lo)	|	VoC_sw32_d(REG23,0x8a4)(hi)
0x150408A6,	//0x1544		VoC_sw16_d(REG4,0x89e)(lo)	|	VoC_sw32_d(REG23,0x8a6)(hi)
0xF061089E,	//0x1546		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_sw16_d(REG4,0x89e)(hi)
0x2B80DFC6,	//0x1548		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(lo)	|	VoC_push16(REG6,DEFAULT)
0xDF8612A6,	//0x154a		VoC_pop16(REG6,DEFAULT)	|	VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(hi)
0x0C2E6A30,	//0x154c		VoC_bngtz16_d(CBREPDATA_END,0xc2e)
0x08BA6C2E,	//0x154e		VoC_bez16_d(CBREPDATA_END,0x8ba)
0x0C301406,	//0x1550		VoC_lw16_d(REG6,0xc30)
0x2886F9C6,	//0x1552		VoC_or16_rd(REG6,0xc2f)(lo)	|	VoC_shru16_ri(REG6,0xfffffff8,DEFAULT)
0x2B000C2F,	//0x1554		VoC_jump_lg(CBREPDATA_END)(lo)	|	VoC_or16_rd(REG6,0xc2f)(hi)
0xFFC0157C,	//0x1556		VoC_NAD	|	VoC_jump_lg(CBREPDATA_END)(hi)
		//0x1558		CBREPDATA_NE_1
0x119A4C20,	//0x1558		VoC_bnlt16_rd(CBREPDATA_con,REG0,0x119a)
0x157C2B00,	//0x155a		VoC_jump_lg(CBREPDATA_END)
		//0x155c		CBREPDATA_con
0xDFC6F101,	//0x155c		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0x12A62B80,	//0x155e		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x1402DF86,	//0x1560		VoC_lw16_d(REG2,0xc2f)(lo)	|	VoC_pop16(REG6,DEFAULT)
0x14030C2F,	//0x1562		VoC_lw16_d(REG3,0xc31)(lo)	|	VoC_lw16_d(REG2,0xc2f)(hi)
0x79C20C31,	//0x1564		VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)	|	VoC_lw16_d(REG3,0xc31)(hi)
0x2882F9C3,	//0x1566		VoC_or16_rd(REG2,0xc2e)(lo)	|	VoC_shru16_ri(REG3,0xfffffff8,IN_PARALLEL)
0x28830C2E,	//0x1568		VoC_or16_rd(REG3,0xc30)(lo)	|	VoC_or16_rd(REG2,0xc2e)(hi)
0x14040C30,	//0x156a		VoC_lw16_d(REG4,0xc33)(lo)	|	VoC_or16_rd(REG3,0xc30)(hi)
0x14050C33,	//0x156c		VoC_lw16_d(REG5,0xc35)(lo)	|	VoC_lw16_d(REG4,0xc33)(hi)
0x79C40C35,	//0x156e		VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_lw16_d(REG5,0xc35)(hi)
0x2884F9C5,	//0x1570		VoC_or16_rd(REG4,0xc32)(lo)	|	VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)
0x28850C32,	//0x1572		VoC_or16_rd(REG5,0xc34)(lo)	|	VoC_or16_rd(REG4,0xc32)(hi)
0xF0010C34,	//0x1574		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_or16_rd(REG5,0xc34)(hi)
0x08A61581,	//0x1576		VoC_sw32_d(REG23,0x8a6)
0x08A81582,	//0x1578		VoC_sw32_d(REG45,0x8a8)
0x089E1501,	//0x157a		VoC_sw16_d(REG1,0x89e)
		//0x157c		CBREPDATA_END
0x08AA1400,	//0x157c		VoC_lw16_d(REG0,0x8aa)
0x08B41486,	//0x157e		VoC_lw32_d(RL6,0x8b4)
0x08BB0700,	//0x1580		VoC_add16_rd(REG0,REG0,0x8bb)
0x0700F001,	//0x1582		VoC_add16_rd(REG0,REG0,0x1195)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x09361195,	//0x1584		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_add16_rd(REG0,REG0,0x1195)(hi)
0x15000892,	//0x1586		VoC_sw16_d(REG0,0x8a1)(lo)	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0xC98608A1,	//0x1588		VoC_add32_rr(RL6,RL6,REG01,DEFAULT)	|	VoC_sw16_d(REG0,0x8a1)(hi)
0x08CC1400,	//0x158a		VoC_lw16_d(REG0,0x8cc)
0x6E05F003,	//0x158c		VoC_bnez16_d(FMULTIPAYLOADS_true,0x8ba)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x2B0008BA,	//0x158e		VoC_jump_lg(PPHFMULTIPAYLOADS_FALSE)(lo)	|	VoC_bnez16_d(FMULTIPAYLOADS_true,0x8ba)(hi)
0xFFC015BE,	//0x1590		VoC_NAD	|	VoC_jump_lg(PPHFMULTIPAYLOADS_FALSE)(hi)
		//0x1592		FMULTIPAYLOADS_true
0x11934490,	//0x1592		VoC_bne16_rd(BPAYLENTYPE_NE_0X01,REG0,0x1193)
0xFFC07021,	//0x1594		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x12A62B80,	//0x1596		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2E1402,	//0x1598		VoC_lw16_d(REG2,0xc2e)
0x15D62B00,	//0x159a		VoC_jump_lg(FMULTIPAYLOADS_END)
		//0x159c		BPAYLENTYPE_NE_0X01
0x119444B0,	//0x159c		VoC_bne16_rd(BPAYLENTYPE_NE_0X02,REG0,0x1194)
0xFFC07041,	//0x159e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x12A62B80,	//0x15a0		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1402,	//0x15a2		VoC_lw16_d(REG2,0xc2f)
0x2882F9C2,	//0x15a4		VoC_or16_rd(REG2,0xc2e)(lo)	|	VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)
0x2B000C2E,	//0x15a6		VoC_jump_lg(FMULTIPAYLOADS_END)(lo)	|	VoC_or16_rd(REG2,0xc2e)(hi)
0xFFC015D6,	//0x15a8		VoC_NAD	|	VoC_jump_lg(FMULTIPAYLOADS_END)(hi)
		//0x15aa		BPAYLENTYPE_NE_0X02
0x11954020,	//0x15aa		VoC_be16_rd(FMULTIPAYLOADS_con,REG0,0x1195)
0x15D62B00,	//0x15ac		VoC_jump_lg(FMULTIPAYLOADS_END)
		//0x15ae		FMULTIPAYLOADS_con
0xFFC07081,	//0x15ae		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x12A62B80,	//0x15b0		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C2F1402,	//0x15b2		VoC_lw16_d(REG2,0xc2f)
0x0C311403,	//0x15b4		VoC_lw16_d(REG3,0xc31)
0xF9C379C2,	//0x15b6		VoC_shru16_ri(REG3,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)
0x0C2E2882,	//0x15b8		VoC_or16_rd(REG2,0xc2e)
0x0C302883,	//0x15ba		VoC_or16_rd(REG3,0xc30)
0xFFC065DA,	//0x15bc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(FMULTIPAYLOADS_END)
		//0x15be		PPHFMULTIPAYLOADS_FALSE
0x08C0760E,	//0x15be		VoC_bngtz32_d(CBEXPLICITPACKETLENGTH_NGTZ,0x8c0)
0x08C01481,	//0x15c0		VoC_lw32_d(REG23,0x8c0)
0x08A11400,	//0x15c2		VoC_lw16_d(REG0,0x8a1)
0x08B40989,	//0x15c4		VoC_sub32_rd(REG23,REG23,0x8b4)
0x0989F001,	//0x15c6		VoC_sub32_rd(REG23,REG23,0x8c8)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xCA4108C8,	//0x15c8		VoC_sub32_rr(REG23,REG23,REG01,DEFAULT)	|	VoC_sub32_rd(REG23,REG23,0x8c8)(hi)
0xFFC065CC,	//0x15ca		VoC_NAD(IN_PARALLEL)	|	VoC_jump(FMULTIPAYLOADS_END)
		//0x15cc		CBEXPLICITPACKETLENGTH_NGTZ
0x08961481,	//0x15cc		VoC_lw32_d(REG23,0x896)
0x08A11400,	//0x15ce		VoC_lw16_d(REG0,0x8a1)
0x08B40989,	//0x15d0		VoC_sub32_rd(REG23,REG23,0x8b4)
0x0989F001,	//0x15d2		VoC_sub32_rd(REG23,REG23,0x8c8)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xCA4108C8,	//0x15d4		VoC_sub32_rr(REG23,REG23,REG01,DEFAULT)	|	VoC_sub32_rd(REG23,REG23,0x8c8)(hi)
		//0x15d6		FMULTIPAYLOADS_END
0x15DA31C6,	//0x15d6		VoC_bnez16_r(WTOTALDATABYTES_NEZ,REG6)
0xFFC06046,	//0x15d8		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG6,REG2,DEFAULT)
		//0x15da		WTOTALDATABYTES_NEZ
0x08A31502,	//0x15da		VoC_sw16_d(REG2,0x8a3)
0x08CD0710,	//0x15dc		VoC_add16_rd(REG0,REG2,0x8cd)
0x0700F007,	//0x15de		VoC_add16_rd(REG0,REG0,0x8a1)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xF00108A1,	//0x15e0		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x8a1)(hi)
0x08A11500,	//0x15e2		VoC_sw16_d(REG0,0x8a1)
0x08B40900,	//0x15e4		VoC_add32_rd(REG01,REG01,0x8b4)
0x08AE1583,	//0x15e6		VoC_sw32_d(REG67,0x8ae)
0x08B41580,	//0x15e8		VoC_sw32_d(REG01,0x8b4)
0x088C1487,	//0x15ea		VoC_lw32_d(RL7,0x88c)
0x08B41486,	//0x15ec		VoC_lw32_d(RL6,0x8b4)
0x11AE093F,	//0x15ee		VoC_add32_rd(RL7,RL7,0x11ae)
0x08965036,	//0x15f0		VoC_bgt32_rd(RETURN_CORRUPTDATA,RL6,0x896)
0x08965C36,	//0x15f2		VoC_bne32_rd(RETURN_OK,RL6,0x896)
0x08D06427,	//0x15f4		VoC_bnlt32_rd(RETURN_OK,RL7,0x8d0)
		//0x15f6		RETURN_CORRUPTDATA
0xE5C2F0C7,	//0x15f6		VoC_jump(PPLHFUNCTION_END)	|	VoC_lw16i_short(REG7,0x6,DEFAULT)
		//0x15f8		RETURN_OK
0xDFA9F007,	//0x15f8		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x15f9		PPLHFUNCTION_END
0x0C361507,	//0x15fa		VoC_sw16_d(REG7,0xc36)
0xDFE9E580,	//0x15fc		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x15fd		CII_WMAF_UpdateNewPayload_VOC
		//0x15fe		CASE_NEWASFPACKET
0x08061400,	//0x15fe		VoC_lw16_d(REG0,0x806)
0x08941486,	//0x1600		VoC_lw32_d(RL6,0x894)
0x11954020,	//0x1602		VoC_be16_rd(CASE_DECODEPAYLOADSTART_not,REG0,0x1195)
0x16322B00,	//0x1604		VoC_jump_lg(CASE_DECODEPAYLOADSTART)
		//0x1606		CASE_DECODEPAYLOADSTART_not
0x08985436,	//0x1606		VoC_bngt32_rd(NEXTPACKETOFFSET_GT_LASTPACKETOFFSET,RL6,0x898)
0x2B00F0C7,	//0x1608		VoC_jump_lg(UNPFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x6,DEFAULT)
0xFFC016E0,	//0x160a		VoC_NAD	|	VoC_jump_lg(UNPFUNCTION_END)(hi)
		//0x160c		NEXTPACKETOFFSET_GT_LASTPACKETOFFSET
0x08960937,	//0x160c		VoC_add32_rd(RL7,RL6,0x896)
0x08921586,	//0x160e		VoC_sw32_d(RL6,0x892)
0x08941587,	//0x1610		VoC_sw32_d(RL7,0x894)
0x12D02B80,	//0x1612		VoC_jal(CII_WMA_ParsePacketHeader_VOC)
0x11954497,	//0x1614		VoC_bne16_rd(WMARC_NE_3,REG7,0x1195)
0x08921486,	//0x1616		VoC_lw32_d(RL6,0x892)
0x1586F247,	//0x1618		VoC_sw32_d(RL6,0x894)(lo)	|	VoC_lw16i_short(REG7,0x12,DEFAULT)
0x2B000894,	//0x161a		VoC_jump_lg(UNPFUNCTION_END)(lo)	|	VoC_sw32_d(RL6,0x894)(hi)
0xFFC016E0,	//0x161c		VoC_NAD	|	VoC_jump_lg(UNPFUNCTION_END)(hi)
		//0x161e		WMARC_NE_3
0x16243187,	//0x161e		VoC_bez16_r(WMARC_EZ,REG7)
0x2B00F087,	//0x1620		VoC_jump_lg(UNPFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xFFC016E0,	//0x1622		VoC_NAD	|	VoC_jump_lg(UNPFUNCTION_END)(hi)
		//0x1624		WMARC_EZ
0x08B16C06,	//0x1624		VoC_bez16_d(UNPFECCPRESENT_FALSE,0x8b1)
0x08B06C04,	//0x1626		VoC_bez16_d(UNPFECCPRESENT_FALSE,0x8b0)
0x15FE2B00,	//0x1628		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x162a		UNPFECCPRESENT_FALSE
0xFF46F080,	//0x162a		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x08061500,	//0x162c		VoC_sw16_d(REG0,0x806)
0x088C1586,	//0x162e		VoC_sw32_d(RL6,0x88c)
0x15FE2B00,	//0x1630		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x1632		CASE_DECODEPAYLOADSTART
0x088C1486,	//0x1632		VoC_lw32_d(RL6,0x88c)
0x4028F063,	//0x1634		VoC_be16_rd(CASE_DECODEPAYLOAD_not,REG0,0x1196)(lo)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x2B001196,	//0x1636		VoC_jump_lg(CASE_DECODEPAYLOAD)(lo)	|	VoC_be16_rd(CASE_DECODEPAYLOAD_not,REG0,0x1196)(hi)
0xFFC0167B,	//0x1638		VoC_NAD	|	VoC_jump_lg(CASE_DECODEPAYLOAD)(hi)
		//0x163a		CASE_DECODEPAYLOAD_not
0x08D06036,	//0x163a		VoC_blt32_rd(IPAYLOAD_LT_CPAYLOADS,RL6,0x8d0)
0x08061503,	//0x163c		VoC_sw16_d(REG3,0x806)
0x15FE2B00,	//0x163e		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x1640		IPAYLOAD_LT_CPAYLOADS
0x14D02B80,	//0x1640		VoC_jal(CII_WMA_ParsePayloadHeader_VOC)
0x3187F100,	//0x1642		VoC_bez16_r(WMARC_EZ_I,REG7)(lo)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x1500164A,	//0x1644		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_bez16_r(WMARC_EZ_I,REG7)(hi)
0x2B000806,	//0x1646		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0xFFC015FE,	//0x1648		VoC_NAD	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
		//0x164a		WMARC_EZ_I
0x08A01400,	//0x164a		VoC_lw16_d(REG0,0x8a0)
0x08A10700,	//0x164c		VoC_add16_rd(REG0,REG0,0x8a1)
0x0780F001,	//0x164e		VoC_sub16_rd(REG0,REG0,0x8a3)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x140208A3,	//0x1650		VoC_lw16_d(REG2,0x8aa)(lo)	|	VoC_sub16_rd(REG0,REG0,0x8a3)(hi)
0x158008AA,	//0x1652		VoC_sw32_d(REG01,0x88e)(lo)	|	VoC_lw16_d(REG2,0x8aa)(hi)
0x4092088E,	//0x1654		VoC_be16_rd(CBREPDATA_E_1,REG2,0x1193)(lo)	|	VoC_sw32_d(REG01,0x88e)(hi)
0xF0A01193,	//0x1656		VoC_lw16i_short(REG0,0x5,DEFAULT)	|	VoC_be16_rd(CBREPDATA_E_1,REG2,0x1193)(hi)
0x1500F001,	//0x1658		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x15010806,	//0x165a		VoC_sw16_d(REG1,0x89e)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0x2B00089E,	//0x165c		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw16_d(REG1,0x89e)(hi)
0xF12015FE,	//0x165e		VoC_lw16i_short(REG0,0x9,DEFAULT)	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
		//0x165f		CBREPDATA_E_1
0x1500F021,	//0x1660		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x15010806,	//0x1662		VoC_sw16_d(REG1,0x89e)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0x2B00089E,	//0x1664		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw16_d(REG1,0x89e)(hi)
0x140015FE,	//0x1666		VoC_lw16_d(REG0,0x8a3)(lo)	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
0xFFC008A3,	//0x1668		VoC_NOP	|	VoC_lw16_d(REG0,0x8a3)(hi)
		//0x1669		MOD_BEGIN
0x089A4830,	//0x166a		VoC_blt16_rd(MOD_END,REG0,0x89a)
0x089A0780,	//0x166c		VoC_sub16_rd(REG0,REG0,0x89a)
0xFFC065FB,	//0x166e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(MOD_BEGIN)
		//0x1670		MOD_END
0x16753180,	//0x1670		VoC_bez16_r(CBPAYLOADSIZE_MOD_NBLOCKALIGN_EZ,REG0)
0x2B00F0A7,	//0x1672		VoC_jump_lg(UNPFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x5,DEFAULT)
0xF10016E0,	//0x1674		VoC_lw16i_short(REG0,0x8,DEFAULT)	|	VoC_jump_lg(UNPFUNCTION_END)(hi)
		//0x1675		CBPAYLOADSIZE_MOD_NBLOCKALIGN_EZ
0x1500FFC0,	//0x1676		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_NOP
0x2B000806,	//0x1678		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0xF00D15FE,	//0x167a		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
		//0x167b		CASE_DECODEPAYLOAD
0x089F140C,	//0x167c		VoC_lw16_d(RL6_LO,0x89f)
0x4028F103,	//0x167e		VoC_be16_rd(CASE_DECODEPAYLOADNOT,REG0,0x1197)(lo)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x2B001197,	//0x1680		VoC_jump_lg(CASE_DECODEPAYLOADEND)(lo)	|	VoC_be16_rd(CASE_DECODEPAYLOADNOT,REG0,0x1197)(hi)
0xFFC016A6,	//0x1682		VoC_NAD	|	VoC_jump_lg(CASE_DECODEPAYLOADEND)(hi)
		//0x1684		CASE_DECODEPAYLOADNOT
0x089C5836,	//0x1684		VoC_be32_rd(BSTREAMID_E_WAUDIOSTREAMID,RL6,0x89c)
0x08061503,	//0x1686		VoC_sw16_d(REG3,0x806)
0x15FE2B00,	//0x1688		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x168a		BSTREAMID_E_WAUDIOSTREAMID
0x08921486,	//0x168a		VoC_lw32_d(RL6,0x892)
0x0936F020,	//0x168c		VoC_add32_rd(RL6,RL6,0x88e)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x1401088E,	//0x168e		VoC_lw16_d(REG1,0x89a)(lo)	|	VoC_add32_rd(RL6,RL6,0x88e)(hi)
0x1586089A,	//0x1690		VoC_sw32_d(RL6,0x808)(lo)	|	VoC_lw16_d(REG1,0x89a)(hi)
0x15000808,	//0x1692		VoC_sw16_d(REG0,0x807)(lo)	|	VoC_sw32_d(RL6,0x808)(hi)
0x0B0A0807,	//0x1694		VoC_sub16_dr(REG2,0x8a3,REG1)(lo)	|	VoC_sw16_d(REG0,0x807)(hi)
0x150108A3,	//0x1696		VoC_sw16_d(REG1,0x805)(lo)	|	VoC_sub16_dr(REG2,0x8a3,REG1)(hi)
0x15020805,	//0x1698		VoC_sw16_d(REG2,0x804)(lo)	|	VoC_sw16_d(REG1,0x805)(hi)
0x6C050804,	//0x169a		VoC_bez16_d(BHASDRM_FALSE,0x88a)(lo)	|	VoC_sw16_d(REG2,0x804)(hi)
0xF1C7088A,	//0x169c		VoC_lw16i_short(REG7,0xe,DEFAULT)	|	VoC_bez16_d(BHASDRM_FALSE,0x88a)(hi)
0x16E02B00,	//0x169e		VoC_jump_lg(UNPFUNCTION_END)
		//0x16a0		BHASDRM_FALSE
0xF007F0C0,	//0x16a0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x6,DEFAULT)
0x08061500,	//0x16a2		VoC_sw16_d(REG0,0x806)
0x16E02B00,	//0x16a4		VoC_jump_lg(UNPFUNCTION_END)
		//0x16a6		CASE_DECODEPAYLOADEND
0x119A44A8,	//0x16a6		VoC_bne16_rd(CASE_DECODECOMPRESSEDPAYLOAD,REG0,0x119a)
0x088C1486,	//0x16a8		VoC_lw32_d(RL6,0x88c)
0x0936F080,	//0x16aa		VoC_add32_rd(RL6,RL6,0x11ae)(lo)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x150011AE,	//0x16ac		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_add32_rd(RL6,RL6,0x11ae)(hi)
0x15860806,	//0x16ae		VoC_sw32_d(RL6,0x88c)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0x2B00088C,	//0x16b0		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw32_d(RL6,0x88c)(hi)
0xF00D15FE,	//0x16b2		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
		//0x16b3		CASE_DECODECOMPRESSEDPAYLOAD
0x089F140C,	//0x16b4		VoC_lw16_d(RL6_LO,0x89f)
0x4028F103,	//0x16b6		VoC_be16_rd(CASE_DEFAULT_not,REG0,0x119b)(lo)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x2B00119B,	//0x16b8		VoC_jump_lg(CASE_DEFAULT)(lo)	|	VoC_be16_rd(CASE_DEFAULT_not,REG0,0x119b)(hi)
0xFFC016DD,	//0x16ba		VoC_NAD	|	VoC_jump_lg(CASE_DEFAULT)(hi)
		//0x16bc		CASE_DEFAULT_not
0x089C5836,	//0x16bc		VoC_be32_rd(BSTREAMID_E_WAUDIOSTREAMID_II,RL6,0x89c)
0x08061503,	//0x16be		VoC_sw16_d(REG3,0x806)
0x15FE2B00,	//0x16c0		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x16c2		BSTREAMID_E_WAUDIOSTREAMID_II
0x08921486,	//0x16c2		VoC_lw32_d(RL6,0x892)
0x0936F020,	//0x16c4		VoC_add32_rd(RL6,RL6,0x88e)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x1401088E,	//0x16c6		VoC_lw16_d(REG1,0x89a)(lo)	|	VoC_add32_rd(RL6,RL6,0x88e)(hi)
0x1586089A,	//0x16c8		VoC_sw32_d(RL6,0x808)(lo)	|	VoC_lw16_d(REG1,0x89a)(hi)
0xFF410808,	//0x16ca		VoC_lw32z(REG23,DEFAULT)	|	VoC_sw32_d(RL6,0x808)(hi)
0x08071500,	//0x16cc		VoC_sw16_d(REG0,0x807)
0x08051501,	//0x16ce		VoC_sw16_d(REG1,0x805)
0x08AC1581,	//0x16d0		VoC_sw32_d(REG23,0x8ac)
0x08AB1500,	//0x16d2		VoC_sw16_d(REG0,0x8ab)
0x088A6C04,	//0x16d4		VoC_bez16_d(BHASDRM_FALSE_II,0x88a)
0xE5C9F1C7,	//0x16d6		VoC_jump(UNPFUNCTION_END)	|	VoC_lw16i_short(REG7,0xe,DEFAULT)
		//0x16d8		BHASDRM_FALSE_II
0xF007F0C0,	//0x16d8		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x6,DEFAULT)
0x08061500,	//0x16da		VoC_sw16_d(REG0,0x806)
0xF227E5C4,	//0x16dc		VoC_lw16i_short(REG7,0x11,DEFAULT)	|	VoC_jump(UNPFUNCTION_END)
		//0x16dd		CASE_DEFAULT
0xF007E5C2,	//0x16de		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jump(UNPFUNCTION_END)
		//0x16e0		UNPFUNCTION_END
0xFFC0DFA9,	//0x16e0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x16e2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x16e4		CII_WMAFileCBGetData_VOC
0xF0077030,	//0x16e4		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07800A86,	//0x16e6		VoC_lw16i(REG6,0x780)
0x091FF007,	//0x16e8		VoC_add32_rd(RL7,REG67,0x800)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x072D0800,	//0x16ea		VoC_add16_rd(REG5,REG5,0x1193)(lo)	|	VoC_add32_rd(RL7,REG67,0x800)(hi)
0xE0431193,	//0x16ec		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x1193)(hi)
0x08001587,	//0x16ee		VoC_sw32_d(RL7,0x800)
0x780DC2B2,	//0x16f0		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)
0xE040F80B,	//0x16f2		VoC_movreg16(REG0,REG2,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,IN_PARALLEL)
0x1485F808,	//0x16f4		VoC_lw32_d(ACC1,0xa10)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xC95C0A10,	//0x16f6		VoC_add32_rr(ACC0,ACC1,REG67,DEFAULT)	|	VoC_lw32_d(ACC1,0xa10)(hi)
0x1584FFC0,	//0x16f8		VoC_sw32_d(ACC0,0xa10)(lo)	|	VoC_NOP
0x0A870A10,	//0x16fa		VoC_lw16i(REG7,0x20)(lo)	|	VoC_sw32_d(ACC0,0xa10)(hi)
0xF8160020,	//0x16fc		VoC_shr16_ri(REG6,0x2,DEFAULT)	|	VoC_lw16i(REG7,0x20)(hi)
0x17022E28,	//0x16fe		VoC_loop_r(0,REG5)
0xFFC0D8B4,	//0x1700		VoC_NOP	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
		//0x1702		VoC_endloop0
0x1792DC84,	//0x1702		VoC_cfg_lg(0x8,)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x15470008,	//0x1704		VoC_sw16_d(REG7,0xffc3)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15467FC3,	//0x1706		VoC_sw16_d(REG6,0xffc2)(lo)	|	VoC_sw16_d(REG7,0xffc3)(hi)
0x15C57FC2,	//0x1708		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_sw16_d(REG6,0xffc2)(hi)
0xDE807FC4,	//0x170a		VoC_cfg(0x0)	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x1794FFC0,	//0x170c		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xFFC00008,	//0x170e		VoC_NOP	|	VoC_cfg_lg(0x8,)(hi)
0x003F1794,	//0x1710		VoC_cfg_lg(0x3f,)
0x00101792,	//0x1712		VoC_cfg_lg(0x10,)
0xE580DEA0,	//0x1714		VoC_return	|	VoC_cfg(0x20)
		//0x1716		CII_prvWeightedQuantization_VOC
0x0BFC0A85,	//0x1716		VoC_lw16i(REG5,0xbfc)
0x09D61404,	//0x1718		VoC_lw16_d(REG4,0x9d6)
0x08E46C06,	//0x171a		VoC_bez16_d(WQLabel_Left_rgiCoefRecon,0x8e4)
0x0C150A85,	//0x171c		VoC_lw16i(REG5,0xc15)
0x09FE1404,	//0x171e		VoC_lw16_d(REG4,0x9fe)
		//0x1720		WQLabel_Left_rgiCoefRecon
0x0A81C145,	//0x1720		VoC_lw16i(REG1,0x47)(lo)	|	VoC_add16_rr(REG5,REG5,REG0,DEFAULT)
0xD8550047,	//0x1722		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16i(REG1,0x47)(hi)
0xC32CFFC0,	//0x1724		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_NOP
0x172A34A1,	//0x1726		VoC_bngt16_rr(WQLabel_ngt71,REG4,REG1)
0xFFC06024,	//0x1728		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG4,REG1,DEFAULT)
		//0x172a		WQLabel_ngt71
0x61360A85,	//0x172a		VoC_lw16i(REG5,0x6136)
0x1481F8FC,	//0x172c		VoC_lw32_d(REG23,0x9ae)(lo)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xC16509AE,	//0x172e		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw32_d(REG23,0x9ae)(hi)
0xE031781C,	//0x1730		VoC_lw16i_short(REG1,0x3,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x3,DEFAULT)
0xD9ABC0A2,	//0x1732		VoC_lw32_p(REG67,REG5,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x1482C28A,	//0x1734		VoC_lw32_d(REG45,0x9b0)(lo)	|	VoC_sub16_rr(REG2,REG2,REG1,DEFAULT)
0xFF0E09B0,	//0x1736		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw32_d(REG45,0x9b0)(hi)
0xF90E790C,	//0x1738		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCD3FCDED,	//0x173a		VoC_multf32_rr(RL7,REG4,REG7,DEFAULT)	|	VoC_multf32_rr(ACC1,REG7,REG5,DEFAULT)
0xFFC0CD74,	//0x173c		VoC_NOP	|	VoC_multf32_rr(ACC0,REG5,REG6,DEFAULT)
0xFA7CC93C,	//0x173e		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xFDF9C929,	//0x1740		VoC_shru32_ri(REG23,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG23,ACC0,ACC1,DEFAULT)
0x33C1FF47,	//0x1742		VoC_bnltz32_r(Label_FFTgtz,REG23)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xCBC91746,	//0x1744		VoC_sub32_rr(REG23,RL7,REG23,DEFAULT)	|	VoC_bnltz32_r(Label_FFTgtz,REG23)(hi)
		//0x1746		Label_FFTgtz
0x0AC4F02E,	//0x1746		VoC_lw16i(REG4,0xffff)(lo)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
0x0A857FFF,	//0x1748		VoC_lw16i(REG5,0x3fff)(lo)	|	VoC_lw16i(REG4,0xffff)(hi)
0x33413FFF,	//0x174a		VoC_bnez32_r(Label_FFTnez,REG23)(lo)	|	VoC_lw16i(REG5,0x3fff)(hi)
0xFF461750,	//0x174c		VoC_lw32z(RL6,DEFAULT)	|	VoC_bnez32_r(Label_FFTnez,REG23)(hi)
0xFFC065C7,	//0x174e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(WQLabel_return)
		//0x1750		Label_FFTnez
0x17553691,	//0x1750		VoC_bngt32_rr(WQLabel_return,REG45,REG23)
0xC9BEFDF9,	//0x1752		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_shru32_ri(REG23,0xffffffff,DEFAULT)
0xE580E5FC,	//0x1754		VoC_return	|	VoC_jump(Label_FFTnez)
		//0x1755		WQLabel_return
		//0x1756		CII_prvDecodeSubFrameHighRate_VOC
0x0A87DFE9,	//0x1756		VoC_lw16i(REG7,0x0)(lo)	|	VoC_push16(RA,DEFAULT)
		//0x1758		CII_prvDecodeSubFrame_VOC
0xFFC00000,	//0x1758		VoC_NOP	|	VoC_lw16i(REG7,0x0)(hi)
0x0C371507,	//0x175a		VoC_sw16_d(REG7,0xc37)
0x08E16E34,	//0x175c		VoC_bnez16_d(LabelHighRate_case_SUBFRM_COEF,0x8e1)
0x07842B80,	//0x175e		VoC_jal(CII_prvDecodeFrameHeader_VOC)
0x09AB1406,	//0x1760		VoC_lw16_d(REG6,0x9ab)
0x0BFC2B80,	//0x1762		VoC_jal(CII_qstCalcQuantStep_VOC)
0x09AE1583,	//0x1764		VoC_sw32_d(REG67,0x9ae)
0x09B01587,	//0x1766		VoC_sw32_d(RL7,0x9b0)
0xF021F0C6,	//0x1768		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x6,DEFAULT)
0x08E24026,	//0x176a		VoC_be16_rd(LabelHighRate_con,REG6,0x8e2)
0x18142B00,	//0x176c		VoC_jump_lg(LabelHighRate_exit)
		//0x176e		LabelHighRate_con
0x00000A80,	//0x176e		VoC_lw16i(REG0,0x0)
0x09A50B0B,	//0x1770		VoC_sub16_dr(REG3,0x9a5,REG1)
0x08E11501,	//0x1772		VoC_sw16_d(REG1,0x8e1)
0x09001503,	//0x1774		VoC_sw16_d(REG3,0x900)
0x08E41500,	//0x1776		VoC_sw16_d(REG0,0x8e4)
0x08E31500,	//0x1778		VoC_sw16_d(REG0,0x8e3)
		//0x177a		LabelHighRate_channel_loop_start
0x08F94D30,	//0x177a		VoC_bnlt16_rd(LabelHighRate_case_SUBFRM_COEF,REG0,0x8f9)
0x09D51402,	//0x177c		VoC_lw16_d(REG2,0x9d5)
0x17823180,	//0x177e		VoC_bez16_r(LabelHighRate_LorR_channel,REG0)
0x09FD1402,	//0x1780		VoC_lw16_d(REG2,0x9fd)
		//0x1782		LabelHighRate_LorR_channel
0x09A60716,	//0x1782		VoC_add16_rd(REG6,REG2,0x9a6)
0xF052FF47,	//0x1784		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0x09A60736,	//0x1786		VoC_add16_rd(REG6,REG6,0x9a6)
		//0x1788		LabelHighRate_memset0_start
0xFFC0DDD7,	//0x1788		VoC_NOP	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x17883432,	//0x178a		VoC_bgt16_rr(LabelHighRate_memset0_start,REG6,REG2)
0x11930700,	//0x178c		VoC_add16_rd(REG0,REG0,0x1193)
0xFFC065EC,	//0x178e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LabelHighRate_channel_loop_start)
		//0x1790		LabelHighRate_case_SUBFRM_COEF
0x00010A81,	//0x1790		VoC_lw16i(REG1,0x1)
0x08E41400,	//0x1792		VoC_lw16_d(REG0,0x8e4)
0x08E14021,	//0x1794		VoC_be16_rd(LabelHighRate_SUBFRM_con,REG1,0x8e1)
0x17B82B00,	//0x1796		VoC_jump_lg(LabelHighRate_SUBFRM_DONE)
		//0x1798		LabelHighRate_SUBFRM_con
0x08F94D98,	//0x1798		VoC_bnlt16_rd(LabelHighRate_SUBFRM_COEF_loopend,REG0,0x8f9)
0x09D01401,	//0x179a		VoC_lw16_d(REG1,0x9d0)
0x17A23180,	//0x179c		VoC_bez16_r(LabelHighRate_LorR_channel2,REG0)
0x09F81401,	//0x179e		VoC_lw16_d(REG1,0x9f8)
0xFFC07FC0,	//0x17a0		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x17a2		LabelHighRate_LorR_channel2
0x17A83181,	//0x17a2		VoC_bez16_r(LabelHighRate_SUBFRM_COEF_continue,REG1)
0x0C2E2B80,	//0x17a4		VoC_jal(CII_prvSetDetTable_VOC)
0x18172B80,	//0x17a6		VoC_jal(CII_auReconCoefficentsHighRate_VOC)
		//0x17a8		LabelHighRate_SUBFRM_COEF_continue
0x0B0BF021,	//0x17a8		VoC_sub16_dr(REG3,0x9a5,REG1)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x070C09A5,	//0x17aa		VoC_add16_rd(REG4,REG1,0x8e4)(lo)	|	VoC_sub16_dr(REG3,0x9a5,REG1)(hi)
0x150308E4,	//0x17ac		VoC_sw16_d(REG3,0x900)(lo)	|	VoC_add16_rd(REG4,REG1,0x8e4)(hi)
0x15040900,	//0x17ae		VoC_sw16_d(REG4,0x8e4)(lo)	|	VoC_sw16_d(REG3,0x900)(hi)
0x2B0008E4,	//0x17b0		VoC_jump_lg(LabelHighRate_case_SUBFRM_COEF)(lo)	|	VoC_sw16_d(REG4,0x8e4)(hi)
0xF0421790,	//0x17b2		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_jump_lg(LabelHighRate_case_SUBFRM_COEF)(hi)
		//0x17b3		LabelHighRate_SUBFRM_COEF_loopend
0x1502FFC0,	//0x17b4		VoC_sw16_d(REG2,0x8e1)(lo)	|	VoC_NOP
0xFFC008E1,	//0x17b6		VoC_NAD	|	VoC_sw16_d(REG2,0x8e1)(hi)
		//0x17b8		LabelHighRate_SUBFRM_DONE
0x00020A82,	//0x17b8		VoC_lw16i(REG2,0x2)
0x402AFFC0,	//0x17ba		VoC_be16_rd(LabelHighRate_con1,REG2,0x8e1)(lo)	|	VoC_NOP
0x2B0008E1,	//0x17bc		VoC_jump_lg(LabelHighRate_exit)(lo)	|	VoC_be16_rd(LabelHighRate_con1,REG2,0x8e1)(hi)
0xFFC01814,	//0x17be		VoC_NAD	|	VoC_jump_lg(LabelHighRate_exit)(hi)
		//0x17c0		LabelHighRate_con1
0x19D82B80,	//0x17c0		VoC_jal(CII_SetActualPowerHighRate_VOC)
0x00020A82,	//0x17c2		VoC_lw16i(REG2,0x2)
0x00010A81,	//0x17c4		VoC_lw16i(REG1,0x1)
0x09D01403,	//0x17c6		VoC_lw16_d(REG3,0x9d0)
0x08F94022,	//0x17c8		VoC_be16_rd(LabelHighRate_DctIV_not,REG2,0x8f9)
0x17EC2B00,	//0x17ca		VoC_jump_lg(LabelHighRate_DctIV)
		//0x17cc		LabelHighRate_DctIV_not
0x09F82883,	//0x17cc		VoC_or16_rd(REG3,0x9f8)
0x090345B1,	//0x17ce		VoC_bne16_rd(LabelHighRate_DctIV,REG1,0x903)
0x17EC3183,	//0x17d0		VoC_bez16_r(LabelHighRate_DctIV,REG3)
0x09D51400,	//0x17d2		VoC_lw16_d(REG0,0x9d5)
0x09FD1401,	//0x17d4		VoC_lw16_d(REG1,0x9fd)
0xF051F050,	//0x17d6		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x09A60703,	//0x17d8		VoC_add16_rd(REG3,REG0,0x9a6)
0x00010A84,	//0x17da		VoC_lw16i(REG4,0x1)
0x09A6071B,	//0x17dc		VoC_add16_rd(REG3,REG3,0x9a6)
		//0x17de		LabelHighRate_loop_SD2LR_start
0xD98FD986,	//0x17de		VoC_lw32_p(RL7,REG1,DEFAULT)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0xC9BCFFC0,	//0x17e0		VoC_add32_rr(ACC0,RL6,RL7,DEFAULT)	|	VoC_NOP
0xDDC4CBBD,	//0x17e2		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sub32_rr(ACC1,RL6,RL7,DEFAULT)
0x3418DDCD,	//0x17e4		VoC_bgt16_rr(LabelHighRate_loop_SD2LR_start,REG3,REG0)(lo)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0x150417DE,	//0x17e6		VoC_sw16_d(REG4,0x9d0)(lo)	|	VoC_bgt16_rr(LabelHighRate_loop_SD2LR_start,REG3,REG0)(hi)
0x150409D0,	//0x17e8		VoC_sw16_d(REG4,0x9f8)(lo)	|	VoC_sw16_d(REG4,0x9d0)(hi)
0xFFC009F8,	//0x17ea		VoC_NAD	|	VoC_sw16_d(REG4,0x9f8)(hi)
		//0x17ec		LabelHighRate_DctIV
0x0A041486,	//0x17ec		VoC_lw32_d(RL6,0xa04)
0x08DF0A83,	//0x17ee		VoC_lw16i(REG3,0x8df)
0x04000A86,	//0x17f0		VoC_lw16i(REG6,0x400)
0x00081792,	//0x17f2		VoC_cfg_lg(0x8,)
0x7FC31543,	//0x17f4		VoC_sw16_d(REG3,0xffc3)
0x7FC21546,	//0x17f6		VoC_sw16_d(REG6,0xffc2)
0x7FC415C6,	//0x17f8		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x17fa		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x17fc		VoC_cfg_lg(0x8,)
0x09D06C08,	//0x17fe		VoC_bez16_d(LabelHighRate_rightchannel,0x9d0)
0x09D51405,	//0x1800		VoC_lw16_d(REG5,0x9d5)
0x01162B80,	//0x1802		VoC_jal(CII_Adjust_EQ_Curve_VOC)
0x0E4A2B80,	//0x1804		VoC_jal(CII_auDctIV_VOC)
		//0x1806		LabelHighRate_rightchannel
0x00020A82,	//0x1806		VoC_lw16i(REG2,0x2)
0x449AFFC0,	//0x1808		VoC_bne16_rd(LabelHighRate_exit,REG2,0x8f9)(lo)	|	VoC_NOP
0x6C0908F9,	//0x180a		VoC_bez16_d(LabelHighRate_exit,0x9f8)(lo)	|	VoC_bne16_rd(LabelHighRate_exit,REG2,0x8f9)(hi)
0x140509F8,	//0x180c		VoC_lw16_d(REG5,0x9fd)(lo)	|	VoC_bez16_d(LabelHighRate_exit,0x9f8)(hi)
0xFFC009FD,	//0x180e		VoC_NAD	|	VoC_lw16_d(REG5,0x9fd)(hi)
0x01162B80,	//0x1810		VoC_jal(CII_Adjust_EQ_Curve_VOC)
0x0E4A2B80,	//0x1812		VoC_jal(CII_auDctIV_VOC)
		//0x1814		LabelHighRate_exit
0xFFC0DFA9,	//0x1814		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1816		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1817		CII_auReconCoefficentsHighRate_VOC
0x11921407,	//0x1818		VoC_lw16_d(REG7,0x1192)
0x09041400,	//0x181a		VoC_lw16_d(REG0,0x904)
0x0C371507,	//0x181c		VoC_sw16_d(REG7,0xc37)
0x19D03140,	//0x181e		VoC_bngtz16_r(L_WMA_E_BROKEN_FRAME,REG0)
0x00000A86,	//0x1820		VoC_lw16i(REG6,0x0)
		//0x1822		LOOP_log_start1
0x11933C30,	//0x1822		VoC_bngt16_rd(LOOP_log_end1,REG0,0x1193)
0x0736F908,	//0x1824		VoC_add16_rd(REG6,REG6,0x1193)(lo)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xE5FB1193,	//0x1826		VoC_jump(LOOP_log_start1)	|	VoC_add16_rd(REG6,REG6,0x1193)(hi)
		//0x1828		LOOP_log_end1
0x09400A87,	//0x1828		VoC_lw16i(REG7,0x940)
0x09011400,	//0x182a		VoC_lw16_d(REG0,0x901)
0xC1C7FFC0,	//0x182c		VoC_add16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_NOP
0xD870FFC0,	//0x182e		VoC_lw16_p(REG0,REG7,DEFAULT)	|	VoC_NOP
0x3140FFC0,	//0x1830		VoC_bngtz16_r(L_WMA_E_BROKEN_FRAME,REG0)(lo)	|	VoC_NOP
0x0A8719D0,	//0x1832		VoC_lw16i(REG7,0x0)(lo)	|	VoC_bngtz16_r(L_WMA_E_BROKEN_FRAME,REG0)(hi)
0xFFC00000,	//0x1834		VoC_NAD	|	VoC_lw16i(REG7,0x0)(hi)
		//0x1836		LOOP_log_start2
0x11933C30,	//0x1836		VoC_bngt16_rd(LOOP_log_end2,REG0,0x1193)
0x073FF908,	//0x1838		VoC_add16_rd(REG7,REG7,0x1193)(lo)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xE5FB1193,	//0x183a		VoC_jump(LOOP_log_start2)	|	VoC_add16_rd(REG7,REG7,0x1193)(hi)
		//0x183c		LOOP_log_end2
0x000C0A85,	//0x183c		VoC_lw16i(REG5,0xc)
0xC1ADFFC0,	//0x183e		VoC_add16_rr(REG5,REG6,REG5,DEFAULT)	|	VoC_NOP
0xC37FFFC0,	//0x1840		VoC_sub16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_NOP
0x09A41400,	//0x1842		VoC_lw16_d(REG0,0x9a4)
0x00000A81,	//0x1844		VoC_lw16i(REG1,0x0)
		//0x1846		LOOP_log_start3
0x11933C30,	//0x1846		VoC_bngt16_rd(LOOP_log_end3,REG0,0x1193)
0x0709F908,	//0x1848		VoC_add16_rd(REG1,REG1,0x1193)(lo)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xE5FB1193,	//0x184a		VoC_jump(LOOP_log_start3)	|	VoC_add16_rd(REG1,REG1,0x1193)(hi)
		//0x184c		LOOP_log_end3
0x0A85C274,	//0x184c		VoC_lw16i(REG5,0xa94)(lo)	|	VoC_sub16_rr(REG4,REG1,REG6,DEFAULT)
0xFFC00A94,	//0x184e		VoC_NOP	|	VoC_lw16i(REG5,0xa94)(hi)
0xFFC0C165,	//0x1850		VoC_NOP	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x0A83D855,	//0x1852		VoC_lw16i(REG3,0x1a)(lo)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x0A82001A,	//0x1854		VoC_lw16i(REG2,0xa12)(lo)	|	VoC_lw16i(REG3,0x1a)(hi)
0xC51C0A12,	//0x1856		VoC_mult16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i(REG2,0xa12)(hi)
0xC114FFC0,	//0x1858		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_NOP
0x00000A80,	//0x185a		VoC_lw16i(REG0,0x0)
0x7FFF0AC1,	//0x185c		VoC_lw16i(REG1,0xffffffff)
0x09CE1402,	//0x185e		VoC_lw16_d(REG2,0x9ce)
0x08E46C04,	//0x1860		VoC_bez16_d(Label_Left_subband,0x8e4)
0x09F61402,	//0x1862		VoC_lw16_d(REG2,0x9f6)
		//0x1864		Label_Left_subband
0x08ED1500,	//0x1864		VoC_sw16_d(REG0,0x8ed)
0x08F41501,	//0x1866		VoC_sw16_d(REG1,0x8f4)
0xFFC0C08A,	//0x1868		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG1,DEFAULT)
0x08F21502,	//0x186a		VoC_sw16_d(REG2,0x8f2)
0x09001403,	//0x186c		VoC_lw16_d(REG3,0x900)
0x119D0B3A,	//0x186e		VoC_sub16_dr(REG2,0x119d,REG7)
0x00010A81,	//0x1870		VoC_lw16i(REG1,0x1)
0xFE13DFC2,	//0x1872		VoC_shr16_rr(REG3,REG2,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
		//0x1874		Label_iBarkIncr
0xFFC0C10A,	//0x1874		VoC_NOP	|	VoC_add16_rr(REG2,REG4,REG1,DEFAULT)
0xFFC0C082,	//0x1876		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0xFFC0D822,	//0x1878		VoC_NOP	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x187E3413,	//0x187a		VoC_bgt16_rr(Label_iBarkIncr_stop,REG2,REG3)
0xE5F7C008,	//0x187c		VoC_jump(Label_iBarkIncr)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
		//0x187e		Label_iBarkIncr_stop
0xDFC5DFC7,	//0x187e		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xDFC0DFC4,	//0x1880		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x09C60A86,	//0x1882		VoC_lw16i(REG6,0x9c6)
0x08E46C04,	//0x1884		VoC_bez16_d(Label_LeftChannelInfo1,0x8e4)
0x09EE0A86,	//0x1886		VoC_lw16i(REG6,0x9ee)
		//0x1888		Label_LeftChannelInfo1
0x0B532B80,	//0x1888		VoC_jal(CII_prvGetNextRunDEC_VOC)
0x08EC1401,	//0x188a		VoC_lw16_d(REG1,0x8ec)
0x09001403,	//0x188c		VoC_lw16_d(REG3,0x900)
0x11930709,	//0x188e		VoC_add16_rd(REG1,REG1,0x1193)
0xC0CBFFC0,	//0x1890		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_NOP
0x1503FFC0,	//0x1892		VoC_sw16_d(REG3,0x900)(lo)	|	VoC_NOP
0xFFC00900,	//0x1894		VoC_NAD	|	VoC_sw16_d(REG3,0x900)(hi)
		//0x1896		LOOP_iBark_start
0x09001401,	//0x1896		VoC_lw16_d(REG1,0x900)
0xD635D610,	//0x1898		VoC_lw16_sd(REG5,0x2,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x08F24821,	//0x189a		VoC_blt16_rd(LOOP_iBark_con1,REG1,0x8f2)
0x19562B00,	//0x189c		VoC_jump_lg(LOOP_iBark_end)
		//0x189e		LOOP_iBark_con1
0x18A23428,	//0x189e		VoC_bgt16_rr(LOOP_iBark_con2,REG5,REG0)
0x19562B00,	//0x18a0		VoC_jump_lg(LOOP_iBark_end)
		//0x18a2		LOOP_iBark_con2
0x09001401,	//0x18a2		VoC_lw16_d(REG1,0x900)
0xD624D657,	//0x18a4		VoC_lw16_sd(REG4,0x1,DEFAULT)	|	VoC_lw16_sd(REG7,0x4,DEFAULT)
0xFFC07E39,	//0x18a6		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG7,DEFAULT)
		//0x18a8		LOOP_Label_iBarkIncr
0x11930727,	//0x18a8		VoC_add16_rd(REG7,REG4,0x1193)
0xC1C7FFC0,	//0x18aa		VoC_add16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_NOP
0xD877FFC0,	//0x18ac		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_NOP
0x3439FFC0,	//0x18ae		VoC_bgt16_rr(LOOP_Label_iBarkIncr_stop,REG7,REG1)(lo)	|	VoC_NOP
0x070018B4,	//0x18b0		VoC_add16_rd(REG0,REG0,0x1193)(lo)	|	VoC_bgt16_rr(LOOP_Label_iBarkIncr_stop,REG7,REG1)(hi)
0xE5F51193,	//0x18b2		VoC_jump(LOOP_Label_iBarkIncr)	|	VoC_add16_rd(REG0,REG0,0x1193)(hi)
		//0x18b4		LOOP_Label_iBarkIncr_stop
0x34A8DA10,	//0x18b4		VoC_bngt16_rr(LOOP_iBark_end,REG5,REG0)(lo)	|	VoC_sw16_sd(REG0,0x0,DEFAULT)
0x45991956,	//0x18b6		VoC_bne16_rd(LOOP_Label_iNextBark_else,REG1,0x8f4)(lo)	|	VoC_bngt16_rr(LOOP_iBark_end,REG5,REG0)(hi)
0x0A1F08F4,	//0x18b8		VoC_multf32_rd(RL7,REG3,0x8ed)(lo)	|	VoC_bne16_rd(LOOP_Label_iNextBark_else,REG1,0x8f4)(hi)
0x0A1408ED,	//0x18ba		VoC_multf32_rd(ACC0,REG2,0x8ed)(lo)	|	VoC_multf32_rd(RL7,REG3,0x8ed)(hi)
		//0x18bb		CII_prvDecodeFrameHeaderNoiseSub_VOC
0xFFC008ED,	//0x18bc		VoC_NOP	|	VoC_multf32_rd(ACC0,REG2,0x8ed)(hi)
0xFC74FDFF,	//0x18be		VoC_shru32_ri(ACC0,0xe,DEFAULT)	|	VoC_shru32_ri(RL7,0xffffffff,DEFAULT)
0xC9E7FFC0,	//0x18c0		VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_NOP
0xFEF7FFC0,	//0x18c2		VoC_shru32_rr(RL7,REG6,DEFAULT)	|	VoC_NOP
0x1587FFC0,	//0x18c4		VoC_sw32_d(RL7,0x2552)(lo)	|	VoC_NOP
0xFFC02552,	//0x18c6		VoC_NAD	|	VoC_sw32_d(RL7,0x2552)(hi)
0x17162B80,	//0x18c8		VoC_jal(CII_prvWeightedQuantization_VOC)
0x25521487,	//0x18ca		VoC_lw32_d(RL7,0x2552)
0x00140A80,	//0x18cc		VoC_lw16i(REG0,0x14)
0xF90AE186,	//0x18ce		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_movreg16(REG6,RL6_LO,DEFAULT)
0xE5D7C386,	//0x18d0		VoC_jump(LOOP_Label_iNextBark_end)	|	VoC_sub16_rr(REG6,REG6,REG0,DEFAULT)
		//0x18d2		LOOP_Label_iNextBark_else
0x25521587,	//0x18d2		VoC_sw32_d(RL7,0x2552)
0x17162B80,	//0x18d4		VoC_jal(CII_prvWeightedQuantization_VOC)
0x25521487,	//0x18d6		VoC_lw32_d(RL7,0x2552)
0x00140A80,	//0x18d8		VoC_lw16i(REG0,0x14)
0xF90AE186,	//0x18da		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_movreg16(REG6,RL6_LO,DEFAULT)
0x0A1FC386,	//0x18dc		VoC_multf32_rd(RL7,REG3,0x8ed)(lo)	|	VoC_sub16_rr(REG6,REG6,REG0,DEFAULT)
0x0A1408ED,	//0x18de		VoC_multf32_rd(ACC0,REG2,0x8ed)(lo)	|	VoC_multf32_rd(RL7,REG3,0x8ed)(hi)
0xFFC008ED,	//0x18e0		VoC_NOP	|	VoC_multf32_rd(ACC0,REG2,0x8ed)(hi)
0xFC74FDFF,	//0x18e2		VoC_shru32_ri(ACC0,0xe,DEFAULT)	|	VoC_shru32_ri(RL7,0xffffffff,DEFAULT)
0xC9E7FFC0,	//0x18e4		VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_NOP
0xFEF7FFC0,	//0x18e6		VoC_shru32_rr(RL7,REG6,DEFAULT)	|	VoC_NOP
		//0x18e8		LOOP_Label_iNextBark_end
0x0A81D610,	//0x18e8		VoC_lw16i(REG1,0x1)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xD6240001,	//0x18ea		VoC_lw16_sd(REG4,0x1,DEFAULT)	|	VoC_lw16i(REG1,0x1)(hi)
0xD657C008,	//0x18ec		VoC_lw16_sd(REG7,0x4,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0xC07DC104,	//0x18ee		VoC_add16_rr(REG5,REG1,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG0,DEFAULT)
0x3247D844,	//0x18f0		VoC_bnltz16_r(Label_RatioPowNGT12,REG7)(lo)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xFE2918F8,	//0x18f2		VoC_shr16_rr(REG1,REG5,DEFAULT)	|	VoC_bnltz16_r(Label_RatioPowNGT12,REG7)(hi)
0xC10CFFC0,	//0x18f4		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_NOP
0xFFC07FC0,	//0x18f6		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x18f8		Label_RatioPowNGT12
0x11920B3F,	//0x18f8		VoC_sub16_dr(REG7,0x1192,REG7)
0xFE3CFFC0,	//0x18fa		VoC_shr16_rr(REG4,REG7,DEFAULT)	|	VoC_NOP
0x00010A81,	//0x18fc		VoC_lw16i(REG1,0x1)
0xFFC0C30C,	//0x18fe		VoC_NOP	|	VoC_sub16_rr(REG4,REG4,REG1,DEFAULT)
0x08F23C34,	//0x1900		VoC_bngt16_rd(Label_GThighCutOff,REG4,0x8f2)
0x08F21404,	//0x1902		VoC_lw16_d(REG4,0x8f2)
0xFFC07FC0,	//0x1904		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x1906		Label_GThighCutOff
0x08F41504,	//0x1906		VoC_sw16_d(REG4,0x8f4)
		//0x1908		LOOP_piRecon_start
0xFF45FF3C,	//0x1908		VoC_lw32z(ACC1,DEFAULT)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0x08F06C04,	//0x190a		VoC_bez16_d(Label_Positive,0x8f0)
0xFFC04B7C,	//0x190c		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC1,RL7,DEFAULT)
		//0x190e		Label_Positive
0x09D51404,	//0x190e		VoC_lw16_d(REG4,0x9d5)
0x08E46C04,	//0x1910		VoC_bez16_d(Label_Left_rgiCoefRecon,0x8e4)
0x09FD1404,	//0x1912		VoC_lw16_d(REG4,0x9fd)
		//0x1914		Label_Left_rgiCoefRecon
0x09001405,	//0x1914		VoC_lw16_d(REG5,0x900)
0xF8FDFFC0,	//0x1916		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_NOP
0xC12CFFC0,	//0x1918		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_NOP
0xDDA4FFC0,	//0x191a		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_NOP
0x1587DFC6,	//0x191c		VoC_sw32_d(RL7,0x2552)(lo)	|	VoC_push16(REG6,DEFAULT)
0x15862552,	//0x191e		VoC_sw32_d(RL6,0x2554)(lo)	|	VoC_sw32_d(RL7,0x2552)(hi)
0x15812554,	//0x1920		VoC_sw32_d(REG23,0x2556)(lo)	|	VoC_sw32_d(RL6,0x2554)(hi)
0x0A862556,	//0x1922		VoC_lw16i(REG6,0x9c6)(lo)	|	VoC_sw32_d(REG23,0x2556)(hi)
0x6C0509C6,	//0x1924		VoC_bez16_d(Label_LeftChannelInfo2,0x8e4)(lo)	|	VoC_lw16i(REG6,0x9c6)(hi)
0x0A8608E4,	//0x1926		VoC_lw16i(REG6,0x9ee)(lo)	|	VoC_bez16_d(Label_LeftChannelInfo2,0x8e4)(hi)
0xFFC009EE,	//0x1928		VoC_NAD	|	VoC_lw16i(REG6,0x9ee)(hi)
		//0x192a		Label_LeftChannelInfo2
0x0B532B80,	//0x192a		VoC_jal(CII_prvGetNextRunDEC_VOC)
0x25521487,	//0x192c		VoC_lw32_d(RL7,0x2552)
0x25541486,	//0x192e		VoC_lw32_d(RL6,0x2554)
0x25561481,	//0x1930		VoC_lw32_d(REG23,0x2556)
0x0A81DF86,	//0x1932		VoC_lw16i(REG1,0x1)(lo)	|	VoC_pop16(REG6,DEFAULT)
0x14050001,	//0x1934		VoC_lw16_d(REG5,0x900)(lo)	|	VoC_lw16i(REG1,0x1)(hi)
0x07090900,	//0x1936		VoC_add16_rd(REG1,REG1,0x8ec)(lo)	|	VoC_lw16_d(REG5,0x900)(hi)
0xFFC008EC,	//0x1938		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x8ec)(hi)
0xFFC0C14D,	//0x193a		VoC_NOP	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0x09001505,	//0x193c		VoC_sw16_d(REG5,0x900)
0x08F44CBD,	//0x193e		VoC_bnlt16_rd(LOOP_piRecon_break,REG5,0x8f4)
0x08ED0A1F,	//0x1940		VoC_multf32_rd(RL7,REG3,0x8ed)
0x08ED0A14,	//0x1942		VoC_multf32_rd(ACC0,REG2,0x8ed)
0xFDFFFFC0,	//0x1944		VoC_shru32_ri(RL7,0xffffffff,DEFAULT)	|	VoC_NOP
0xFFC0FC74,	//0x1946		VoC_NOP	|	VoC_shru32_ri(ACC0,0xe,DEFAULT)
0xFFC0C9E7,	//0x1948		VoC_NOP	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0x2B00FEF7,	//0x194a		VoC_jump_lg(LOOP_piRecon_start)(lo)	|	VoC_shru32_rr(RL7,REG6,DEFAULT)
0xD6101908,	//0x194c		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_jump_lg(LOOP_piRecon_start)(hi)
		//0x194d		LOOP_piRecon_break
0x0700FFC0,	//0x194e		VoC_add16_rd(REG0,REG0,0x1193)(lo)	|	VoC_NOP
0xFFC01193,	//0x1950		VoC_NOP	|	VoC_add16_rd(REG0,REG0,0x1193)(hi)
0x2B00DA10,	//0x1952		VoC_jump_lg(LOOP_iBark_start)(lo)	|	VoC_sw16_sd(REG0,0x0,DEFAULT)
0xFFC01896,	//0x1954		VoC_NAD	|	VoC_jump_lg(LOOP_iBark_start)(hi)
		//0x1956		LOOP_iBark_end
0x09001405,	//0x1956		VoC_lw16_d(REG5,0x900)
0x402DFFC0,	//0x1958		VoC_be16_rd(Label_NEhighcutoff_not,REG5,0x8f2)(lo)	|	VoC_NOP
0x2B0008F2,	//0x195a		VoC_jump_lg(Label_NEhighcutoff)(lo)	|	VoC_be16_rd(Label_NEhighcutoff_not,REG5,0x8f2)(hi)
0xFFC019A2,	//0x195c		VoC_NAD	|	VoC_jump_lg(Label_NEhighcutoff)(hi)
		//0x195e		Label_NEhighcutoff_not
0x08F43825,	//0x195e		VoC_bgt16_rd(Label_LTiNextBark_not,REG5,0x8f4)
0x19822B00,	//0x1960		VoC_jump_lg(Label_LTiNextBark)
		//0x1962		Label_LTiNextBark_not
0xD610D651,	//0x1962		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16_sd(REG1,0x4,DEFAULT)
0xD624FE0D,	//0x1964		VoC_lw16_sd(REG4,0x1,DEFAULT)	|	VoC_shr16_rr(REG5,REG1,DEFAULT)
		//0x1965		LOOP_iBark_start2
0x00010A81,	//0x1966		VoC_lw16i(REG1,0x1)
0xFFC0C104,	//0x1968		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG0,DEFAULT)
0xFFC0D844,	//0x196a		VoC_NOP	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x19753425,	//0x196c		VoC_bgt16_rr(LOOP_iBark_break,REG4,REG5)
0xD637C20C,	//0x196e		VoC_lw16_sd(REG7,0x2,DEFAULT)	|	VoC_sub16_rr(REG4,REG0,REG1,DEFAULT)
0x34BCFFC0,	//0x1970		VoC_bngt16_rr(LOOP_iBark_break,REG7,REG4)(lo)	|	VoC_NOP
0xC0081975,	//0x1972		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bngt16_rr(LOOP_iBark_break,REG7,REG4)(hi)
0xDA10E5F1,	//0x1974		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_jump(LOOP_iBark_start2)
		//0x1975		LOOP_iBark_break
0xFFC0C208,	//0x1976		VoC_NOP	|	VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)
0x19823407,	//0x1978		VoC_bgt16_rr(Label_LTiNextBark,REG0,REG7)
0x17162B80,	//0x197a		VoC_jal(CII_prvWeightedQuantization_VOC)
0x00140A80,	//0x197c		VoC_lw16i(REG0,0x14)
0xF90AE186,	//0x197e		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_movreg16(REG6,RL6_LO,DEFAULT)
0xFFC04386,	//0x1980		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG0,DEFAULT)
		//0x1982		Label_LTiNextBark
0x08ED0A1F,	//0x1982		VoC_multf32_rd(RL7,REG3,0x8ed)
0x08ED0A14,	//0x1984		VoC_multf32_rd(ACC0,REG2,0x8ed)
0xFDFFFFC0,	//0x1986		VoC_shru32_ri(RL7,0xffffffff,DEFAULT)	|	VoC_NOP
0xFFC0FC74,	//0x1988		VoC_NOP	|	VoC_shru32_ri(ACC0,0xe,DEFAULT)
0xFFC0C9E7,	//0x198a		VoC_NOP	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0xFFC0FEF7,	//0x198c		VoC_NOP	|	VoC_shru32_rr(RL7,REG6,DEFAULT)
0xFF45FF3C,	//0x198e		VoC_lw32z(ACC1,DEFAULT)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0x08F06C04,	//0x1990		VoC_bez16_d(Label_Positive2,0x8f0)
0xFFC04B7C,	//0x1992		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC1,RL7,DEFAULT)
		//0x1994		Label_Positive2
0x09D51404,	//0x1994		VoC_lw16_d(REG4,0x9d5)
0x08E46C04,	//0x1996		VoC_bez16_d(Label_Left_rgiCoefRecon2,0x8e4)
0x09FD1404,	//0x1998		VoC_lw16_d(REG4,0x9fd)
		//0x199a		Label_Left_rgiCoefRecon2
0x09001405,	//0x199a		VoC_lw16_d(REG5,0x900)
0xF8FDFFC0,	//0x199c		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_NOP
0xC12CFFC0,	//0x199e		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_NOP
0xDDA4FFC0,	//0x19a0		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_NOP
		//0x19a2		Label_NEhighcutoff
0x09A51407,	//0x19a2		VoC_lw16_d(REG7,0x9a5)
0x00010A81,	//0x19a4		VoC_lw16i(REG1,0x1)
0x09D51400,	//0x19a6		VoC_lw16_d(REG0,0x9d5)
0x08E46C04,	//0x19a8		VoC_bez16_d(Label_Left_rgiCoefRecon3,0x8e4)
0x09FD1400,	//0x19aa		VoC_lw16_d(REG0,0x9fd)
		//0x19ac		Label_Left_rgiCoefRecon3
0xFF45F050,	//0x19ac		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
		//0x19ae		LOOP_memset_start
0x19B43147,	//0x19ae		VoC_bngtz16_r(LOOP_memset_end,REG7)
0xC3CFDDC5,	//0x19b0		VoC_sub16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xFFC065FC,	//0x19b2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LOOP_memset_start)
		//0x19b4		LOOP_memset_end
0x08FC1405,	//0x19b4		VoC_lw16_d(REG5,0x8fc)
0x09D51400,	//0x19b6		VoC_lw16_d(REG0,0x9d5)
0x08E46C04,	//0x19b8		VoC_bez16_d(Label_Left_rgiCoefRecon4,0x8e4)
0x09FD1400,	//0x19ba		VoC_lw16_d(REG0,0x9fd)
		//0x19bc		Label_Left_rgiCoefRecon4
0x09A607AD,	//0x19bc		VoC_sub16_rd(REG5,REG5,0x9a6)
0x09A60700,	//0x19be		VoC_add16_rd(REG0,REG0,0x9a6)
0x0700FFC0,	//0x19c0		VoC_add16_rd(REG0,REG0,0x9a6)(lo)	|	VoC_NOP
0xFFC009A6,	//0x19c2		VoC_NAD	|	VoC_add16_rd(REG0,REG0,0x9a6)(hi)
		//0x19c4		LOOP_memset2_start
0x19C93145,	//0x19c4		VoC_bngtz16_r(LOOP_memset2_end,REG5)
0xC34DDDC5,	//0x19c6		VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xDF80E5FC,	//0x19c8		VoC_pop16(REG0,DEFAULT)	|	VoC_jump(LOOP_memset2_start)
		//0x19c9		LOOP_memset2_end
0xDF80DF80,	//0x19ca		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xDF80DF80,	//0x19cc		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xFFC065C7,	//0x19ce		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_return_WMA_OK)
		//0x19d0		L_WMA_E_BROKEN_FRAME
0x04020AC7,	//0x19d0		VoC_lw16i(REG7,0x8402)
0x1507FFC0,	//0x19d2		VoC_sw16_d(REG7,0xc37)(lo)	|	VoC_NOP
0xDFA90C37,	//0x19d4		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG7,0xc37)(hi)
		//0x19d5		Label_return_WMA_OK
0xE580FFC0,	//0x19d6		VoC_return	|	VoC_NOP
		//0x19d8		CII_SetActualPowerHighRate_VOC
0x08F91401,	//0x19d8		VoC_lw16_d(REG1,0x8f9)
0x09D20A84,	//0x19da		VoC_lw16i(REG4,0x9d2)
0x09D51400,	//0x19dc		VoC_lw16_d(REG0,0x9d5)
0x00000A87,	//0x19de		VoC_lw16i(REG7,0x0)
0x00030A86,	//0x19e0		VoC_lw16i(REG6,0x3)
0x09D06C2B,	//0x19e2		VoC_bez16_d(Label_SetActualPowerHighRate_else,0x9d0)
0x08F64026,	//0x19e4		VoC_be16_rd(SPLabel_channel_finish_not,REG6,0x8f6)
0x1A1A2B00,	//0x19e6		VoC_jump_lg(SPLabel_channel_finish)
		//0x19e8		SPLabel_channel_finish_not
0x09D56C32,	//0x19e8		VoC_bez16_d(SPLabel_channel_finish,0x9d5)
0xFFC065D2,	//0x19ea		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Label_SetActualPowerHighRate)
		//0x19ec		SAPLabel_rightchannel
0x09FA0A84,	//0x19ec		VoC_lw16i(REG4,0x9fa)
0x09FD1400,	//0x19ee		VoC_lw16_d(REG0,0x9fd)
0x00000A87,	//0x19f0		VoC_lw16i(REG7,0x0)
0x00030A86,	//0x19f2		VoC_lw16i(REG6,0x3)
0x09F86C19,	//0x19f4		VoC_bez16_d(Label_SetActualPowerHighRate_else,0x9f8)
0x08F64026,	//0x19f6		VoC_be16_rd(SPLabel_channel_con,REG6,0x8f6)
0x1A1A2B00,	//0x19f8		VoC_jump_lg(SPLabel_channel_finish)
		//0x19fa		SPLabel_channel_con
0x09FD6C20,	//0x19fa		VoC_bez16_d(SPLabel_channel_finish,0x9fd)
		//0x19fc		Label_SetActualPowerHighRate
0x0A86F050,	//0x19fc		VoC_lw16i(REG6,0x0)(lo)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x0A850000,	//0x19fe		VoC_lw16i(REG5,0x1)(lo)	|	VoC_lw16i(REG6,0x0)(hi)
0xFFC00001,	//0x1a00		VoC_NAD	|	VoC_lw16i(REG5,0x1)(hi)
		//0x1a02		SAPHRLoop_incr
0x08FC4D86,	//0x1a02		VoC_bnlt16_rd(SPLabel_channel_finish,REG6,0x8fc)
0xFFC0D9C1,	//0x1a04		VoC_NOP	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x1A0B3301,	//0x1a06		VoC_bez32_r(SAPHRLabel_jump,REG23)
0x00010A87,	//0x1a08		VoC_lw16i(REG7,0x1)
0xC1AEE5D0,	//0x1a0a		VoC_add16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_jump(SPLabel_channel_finish)
		//0x1a0b		SAPHRLabel_jump
0xF050E5F6,	//0x1a0c		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_jump(SAPHRLoop_incr)
		//0x1a0d		Label_SetActualPowerHighRate_else
0x00000A86,	//0x1a0e		VoC_lw16i(REG6,0x0)
0x00010A85,	//0x1a10		VoC_lw16i(REG5,0x1)
0xFFC07F41,	//0x1a12		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(REG23,DEFAULT)
		//0x1a14		Loop_else_incr
0x08FC4C36,	//0x1a14		VoC_bnlt16_rd(SPLabel_channel_finish,REG6,0x8fc)
0xC1AEDDC1,	//0x1a16		VoC_add16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_sw32inc_p(REG23,REG0,DEFAULT)
0xFFC065FC,	//0x1a18		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Loop_else_incr)
		//0x1a1a		SPLabel_channel_finish
0x00010A85,	//0x1a1a		VoC_lw16i(REG5,0x1)
0xC269DC47,	//0x1a1c		VoC_sub16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
0xFFC065C2,	//0x1a1e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SAPHRLabel_continue)
		//0x1a20		SAPHRLabel_continue
0x19EC31C1,	//0x1a20		VoC_bnez16_r(SAPLabel_rightchannel,REG1)
0xFFC0E580,	//0x1a22		VoC_NAD	|	VoC_return
