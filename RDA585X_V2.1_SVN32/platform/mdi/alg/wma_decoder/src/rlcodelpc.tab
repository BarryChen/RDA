		//0x1600		VoC_code_section_1
		//0x1600		CII_prvConvolve
0x269A1406,	//0x1600		VoC_lw16_d(REG6,0x269a)
0x269B1407,	//0x1602		VoC_lw16_d(REG7,0x269b)
0x1805F030,	//0x1604		VoC_lw16i_set_inc(REG1,0x26e6,0x1)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x0A8426E6,	//0x1606		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i_set_inc(REG1,0x26e6,0x1)(hi)
0xEC010000,	//0x1608		VoC_loop_i_short(0x20,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
		//0x160a		VoC_endloop0
0x0A81DC94,	//0x160a		VoC_lw16i(REG1,0x0)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xFFC00000,	//0x160c		VoC_NAD	|	VoC_lw16i(REG1,0x0)(hi)
		//0x160e		LOOP1_START
0x00000A80,	//0x160e		VoC_lw16i(REG0,0x0)
		//0x1610		LOOP1_2_START
0x0A84E005,	//0x1610		VoC_lw16i(REG4,0x25cc)(lo)	|	VoC_movreg16(REG5,REG0,DEFAULT)
0xF8FD25CC,	//0x1612		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_lw16i(REG4,0x25cc)(hi)
0xC242C164,	//0x1614		VoC_sub16_rr(REG2,REG1,REG0,DEFAULT)	|	VoC_add16_rr(REG4,REG5,REG4,DEFAULT)
0x25D20A83,	//0x1616		VoC_lw16i(REG3,0x25d2)
0xF8FAD9A6,	//0x1618		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_lw32_p(RL6,REG4,DEFAULT)
0xFFC0C09B,	//0x161a		VoC_NOP	|	VoC_add16_rr(REG3,REG2,REG3,DEFAULT)
0x0A96D99F,	//0x161c		VoC_lw16i(STATUS,0x20)(lo)	|	VoC_lw32_p(RL7,REG3,DEFAULT)
0xDFC20020,	//0x161e		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i(STATUS,0x20)(hi)
0xFF31F7D9,	//0x1620		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffe,DEFAULT)
0xF90AFF3A,	//0x1622		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xF1BAF90C,	//0x1624		VoC_lw16i_short(FORMATX,0xd,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCE55CCEC,	//0x1626		VoC_macX_rr(REG2,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)
0xF019CE5C,	//0x1628		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_macX_rr(REG3,REG4,DEFAULT)
0xF39AE025,	//0x162a		VoC_lw16i_short(FORMATX,0x1c,DEFAULT)	|	VoC_movreg16(REG5,REG1,DEFAULT)
0xFFC0CE54,	//0x162c		VoC_NOP	|	VoC_macX_rr(REG2,REG4,DEFAULT)
0xF01ADF82,	//0x162e		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x26E60A84,	//0x1630		VoC_lw16i(REG4,0x26e6)
0x00600A96,	//0x1632		VoC_lw16i(STATUS,0x60)
0x00480A96,	//0x1634		VoC_lw16i(STATUS,0x48)
0xC164F8FD,	//0x1636		VoC_add16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0x9126DE00,	//0x1638		VoC_add32_rp(RL6,ACC0,REG4,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xDDA6FFC0,	//0x163a		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_NOP
0x00080A96,	//0x163c		VoC_lw16i(STATUS,0x8)
0x16103481,	//0x163e		VoC_bngt16_rr(LOOP1_2_START,REG0,REG1)
0x3431DE08,	//0x1640		VoC_bgt16_rr(THE_SECOND_JUDGE,REG6,REG1)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0xE5C31644,	//0x1642		VoC_jump(LOOP1_END)	|	VoC_bgt16_rr(THE_SECOND_JUDGE,REG6,REG1)(hi)
		//0x1644		THE_SECOND_JUDGE
0x160E3439,	//0x1644		VoC_bgt16_rr(LOOP1_START,REG7,REG1)
		//0x1646		LOOP1_END
0x00200A96,	//0x1646		VoC_lw16i(STATUS,0x20)
0xC1B8E0C2,	//0x1648		VoC_add16_rr(REG0,REG6,REG7,DEFAULT)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0x26E60A81,	//0x164a		VoC_lw16i(REG1,0x26e6)
0x0A84F8FA,	//0x164c		VoC_lw16i(REG4,0x0)(lo)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0xC0510000,	//0x164e		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0xDC94E601,	//0x1650		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_r_short(REG0,DEFAULT)
		//0x1651		VoC_endloop0
0xE0C1C1BB,	//0x1652		VoC_movreg16(REG1,REG6,DEFAULT)	|	VoC_add16_rr(REG3,REG6,REG7,DEFAULT)
0x341EF80B,	//0x1654		VoC_bgt16_rr(LOOP2_START,REG3,REG6)(lo)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0x2B00165A,	//0x1656		VoC_jump_lg(LOOP2_END)(lo)	|	VoC_bgt16_rr(LOOP2_START,REG3,REG6)(hi)
0xFFC01693,	//0x1658		VoC_NAD	|	VoC_jump_lg(LOOP2_END)(hi)
		//0x165a		LOOP2_START
0x00000A80,	//0x165a		VoC_lw16i(REG0,0x0)
		//0x165c		LOOP2_2_START
0x0A84E005,	//0x165c		VoC_lw16i(REG4,0x25cc)(lo)	|	VoC_movreg16(REG5,REG0,DEFAULT)
0xF8FD25CC,	//0x165e		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_lw16i(REG4,0x25cc)(hi)
0xC242C164,	//0x1660		VoC_sub16_rr(REG2,REG1,REG0,DEFAULT)	|	VoC_add16_rr(REG4,REG5,REG4,DEFAULT)
0xF8FAD9A6,	//0x1662		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_lw32_p(RL6,REG4,DEFAULT)
0x25D20A84,	//0x1664		VoC_lw16i(REG4,0x25d2)
0x0A96C0A4,	//0x1666		VoC_lw16i(STATUS,0x60)(lo)	|	VoC_add16_rr(REG4,REG2,REG4,DEFAULT)
0xD9A70060,	//0x1668		VoC_lw32_p(RL7,REG4,DEFAULT)	|	VoC_lw16i(STATUS,0x60)(hi)
0xE1E5E1A4,	//0x166a		VoC_movreg16(REG5,RL7_HI,DEFAULT)	|	VoC_movreg16(REG4,RL6_HI,DEFAULT)
0xE1C5CD2C,	//0x166c		VoC_movreg16(REG5,RL7_LO,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG5,DEFAULT)
0xFDF4E1A4,	//0x166e		VoC_shru32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_movreg16(REG4,RL6_HI,DEFAULT)
0xCD2DF90D,	//0x1670		VoC_multf32_rr(ACC1,REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0xE1E5E184,	//0x1672		VoC_movreg16(REG5,RL7_HI,DEFAULT)	|	VoC_movreg16(REG4,RL6_LO,DEFAULT)
0xCD2AF90C,	//0x1674		VoC_multf32_rr(REG45,REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xC955FFC0,	//0x1676		VoC_add32_rr(ACC1,ACC1,REG45,DEFAULT)	|	VoC_NOP
0xE1C5E184,	//0x1678		VoC_movreg16(REG5,RL7_LO,DEFAULT)	|	VoC_movreg16(REG4,RL6_LO,DEFAULT)
0xC92CFA6D,	//0x167a		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xd,DEFAULT)
0xF90DF90C,	//0x167c		VoC_shru16_ri(REG5,0x1,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xE025CD2D,	//0x167e		VoC_movreg16(REG5,REG1,DEFAULT)	|	VoC_multf32_rr(ACC1,REG4,REG5,DEFAULT)
0x26E60A84,	//0x1680		VoC_lw16i(REG4,0x26e6)
0xC92CFAE5,	//0x1682		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x1c,DEFAULT)
0x00480A96,	//0x1684		VoC_lw16i(STATUS,0x48)
0xC164F8FD,	//0x1686		VoC_add16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0x9126DE00,	//0x1688		VoC_add32_rp(RL6,ACC0,REG4,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xDDA6FFC0,	//0x168a		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_NOP
0x00080A96,	//0x168c		VoC_lw16i(STATUS,0x8)
0x165C3430,	//0x168e		VoC_bgt16_rr(LOOP2_2_START,REG6,REG0)
0x3419DE08,	//0x1690		VoC_bgt16_rr(LOOP2_START,REG3,REG1)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0xC1BF165A,	//0x1692		VoC_add16_rr(REG7,REG6,REG7,DEFAULT)	|	VoC_bgt16_rr(LOOP2_START,REG3,REG1)(hi)
		//0x1693		LOOP2_END
0x00010A84,	//0x1694		VoC_lw16i(REG4,0x1)
0x1804C3E7,	//0x1696		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_sub16_rr(REG7,REG7,REG4,DEFAULT)
0x15070000,	//0x1698		VoC_sw16_d(REG7,0x269b)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0xE0E4269B,	//0x169a		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_sw16_d(REG7,0x269b)(hi)
0xE003F80C,	//0x169c		VoC_movreg16(REG3,REG0,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x169d		LOOP3_START
0x26E60A81,	//0x169e		VoC_lw16i(REG1,0x26e6)
0x0A82F8FB,	//0x16a0		VoC_lw16i(REG2,0x25d2)(lo)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0xC05925D2,	//0x16a2		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16i(REG2,0x25d2)(hi)
0xD98EC09A,	//0x16a4		VoC_lw32_p(RL6,REG1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x00010A83,	//0x16a6		VoC_lw16i(REG3,0x1)
0xDD96C0C3,	//0x16a8		VoC_sw32_p(RL6,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG0,DEFAULT)
0x0A82C3DB,	//0x16aa		VoC_lw16i(REG2,0x25d2)(lo)	|	VoC_sub16_rr(REG3,REG7,REG3,DEFAULT)
0xF8FB25D2,	//0x16ac		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_lw16i(REG2,0x25d2)(hi)
0xDE00C09A,	//0x16ae		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x3420DD96,	//0x16b0		VoC_bgt16_rr(LOOP3_START,REG4,REG0)(lo)	|	VoC_sw32_p(RL6,REG2,DEFAULT)
0x1407169D,	//0x16b2		VoC_lw16_d(REG7,0x269b)(lo)	|	VoC_bgt16_rr(LOOP3_START,REG4,REG0)(hi)
0xFFC0269B,	//0x16b4		VoC_NOP	|	VoC_lw16_d(REG7,0x269b)(hi)
0x00011607,	//0x16b6		VoC_and16_ri(REG7,0x1)
0x3187F8F8,	//0x16b8		VoC_bez16_r(Function_Over,REG7)(lo)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x0A8116C4,	//0x16ba		VoC_lw16i(REG1,0x26e6)(lo)	|	VoC_bez16_r(Function_Over,REG7)(hi)
0x0A8226E6,	//0x16bc		VoC_lw16i(REG2,0x25d2)(lo)	|	VoC_lw16i(REG1,0x26e6)(hi)
0xC04125D2,	//0x16be		VoC_add16_rr(REG1,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG2,0x25d2)(hi)
0xD98EC082,	//0x16c0		VoC_lw32_p(RL6,REG1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0xDD96FFC0,	//0x16c2		VoC_sw32_p(RL6,REG2,DEFAULT)	|	VoC_NOP
		//0x16c4		Function_Over
0xDFE9E580,	//0x16c4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x16c5		CII_auLsp2lpc
0x00030A82,	//0x16c6		VoC_lw16i(REG2,0x3)
0x00020A80,	//0x16c8		VoC_lw16i(REG0,0x2)
0x269A1502,	//0x16ca		VoC_sw16_d(REG2,0x269a)
0x25D20A85,	//0x16cc		VoC_lw16i(REG5,0x25d2)
0x00000A82,	//0x16ce		VoC_lw16i(REG2,0x0)
0x08000A83,	//0x16d0		VoC_lw16i(REG3,0x800)
0x269B1500,	//0x16d2		VoC_sw16_d(REG0,0x269b)
0xC145DDA9,	//0x16d4		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_sw32_p(REG23,REG5,DEFAULT)
0x40000A87,	//0x16d6		VoC_lw16i(REG7,0x4000)
0x0A86DDA9,	//0x16d8		VoC_lw16i(REG6,0x0)(lo)	|	VoC_sw32_p(REG23,REG5,DEFAULT)
0x0A850000,	//0x16da		VoC_lw16i(REG5,0x25cc)(lo)	|	VoC_lw16i(REG6,0x0)(hi)
0xF8F825CC,	//0x16dc		VoC_shr16_ri(REG0,0xffffffff,DEFAULT)	|	VoC_lw16i(REG5,0x25cc)(hi)
0xC145DDAB,	//0x16de		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_sw32_p(REG67,REG5,DEFAULT)
0x00000A80,	//0x16e0		VoC_lw16i(REG0,0x0)
0x1407DDAB,	//0x16e2		VoC_lw16_d(REG7,0x269c)(lo)	|	VoC_sw32_p(REG67,REG5,DEFAULT)
0xE001269C,	//0x16e4		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16_d(REG7,0x269c)(hi)
		//0x16e5		LOOP_prvConvolve
0x269E0A82,	//0x16e6		VoC_lw16i(REG2,0x269e)
0xF8E1C082,	//0x16e8		VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x0A858056,	//0x16ea		VoC_lw16i(REG5,0xca0)(lo)	|	VoC_add16_rp(REG6,REG1,REG2,DEFAULT)
0xF8FE0CA0,	//0x16ec		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_lw16i(REG5,0xca0)(hi)
0x0A86C1AD,	//0x16ee		VoC_lw16i(REG6,0x2)(lo)	|	VoC_add16_rr(REG5,REG6,REG5,DEFAULT)
0xD9AE0002,	//0x16f0		VoC_lw32_p(RL6,REG5,DEFAULT)	|	VoC_lw16i(REG6,0x2)(hi)
0x25CC0A85,	//0x16f2		VoC_lw16i(REG5,0x25cc)
0xDFC7C175,	//0x16f4		VoC_push16(REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xDDAEDFC0,	//0x16f6		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x16002B80,	//0x16f8		VoC_jal(CII_prvConvolve)
0xDF80F050,	//0x16fa		VoC_pop16(REG0,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xDE00DF87,	//0x16fc		VoC_inc_p(REG0,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x16E53438,	//0x16fe		VoC_bgt16_rr(LOOP_prvConvolve,REG7,REG0)
0xF80EE0E6,	//0x1700		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x00021808,	//0x1702		VoC_lw16i_set_inc(REG0,0x2,0x2)
0x0002180B,	//0x1704		VoC_lw16i_set_inc(REG3,0x2,0x2)
0x25D20A85,	//0x1706		VoC_lw16i(REG5,0x25d2)
0x26BC0A84,	//0x1708		VoC_lw16i(REG4,0x26bc)
0xC0E3C140,	//0x170a		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_add16_rr(REG0,REG5,REG0,DEFAULT)
0xD9C6E783,	//0x170c		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xDDDEFFC0,	//0x170e		VoC_sw32inc_p(RL6,REG3,DEFAULT)	|	VoC_NOP
		//0x170f		VoC_endloop0
0x00030A80,	//0x1710		VoC_lw16i(REG0,0x3)
0x25D2180B,	//0x1712		VoC_lw16i_set_inc(REG3,0x25d2,0x2)
0x269A1500,	//0x1714		VoC_sw16_d(REG0,0x269a)
0x269B1500,	//0x1716		VoC_sw16_d(REG0,0x269b)
0x269E0A84,	//0x1718		VoC_lw16i(REG4,0x269e)
0x11A90724,	//0x171a		VoC_add16_rd(REG4,REG4,0x11a9)
0x00100A81,	//0x171c		VoC_lw16i(REG1,0x10)
0x0A848066,	//0x171e		VoC_lw16i(REG4,0xca0)(lo)	|	VoC_add16_rp(REG6,REG1,REG4,DEFAULT)
0xF8FE0CA0,	//0x1720		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_lw16i(REG4,0xca0)(hi)
0x00000A8C,	//0x1722		VoC_lw16i(RL6_LO,0x0)
0x0A8DC1A4,	//0x1724		VoC_lw16i(RL6_HI,0x800)(lo)	|	VoC_add16_rr(REG4,REG6,REG4,DEFAULT)
0xD9A70800,	//0x1726		VoC_lw32_p(RL7,REG4,DEFAULT)	|	VoC_lw16i(RL6_HI,0x800)(hi)
0xFA1FDDDE,	//0x1728		VoC_shr32_ri(RL7,0x3,DEFAULT)	|	VoC_sw32inc_p(RL6,REG3,DEFAULT)
0x00030A80,	//0x172a		VoC_lw16i(REG0,0x3)
0xDD9EDDDF,	//0x172c		VoC_sw32_p(RL6,REG3,DEFAULT)	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
		//0x172e		LOOP_prvConvolve_odd
0x0A82E001,	//0x172e		VoC_lw16i(REG2,0x269e)(lo)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xC082269E,	//0x1730		VoC_add16_rr(REG2,REG2,REG0,DEFAULT)	|	VoC_lw16i(REG2,0x269e)(hi)
0x8056F8E1,	//0x1732		VoC_add16_rp(REG6,REG1,REG2,DEFAULT)	|	VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)
0x0CA00A85,	//0x1734		VoC_lw16i(REG5,0xca0)
0xC1ADF8FE,	//0x1736		VoC_add16_rr(REG5,REG6,REG5,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xD9AEDFC7,	//0x1738		VoC_lw32_p(RL6,REG5,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x25CC0A85,	//0x173a		VoC_lw16i(REG5,0x25cc)
0x11AA072D,	//0x173c		VoC_add16_rd(REG5,REG5,0x11aa)
0xDDAEDFC0,	//0x173e		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x16002B80,	//0x1740		VoC_jal(CII_prvConvolve)
0xF050DF80,	//0x1742		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xDE00DF87,	//0x1744		VoC_inc_p(REG0,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x172E3438,	//0x1746		VoC_bgt16_rr(LOOP_prvConvolve_odd,REG7,REG0)
0x1808E0E6,	//0x1748		VoC_lw16i_set_inc(REG0,0x25d2,0x2)(lo)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x0A8325D2,	//0x174a		VoC_lw16i(REG3,0x26d0)(lo)	|	VoC_lw16i_set_inc(REG0,0x25d2,0x2)(hi)
0x071B26D0,	//0x174c		VoC_add16_rd(REG3,REG3,0x11aa)(lo)	|	VoC_lw16i(REG3,0x26d0)(hi)
0xF80E11AA,	//0x174e		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x11aa)(hi)
0x0A93D9C6,	//0x1750		VoC_lw16i(INC3,0x2)(lo)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xE7840002,	//0x1752		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16i(INC3,0x2)(hi)
0xCBF4D9C7,	//0x1754		VoC_sub32_rr(ACC0,RL7,RL6,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xDDDCFF3E,	//0x1756		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
		//0x1757		VoC_endloop0
0x1804E0E6,	//0x1758		VoC_lw16i_set_inc(REG0,0x1,0x1)(lo)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xF80E0001,	//0x175a		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x1,0x1)(hi)
0x00200A96,	//0x175c		VoC_lw16i(STATUS,0x20)
0xE79DFFC0,	//0x175e		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_NAD
0x26BC0A85,	//0x1760		VoC_lw16i(REG5,0x26bc)
0xC145F8F8,	//0x1762		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x26D00A84,	//0x1764		VoC_lw16i(REG4,0x26d0)
0xF808C104,	//0x1766		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG0,DEFAULT)
0x0A82D9AE,	//0x1768		VoC_lw16i(REG2,0x26a8)(lo)	|	VoC_lw32_p(RL6,REG5,DEFAULT)
0x91A426A8,	//0x176a		VoC_add32_rp(ACC0,RL6,REG4,DEFAULT)	|	VoC_lw16i(REG2,0x26a8)(hi)
0x078195A5,	//0x176c		VoC_sub16_rd(REG1,REG0,0x11a9)(lo)	|	VoC_sub32_rp(ACC1,RL6,REG4,DEFAULT)
0xFA0C11A9,	//0x176e		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_sub16_rd(REG1,REG0,0x11a9)(hi)
0x0BA4FA0D,	//0x1770		VoC_sub32_dr(ACC0,0x11cc,ACC0)(lo)	|	VoC_shr32_ri(ACC1,0x1,DEFAULT)
0x0BAD11CC,	//0x1772		VoC_sub32_dr(ACC1,0x11cc,ACC1)(lo)	|	VoC_sub32_dr(ACC0,0x11cc,ACC0)(hi)
0xF8F911CC,	//0x1774		VoC_shr16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_sub32_dr(ACC1,0x11cc,ACC1)(hi)
0xC053C3C4,	//0x1776		VoC_add16_rr(REG3,REG1,REG2,DEFAULT)	|	VoC_sub16_rr(REG4,REG7,REG0,DEFAULT)
0xC0A4F8FC,	//0x1778		VoC_add16_rr(REG4,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xDDA5DD9C,	//0x177a		VoC_sw32_p(ACC1,REG4,DEFAULT)	|	VoC_sw32_p(ACC0,REG3,DEFAULT)
		//0x177c		VoC_endloop0
0xDFA9DE00,	//0x177c		VoC_pop16(RA,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x00600A96,	//0x177e		VoC_lw16i(STATUS,0x60)
0xFFC0E580,	//0x1780		VoC_NAD	|	VoC_return
		//0x1782		CII_MultBp2Debug
0x00200A96,	//0x1782		VoC_lw16i(STATUS,0x20)
0xFF31DFC2,	//0x1784		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xF90AFF3A,	//0x1786		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xF7D9F90C,	//0x1788		VoC_lw16i_short(FORMAT32,0xfffffffe,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCCECF1BA,	//0x178a		VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xd,DEFAULT)
0xCE5CCE55,	//0x178c		VoC_macX_rr(REG3,REG4,DEFAULT)	|	VoC_macX_rr(REG2,REG5,DEFAULT)
0xF39AF019,	//0x178e		VoC_lw16i_short(FORMATX,0x1c,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFFC0CE54,	//0x1790		VoC_NOP	|	VoC_macX_rr(REG2,REG4,DEFAULT)
0xDF82F01A,	//0x1792		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0x0A96FF26,	//0x1794		VoC_lw16i(STATUS,0x60)(lo)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xE5800060,	//0x1796		VoC_return	|	VoC_lw16i(STATUS,0x60)(hi)
		//0x1798		CII_MultiplyHighUDword
0x00200A96,	//0x1798		VoC_lw16i(STATUS,0x20)
0xFF3AFF31,	//0x179a		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0xF90DF90B,	//0x179c		VoC_shru16_ri(REG5,0x1,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0xF90CF90A,	//0x179e		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xF1FAF7F9,	//0x17a0		VoC_lw16i_short(FORMATX,0xf,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0xCE55CCEC,	//0x17a2		VoC_macX_rr(REG2,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)
0xF019CE5C,	//0x17a4		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_macX_rr(REG3,REG4,DEFAULT)
0xF01AE1A4,	//0x17a6		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_movreg16(REG4,RL6_HI,DEFAULT)
0x1604E1E5,	//0x17a8		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG5,RL7_HI,DEFAULT)
0x31040001,	//0x17aa		VoC_bgtz16_r(MUTI_CONT1,REG4)(lo)	|	VoC_and16_ri(REG4,0x1)(hi)
0xE5C317AE,	//0x17ac		VoC_jump(MUTI_CONT2)	|	VoC_bgtz16_r(MUTI_CONT1,REG4)(hi)
		//0x17ae		MUTI_CONT1
0xC93CFC8F,	//0x17ae		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_shru32_ri(RL7,0x11,DEFAULT)
		//0x17b0		MUTI_CONT2
0x00011605,	//0x17b0		VoC_and16_ri(REG5,0x1)
0x17B73185,	//0x17b2		VoC_bez16_r(MUTI_END,REG5)
0xC934FC8E,	//0x17b4		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_shru32_ri(RL6,0x11,DEFAULT)
0xFF26FFC0,	//0x17b6		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_NOP
		//0x17b7		MUTI_END
0xE580FDFE,	//0x17b8		VoC_return	|	VoC_shru32_ri(RL6,0xffffffff,DEFAULT)
		//0x17ba		CII_square64
0x3182DFC2,	//0x17ba		VoC_bez16_r(RShift_20,REG2)(lo)	|	VoC_push16(REG2,DEFAULT)
0xE5C717BE,	//0x17bc		VoC_jump(RShift_28)	|	VoC_bez16_r(RShift_20,REG2)(hi)
		//0x17be		RShift_20
0x7FF40AD9,	//0x17be		VoC_lw16i(FORMAT32,0xfffffff4)
0x00020A9A,	//0x17c0		VoC_lw16i(FORMATX,0x2)
0xFFC0E5C6,	//0x17c2		VoC_NAD	|	VoC_jump(RShift_END)
		//0x17c4		RShift_28
0x7FFC0AD9,	//0x17c4		VoC_lw16i(FORMAT32,0xfffffffc)
0x000A0A9A,	//0x17c6		VoC_lw16i(FORMATX,0xa)
		//0x17c8		RShift_END
0x17CD33C6,	//0x17c8		VoC_bnltz32_r(PN_CONTI,RL6)
0xCA76FF41,	//0x17ca		VoC_sub32_rr(RL6,REG23,RL6,DEFAULT)	|	VoC_lw32z(REG23,DEFAULT)
0xE1A2FFC0,	//0x17cc		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_NOP
		//0x17cd		PN_CONTI
0xE183CC94,	//0x17ce		VoC_movreg16(REG3,RL6_LO,DEFAULT)	|	VoC_multf32_rr(ACC0,REG2,REG2,DEFAULT)
0xCE53F90B,	//0x17d0		VoC_macX_rr(REG2,REG3,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0x0A99E183,	//0x17d2		VoC_lw16i(FORMAT32,0x0)(lo)	|	VoC_movreg16(REG3,RL6_LO,DEFAULT)
0x0A9A0000,	//0x17d4		VoC_lw16i(FORMATX,0x12)(lo)	|	VoC_lw16i(FORMAT32,0x0)(hi)
0x16030012,	//0x17d6		VoC_and16_ri(REG3,0x1)(lo)	|	VoC_lw16i(FORMATX,0x12)(hi)
0x31030001,	//0x17d8		VoC_bgtz16_r(MUTI_CONT,REG3)(lo)	|	VoC_and16_ri(REG3,0x1)(hi)
0xE5C617DC,	//0x17da		VoC_jump(MUTI_CONT_L)	|	VoC_bgtz16_r(MUTI_CONT,REG3)(hi)
		//0x17dc		MUTI_CONT
0x0A83F922,	//0x17dc		VoC_lw16i(REG3,0x0)(lo)	|	VoC_shru16_ri(REG2,0x4,DEFAULT)
0xF9FA0000,	//0x17de		VoC_shru16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_lw16i(REG3,0x0)(hi)
0xDF82C90C,	//0x17e0		VoC_pop16(REG2,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG23,DEFAULT)
		//0x17e1		MUTI_CONT_L
0x3182E183,	//0x17e2		VoC_bez16_r(RShift_over,REG2)(lo)	|	VoC_movreg16(REG3,RL6_LO,DEFAULT)
0x0A9A17E7,	//0x17e4		VoC_lw16i(FORMATX,0x1a)(lo)	|	VoC_bez16_r(RShift_over,REG2)(hi)
0xF90B001A,	//0x17e6		VoC_shru16_ri(REG3,0x1,DEFAULT)	|	VoC_lw16i(FORMATX,0x1a)(hi)
		//0x17e7		RShift_over
0x0A9ACE5B,	//0x17e8		VoC_lw16i(FORMATX,0x0)(lo)	|	VoC_macX_rr(REG3,REG3,DEFAULT)
0xFF260000,	//0x17ea		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i(FORMATX,0x0)(hi)
0xDFE9E580,	//0x17ec		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x17ed		CII_InverseQuadRootOfSumSquares
0x0A82FF32,	//0x17ee		VoC_lw16i(REG2,0x1)(lo)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x2B800001,	//0x17f0		VoC_jal(CII_square64)(lo)	|	VoC_lw16i(REG2,0x1)(hi)
0xFF3017BA,	//0x17f2		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_jal(CII_square64)(hi)
0x0A82FF3E,	//0x17f4		VoC_lw16i(REG2,0x1)(lo)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0xFFC00001,	//0x17f6		VoC_NAD	|	VoC_lw16i(REG2,0x1)(hi)
0x17BA2B80,	//0x17f8		VoC_jal(CII_square64)
0x00480A96,	//0x17fa		VoC_lw16i(STATUS,0x48)
0xFF16C834,	//0x17fc		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_add32_rr(ACC0,REG01,RL6,DEFAULT)
0x0A96FF20,	//0x17fe		VoC_lw16i(STATUS,0x8)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFCC00008,	//0x1800		VoC_shru32_ri(REG01,0x18,DEFAULT)	|	VoC_lw16i(STATUS,0x8)(hi)
0x00000A87,	//0x1802		VoC_lw16i(REG7,0x0)
0x18203340,	//0x1804		VoC_bnez32_r(Func_Continue,REG01)
0x00200A87,	//0x1806		VoC_lw16i(REG7,0x20)
0x0A82FF32,	//0x1808		VoC_lw16i(REG2,0x0)(lo)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x2B800000,	//0x180a		VoC_jal(CII_square64)(lo)	|	VoC_lw16i(REG2,0x0)(hi)
0xFF3017BA,	//0x180c		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_jal(CII_square64)(hi)
0x0A82FF3E,	//0x180e		VoC_lw16i(REG2,0x0)(lo)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0xFFC00000,	//0x1810		VoC_NAD	|	VoC_lw16i(REG2,0x0)(hi)
0x17BA2B80,	//0x1812		VoC_jal(CII_square64)
0x00480A96,	//0x1814		VoC_lw16i(STATUS,0x48)
0xFF16C830,	//0x1816		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_add32_rr(REG01,REG01,RL6,DEFAULT)
0x00080A96,	//0x1818		VoC_lw16i(STATUS,0x8)
0x18203340,	//0x181a		VoC_bnez32_r(Func_Continue,REG01)
0x11CA1486,	//0x181c		VoC_lw32_d(RL6,0x11ca)
0x18982B00,	//0x181e		VoC_jump_lg(Func_end)
		//0x1820		Func_Continue
0x2981FF01,	//0x1820		VoC_and32_rd(REG23,0x11d2)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A8511D2,	//0x1822		VoC_lw16i(REG5,0x1128)(lo)	|	VoC_and32_rd(REG23,0x11d2)(hi)
0x33011128,	//0x1824		VoC_bez32_r(Loop_Start,REG23)(lo)	|	VoC_lw16i(REG5,0x1128)(hi)
0xE5C51828,	//0x1826		VoC_jump(Loop_end)	|	VoC_bez32_r(Loop_Start,REG23)(hi)
		//0x1828		Loop_Start
0x11B0073F,	//0x1828		VoC_add16_rd(REG7,REG7,0x11b0)
0xE5F5FDC0,	//0x182a		VoC_jump(Func_Continue)	|	VoC_shru32_ri(REG01,0xfffffff8,DEFAULT)
		//0x182c		Loop_end
0xFCC1FF01,	//0x182c		VoC_shru32_ri(REG23,0x18,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xF90EE046,	//0x182e		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_movreg16(REG6,REG2,DEFAULT)
0x00011602,	//0x1830		VoC_and16_ri(REG2,0x1)
0xF9F2C175,	//0x1832		VoC_shru16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xFFC0D855,	//0x1834		VoC_NOP	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x0A86FE55,	//0x1836		VoC_lw16i(REG6,0x1)(lo)	|	VoC_shru16_rr(REG5,REG2,DEFAULT)
0x16050001,	//0x1838		VoC_and16_ri(REG5,0xf)(lo)	|	VoC_lw16i(REG6,0x1)(hi)
0xC1EF000F,	//0x183a		VoC_add16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_and16_ri(REG5,0xf)(hi)
0xC1F7FFC0,	//0x183c		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_NOP
0x00010A82,	//0x183e		VoC_lw16i(REG2,0x1)
0x11B907BE,	//0x1840		VoC_sub16_rd(REG6,REG7,0x11b9)
0x3146FFC0,	//0x1842		VoC_bngtz16_r(UiMSF_COM1,REG6)(lo)	|	VoC_NOP
0x0A82185E,	//0x1844		VoC_lw16i(REG2,0x0)(lo)	|	VoC_bngtz16_r(UiMSF_COM1,REG6)(hi)
0x2B800000,	//0x1846		VoC_jal(CII_square64)(lo)	|	VoC_lw16i(REG2,0x0)(hi)
0xFF3017BA,	//0x1848		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_jal(CII_square64)(hi)
0x0A82FF3E,	//0x184a		VoC_lw16i(REG2,0x0)(lo)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0xFFC00000,	//0x184c		VoC_NAD	|	VoC_lw16i(REG2,0x0)(hi)
0x17BA2B80,	//0x184e		VoC_jal(CII_square64)
0x00480A96,	//0x1850		VoC_lw16i(STATUS,0x48)
0xC830FF41,	//0x1852		VoC_add32_rr(REG01,REG01,RL6,DEFAULT)	|	VoC_lw32z(REG23,DEFAULT)
0x00080A96,	//0x1854		VoC_lw16i(STATUS,0x8)
0x0A96C2B6,	//0x1856		VoC_lw16i(STATUS,0x20)(lo)	|	VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)
0xFEF00020,	//0x1858		VoC_shru32_rr(REG01,REG6,DEFAULT)	|	VoC_lw16i(STATUS,0x20)(hi)
0x00600A96,	//0x185a		VoC_lw16i(STATUS,0x60)
0xFFC0E5D7,	//0x185c		VoC_NAD	|	VoC_jump(UiMSF_COM1_END)
		//0x185e		UiMSF_COM1
0x17BA2B80,	//0x185e		VoC_jal(CII_square64)
0xFF3EFF30,	//0x1860		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x00010A82,	//0x1862		VoC_lw16i(REG2,0x1)
0x17BA2B80,	//0x1864		VoC_jal(CII_square64)
0x00480A96,	//0x1866		VoC_lw16i(STATUS,0x48)
0x0AC2C830,	//0x1868		VoC_lw16i(REG2,0xfffffff8)(lo)	|	VoC_add32_rr(REG01,REG01,RL6,DEFAULT)
0x0A967FF8,	//0x186a		VoC_lw16i(STATUS,0x8)(lo)	|	VoC_lw16i(REG2,0xfffffff8)(hi)
0xC2B60008,	//0x186c		VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_lw16i(STATUS,0x8)(hi)
0x00200A96,	//0x186e		VoC_lw16i(STATUS,0x20)
0x0A96FEF0,	//0x1870		VoC_lw16i(STATUS,0x60)(lo)	|	VoC_shru32_rr(REG01,REG6,DEFAULT)
0xFF010060,	//0x1872		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_lw16i(STATUS,0x60)(hi)
		//0x1873		UiMSF_COM1_END
0xFDC1FCC0,	//0x1874		VoC_shru32_ri(REG23,0xfffffff8,DEFAULT)	|	VoC_shru32_ri(REG01,0x18,DEFAULT)
0xFF08E006,	//0x1876		VoC_movreg32(REG01,REG23,DEFAULT)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0x0A85F8FE,	//0x1878		VoC_lw16i(REG5,0xe94)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xC1750E94,	//0x187a		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_lw16i(REG5,0xe94)(hi)
0xD9AEF80E,	//0x187c		VoC_lw32_p(RL6,REG5,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x00010A84,	//0x187e		VoC_lw16i(REG4,0x1)
0x0A85C136,	//0x1880		VoC_lw16i(REG5,0xe94)(lo)	|	VoC_add16_rr(REG6,REG4,REG6,DEFAULT)
0x15060E94,	//0x1882		VoC_sw16_d(REG6,0x26f8)(lo)	|	VoC_lw16i(REG5,0xe94)(hi)
0xF8FE26F8,	//0x1884		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_sw16_d(REG6,0x26f8)(hi)
0x1586C175,	//0x1886		VoC_sw32_d(RL6,0x26f6)(lo)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0x95AE26F6,	//0x1888		VoC_sub32_rp(RL6,RL6,REG5,DEFAULT)	|	VoC_sw32_d(RL6,0x26f6)(hi)
0xFFC0FF07,	//0x188a		VoC_NAD	|	VoC_movreg32(RL7,REG01,DEFAULT)
0x17982B80,	//0x188c		VoC_jal(CII_MultiplyHighUDword)
0x26F60BB6,	//0x188e		VoC_sub32_dr(RL6,0x26f6,RL6)
0x0A85F8FF,	//0x1890		VoC_lw16i(REG5,0x1096)(lo)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xC17D1096,	//0x1892		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16i(REG5,0x1096)(hi)
0xD9AFFFC0,	//0x1894		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_NOP
0x17982B80,	//0x1896		VoC_jal(CII_MultiplyHighUDword)
		//0x1898		Func_end
0xFFC0DFA9,	//0x1898		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x189a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x189b		CII_prvDoLpc4
0x27B41486,	//0x189c		VoC_lw32_d(RL6,0x27b4)
0x27B209B0,	//0x189e		VoC_sub32_rd(REG01,RL6,0x27b2)
0x271C0A85,	//0x18a0		VoC_lw16i(REG5,0x271c)
0x26FA1580,	//0x18a2		VoC_sw32_d(REG01,0x26fa)
0x27B20937,	//0x18a4		VoC_add32_rd(RL7,RL6,0x27b2)
0x11AC072D,	//0x18a6		VoC_add16_rd(REG5,REG5,0x11ac)
0x072DFF06,	//0x18a8		VoC_add16_rd(REG5,REG5,0x278d)(lo)	|	VoC_movreg32(RL6,REG01,DEFAULT)
0x1587278D,	//0x18aa		VoC_sw32_d(RL7,0x26fc)(lo)	|	VoC_add16_rd(REG5,REG5,0x278d)(hi)
0xD9AF26FC,	//0x18ac		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_sw32_d(RL7,0x26fc)(hi)
0x17822B80,	//0x18ae		VoC_jal(CII_MultBp2Debug)
0x271C0A85,	//0x18b0		VoC_lw16i(REG5,0x271c)
0x11AE072D,	//0x18b2		VoC_add16_rd(REG5,REG5,0x11ae)
0x072DFF30,	//0x18b4		VoC_add16_rd(REG5,REG5,0x278d)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x1486278D,	//0x18b6		VoC_lw32_d(RL6,0x26fc)(lo)	|	VoC_add16_rd(REG5,REG5,0x278d)(hi)
0xD9AF26FC,	//0x18b8		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_lw32_d(RL6,0x26fc)(hi)
0x17822B80,	//0x18ba		VoC_jal(CII_MultBp2Debug)
0x0A85C986,	//0x18bc		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_add32_rr(RL6,RL6,REG01,DEFAULT)
0x1586271C,	//0x18be		VoC_sw32_d(RL6,0x2706)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0x072D2706,	//0x18c0		VoC_add16_rd(REG5,REG5,0x11ac)(lo)	|	VoC_sw32_d(RL6,0x2706)(hi)
0x140411AC,	//0x18c2		VoC_lw16_d(REG4,0x278d)(lo)	|	VoC_add16_rd(REG5,REG5,0x11ac)(hi)
0xC165278D,	//0x18c4		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x278d)(hi)
0x26FC1486,	//0x18c6		VoC_lw32_d(RL6,0x26fc)
0x2B80D9AF,	//0x18c8		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_p(RL7,REG5,DEFAULT)
0xFF301782,	//0x18ca		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x271C0A85,	//0x18cc		VoC_lw16i(REG5,0x271c)
0x11AE072D,	//0x18ce		VoC_add16_rd(REG5,REG5,0x11ae)
0x278D1404,	//0x18d0		VoC_lw16_d(REG4,0x278d)
0x1486C165,	//0x18d2		VoC_lw32_d(RL6,0x26fa)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xD9AF26FA,	//0x18d4		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_lw32_d(RL6,0x26fa)(hi)
0x17822B80,	//0x18d6		VoC_jal(CII_MultBp2Debug)
0x1487CA36,	//0x18d8		VoC_lw32_d(RL7,0x27b2)(lo)	|	VoC_sub32_rr(RL6,REG01,RL6,DEFAULT)
0x158627B2,	//0x18da		VoC_sw32_d(RL6,0x2702)(lo)	|	VoC_lw32_d(RL7,0x27b2)(hi)
0x14862702,	//0x18dc		VoC_lw32_d(RL6,0x27b4)(lo)	|	VoC_sw32_d(RL6,0x2702)(hi)
0x2B8027B4,	//0x18de		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_d(RL6,0x27b4)(hi)
0xFBFE1782,	//0x18e0		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x27B21487,	//0x18e2		VoC_lw32_d(RL7,0x27b2)
0x27101586,	//0x18e4		VoC_sw32_d(RL6,0x2710)
0x27B21486,	//0x18e6		VoC_lw32_d(RL6,0x27b2)
0x17822B80,	//0x18e8		VoC_jal(CII_MultBp2Debug)
0x0ACEFBFE,	//0x18ea		VoC_lw16i(RL7_LO,0xffff)(lo)	|	VoC_shr32_ri(RL6,0xffffffff,DEFAULT)
0x0A8F7FFF,	//0x18ec		VoC_lw16i(RL7_HI,0x3fff)(lo)	|	VoC_lw16i(RL7_LO,0xffff)(hi)
0xCBF63FFF,	//0x18ee		VoC_sub32_rr(RL6,RL7,RL6,DEFAULT)	|	VoC_lw16i(RL7_HI,0x3fff)(hi)
0x27101487,	//0x18f0		VoC_lw32_d(RL7,0x2710)
0x270E1586,	//0x18f2		VoC_sw32_d(RL6,0x270e)
0xC9BCCBB8,	//0x18f4		VoC_add32_rr(ACC0,RL6,RL7,DEFAULT)	|	VoC_sub32_rr(REG01,RL6,RL7,DEFAULT)
0x271C0A85,	//0x18f6		VoC_lw16i(REG5,0x271c)
0x26FA1580,	//0x18f8		VoC_sw32_d(REG01,0x26fa)
0x26FC1584,	//0x18fa		VoC_sw32_d(ACC0,0x26fc)
0x278D072D,	//0x18fc		VoC_add16_rd(REG5,REG5,0x278d)
0xD9AFFF06,	//0x18fe		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_movreg32(RL6,REG01,DEFAULT)
0x17822B80,	//0x1900		VoC_jal(CII_MultBp2Debug)
0x0A85FF30,	//0x1902		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x072D271C,	//0x1904		VoC_add16_rd(REG5,REG5,0x11aa)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0x140411AA,	//0x1906		VoC_lw16_d(REG4,0x278d)(lo)	|	VoC_add16_rd(REG5,REG5,0x11aa)(hi)
0xC165278D,	//0x1908		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x278d)(hi)
0x26FC1486,	//0x190a		VoC_lw32_d(RL6,0x26fc)
0x2B80D9AF,	//0x190c		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_p(RL7,REG5,DEFAULT)
0xC8361782,	//0x190e		VoC_add32_rr(RL6,REG01,RL6,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x271C0A85,	//0x1910		VoC_lw16i(REG5,0x271c)
0x27041586,	//0x1912		VoC_sw32_d(RL6,0x2704)
0x278D072D,	//0x1914		VoC_add16_rd(REG5,REG5,0x278d)
0x26FC1486,	//0x1916		VoC_lw32_d(RL6,0x26fc)
0x2B80D9AF,	//0x1918		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_p(RL7,REG5,DEFAULT)
0xFF301782,	//0x191a		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x271C0A85,	//0x191c		VoC_lw16i(REG5,0x271c)
0x11AA072D,	//0x191e		VoC_add16_rd(REG5,REG5,0x11aa)
0x278D1404,	//0x1920		VoC_lw16_d(REG4,0x278d)
0x1486C165,	//0x1922		VoC_lw32_d(RL6,0x26fa)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xD9AF26FA,	//0x1924		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_lw32_d(RL6,0x26fa)(hi)
0x17822B80,	//0x1926		VoC_jal(CII_MultBp2Debug)
0x1487CA36,	//0x1928		VoC_lw32_d(RL7,0x270e)(lo)	|	VoC_sub32_rr(RL6,REG01,RL6,DEFAULT)
0x1586270E,	//0x192a		VoC_sw32_d(RL6,0x2700)(lo)	|	VoC_lw32_d(RL7,0x270e)(hi)
0x14862700,	//0x192c		VoC_lw32_d(RL6,0x27b2)(lo)	|	VoC_sw32_d(RL6,0x2700)(hi)
0x2B8027B2,	//0x192e		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_d(RL6,0x27b2)(hi)
0xFF301782,	//0x1930		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x27101487,	//0x1932		VoC_lw32_d(RL7,0x2710)
0x27B41486,	//0x1934		VoC_lw32_d(RL6,0x27b4)
0x17822B80,	//0x1936		VoC_jal(CII_MultBp2Debug)
0x1487C986,	//0x1938		VoC_lw32_d(RL7,0x270e)(lo)	|	VoC_add32_rr(RL6,RL6,REG01,DEFAULT)
0x1586270E,	//0x193a		VoC_sw32_d(RL6,0x2714)(lo)	|	VoC_lw32_d(RL7,0x270e)(hi)
0x14862714,	//0x193c		VoC_lw32_d(RL6,0x27b4)(lo)	|	VoC_sw32_d(RL6,0x2714)(hi)
0x2B8027B4,	//0x193e		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_d(RL6,0x27b4)(hi)
0xFF301782,	//0x1940		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x27101487,	//0x1942		VoC_lw32_d(RL7,0x2710)
0x27B21486,	//0x1944		VoC_lw32_d(RL6,0x27b2)
0x17822B80,	//0x1946		VoC_jal(CII_MultBp2Debug)
0x1487CA36,	//0x1948		VoC_lw32_d(RL7,0x2714)(lo)	|	VoC_sub32_rr(RL6,REG01,RL6,DEFAULT)
0x15862714,	//0x194a		VoC_sw32_d(RL6,0x2712)(lo)	|	VoC_lw32_d(RL7,0x2714)(hi)
0x0BB82712,	//0x194c		VoC_sub32_dr(REG01,0x2712,RL7)(lo)	|	VoC_sw32_d(RL6,0x2712)(hi)
0x093C2712,	//0x194e		VoC_add32_rd(ACC0,RL7,0x2712)(lo)	|	VoC_sub32_dr(REG01,0x2712,RL7)(hi)
0x0A852712,	//0x1950		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_add32_rd(ACC0,RL7,0x2712)(hi)
0x1580271C,	//0x1952		VoC_sw32_d(REG01,0x26fa)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0x158426FA,	//0x1954		VoC_sw32_d(ACC0,0x26fc)(lo)	|	VoC_sw32_d(REG01,0x26fa)(hi)
0x072D26FC,	//0x1956		VoC_add16_rd(REG5,REG5,0x11b0)(lo)	|	VoC_sw32_d(ACC0,0x26fc)(hi)
0x140411B0,	//0x1958		VoC_lw16_d(REG4,0x278d)(lo)	|	VoC_add16_rd(REG5,REG5,0x11b0)(hi)
0xC165278D,	//0x195a		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x278d)(hi)
0x26FA1486,	//0x195c		VoC_lw32_d(RL6,0x26fa)
0x2B80D9AF,	//0x195e		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_p(RL7,REG5,DEFAULT)
0xFF301782,	//0x1960		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x271C0A85,	//0x1962		VoC_lw16i(REG5,0x271c)
0x11B2072D,	//0x1964		VoC_add16_rd(REG5,REG5,0x11b2)
0x278D1404,	//0x1966		VoC_lw16_d(REG4,0x278d)
0x1486C165,	//0x1968		VoC_lw32_d(RL6,0x26fc)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xD9AF26FC,	//0x196a		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_lw32_d(RL6,0x26fc)(hi)
0x17822B80,	//0x196c		VoC_jal(CII_MultBp2Debug)
0x0A85C836,	//0x196e		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_add32_rr(RL6,REG01,RL6,DEFAULT)
0x1586271C,	//0x1970		VoC_sw32_d(RL6,0x2708)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0x072D2708,	//0x1972		VoC_add16_rd(REG5,REG5,0x11b0)(lo)	|	VoC_sw32_d(RL6,0x2708)(hi)
0x140411B0,	//0x1974		VoC_lw16_d(REG4,0x278d)(lo)	|	VoC_add16_rd(REG5,REG5,0x11b0)(hi)
0xC165278D,	//0x1976		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x278d)(hi)
0x26FC1486,	//0x1978		VoC_lw32_d(RL6,0x26fc)
0x2B80D9AF,	//0x197a		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_p(RL7,REG5,DEFAULT)
0xFF301782,	//0x197c		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x271C0A85,	//0x197e		VoC_lw16i(REG5,0x271c)
0x11B2072D,	//0x1980		VoC_add16_rd(REG5,REG5,0x11b2)
0x278D1404,	//0x1982		VoC_lw16_d(REG4,0x278d)
0x1486C165,	//0x1984		VoC_lw32_d(RL6,0x26fa)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xD9AF26FA,	//0x1986		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_lw32_d(RL6,0x26fa)(hi)
0x17822B80,	//0x1988		VoC_jal(CII_MultBp2Debug)
0x0A85CA36,	//0x198a		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sub32_rr(RL6,REG01,RL6,DEFAULT)
0x072D271C,	//0x198c		VoC_add16_rd(REG5,REG5,0x11b3)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0x072D11B3,	//0x198e		VoC_add16_rd(REG5,REG5,0x278d)(lo)	|	VoC_add16_rd(REG5,REG5,0x11b3)(hi)
0x1586278D,	//0x1990		VoC_sw32_d(RL6,0x26fe)(lo)	|	VoC_add16_rd(REG5,REG5,0x278d)(hi)
0xD9AC26FE,	//0x1992		VoC_lw32_p(ACC0,REG5,DEFAULT)	|	VoC_sw32_d(RL6,0x26fe)(hi)
0x000E0A83,	//0x1994		VoC_lw16i(REG3,0xe)
0x271C0A85,	//0x1996		VoC_lw16i(REG5,0x271c)
0x1404C15D,	//0x1998		VoC_lw16_d(REG4,0x278d)(lo)	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
0xC165278D,	//0x199a		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x278d)(hi)
0x912EFFC0,	//0x199c		VoC_add32_rp(RL6,ACC0,REG5,DEFAULT)	|	VoC_NOP
0x1586952F,	//0x199e		VoC_sw32_d(RL6,0x270a)(lo)	|	VoC_sub32_rp(RL7,ACC0,REG5,DEFAULT)
0x1587270A,	//0x19a0		VoC_sw32_d(RL7,0x270c)(lo)	|	VoC_sw32_d(RL6,0x270a)(hi)
0x0936270C,	//0x19a2		VoC_add32_rd(RL6,RL6,0x2704)(lo)	|	VoC_sw32_d(RL7,0x270c)(hi)
0x093F2704,	//0x19a4		VoC_add32_rd(RL7,RL7,0x2700)(lo)	|	VoC_add32_rd(RL6,RL6,0x2704)(hi)
0x09362700,	//0x19a6		VoC_add32_rd(RL6,RL6,0x2706)(lo)	|	VoC_add32_rd(RL7,RL7,0x2700)(hi)
0x093F2706,	//0x19a8		VoC_add32_rd(RL7,RL7,0x2702)(lo)	|	VoC_add32_rd(RL6,RL6,0x2706)(hi)
0x09362702,	//0x19aa		VoC_add32_rd(RL6,RL6,0x2708)(lo)	|	VoC_add32_rd(RL7,RL7,0x2702)(hi)
0x093F2708,	//0x19ac		VoC_add32_rd(RL7,RL7,0x26fe)(lo)	|	VoC_add32_rd(RL6,RL6,0x2708)(hi)
0xFA0E26FE,	//0x19ae		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x26fe)(hi)
0xFFC0FA0F,	//0x19b0		VoC_NAD	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
0x17ED2B80,	//0x19b2		VoC_jal(CII_InverseQuadRootOfSumSquares)
0x27C01405,	//0x19b4		VoC_lw16_d(REG5,0x27c0)
0x271A1406,	//0x19b6		VoC_lw16_d(REG6,0x271a)
0x1487C175,	//0x19b8		VoC_lw32_d(RL7,0x2706)(lo)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xDDAE2706,	//0x19ba		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_lw32_d(RL7,0x2706)(hi)
0x27021486,	//0x19bc		VoC_lw32_d(RL6,0x2702)
0x270809BF,	//0x19be		VoC_sub32_rd(RL7,RL7,0x2708)
0x270409B6,	//0x19c0		VoC_sub32_rd(RL6,RL6,0x2704)
0x270C09BF,	//0x19c2		VoC_sub32_rd(RL7,RL7,0x270c)
0x26FE09B6,	//0x19c4		VoC_sub32_rd(RL6,RL6,0x26fe)
0x2700093F,	//0x19c6		VoC_add32_rd(RL7,RL7,0x2700)
0x270A0936,	//0x19c8		VoC_add32_rd(RL6,RL6,0x270a)
0xFA0EFA0F,	//0x19ca		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
0x17ED2B80,	//0x19cc		VoC_jal(CII_InverseQuadRootOfSumSquares)
0x278C1400,	//0x19ce		VoC_lw16_d(REG0,0x278c)
0x271A1401,	//0x19d0		VoC_lw16_d(REG1,0x271a)
0xC208F9F8,	//0x19d2		VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_shru16_ri(REG0,0xffffffff,DEFAULT)
0x27C01405,	//0x19d4		VoC_lw16_d(REG5,0x27c0)
0x1487C145,	//0x19d6		VoC_lw32_d(RL7,0x270c)(lo)	|	VoC_add16_rr(REG5,REG5,REG0,DEFAULT)
0xDDAE270C,	//0x19d8		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_lw32_d(RL7,0x270c)(hi)
0x270A1486,	//0x19da		VoC_lw32_d(RL6,0x270a)
0x270809BF,	//0x19dc		VoC_sub32_rd(RL7,RL7,0x2708)
0x270409B6,	//0x19de		VoC_sub32_rd(RL6,RL6,0x2704)
0x270009BF,	//0x19e0		VoC_sub32_rd(RL7,RL7,0x2700)
0x270209B6,	//0x19e2		VoC_sub32_rd(RL6,RL6,0x2702)
0x2706093F,	//0x19e4		VoC_add32_rd(RL7,RL7,0x2706)
0x26FE0936,	//0x19e6		VoC_add32_rd(RL6,RL6,0x26fe)
0xFA0EFA0F,	//0x19e8		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
0x17ED2B80,	//0x19ea		VoC_jal(CII_InverseQuadRootOfSumSquares)
0x278C1400,	//0x19ec		VoC_lw16_d(REG0,0x278c)
0x271A1401,	//0x19ee		VoC_lw16_d(REG1,0x271a)
0xC008F9F8,	//0x19f0		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_shru16_ri(REG0,0xffffffff,DEFAULT)
0x27C01405,	//0x19f2		VoC_lw16_d(REG5,0x27c0)
0x1487C145,	//0x19f4		VoC_lw32_d(RL7,0x270a)(lo)	|	VoC_add16_rr(REG5,REG5,REG0,DEFAULT)
0xDDAE270A,	//0x19f6		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_lw32_d(RL7,0x270a)(hi)
0x27021486,	//0x19f8		VoC_lw32_d(RL6,0x2702)
0x270809BF,	//0x19fa		VoC_sub32_rd(RL7,RL7,0x2708)
0x270009B6,	//0x19fc		VoC_sub32_rd(RL6,RL6,0x2700)
0x270609BF,	//0x19fe		VoC_sub32_rd(RL7,RL7,0x2706)
0x270C09B6,	//0x1a00		VoC_sub32_rd(RL6,RL6,0x270c)
0x2704093F,	//0x1a02		VoC_add32_rd(RL7,RL7,0x2704)
0x26FE0936,	//0x1a04		VoC_add32_rd(RL6,RL6,0x26fe)
0xFA0EFA0F,	//0x1a06		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
0x17ED2B80,	//0x1a08		VoC_jal(CII_InverseQuadRootOfSumSquares)
0x278C1400,	//0x1a0a		VoC_lw16_d(REG0,0x278c)
0x0780F9F0,	//0x1a0c		VoC_sub16_rd(REG0,REG0,0x271a)(lo)	|	VoC_shru16_ri(REG0,0xfffffffe,DEFAULT)
0xFFC0271A,	//0x1a0e		VoC_NOP	|	VoC_sub16_rd(REG0,REG0,0x271a)(hi)
0x27C00705,	//0x1a10		VoC_add16_rd(REG5,REG0,0x27c0)
0xDDAEDFA9,	//0x1a12		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1a14		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1a15		CII_prvLpcToSpectrum
0x5C1E0A80,	//0x1a16		VoC_lw16i(REG0,0x5c1e)
0x0C7C0A81,	//0x1a18		VoC_lw16i(REG1,0xc7c)
0x2F9E0A82,	//0x1a1a		VoC_lw16i(REG2,0x2f9e)
0x3EC50A83,	//0x1a1c		VoC_lw16i(REG3,0x3ec5)
0x275C1580,	//0x1a1e		VoC_sw32_d(REG01,0x275c)
0x275E1581,	//0x1a20		VoC_sw32_d(REG23,0x275e)
0x62A60AC0,	//0x1a22		VoC_lw16i(REG0,0xe2a6)
0x187D0A81,	//0x1a24		VoC_lw16i(REG1,0x187d)
0x579D0AC2,	//0x1a26		VoC_lw16i(REG2,0xd79d)
0x3B200A83,	//0x1a28		VoC_lw16i(REG3,0x3b20)
0x27601580,	//0x1a2a		VoC_sw32_d(REG01,0x2760)
0x27621581,	//0x1a2c		VoC_sw32_d(REG23,0x2762)
0x76720A80,	//0x1a2e		VoC_lw16i(REG0,0x7672)
0x238E0A81,	//0x1a30		VoC_lw16i(REG1,0x238e)
0x4C510AC2,	//0x1a32		VoC_lw16i(REG2,0xcc51)
0x35360A83,	//0x1a34		VoC_lw16i(REG3,0x3536)
0x27641580,	//0x1a36		VoC_sw32_d(REG01,0x2764)
0x27661581,	//0x1a38		VoC_sw32_d(REG23,0x2766)
0x08FF6C06,	//0x1a3a		VoC_bez16_d(FLAG_cFrameSampleHalf,0x8ff)
0x08FC1400,	//0x1a3c		VoC_lw16_d(REG0,0x8fc)
0xFFC0E5C4,	//0x1a3e		VoC_NAD	|	VoC_jump(FLAG_END)
		//0x1a40		FLAG_cFrameSampleHalf
0x09A41400,	//0x1a40		VoC_lw16_d(REG0,0x9a4)
		//0x1a42		FLAG_END
0x00010A82,	//0x1a42		VoC_lw16i(REG2,0x1)
0xDFC0E001,	//0x1a44		VoC_push16(REG0,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x00020A83,	//0x1a46		VoC_lw16i(REG3,0x2)
0x08000A80,	//0x1a48		VoC_lw16i(REG0,0x800)
		//0x1a4a		Com_Start
0xFFC0F908,	//0x1a4a		VoC_NOP	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x1A4F3488,	//0x1a4c		VoC_bngt16_rr(Com_Conti,REG1,REG0)
0xC49AE5C3,	//0x1a4e		VoC_mult16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_jump(Com_End)
		//0x1a4f		Com_Conti
0xD610E5FA,	//0x1a50		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_jump(Com_Start)
		//0x1a51		Com_End
0x3CCC0A86,	//0x1a52		VoC_lw16i(REG6,0x3ccc)
0x0A87F908,	//0x1a54		VoC_lw16i(REG7,0x2d41)(lo)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xDFC02D41,	//0x1a56		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i(REG7,0x2d41)(hi)
0x0A84F908,	//0x1a58		VoC_lw16i(REG4,0x3ccc)(lo)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xDFC03CCC,	//0x1a5a		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i(REG4,0x3ccc)(hi)
0x0A85F908,	//0x1a5c		VoC_lw16i(REG5,0x2d41)(lo)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xDFC02D41,	//0x1a5e		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i(REG5,0x2d41)(hi)
0x1583F908,	//0x1a60		VoC_sw32_d(REG67,0x2768)(lo)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xDFC02768,	//0x1a62		VoC_push16(REG0,DEFAULT)	|	VoC_sw32_d(REG67,0x2768)(hi)
0x276A1582,	//0x1a64		VoC_sw32_d(REG45,0x276a)
0x26A81809,	//0x1a66		VoC_lw16i_set_inc(REG1,0x26a8,0x2)
0xD9CEE946,	//0x1a68		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xFF47FA16,	//0x1a6a		VoC_lw32z(RL7,DEFAULT)	|	VoC_shr32_ri(RL6,0x2,DEFAULT)
0xFFC0CBF6,	//0x1a6c		VoC_NOP	|	VoC_sub32_rr(RL6,RL7,RL6,DEFAULT)
		//0x1a6e		VoC_endloop0
0x0A8CDF46,	//0x1a6e		VoC_lw16i(RL6_LO,0x7998)(lo)	|	VoC_push32(RL6,DEFAULT)
0x0A8D7998,	//0x1a70		VoC_lw16i(RL6_HI,0x5a82)(lo)	|	VoC_lw16i(RL6_LO,0x7998)(hi)
0xD93F5A82,	//0x1a72		VoC_lw32_sd(RL7,0x6,DEFAULT)	|	VoC_lw16i(RL6_HI,0x5a82)(hi)
0x17822B80,	//0x1a74		VoC_jal(CII_MultBp2Debug)
0x00000A8E,	//0x1a76		VoC_lw16i(RL7_LO,0x0)
0x0A8FD91C,	//0x1a78		VoC_lw16i(RL7_HI,0x200)(lo)	|	VoC_lw32_sd(ACC0,0x2,DEFAULT)
0xC93D0200,	//0x1a7a		VoC_add32_rr(ACC1,ACC0,RL7,DEFAULT)	|	VoC_lw16i(RL7_HI,0x200)(hi)
0x001C0A84,	//0x1a7c		VoC_lw16i(REG4,0x1c)
0x271C0A85,	//0x1a7e		VoC_lw16i(REG5,0x271c)
0x276C1585,	//0x1a80		VoC_sw32_d(ACC1,0x276c)
0xC165C970,	//0x1a82		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_add32_rr(REG01,ACC1,RL6,DEFAULT)
0x003E0A84,	//0x1a84		VoC_lw16i(REG4,0x3e)
0xCB76DDA8,	//0x1a86		VoC_sub32_rr(RL6,ACC1,RL6,DEFAULT)	|	VoC_sw32_p(REG01,REG5,DEFAULT)
0x271C0A85,	//0x1a88		VoC_lw16i(REG5,0x271c)
0x0A8EC165,	//0x1a8a		VoC_lw16i(RL7_LO,0x0)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDDAE0000,	//0x1a8c		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_lw16i(RL7_LO,0x0)(hi)
0x02000A8F,	//0x1a8e		VoC_lw16i(RL7_HI,0x200)
0xD938D91E,	//0x1a90		VoC_lw32_sd(REG01,0x6,DEFAULT)	|	VoC_lw32_sd(RL6,0x2,DEFAULT)
0x0A84CBF6,	//0x1a92		VoC_lw16i(REG4,0x2c)(lo)	|	VoC_sub32_rr(RL6,RL7,RL6,DEFAULT)
0x0A85002C,	//0x1a94		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_lw16i(REG4,0x2c)(hi)
0xC984271C,	//0x1a96		VoC_add32_rr(ACC0,RL6,REG01,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x0A84C165,	//0x1a98		VoC_lw16i(REG4,0x2e)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDDAC002E,	//0x1a9a		VoC_sw32_p(ACC0,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x2e)(hi)
0x0A85CB87,	//0x1a9c		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sub32_rr(RL7,RL6,REG01,DEFAULT)
0xC165271C,	//0x1a9e		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x003C0A84,	//0x1aa0		VoC_lw16i(REG4,0x3c)
0x0A85DDAF,	//0x1aa2		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sw32_p(RL7,REG5,DEFAULT)
0xC165271C,	//0x1aa4		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x001E0A84,	//0x1aa6		VoC_lw16i(REG4,0x1e)
0x0A85DDAE,	//0x1aa8		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sw32_p(RL6,REG5,DEFAULT)
0xC165271C,	//0x1aaa		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0xDDAED92F,	//0x1aac		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_lw32_sd(RL7,0x4,DEFAULT)
0x79980A8C,	//0x1aae		VoC_lw16i(RL6_LO,0x7998)
0x5A820A8D,	//0x1ab0		VoC_lw16i(RL6_HI,0x5a82)
0x17822B80,	//0x1ab2		VoC_jal(CII_MultBp2Debug)
0xD908D94F,	//0x1ab4		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw32_sd(RL7,0x8,DEFAULT)
0x0A84C83C,	//0x1ab6		VoC_lw16i(REG4,0x10)(lo)	|	VoC_add32_rr(ACC0,REG01,RL7,DEFAULT)
0x0A850010,	//0x1ab8		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_lw16i(REG4,0x10)(hi)
0x1584271C,	//0x1aba		VoC_sw32_d(ACC0,0x276e)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0xC935276E,	//0x1abc		VoC_add32_rr(ACC1,ACC0,RL6,DEFAULT)	|	VoC_sw32_d(ACC0,0x276e)(hi)
0x0A84C165,	//0x1abe		VoC_lw16i(REG4,0x32)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDDAD0032,	//0x1ac0		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x32)(hi)
0x0A85CB31,	//0x1ac2		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sub32_rr(REG23,ACC0,RL6,DEFAULT)
0xC165271C,	//0x1ac4		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x00200A84,	//0x1ac6		VoC_lw16i(REG4,0x20)
0xCBC6DDA9,	//0x1ac8		VoC_sub32_rr(RL6,RL7,REG01,DEFAULT)	|	VoC_sw32_p(REG23,REG5,DEFAULT)
0x0A85D92F,	//0x1aca		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_lw32_sd(RL7,0x4,DEFAULT)
0xC9BD271C,	//0x1acc		VoC_add32_rr(ACC1,RL6,RL7,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x0A84C165,	//0x1ace		VoC_lw16i(REG4,0x22)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDDAD0022,	//0x1ad0		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x22)(hi)
0x0A85CBBC,	//0x1ad2		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sub32_rr(ACC0,RL6,RL7,DEFAULT)
0xC165271C,	//0x1ad4		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x00300A84,	//0x1ad6		VoC_lw16i(REG4,0x30)
0x0A85DDAC,	//0x1ad8		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sw32_p(ACC0,REG5,DEFAULT)
0xC165271C,	//0x1ada		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x00120A84,	//0x1adc		VoC_lw16i(REG4,0x12)
0x0A85DDAE,	//0x1ade		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sw32_p(RL6,REG5,DEFAULT)
0xC165271C,	//0x1ae0		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0xDDAED937,	//0x1ae2		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_lw32_sd(RL7,0x5,DEFAULT)
0x79980A8C,	//0x1ae4		VoC_lw16i(RL6_LO,0x7998)
0x5A820A8D,	//0x1ae6		VoC_lw16i(RL6_HI,0x5a82)
0x17822B80,	//0x1ae8		VoC_jal(CII_MultBp2Debug)
0xD910D957,	//0x1aea		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_lw32_sd(RL7,0x9,DEFAULT)
0x0A84C83C,	//0x1aec		VoC_lw16i(REG4,0x14)(lo)	|	VoC_add32_rr(ACC0,REG01,RL7,DEFAULT)
0x0A850014,	//0x1aee		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_lw16i(REG4,0x14)(hi)
0x1584271C,	//0x1af0		VoC_sw32_d(ACC0,0x2770)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0xC9352770,	//0x1af2		VoC_add32_rr(ACC1,ACC0,RL6,DEFAULT)	|	VoC_sw32_d(ACC0,0x2770)(hi)
0x0A84C165,	//0x1af4		VoC_lw16i(REG4,0x36)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDDAD0036,	//0x1af6		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x36)(hi)
0x0A85CB31,	//0x1af8		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sub32_rr(REG23,ACC0,RL6,DEFAULT)
0xC165271C,	//0x1afa		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x00240A84,	//0x1afc		VoC_lw16i(REG4,0x24)
0xCBC6DDA9,	//0x1afe		VoC_sub32_rr(RL6,RL7,REG01,DEFAULT)	|	VoC_sw32_p(REG23,REG5,DEFAULT)
0xC98FD931,	//0x1b00		VoC_add32_rr(RL7,RL6,REG23,DEFAULT)	|	VoC_lw32_sd(REG23,0x5,DEFAULT)
0x271C0A85,	//0x1b02		VoC_lw16i(REG5,0x271c)
0x0A84C165,	//0x1b04		VoC_lw16i(REG4,0x26)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDDAF0026,	//0x1b06		VoC_sw32_p(RL7,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x26)(hi)
0x0A85CB8F,	//0x1b08		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sub32_rr(RL7,RL6,REG23,DEFAULT)
0xC165271C,	//0x1b0a		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x00340A84,	//0x1b0c		VoC_lw16i(REG4,0x34)
0x0A85DDAF,	//0x1b0e		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sw32_p(RL7,REG5,DEFAULT)
0xC165271C,	//0x1b10		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x00160A84,	//0x1b12		VoC_lw16i(REG4,0x16)
0x0A85DDAE,	//0x1b14		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sw32_p(RL6,REG5,DEFAULT)
0xC165271C,	//0x1b16		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0xDDAED927,	//0x1b18		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_lw32_sd(RL7,0x3,DEFAULT)
0x79980A8C,	//0x1b1a		VoC_lw16i(RL6_LO,0x7998)
0x5A820A8D,	//0x1b1c		VoC_lw16i(RL6_HI,0x5a82)
0x17822B80,	//0x1b1e		VoC_jal(CII_MultBp2Debug)
0xC984D940,	//0x1b20		VoC_add32_rr(ACC0,RL6,REG01,DEFAULT)	|	VoC_lw32_sd(REG01,0x7,DEFAULT)
0x00180A84,	//0x1b22		VoC_lw16i(REG4,0x18)
0x271C0A85,	//0x1b24		VoC_lw16i(REG5,0x271c)
0x0A84C165,	//0x1b26		VoC_lw16i(REG4,0x3a)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDDAC003A,	//0x1b28		VoC_sw32_p(ACC0,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x3a)(hi)
0x0A85CA35,	//0x1b2a		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_sub32_rr(ACC1,REG01,RL6,DEFAULT)
0xC165271C,	//0x1b2c		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x00280A84,	//0x1b2e		VoC_lw16i(REG4,0x28)
0xD924DDAD,	//0x1b30		VoC_lw32_sd(ACC0,0x3,DEFAULT)	|	VoC_sw32_p(ACC1,REG5,DEFAULT)
0x0A85C825,	//0x1b32		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_add32_rr(ACC1,REG01,ACC0,DEFAULT)
0xC165271C,	//0x1b34		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x271c)(hi)
0x002A0A84,	//0x1b36		VoC_lw16i(REG4,0x2a)
0xCA27DDAD,	//0x1b38		VoC_sub32_rr(RL7,REG01,ACC0,DEFAULT)	|	VoC_sw32_p(ACC1,REG5,DEFAULT)
0x271C0A85,	//0x1b3a		VoC_lw16i(REG5,0x271c)
0x0A84C165,	//0x1b3c		VoC_lw16i(REG4,0x38)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDDAF0038,	//0x1b3e		VoC_sw32_p(RL7,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x38)(hi)
0x271C0A85,	//0x1b40		VoC_lw16i(REG5,0x271c)
0x0A84C165,	//0x1b42		VoC_lw16i(REG4,0x1a)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDDA8001A,	//0x1b44		VoC_sw32_p(REG01,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x1a)(hi)
0x271C0A85,	//0x1b46		VoC_lw16i(REG5,0x271c)
0xD936C165,	//0x1b48		VoC_lw32_sd(RL6,0x5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xD936DDA8,	//0x1b4a		VoC_lw32_sd(RL6,0x5,DEFAULT)	|	VoC_sw32_p(REG01,REG5,DEFAULT)
0xC9BCD927,	//0x1b4c		VoC_add32_rr(ACC0,RL6,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x3,DEFAULT)
0x1584CBBD,	//0x1b4e		VoC_sw32_d(ACC0,0x2772)(lo)	|	VoC_sub32_rr(ACC1,RL6,RL7,DEFAULT)
0x15852772,	//0x1b50		VoC_sw32_d(ACC1,0x2774)(lo)	|	VoC_sw32_d(ACC0,0x2772)(hi)
0xD93F2774,	//0x1b52		VoC_lw32_sd(RL7,0x6,DEFAULT)	|	VoC_sw32_d(ACC1,0x2774)(hi)
0x276C093C,	//0x1b54		VoC_add32_rd(ACC0,RL7,0x276c)
0x276C0BBD,	//0x1b56		VoC_sub32_dr(ACC1,0x276c,RL7)
0x27761584,	//0x1b58		VoC_sw32_d(ACC0,0x2776)
0x27781585,	//0x1b5a		VoC_sw32_d(ACC1,0x2778)
0x093CD92F,	//0x1b5c		VoC_add32_rd(ACC0,RL7,0x276e)(lo)	|	VoC_lw32_sd(RL7,0x4,DEFAULT)
0x1485276E,	//0x1b5e		VoC_lw32_d(ACC1,0x2770)(lo)	|	VoC_add32_rd(ACC0,RL7,0x276e)(hi)
0x15842770,	//0x1b60		VoC_sw32_d(ACC0,0x277a)(lo)	|	VoC_lw32_d(ACC1,0x2770)(hi)
0x092D277A,	//0x1b62		VoC_add32_rd(ACC1,ACC1,0x2772)(lo)	|	VoC_sw32_d(ACC0,0x277a)(hi)
0xD9472772,	//0x1b64		VoC_lw32_sd(RL7,0x7,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x2772)(hi)
0x1486C97D,	//0x1b66		VoC_lw32_d(RL6,0x2776)(lo)	|	VoC_add32_rr(ACC1,ACC1,RL7,DEFAULT)
0x15852776,	//0x1b68		VoC_sw32_d(ACC1,0x277c)(lo)	|	VoC_lw32_d(RL6,0x2776)(hi)
0xC975277C,	//0x1b6a		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_sw32_d(ACC1,0x277c)(hi)
0x277A09B4,	//0x1b6c		VoC_sub32_rd(ACC0,RL6,0x277a)
0x277A092D,	//0x1b6e		VoC_add32_rd(ACC1,ACC1,0x277a)
0x27701486,	//0x1b70		VoC_lw32_d(RL6,0x2770)
0x277E1585,	//0x1b72		VoC_sw32_d(ACC1,0x277e)
0x27821584,	//0x1b74		VoC_sw32_d(ACC0,0x2782)
0x277409B7,	//0x1b76		VoC_sub32_rd(RL7,RL6,0x2774)
0x3CCC0A8C,	//0x1b78		VoC_lw16i(RL6_LO,0x3ccc)
0xCBE7D944,	//0x1b7a		VoC_sub32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_lw32_sd(ACC0,0x7,DEFAULT)
0x2D410A8D,	//0x1b7c		VoC_lw16i(RL6_HI,0x2d41)
0x17822B80,	//0x1b7e		VoC_jal(CII_MultBp2Debug)
0x27780935,	//0x1b80		VoC_add32_rd(ACC1,RL6,0x2778)
0x27780BB4,	//0x1b82		VoC_sub32_dr(ACC0,0x2778,RL6)
0x27701487,	//0x1b84		VoC_lw32_d(RL7,0x2770)
0x27801585,	//0x1b86		VoC_sw32_d(ACC1,0x2780)
0x27841584,	//0x1b88		VoC_sw32_d(ACC0,0x2784)
0x277209BF,	//0x1b8a		VoC_sub32_rd(RL7,RL7,0x2772)
0x0A8CD945,	//0x1b8c		VoC_lw16i(RL6_LO,0x3ccc)(lo)	|	VoC_lw32_sd(ACC1,0x7,DEFAULT)
0xC97F3CCC,	//0x1b8e		VoC_add32_rr(RL7,ACC1,RL7,DEFAULT)	|	VoC_lw16i(RL6_LO,0x3ccc)(hi)
0x2D410A8D,	//0x1b90		VoC_lw16i(RL6_HI,0x2d41)
0x17822B80,	//0x1b92		VoC_jal(CII_MultBp2Debug)
0x276E09B4,	//0x1b94		VoC_sub32_rd(ACC0,RL6,0x276e)
0xC93CD92F,	//0x1b96		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x4,DEFAULT)
0x276E0BBD,	//0x1b98		VoC_sub32_dr(ACC1,0x276e,RL7)
0x27861584,	//0x1b9a		VoC_sw32_d(ACC0,0x2786)
0x1487C975,	//0x1b9c		VoC_lw32_d(RL7,0x2770)(lo)	|	VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)
0x15852770,	//0x1b9e		VoC_sw32_d(ACC1,0x278a)(lo)	|	VoC_lw32_d(RL7,0x2770)(hi)
0x093F278A,	//0x1ba0		VoC_add32_rd(RL7,RL7,0x2774)(lo)	|	VoC_sw32_d(ACC1,0x278a)(hi)
0xD9452774,	//0x1ba2		VoC_lw32_sd(ACC1,0x7,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x2774)(hi)
0xFFC0CBEF,	//0x1ba4		VoC_NOP	|	VoC_sub32_rr(RL7,RL7,ACC1,DEFAULT)
0x27881587,	//0x1ba6		VoC_sw32_d(RL7,0x2788)
0x0C4A6C06,	//0x1ba8		VoC_bez16_d(LTSChannel_Left,0xc4a)
0x57E80A85,	//0x1baa		VoC_lw16i(REG5,0x57e8)
0xFFC0E5C4,	//0x1bac		VoC_NAD	|	VoC_jump(Channel_Com_Start)
		//0x1bae		LTSChannel_Left
0x53E80A85,	//0x1bae		VoC_lw16i(REG5,0x53e8)
		//0x1bb0		Channel_Com_Start
0x277E1486,	//0x1bb0		VoC_lw32_d(RL6,0x277e)
0x27C01505,	//0x1bb2		VoC_sw16_d(REG5,0x27c0)
0xFFC0FF47,	//0x1bb4		VoC_NAD	|	VoC_lw32z(RL7,DEFAULT)
0x17ED2B80,	//0x1bb6		VoC_jal(CII_InverseQuadRootOfSumSquares)
0x27C01405,	//0x1bb8		VoC_lw16_d(REG5,0x27c0)
0x278A1487,	//0x1bba		VoC_lw32_d(RL7,0x278a)
0x1486DDAE,	//0x1bbc		VoC_lw32_d(RL6,0x2780)(lo)	|	VoC_sw32_p(RL6,REG5,DEFAULT)
0x2B802780,	//0x1bbe		VoC_jal(CII_InverseQuadRootOfSumSquares)(lo)	|	VoC_lw32_d(RL6,0x2780)(hi)
0xD63617ED,	//0x1bc0		VoC_lw16_sd(REG6,0x2,DEFAULT)	|	VoC_jal(CII_InverseQuadRootOfSumSquares)(hi)
0x27C01405,	//0x1bc2		VoC_lw16_d(REG5,0x27c0)
0xC175F9FE,	//0x1bc4		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0x27881487,	//0x1bc6		VoC_lw32_d(RL7,0x2788)
0x1486DDAE,	//0x1bc8		VoC_lw32_d(RL6,0x2782)(lo)	|	VoC_sw32_p(RL6,REG5,DEFAULT)
0x2B802782,	//0x1bca		VoC_jal(CII_InverseQuadRootOfSumSquares)(lo)	|	VoC_lw32_d(RL6,0x2782)(hi)
0xD63617ED,	//0x1bcc		VoC_lw16_sd(REG6,0x2,DEFAULT)	|	VoC_jal(CII_InverseQuadRootOfSumSquares)(hi)
0x27C01405,	//0x1bce		VoC_lw16_d(REG5,0x27c0)
0xC175F9F6,	//0x1bd0		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffffe,DEFAULT)
0x27861487,	//0x1bd2		VoC_lw32_d(RL7,0x2786)
0x1486DDAE,	//0x1bd4		VoC_lw32_d(RL6,0x2784)(lo)	|	VoC_sw32_p(RL6,REG5,DEFAULT)
0x2B802784,	//0x1bd6		VoC_jal(CII_InverseQuadRootOfSumSquares)(lo)	|	VoC_lw32_d(RL6,0x2784)(hi)
0xD63617ED,	//0x1bd8		VoC_lw16_sd(REG6,0x2,DEFAULT)	|	VoC_jal(CII_InverseQuadRootOfSumSquares)(hi)
0x27C01405,	//0x1bda		VoC_lw16_d(REG5,0x27c0)
0xC175F9FE,	//0x1bdc		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0xC175F9FE,	//0x1bde		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0xDDAED616,	//0x1be0		VoC_sw32_p(RL6,REG5,DEFAULT)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xD645F9FE,	//0x1be2		VoC_lw16_sd(REG5,0x3,DEFAULT)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0x271A1506,	//0x1be4		VoC_sw16_d(REG6,0x271a)
0x278C1505,	//0x1be6		VoC_sw16_d(REG5,0x278c)
0x275C1486,	//0x1be8		VoC_lw32_d(RL6,0x275c)
0x00100A86,	//0x1bea		VoC_lw16i(REG6,0x10)
0x275E1487,	//0x1bec		VoC_lw32_d(RL7,0x275e)
0x278D1506,	//0x1bee		VoC_sw16_d(REG6,0x278d)
0x27B21586,	//0x1bf0		VoC_sw32_d(RL6,0x27b2)
0x27B41587,	//0x1bf2		VoC_sw32_d(RL7,0x27b4)
0x189B2B80,	//0x1bf4		VoC_jal(CII_prvDoLpc4)
0xF9FED626,	//0x1bf6		VoC_shru16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,DEFAULT)
0x1506D645,	//0x1bf8		VoC_sw16_d(REG6,0x271a)(lo)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x1505271A,	//0x1bfa		VoC_sw16_d(REG5,0x278c)(lo)	|	VoC_sw16_d(REG6,0x271a)(hi)
0x1486278C,	//0x1bfc		VoC_lw32_d(RL6,0x2760)(lo)	|	VoC_sw16_d(REG5,0x278c)(hi)
0x0A862760,	//0x1bfe		VoC_lw16i(REG6,0x20)(lo)	|	VoC_lw32_d(RL6,0x2760)(hi)
0x14870020,	//0x1c00		VoC_lw32_d(RL7,0x2762)(lo)	|	VoC_lw16i(REG6,0x20)(hi)
0x15062762,	//0x1c02		VoC_sw16_d(REG6,0x278d)(lo)	|	VoC_lw32_d(RL7,0x2762)(hi)
0x1586278D,	//0x1c04		VoC_sw32_d(RL6,0x27b2)(lo)	|	VoC_sw16_d(REG6,0x278d)(hi)
0x158727B2,	//0x1c06		VoC_sw32_d(RL7,0x27b4)(lo)	|	VoC_sw32_d(RL6,0x27b2)(hi)
0x2B8027B4,	//0x1c08		VoC_jal(CII_prvDoLpc4)(lo)	|	VoC_sw32_d(RL7,0x27b4)(hi)
0xD626189B,	//0x1c0a		VoC_lw16_sd(REG6,0x1,DEFAULT)	|	VoC_jal(CII_prvDoLpc4)(hi)
0xF9FED614,	//0x1c0c		VoC_shru16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xC1A6F9FC,	//0x1c0e		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0xffffffff,DEFAULT)
0x1506D645,	//0x1c10		VoC_sw16_d(REG6,0x271a)(lo)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x1505271A,	//0x1c12		VoC_sw16_d(REG5,0x278c)(lo)	|	VoC_sw16_d(REG6,0x271a)(hi)
0x1486278C,	//0x1c14		VoC_lw32_d(RL6,0x2764)(lo)	|	VoC_sw16_d(REG5,0x278c)(hi)
0x0A862764,	//0x1c16		VoC_lw16i(REG6,0x30)(lo)	|	VoC_lw32_d(RL6,0x2764)(hi)
0x14870030,	//0x1c18		VoC_lw32_d(RL7,0x2766)(lo)	|	VoC_lw16i(REG6,0x30)(hi)
0x15062766,	//0x1c1a		VoC_sw16_d(REG6,0x278d)(lo)	|	VoC_lw32_d(RL7,0x2766)(hi)
0x1586278D,	//0x1c1c		VoC_sw32_d(RL6,0x27b2)(lo)	|	VoC_sw16_d(REG6,0x278d)(hi)
0x158727B2,	//0x1c1e		VoC_sw32_d(RL7,0x27b4)(lo)	|	VoC_sw32_d(RL6,0x27b2)(hi)
0x2B8027B4,	//0x1c20		VoC_jal(CII_prvDoLpc4)(lo)	|	VoC_sw32_d(RL7,0x27b4)(hi)
0xD656189B,	//0x1c22		VoC_lw16_sd(REG6,0x4,DEFAULT)	|	VoC_jal(CII_prvDoLpc4)(hi)
0x00160A84,	//0x1c24		VoC_lw16i(REG4,0x16)
0x0A85F83E,	//0x1c26		VoC_lw16i(REG5,0xde0)(lo)	|	VoC_shr16_ri(REG6,0x7,DEFAULT)
0x31860DE0,	//0x1c28		VoC_bez16_r(G_sct_END,REG6)(lo)	|	VoC_lw16i(REG5,0xde0)(hi)
0x0A851C3D,	//0x1c2a		VoC_lw16i(REG5,0xe02)(lo)	|	VoC_bez16_r(G_sct_END,REG6)(hi)
0x41060E02,	//0x1c2c		VoC_be16_rd(G_sct_END,REG6,0x11a9)(lo)	|	VoC_lw16i(REG5,0xe02)(hi)
0x0A8511A9,	//0x1c2e		VoC_lw16i(REG5,0xe1c)(lo)	|	VoC_be16_rd(G_sct_END,REG6,0x11a9)(hi)
0x40A60E1C,	//0x1c30		VoC_be16_rd(G_sct_END,REG6,0x11aa)(lo)	|	VoC_lw16i(REG5,0xe1c)(hi)
0x0A8511AA,	//0x1c32		VoC_lw16i(REG5,0xe3e)(lo)	|	VoC_be16_rd(G_sct_END,REG6,0x11aa)(hi)
0x40860E3E,	//0x1c34		VoC_be16_rd(G_sct_END,REG6,0x11ac)(lo)	|	VoC_lw16i(REG5,0xe3e)(hi)
0x0A8511AC,	//0x1c36		VoC_lw16i(REG5,0xe58)(lo)	|	VoC_be16_rd(G_sct_END,REG6,0x11ac)(hi)
0x40260E58,	//0x1c38		VoC_be16_rd(G_sct_END,REG6,0x11b0)(lo)	|	VoC_lw16i(REG5,0xe58)(hi)
0x0A8511B0,	//0x1c3a		VoC_lw16i(REG5,0xe7a)(lo)	|	VoC_be16_rd(G_sct_END,REG6,0x11b0)(hi)
0xC12F0E7A,	//0x1c3c		VoC_add16_rr(REG7,REG4,REG5,DEFAULT)	|	VoC_lw16i(REG5,0xe7a)(hi)
		//0x1c3d		G_sct_END
0x00180A86,	//0x1c3e		VoC_lw16i(REG6,0x18)
0xC177D9BE,	//0x1c40		VoC_add16_rr(REG7,REG5,REG6,DEFAULT)	|	VoC_lw32_p(RL6,REG7,DEFAULT)
0x278E1586,	//0x1c42		VoC_sw32_d(RL6,0x278e)
0x0A84D9BF,	//0x1c44		VoC_lw16i(REG4,0x8)(lo)	|	VoC_lw32_p(RL7,REG7,DEFAULT)
0x15870008,	//0x1c46		VoC_sw32_d(RL7,0x2790)(lo)	|	VoC_lw16i(REG4,0x8)(hi)
0xC1672790,	//0x1c48		VoC_add16_rr(REG7,REG5,REG4,DEFAULT)	|	VoC_sw32_d(RL7,0x2790)(hi)
0x000A0A86,	//0x1c4a		VoC_lw16i(REG6,0xa)
0xC177D9BC,	//0x1c4c		VoC_add16_rr(REG7,REG5,REG6,DEFAULT)	|	VoC_lw32_p(ACC0,REG7,DEFAULT)
0xD9BDFA0C,	//0x1c4e		VoC_lw32_p(ACC1,REG7,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x0A86FA0D,	//0x1c50		VoC_lw16i(REG6,0x14)(lo)	|	VoC_shr32_ri(ACC1,0x1,DEFAULT)
0xC1770014,	//0x1c52		VoC_add16_rr(REG7,REG5,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x14)(hi)
0x27181584,	//0x1c54		VoC_sw32_d(ACC0,0x2718)
0x1585D9B8,	//0x1c56		VoC_sw32_d(ACC1,0x2716)(lo)	|	VoC_lw32_p(REG01,REG7,DEFAULT)
0xFA082716,	//0x1c58		VoC_shr32_ri(REG01,0x1,DEFAULT)	|	VoC_sw32_d(ACC1,0x2716)(hi)
0x7FFF0AC2,	//0x1c5a		VoC_lw16i(REG2,0xffff)
0x27921580,	//0x1c5c		VoC_sw32_d(REG01,0x2792)
0xFF40FBFE,	//0x1c5e		VoC_lw32z(REG01,DEFAULT)	|	VoC_shr32_ri(RL6,0xffffffff,DEFAULT)
0x3FFF0A83,	//0x1c60		VoC_lw16i(REG3,0x3fff)
0x27941586,	//0x1c62		VoC_sw32_d(RL6,0x2794)
0x27961580,	//0x1c64		VoC_sw32_d(REG01,0x2796)
0x279A1580,	//0x1c66		VoC_sw32_d(REG01,0x279a)
0x27981581,	//0x1c68		VoC_sw32_d(REG23,0x2798)
0x00010A80,	//0x1c6a		VoC_lw16i(REG0,0x1)
0x279C1581,	//0x1c6c		VoC_sw32_d(REG23,0x279c)
		//0x1c6e		LOOP_START
0x1486DFC0,	//0x1c6e		VoC_lw32_d(RL6,0x2790)(lo)	|	VoC_push16(REG0,DEFAULT)
0x14872790,	//0x1c70		VoC_lw32_d(RL7,0x278e)(lo)	|	VoC_lw32_d(RL6,0x2790)(hi)
0xC9BC278E,	//0x1c72		VoC_add32_rr(ACC0,RL6,RL7,DEFAULT)	|	VoC_lw32_d(RL7,0x278e)(hi)
0x1584CBF5,	//0x1c74		VoC_sw32_d(ACC0,0x279e)(lo)	|	VoC_sub32_rr(ACC1,RL7,RL6,DEFAULT)
0x1585279E,	//0x1c76		VoC_sw32_d(ACC1,0x27a0)(lo)	|	VoC_sw32_d(ACC0,0x279e)(hi)
0x2B8027A0,	//0x1c78		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_sw32_d(ACC1,0x27a0)(hi)
0xFBFE1782,	//0x1c7a		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x7FFF0AC0,	//0x1c7c		VoC_lw16i(REG0,0xffff)
0x27A21586,	//0x1c7e		VoC_sw32_d(RL6,0x27a2)
0x278E1487,	//0x1c80		VoC_lw32_d(RL7,0x278e)
0x3FFF0A81,	//0x1c82		VoC_lw16i(REG1,0x3fff)
0x2B80FF3E,	//0x1c84		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0xFBFE1782,	//0x1c86		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x1487CA36,	//0x1c88		VoC_lw32_d(RL7,0x27a2)(lo)	|	VoC_sub32_rr(RL6,REG01,RL6,DEFAULT)
0x158627A2,	//0x1c8a		VoC_sw32_d(RL6,0x27a4)(lo)	|	VoC_lw32_d(RL7,0x27a2)(hi)
0xCBF427A4,	//0x1c8c		VoC_sub32_rr(ACC0,RL7,RL6,DEFAULT)	|	VoC_sw32_d(RL6,0x27a4)(hi)
0x1584C9BD,	//0x1c8e		VoC_sw32_d(ACC0,0x27a6)(lo)	|	VoC_add32_rr(ACC1,RL6,RL7,DEFAULT)
0x158527A6,	//0x1c90		VoC_sw32_d(ACC1,0x27a8)(lo)	|	VoC_sw32_d(ACC0,0x27a6)(hi)
0x148627A8,	//0x1c92		VoC_lw32_d(RL6,0x278e)(lo)	|	VoC_sw32_d(ACC1,0x27a8)(hi)
0x1487278E,	//0x1c94		VoC_lw32_d(RL7,0x2794)(lo)	|	VoC_lw32_d(RL6,0x278e)(hi)
0x14802794,	//0x1c96		VoC_lw32_d(REG01,0x2798)(lo)	|	VoC_lw32_d(RL7,0x2794)(hi)
0x2B802798,	//0x1c98		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_d(REG01,0x2798)(hi)
0xCA301782,	//0x1c9a		VoC_sub32_rr(REG01,REG01,RL6,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x27901486,	//0x1c9c		VoC_lw32_d(RL6,0x2790)
0x27941487,	//0x1c9e		VoC_lw32_d(RL7,0x2794)
0x27981586,	//0x1ca0		VoC_sw32_d(RL6,0x2798)
0x27901580,	//0x1ca2		VoC_sw32_d(REG01,0x2790)
0x27961483,	//0x1ca4		VoC_lw32_d(REG67,0x2796)
0x17822B80,	//0x1ca6		VoC_jal(CII_MultBp2Debug)
0x1487C99D,	//0x1ca8		VoC_lw32_d(RL7,0x278e)(lo)	|	VoC_add32_rr(ACC1,RL6,REG67,DEFAULT)
0x1486278E,	//0x1caa		VoC_lw32_d(RL6,0x279e)(lo)	|	VoC_lw32_d(RL7,0x278e)(hi)
0x1585279E,	//0x1cac		VoC_sw32_d(ACC1,0x278e)(lo)	|	VoC_lw32_d(RL6,0x279e)(hi)
0x1587278E,	//0x1cae		VoC_sw32_d(RL7,0x2796)(lo)	|	VoC_sw32_d(ACC1,0x278e)(hi)
0xD93F2796,	//0x1cb0		VoC_lw32_sd(RL7,0x6,DEFAULT)	|	VoC_sw32_d(RL7,0x2796)(hi)
0x17822B80,	//0x1cb2		VoC_jal(CII_MultBp2Debug)
0x27AA1586,	//0x1cb4		VoC_sw32_d(RL6,0x27aa)
0x27A81487,	//0x1cb6		VoC_lw32_d(RL7,0x27a8)
0xFFC0D91E,	//0x1cb8		VoC_NAD	|	VoC_lw32_sd(RL6,0x2,DEFAULT)
0x17822B80,	//0x1cba		VoC_jal(CII_MultBp2Debug)
0x27AC1586,	//0x1cbc		VoC_sw32_d(RL6,0x27ac)
0x27A61487,	//0x1cbe		VoC_lw32_d(RL7,0x27a6)
0xFFC0D91E,	//0x1cc0		VoC_NAD	|	VoC_lw32_sd(RL6,0x2,DEFAULT)
0x17822B80,	//0x1cc2		VoC_jal(CII_MultBp2Debug)
0x27AE1586,	//0x1cc4		VoC_sw32_d(RL6,0x27ae)
0x27A01487,	//0x1cc6		VoC_lw32_d(RL7,0x27a0)
0xFFC0D93E,	//0x1cc8		VoC_NAD	|	VoC_lw32_sd(RL6,0x6,DEFAULT)
0x17822B80,	//0x1cca		VoC_jal(CII_MultBp2Debug)
0x27B01586,	//0x1ccc		VoC_sw32_d(RL6,0x27b0)
0x00000A80,	//0x1cce		VoC_lw16i(REG0,0x0)
0x02000A81,	//0x1cd0		VoC_lw16i(REG1,0x200)
0x27AC0905,	//0x1cd2		VoC_add32_rd(ACC1,REG01,0x27ac)
0x271C0A85,	//0x1cd4		VoC_lw16i(REG5,0x271c)
0x003E0A86,	//0x1cd6		VoC_lw16i(REG6,0x3e)
0x11B3072C,	//0x1cd8		VoC_add16_rd(REG4,REG5,0x11b3)
0x27AA092E,	//0x1cda		VoC_add32_rd(RL6,ACC1,0x27aa)
0x09AFC1AE,	//0x1cdc		VoC_sub32_rd(RL7,ACC1,0x27aa)(lo)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0xDDA627AA,	//0x1cde		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_sub32_rd(RL7,ACC1,0x27aa)(hi)
0x0905DDB7,	//0x1ce0		VoC_add32_rd(ACC1,REG01,0x27ae)(lo)	|	VoC_sw32_p(RL7,REG6,DEFAULT)
0x0A8427AE,	//0x1ce2		VoC_lw16i(REG4,0x1c)(lo)	|	VoC_add32_rd(ACC1,REG01,0x27ae)(hi)
0x0A86001C,	//0x1ce4		VoC_lw16i(REG6,0x2e)(lo)	|	VoC_lw16i(REG4,0x1c)(hi)
0xC12C002E,	//0x1ce6		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16i(REG6,0x2e)(hi)
0x27AA092E,	//0x1ce8		VoC_add32_rd(RL6,ACC1,0x27aa)
0x09AFC1AE,	//0x1cea		VoC_sub32_rd(RL7,ACC1,0x27aa)(lo)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0xDDA627AA,	//0x1cec		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_sub32_rd(RL7,ACC1,0x27aa)(hi)
0x0985DDB7,	//0x1cee		VoC_sub32_rd(ACC1,REG01,0x27ac)(lo)	|	VoC_sw32_p(RL7,REG6,DEFAULT)
0x0A8427AC,	//0x1cf0		VoC_lw16i(REG4,0x2c)(lo)	|	VoC_sub32_rd(ACC1,REG01,0x27ac)(hi)
0x0A86002C,	//0x1cf2		VoC_lw16i(REG6,0x1e)(lo)	|	VoC_lw16i(REG4,0x2c)(hi)
0xC12C001E,	//0x1cf4		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16i(REG6,0x1e)(hi)
0x27B009AE,	//0x1cf6		VoC_sub32_rd(RL6,ACC1,0x27b0)
0x092FC1AE,	//0x1cf8		VoC_add32_rd(RL7,ACC1,0x27b0)(lo)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0xDDA627B0,	//0x1cfa		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_add32_rd(RL7,ACC1,0x27b0)(hi)
0x0985DDB7,	//0x1cfc		VoC_sub32_rd(ACC1,REG01,0x27ae)(lo)	|	VoC_sw32_p(RL7,REG6,DEFAULT)
0x0A8427AE,	//0x1cfe		VoC_lw16i(REG4,0x3c)(lo)	|	VoC_sub32_rd(ACC1,REG01,0x27ae)(hi)
0x0A86003C,	//0x1d00		VoC_lw16i(REG6,0xe)(lo)	|	VoC_lw16i(REG4,0x3c)(hi)
0xC12C000E,	//0x1d02		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16i(REG6,0xe)(hi)
0x27B0092E,	//0x1d04		VoC_add32_rd(RL6,ACC1,0x27b0)
0x09AFC1AE,	//0x1d06		VoC_sub32_rd(RL7,ACC1,0x27b0)(lo)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0xDDA627B0,	//0x1d08		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_sub32_rd(RL7,ACC1,0x27b0)(hi)
0x1487DDB7,	//0x1d0a		VoC_lw32_d(RL7,0x279e)(lo)	|	VoC_sw32_p(RL7,REG6,DEFAULT)
0xD92E279E,	//0x1d0c		VoC_lw32_sd(RL6,0x4,DEFAULT)	|	VoC_lw32_d(RL7,0x279e)(hi)
0x17822B80,	//0x1d0e		VoC_jal(CII_MultBp2Debug)
0x27AA1586,	//0x1d10		VoC_sw32_d(RL6,0x27aa)
0x27A81487,	//0x1d12		VoC_lw32_d(RL7,0x27a8)
0xFFC0D90E,	//0x1d14		VoC_NAD	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0x17822B80,	//0x1d16		VoC_jal(CII_MultBp2Debug)
0x27AC1586,	//0x1d18		VoC_sw32_d(RL6,0x27ac)
0x27A61487,	//0x1d1a		VoC_lw32_d(RL7,0x27a6)
0xFFC0D90E,	//0x1d1c		VoC_NAD	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0x17822B80,	//0x1d1e		VoC_jal(CII_MultBp2Debug)
0x27AE1586,	//0x1d20		VoC_sw32_d(RL6,0x27ae)
0x27A01487,	//0x1d22		VoC_lw32_d(RL7,0x27a0)
0xFFC0D92E,	//0x1d24		VoC_NAD	|	VoC_lw32_sd(RL6,0x4,DEFAULT)
0x17822B80,	//0x1d26		VoC_jal(CII_MultBp2Debug)
0x27B01586,	//0x1d28		VoC_sw32_d(RL6,0x27b0)
0x0904D948,	//0x1d2a		VoC_add32_rd(ACC0,REG01,0x27ac)(lo)	|	VoC_lw32_sd(REG01,0x8,DEFAULT)
0x0A8527AC,	//0x1d2c		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_add32_rd(ACC0,REG01,0x27ac)(hi)
0x0A86271C,	//0x1d2e		VoC_lw16i(REG6,0x32)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0x09260032,	//0x1d30		VoC_add32_rd(RL6,ACC0,0x27aa)(lo)	|	VoC_lw16i(REG6,0x32)(hi)
0x072C27AA,	//0x1d32		VoC_add16_rd(REG4,REG5,0x11a8)(lo)	|	VoC_add32_rd(RL6,ACC0,0x27aa)(hi)
0x09A711A8,	//0x1d34		VoC_sub32_rd(RL7,ACC0,0x27aa)(lo)	|	VoC_add16_rd(REG4,REG5,0x11a8)(hi)
0xC17627AA,	//0x1d36		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_sub32_rd(RL7,ACC0,0x27aa)(hi)
0xDDB7DDA6,	//0x1d38		VoC_sw32_p(RL7,REG6,DEFAULT)	|	VoC_sw32_p(RL6,REG4,DEFAULT)
0x27AE0904,	//0x1d3a		VoC_add32_rd(ACC0,REG01,0x27ae)
0x00100A84,	//0x1d3c		VoC_lw16i(REG4,0x10)
0x00220A86,	//0x1d3e		VoC_lw16i(REG6,0x22)
0x27AA0926,	//0x1d40		VoC_add32_rd(RL6,ACC0,0x27aa)
0x09A7C164,	//0x1d42		VoC_sub32_rd(RL7,ACC0,0x27aa)(lo)	|	VoC_add16_rr(REG4,REG5,REG4,DEFAULT)
0xC17627AA,	//0x1d44		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_sub32_rd(RL7,ACC0,0x27aa)(hi)
0xDDB7DDA6,	//0x1d46		VoC_sw32_p(RL7,REG6,DEFAULT)	|	VoC_sw32_p(RL6,REG4,DEFAULT)
0x27AC0984,	//0x1d48		VoC_sub32_rd(ACC0,REG01,0x27ac)
0x00120A84,	//0x1d4a		VoC_lw16i(REG4,0x12)
0x27B00926,	//0x1d4c		VoC_add32_rd(RL6,ACC0,0x27b0)
0x09A7C164,	//0x1d4e		VoC_sub32_rd(RL7,ACC0,0x27b0)(lo)	|	VoC_add16_rr(REG4,REG5,REG4,DEFAULT)
0x072E27B0,	//0x1d50		VoC_add16_rd(REG6,REG5,0x11b9)(lo)	|	VoC_sub32_rd(RL7,ACC0,0x27b0)(hi)
0xDDA611B9,	//0x1d52		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_add16_rd(REG6,REG5,0x11b9)(hi)
0x0984DDB7,	//0x1d54		VoC_sub32_rd(ACC0,REG01,0x27ae)(lo)	|	VoC_sw32_p(RL7,REG6,DEFAULT)
0x092627AE,	//0x1d56		VoC_add32_rd(RL6,ACC0,0x27b0)(lo)	|	VoC_sub32_rd(ACC0,REG01,0x27ae)(hi)
0x072C27B0,	//0x1d58		VoC_add16_rd(REG4,REG5,0x11ba)(lo)	|	VoC_add32_rd(RL6,ACC0,0x27b0)(hi)
0x09A711BA,	//0x1d5a		VoC_sub32_rd(RL7,ACC0,0x27b0)(lo)	|	VoC_add16_rd(REG4,REG5,0x11ba)(hi)
0x072E27B0,	//0x1d5c		VoC_add16_rd(REG6,REG5,0x11aa)(lo)	|	VoC_sub32_rd(RL7,ACC0,0x27b0)(hi)
0xDDA611AA,	//0x1d5e		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_add16_rd(REG6,REG5,0x11aa)(hi)
0x1487DDB7,	//0x1d60		VoC_lw32_d(RL7,0x279e)(lo)	|	VoC_sw32_p(RL7,REG6,DEFAULT)
0xD936279E,	//0x1d62		VoC_lw32_sd(RL6,0x5,DEFAULT)	|	VoC_lw32_d(RL7,0x279e)(hi)
0x17822B80,	//0x1d64		VoC_jal(CII_MultBp2Debug)
0x27AA1586,	//0x1d66		VoC_sw32_d(RL6,0x27aa)
0x27A81487,	//0x1d68		VoC_lw32_d(RL7,0x27a8)
0xFFC0D916,	//0x1d6a		VoC_NAD	|	VoC_lw32_sd(RL6,0x1,DEFAULT)
0x17822B80,	//0x1d6c		VoC_jal(CII_MultBp2Debug)
0x27AC1586,	//0x1d6e		VoC_sw32_d(RL6,0x27ac)
0x27A61487,	//0x1d70		VoC_lw32_d(RL7,0x27a6)
0xFFC0D916,	//0x1d72		VoC_NAD	|	VoC_lw32_sd(RL6,0x1,DEFAULT)
0x17822B80,	//0x1d74		VoC_jal(CII_MultBp2Debug)
0x27AE1586,	//0x1d76		VoC_sw32_d(RL6,0x27ae)
0x27A01487,	//0x1d78		VoC_lw32_d(RL7,0x27a0)
0xFFC0D936,	//0x1d7a		VoC_NAD	|	VoC_lw32_sd(RL6,0x5,DEFAULT)
0x17822B80,	//0x1d7c		VoC_jal(CII_MultBp2Debug)
0x27B01586,	//0x1d7e		VoC_sw32_d(RL6,0x27b0)
0x0904D950,	//0x1d80		VoC_add32_rd(ACC0,REG01,0x27ac)(lo)	|	VoC_lw32_sd(REG01,0x9,DEFAULT)
0x0A8527AC,	//0x1d82		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_add32_rd(ACC0,REG01,0x27ac)(hi)
0x0A86271C,	//0x1d84		VoC_lw16i(REG6,0x36)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0x09260036,	//0x1d86		VoC_add32_rd(RL6,ACC0,0x27aa)(lo)	|	VoC_lw16i(REG6,0x36)(hi)
0x072C27AA,	//0x1d88		VoC_add16_rd(REG4,REG5,0x11ac)(lo)	|	VoC_add32_rd(RL6,ACC0,0x27aa)(hi)
0x09A711AC,	//0x1d8a		VoC_sub32_rd(RL7,ACC0,0x27aa)(lo)	|	VoC_add16_rd(REG4,REG5,0x11ac)(hi)
0xC17627AA,	//0x1d8c		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_sub32_rd(RL7,ACC0,0x27aa)(hi)
0xDDB7DDA6,	//0x1d8e		VoC_sw32_p(RL7,REG6,DEFAULT)	|	VoC_sw32_p(RL6,REG4,DEFAULT)
0x27AE0904,	//0x1d90		VoC_add32_rd(ACC0,REG01,0x27ae)
0x00260A86,	//0x1d92		VoC_lw16i(REG6,0x26)
0x27AA0926,	//0x1d94		VoC_add32_rd(RL6,ACC0,0x27aa)
0x11B6072C,	//0x1d96		VoC_add16_rd(REG4,REG5,0x11b6)
0x27AA09A7,	//0x1d98		VoC_sub32_rd(RL7,ACC0,0x27aa)
0xDDA6C176,	//0x1d9a		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x0984DDB7,	//0x1d9c		VoC_sub32_rd(ACC0,REG01,0x27ac)(lo)	|	VoC_sw32_p(RL7,REG6,DEFAULT)
0x0A8427AC,	//0x1d9e		VoC_lw16i(REG4,0x16)(lo)	|	VoC_sub32_rd(ACC0,REG01,0x27ac)(hi)
0x0A860016,	//0x1da0		VoC_lw16i(REG6,0x24)(lo)	|	VoC_lw16i(REG4,0x16)(hi)
0x09260024,	//0x1da2		VoC_add32_rd(RL6,ACC0,0x27b0)(lo)	|	VoC_lw16i(REG6,0x24)(hi)
0xC16427B0,	//0x1da4		VoC_add16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_add32_rd(RL6,ACC0,0x27b0)(hi)
0x27B009A7,	//0x1da6		VoC_sub32_rd(RL7,ACC0,0x27b0)
0xDDA6C176,	//0x1da8		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x0984DDB7,	//0x1daa		VoC_sub32_rd(ACC0,REG01,0x27ae)(lo)	|	VoC_sw32_p(RL7,REG6,DEFAULT)
0x0A8427AE,	//0x1dac		VoC_lw16i(REG4,0x34)(lo)	|	VoC_sub32_rd(ACC0,REG01,0x27ae)(hi)
0x09260034,	//0x1dae		VoC_add32_rd(RL6,ACC0,0x27b0)(lo)	|	VoC_lw16i(REG4,0x34)(hi)
0xC16427B0,	//0x1db0		VoC_add16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_add32_rd(RL6,ACC0,0x27b0)(hi)
0x27B009A7,	//0x1db2		VoC_sub32_rd(RL7,ACC0,0x27b0)
0x11AE072E,	//0x1db4		VoC_add16_rd(REG6,REG5,0x11ae)
0xDDB7DDA6,	//0x1db6		VoC_sw32_p(RL7,REG6,DEFAULT)	|	VoC_sw32_p(RL6,REG4,DEFAULT)
0x279E1487,	//0x1db8		VoC_lw32_d(RL7,0x279e)
0xFFC0D926,	//0x1dba		VoC_NAD	|	VoC_lw32_sd(RL6,0x3,DEFAULT)
0x17822B80,	//0x1dbc		VoC_jal(CII_MultBp2Debug)
0x27AA1586,	//0x1dbe		VoC_sw32_d(RL6,0x27aa)
0x27A01487,	//0x1dc0		VoC_lw32_d(RL7,0x27a0)
0xFFC0D926,	//0x1dc2		VoC_NAD	|	VoC_lw32_sd(RL6,0x3,DEFAULT)
0x17822B80,	//0x1dc4		VoC_jal(CII_MultBp2Debug)
0x27B01586,	//0x1dc6		VoC_sw32_d(RL6,0x27b0)
0x0904D940,	//0x1dc8		VoC_add32_rd(ACC0,REG01,0x27aa)(lo)	|	VoC_lw32_sd(REG01,0x7,DEFAULT)
0x0A8527AA,	//0x1dca		VoC_lw16i(REG5,0x271c)(lo)	|	VoC_add32_rd(ACC0,REG01,0x27aa)(hi)
0x072C271C,	//0x1dcc		VoC_add16_rd(REG4,REG5,0x11b0)(lo)	|	VoC_lw16i(REG5,0x271c)(hi)
0x072E11B0,	//0x1dce		VoC_add16_rd(REG6,REG5,0x11b7)(lo)	|	VoC_add16_rd(REG4,REG5,0x11b0)(hi)
0xDDA411B7,	//0x1dd0		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_add16_rd(REG6,REG5,0x11b7)(hi)
0x0986DDB4,	//0x1dd2		VoC_sub32_rd(RL6,REG01,0x27b0)(lo)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x090727B0,	//0x1dd4		VoC_add32_rd(RL7,REG01,0x27b0)(lo)	|	VoC_sub32_rd(RL6,REG01,0x27b0)(hi)
0x0A8427B0,	//0x1dd6		VoC_lw16i(REG4,0x28)(lo)	|	VoC_add32_rd(RL7,REG01,0x27b0)(hi)
0xC1640028,	//0x1dd8		VoC_add16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x28)(hi)
0x00380A86,	//0x1dda		VoC_lw16i(REG6,0x38)
0xDDA6C176,	//0x1ddc		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x0986DDB7,	//0x1dde		VoC_sub32_rd(RL6,REG01,0x27aa)(lo)	|	VoC_sw32_p(RL7,REG6,DEFAULT)
0x0A8427AA,	//0x1de0		VoC_lw16i(REG4,0x3a)(lo)	|	VoC_sub32_rd(RL6,REG01,0x27aa)(hi)
0xC164003A,	//0x1de2		VoC_add16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x3a)(hi)
0x002A0A86,	//0x1de4		VoC_lw16i(REG6,0x2a)
0xDDA6C176,	//0x1de6		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x0987DDB6,	//0x1de8		VoC_sub32_rd(RL7,REG01,0x27b0)(lo)	|	VoC_sw32_p(RL6,REG6,DEFAULT)
0x090627B0,	//0x1dea		VoC_add32_rd(RL6,REG01,0x27b0)(lo)	|	VoC_sub32_rd(RL7,REG01,0x27b0)(hi)
0x072E27B0,	//0x1dec		VoC_add16_rd(REG6,REG5,0x11b2)(lo)	|	VoC_add32_rd(RL6,REG01,0x27b0)(hi)
0x072C11B2,	//0x1dee		VoC_add16_rd(REG4,REG5,0x11b8)(lo)	|	VoC_add16_rd(REG6,REG5,0x11b2)(hi)
0xDDB711B8,	//0x1df0		VoC_sw32_p(RL7,REG6,DEFAULT)	|	VoC_add16_rd(REG4,REG5,0x11b8)(hi)
0xD616DDA6,	//0x1df2		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_sw32_p(RL6,REG4,DEFAULT)
0xD657F9FE,	//0x1df4		VoC_lw16_sd(REG7,0x4,DEFAULT)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0x271A1506,	//0x1df6		VoC_sw16_d(REG6,0x271a)
0x278C1507,	//0x1df8		VoC_sw16_d(REG7,0x278c)
0x27181486,	//0x1dfa		VoC_lw32_d(RL6,0x2718)
0x00000A86,	//0x1dfc		VoC_lw16i(REG6,0x0)
0x27161487,	//0x1dfe		VoC_lw32_d(RL7,0x2716)
0x278D1506,	//0x1e00		VoC_sw16_d(REG6,0x278d)
0x27B21586,	//0x1e02		VoC_sw32_d(RL6,0x27b2)
0x27B41587,	//0x1e04		VoC_sw32_d(RL7,0x27b4)
0x189B2B80,	//0x1e06		VoC_jal(CII_prvDoLpc4)
0x27621487,	//0x1e08		VoC_lw32_d(RL7,0x2762)
0x27181486,	//0x1e0a		VoC_lw32_d(RL6,0x2718)
0x17822B80,	//0x1e0c		VoC_jal(CII_MultBp2Debug)
0x27B61586,	//0x1e0e		VoC_sw32_d(RL6,0x27b6)
0x27161487,	//0x1e10		VoC_lw32_d(RL7,0x2716)
0x27601486,	//0x1e12		VoC_lw32_d(RL6,0x2760)
0x17822B80,	//0x1e14		VoC_jal(CII_MultBp2Debug)
0x27B61485,	//0x1e16		VoC_lw32_d(ACC1,0x27b6)
0x27BA1586,	//0x1e18		VoC_sw32_d(RL6,0x27ba)
0x1487CBAC,	//0x1e1a		VoC_lw32_d(RL7,0x2718)(lo)	|	VoC_sub32_rr(ACC0,RL6,ACC1,DEFAULT)
0x15842718,	//0x1e1c		VoC_sw32_d(ACC0,0x2710)(lo)	|	VoC_lw32_d(RL7,0x2718)(hi)
0x14862710,	//0x1e1e		VoC_lw32_d(RL6,0x2760)(lo)	|	VoC_sw32_d(ACC0,0x2710)(hi)
0xFFC02760,	//0x1e20		VoC_NAD	|	VoC_lw32_d(RL6,0x2760)(hi)
0x17822B80,	//0x1e22		VoC_jal(CII_MultBp2Debug)
0x27B81586,	//0x1e24		VoC_sw32_d(RL6,0x27b8)
0x27161487,	//0x1e26		VoC_lw32_d(RL7,0x2716)
0x27621486,	//0x1e28		VoC_lw32_d(RL6,0x2762)
0x17822B80,	//0x1e2a		VoC_jal(CII_MultBp2Debug)
0x27B81487,	//0x1e2c		VoC_lw32_d(RL7,0x27b8)
0x27BC1586,	//0x1e2e		VoC_sw32_d(RL6,0x27bc)
0xD616C9BC,	//0x1e30		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_add32_rr(ACC0,RL6,RL7,DEFAULT)
0x1584D637,	//0x1e32		VoC_sw32_d(ACC0,0x270e)(lo)	|	VoC_lw16_sd(REG7,0x2,DEFAULT)
0xC3F6270E,	//0x1e34		VoC_sub16_rr(REG6,REG7,REG6,DEFAULT)	|	VoC_sw32_d(ACC0,0x270e)(hi)
0xF8FED655,	//0x1e36		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x278C1505,	//0x1e38		VoC_sw16_d(REG5,0x278c)
0x27101486,	//0x1e3a		VoC_lw32_d(RL6,0x2710)
0x00100A85,	//0x1e3c		VoC_lw16i(REG5,0x10)
0x271A1506,	//0x1e3e		VoC_sw16_d(REG6,0x271a)
0x278D1505,	//0x1e40		VoC_sw16_d(REG5,0x278d)
0x270E1487,	//0x1e42		VoC_lw32_d(RL7,0x270e)
0x27B21586,	//0x1e44		VoC_sw32_d(RL6,0x27b2)
0x27B41587,	//0x1e46		VoC_sw32_d(RL7,0x27b4)
0x189B2B80,	//0x1e48		VoC_jal(CII_prvDoLpc4)
0x27B61484,	//0x1e4a		VoC_lw32_d(ACC0,0x27b6)
0x27BA1487,	//0x1e4c		VoC_lw32_d(RL7,0x27ba)
0x27BC1486,	//0x1e4e		VoC_lw32_d(RL6,0x27bc)
0x1485C93C,	//0x1e50		VoC_lw32_d(ACC1,0x27b8)(lo)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xD61627B8,	//0x1e52		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_lw32_d(ACC1,0x27b8)(hi)
0xD637CBAD,	//0x1e54		VoC_lw16_sd(REG7,0x2,DEFAULT)	|	VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)
0xD655C1F6,	//0x1e56		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG6,DEFAULT)
0x1505F8FE,	//0x1e58		VoC_sw16_d(REG5,0x278c)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x1506278C,	//0x1e5a		VoC_sw16_d(REG6,0x271a)(lo)	|	VoC_sw16_d(REG5,0x278c)(hi)
0x0A85271A,	//0x1e5c		VoC_lw16i(REG5,0x20)(lo)	|	VoC_sw16_d(REG6,0x271a)(hi)
0x15850020,	//0x1e5e		VoC_sw32_d(ACC1,0x27b4)(lo)	|	VoC_lw16i(REG5,0x20)(hi)
0x150527B4,	//0x1e60		VoC_sw16_d(REG5,0x278d)(lo)	|	VoC_sw32_d(ACC1,0x27b4)(hi)
0x1584278D,	//0x1e62		VoC_sw32_d(ACC0,0x27b2)(lo)	|	VoC_sw16_d(REG5,0x278d)(hi)
0xFFC027B2,	//0x1e64		VoC_NAD	|	VoC_sw32_d(ACC0,0x27b2)(hi)
0x189B2B80,	//0x1e66		VoC_jal(CII_prvDoLpc4)
0x276A1486,	//0x1e68		VoC_lw32_d(RL6,0x276a)
0x27181487,	//0x1e6a		VoC_lw32_d(RL7,0x2718)
0x17822B80,	//0x1e6c		VoC_jal(CII_MultBp2Debug)
0x1487FF30,	//0x1e6e		VoC_lw32_d(RL7,0x2716)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x14862716,	//0x1e70		VoC_lw32_d(RL6,0x2768)(lo)	|	VoC_lw32_d(RL7,0x2716)(hi)
0x2B802768,	//0x1e72		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_d(RL6,0x2768)(hi)
0xCB801782,	//0x1e74		VoC_sub32_rr(REG01,RL6,REG01,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x27181487,	//0x1e76		VoC_lw32_d(RL7,0x2718)
0x27B21580,	//0x1e78		VoC_sw32_d(REG01,0x27b2)
0x27681486,	//0x1e7a		VoC_lw32_d(RL6,0x2768)
0x17822B80,	//0x1e7c		VoC_jal(CII_MultBp2Debug)
0x1487FF30,	//0x1e7e		VoC_lw32_d(RL7,0x2716)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x14862716,	//0x1e80		VoC_lw32_d(RL6,0x276a)(lo)	|	VoC_lw32_d(RL7,0x2716)(hi)
0x2B80276A,	//0x1e82		VoC_jal(CII_MultBp2Debug)(lo)	|	VoC_lw32_d(RL6,0x276a)(hi)
0xC9801782,	//0x1e84		VoC_add32_rr(REG01,RL6,REG01,DEFAULT)	|	VoC_jal(CII_MultBp2Debug)(hi)
0x1580D655,	//0x1e86		VoC_sw32_d(REG01,0x27b4)(lo)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x150527B4,	//0x1e88		VoC_sw16_d(REG5,0x278c)(lo)	|	VoC_sw32_d(REG01,0x27b4)(hi)
0xD616278C,	//0x1e8a		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_sw16_d(REG5,0x278c)(hi)
0x0A85D647,	//0x1e8c		VoC_lw16i(REG5,0x30)(lo)	|	VoC_lw16_sd(REG7,0x3,DEFAULT)
0xC3F60030,	//0x1e8e		VoC_sub16_rr(REG6,REG7,REG6,DEFAULT)	|	VoC_lw16i(REG5,0x30)(hi)
0x278D1505,	//0x1e90		VoC_sw16_d(REG5,0x278d)
0xFFC0F8FE,	//0x1e92		VoC_NOP	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x271A1506,	//0x1e94		VoC_sw16_d(REG6,0x271a)
0x189B2B80,	//0x1e96		VoC_jal(CII_prvDoLpc4)
0x27921486,	//0x1e98		VoC_lw32_d(RL6,0x2792)
0x27181487,	//0x1e9a		VoC_lw32_d(RL7,0x2718)
0x17822B80,	//0x1e9c		VoC_jal(CII_MultBp2Debug)
0x1484FF30,	//0x1e9e		VoC_lw32_d(ACC0,0x279c)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x1487279C,	//0x1ea0		VoC_lw32_d(RL7,0x2716)(lo)	|	VoC_lw32_d(ACC0,0x279c)(hi)
0xCB002716,	//0x1ea2		VoC_sub32_rr(REG01,ACC0,REG01,DEFAULT)	|	VoC_lw32_d(RL7,0x2716)(hi)
0x279C1587,	//0x1ea4		VoC_sw32_d(RL7,0x279c)
0x27161580,	//0x1ea6		VoC_sw32_d(REG01,0x2716)
0x27921486,	//0x1ea8		VoC_lw32_d(RL6,0x2792)
0x17822B80,	//0x1eaa		VoC_jal(CII_MultBp2Debug)
0x279A1487,	//0x1eac		VoC_lw32_d(RL7,0x279a)
0x27181485,	//0x1eae		VoC_lw32_d(ACC1,0x2718)
0x1585C9BE,	//0x1eb0		VoC_sw32_d(ACC1,0x279a)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0x1586279A,	//0x1eb2		VoC_sw32_d(RL6,0x2718)(lo)	|	VoC_sw32_d(ACC1,0x279a)(hi)
0xDF862718,	//0x1eb4		VoC_pop16(REG6,DEFAULT)	|	VoC_sw32_d(RL6,0x2718)(hi)
0x0730D615,	//0x1eb6		VoC_add16_rd(REG0,REG6,0x11a9)(lo)	|	VoC_lw16_sd(REG5,0x0,DEFAULT)
0xFFC011A9,	//0x1eb8		VoC_NOP	|	VoC_add16_rd(REG0,REG6,0x11a9)(hi)
0x1C6E3428,	//0x1eba		VoC_bgt16_rr(LOOP_START,REG5,REG0)
0xF050FF46,	//0x1ebc		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
0x27BE1586,	//0x1ebe		VoC_sw32_d(RL6,0x27be)
0x08FC1407,	//0x1ec0		VoC_lw16_d(REG7,0x8fc)
0x00000A80,	//0x1ec2		VoC_lw16i(REG0,0x0)
0xFFC0F8FF,	//0x1ec4		VoC_NAD	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
		//0x1ec6		LpcSpecMax_CSTART
0x27C01405,	//0x1ec6		VoC_lw16_d(REG5,0x27c0)
0xFFC0C02D,	//0x1ec8		VoC_NOP	|	VoC_add16_rr(REG5,REG0,REG5,DEFAULT)
0xFFC0D9AE,	//0x1eca		VoC_NOP	|	VoC_lw32_p(RL6,REG5,DEFAULT)
0x27BE6026,	//0x1ecc		VoC_blt32_rd(LpcSpecMax_Cconti,RL6,0x27be)
0x27BE1586,	//0x1ece		VoC_sw32_d(RL6,0x27be)
		//0x1ed0		LpcSpecMax_Cconti
0x34B8DE00,	//0x1ed0		VoC_bngt16_rr(LpcSpecMax_CEND,REG7,REG0)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0xE5F31ED4,	//0x1ed2		VoC_jump(LpcSpecMax_CSTART)	|	VoC_bngt16_rr(LpcSpecMax_CEND,REG7,REG0)(hi)
		//0x1ed4		LpcSpecMax_CEND
0xDF06E941,	//0x1ed4		VoC_pop32(RL6,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x1ed5		VoC_endloop0
0xDF86E8A1,	//0x1ed6		VoC_pop16(REG6,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1ed7		VoC_endloop0
0x27BE7A06,	//0x1ed8		VoC_bnez32_d(OK_RETURN,0x27be)
0x00040AC7,	//0x1eda		VoC_lw16i(REG7,0x8004)
0xFFC0FFC0,	//0x1edc		VoC_NAD	|	VoC_NOP
		//0x1ede		OK_RETURN
0x00000A87,	//0x1ede		VoC_lw16i(REG7,0x0)
0x1507DFA9,	//0x1ee0		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800C49,	//0x1ee2		VoC_return	|	VoC_sw16_d(REG7,0xc49)(hi)
		//0x1ee4		CII_auResampleWeightFactorLPC
0xFFC0DFE9,	//0x1ee4		VoC_NOP	|	VoC_push16(RA,DEFAULT)
0xFFC0DFA9,	//0x1ee6		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1ee8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1ee9		CII_prvDecodeFrameHeaderLpc_VOC
0xF140F001,	//0x1eea		VoC_lw16i_short(REG0,0xa,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x0C4A1501,	//0x1eec		VoC_sw16_d(REG1,0xc4a)
0x269C1500,	//0x1eee		VoC_sw16_d(REG0,0x269c)
0x53E80A80,	//0x1ef0		VoC_lw16i(REG0,0x53e8)
0x57E80A81,	//0x1ef2		VoC_lw16i(REG1,0x57e8)
0x09D41500,	//0x1ef4		VoC_sw16_d(REG0,0x9d4)
0x09FC1501,	//0x1ef6		VoC_sw16_d(REG1,0x9fc)
0x08F91401,	//0x1ef8		VoC_lw16_d(REG1,0x8f9)
0x09600A83,	//0x1efa		VoC_lw16i(REG3,0x960)
0x0901071C,	//0x1efc		VoC_add16_rd(REG4,REG3,0x901)
0x09C60A80,	//0x1efe		VoC_lw16i(REG0,0x9c6)
0x1501D845,	//0x1f00		VoC_sw16_d(REG1,0x25c6)(lo)	|	VoC_lw16_p(REG5,REG4,DEFAULT)
0x150525C6,	//0x1f02		VoC_sw16_d(REG5,0x25c7)(lo)	|	VoC_sw16_d(REG1,0x25c6)(hi)
0x150025C7,	//0x1f04		VoC_sw16_d(REG0,0x25ca)(lo)	|	VoC_sw16_d(REG5,0x25c7)(hi)
0xF14225CA,	//0x1f06		VoC_lw16i_short(REG2,0xa,DEFAULT)	|	VoC_sw16_d(REG0,0x25ca)(hi)
		//0x1f07		Lable_Channel_Loop_Begin
0x25CA0711,	//0x1f08		VoC_add16_rd(REG1,REG2,0x25ca)
0x25C71404,	//0x1f0a		VoC_lw16_d(REG4,0x25c7)
0xFFC0D813,	//0x1f0c		VoC_NOP	|	VoC_lw16_p(REG3,REG1,DEFAULT)
0x1F483183,	//0x1f0e		VoC_bez16_r(Lable_MiPower_Zero,REG3)
0x1F423184,	//0x1f10		VoC_bez16_r(Lable_fUpdateMask_Faul,REG4)
0x0711F1C2,	//0x1f12		VoC_add16_rd(REG1,REG2,0x25ca)(lo)	|	VoC_lw16i_short(REG2,0xe,DEFAULT)
0x0A8325CA,	//0x1f14		VoC_lw16i(REG3,0x269e)(lo)	|	VoC_add16_rd(REG1,REG2,0x25ca)(hi)
0xF066269E,	//0x1f16		VoC_lw16i_short(REG6,0x3,DEFAULT)	|	VoC_lw16i(REG3,0x269e)(hi)
0x2B80DFC3,	//0x1f18		VoC_jal(CII_ibstrmGetBits_VOC)(lo)	|	VoC_push16(REG3,DEFAULT)
0xDF830C8B,	//0x1f1a		VoC_pop16(REG3,DEFAULT)	|	VoC_jal(CII_ibstrmGetBits_VOC)(hi)
0xDCBEF033,	//0x1f1c		VoC_sw16inc_p(RL7_LO,REG3,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x1F262C0F,	//0x1f1e		VoC_loop_i(0x1,0x7)
0xDFC3F086,	//0x1f20		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i_short(REG6,0x4,DEFAULT)
0x0C8B2B80,	//0x1f22		VoC_jal(CII_ibstrmGetBits_VOC)
0xFFC0DF83,	//0x1f24		VoC_NOP	|	VoC_pop16(REG3,DEFAULT)
		//0x1f26		VoC_endloop1
0xF066DCBE,	//0x1f26		VoC_lw16i_short(REG6,0x3,DEFAULT)	|	VoC_sw16inc_p(RL7_LO,REG3,DEFAULT)
0x2B80DFC3,	//0x1f28		VoC_jal(CII_ibstrmGetBits_VOC)(lo)	|	VoC_push16(REG3,DEFAULT)
0xDF830C8B,	//0x1f2a		VoC_pop16(REG3,DEFAULT)	|	VoC_jal(CII_ibstrmGetBits_VOC)(hi)
0xDCBEF066,	//0x1f2c		VoC_sw16inc_p(RL7_LO,REG3,DEFAULT)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0x2B80DFC3,	//0x1f2e		VoC_jal(CII_ibstrmGetBits_VOC)(lo)	|	VoC_push16(REG3,DEFAULT)
0xDF830C8B,	//0x1f30		VoC_pop16(REG3,DEFAULT)	|	VoC_jal(CII_ibstrmGetBits_VOC)(hi)
0xDC3EFFC0,	//0x1f32		VoC_sw16_p(RL7_LO,REG3,DEFAULT)	|	VoC_NOP
0x16C52B80,	//0x1f34		VoC_jal(CII_auLsp2lpc)
0x1A152B80,	//0x1f36		VoC_jal(CII_prvLpcToSpectrum)
0x00240A82,	//0x1f38		VoC_lw16i(REG2,0x24)
0x25CA0711,	//0x1f3a		VoC_add16_rd(REG1,REG2,0x25ca)
0x27BE1482,	//0x1f3c		VoC_lw32_d(REG45,0x27be)
0xDD8AFFC0,	//0x1f3e		VoC_sw32_p(REG45,REG1,DEFAULT)	|	VoC_NOP
0x1F682B00,	//0x1f40		VoC_jump_lg(Lable_Channel_Control)
		//0x1f42		Lable_fUpdateMask_Faul
0x09016A06,	//0x1f42		VoC_bngtz16_d(Lable_MiPower_Zero,0x901)
0x1EE42B80,	//0x1f44		VoC_jal(CII_auResampleWeightFactorLPC)
0x1F682B00,	//0x1f46		VoC_jump_lg(Lable_Channel_Control)
		//0x1f48		Lable_MiPower_Zero
0x25C76C1C,	//0x1f48		VoC_bez16_d(Lable_m_iCurSF_Great_Zero,0x25c7)
0x00240A82,	//0x1f4a		VoC_lw16i(REG2,0x24)
0x25CA0711,	//0x1f4c		VoC_add16_rd(REG1,REG2,0x25ca)
0x00200A87,	//0x1f4e		VoC_lw16i(REG7,0x20)
0xF053F006,	//0x1f50		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1404DD8B,	//0x1f52		VoC_lw16_d(REG4,0x8fc)(lo)	|	VoC_sw32_p(REG67,REG1,DEFAULT)
0xF1C208FC,	//0x1f54		VoC_lw16i_short(REG2,0xe,DEFAULT)	|	VoC_lw16_d(REG4,0x8fc)(hi)
0x25CA0711,	//0x1f56		VoC_add16_rd(REG1,REG2,0x25ca)
0xD813F81C,	//0x1f58		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_shr16_ri(REG4,0x3,DEFAULT)
0xDDDBE708,	//0x1f5a		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xDDDBDDDB,	//0x1f5c		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
0xDDDBDDDB,	//0x1f5e		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
0xDDDBDDDB,	//0x1f60		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x1f62		VoC_endloop0
0xFFC0DDDB,	//0x1f62		VoC_NAD	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x1f64		Lable_m_iCurSF_Great_Zero
0x09016A04,	//0x1f64		VoC_bngtz16_d(Lable_Channel_Control,0x901)
0x1EE42B80,	//0x1f66		VoC_jal(CII_auResampleWeightFactorLPC)
		//0x1f68		Lable_Channel_Control
0xFFC0F021,	//0x1f68		VoC_NOP	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x0C4A1501,	//0x1f6a		VoC_sw16_d(REG1,0xc4a)
0x25C60B09,	//0x1f6c		VoC_sub16_dr(REG1,0x25c6,REG1)
0x00280A82,	//0x1f6e		VoC_lw16i(REG2,0x28)
0x1F7A3181,	//0x1f70		VoC_bez16_r(prvDecodeFrameHeaderLpc_Lable_exit,REG1)
0x25CA0710,	//0x1f72		VoC_add16_rd(REG0,REG2,0x25ca)
0x25C61501,	//0x1f74		VoC_sw16_d(REG1,0x25c6)
0x25CA1500,	//0x1f76		VoC_sw16_d(REG0,0x25ca)
0x1F072B00,	//0x1f78		VoC_jump_lg(Lable_Channel_Loop_Begin)
		//0x1f7a		prvDecodeFrameHeaderLpc_Lable_exit
0x0A96DFA9,	//0x1f7a		VoC_lw16i(STATUS,0x60)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800060,	//0x1f7c		VoC_return	|	VoC_lw16i(STATUS,0x60)(hi)
0xFFFFFFFF,	//0x1f7e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f80		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f82		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f84		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f86		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f88		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f8a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f8c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f8e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f90		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f92		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f94		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f96		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f98		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f9a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f9c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1f9e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fa0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fa2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fa4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fa6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fa8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1faa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fac		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fae		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fb0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fb2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fb4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fb6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fb8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fba		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fbc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fbe		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fc0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fc2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fc4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fc6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fc8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fca		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fcc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fce		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fd0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fd2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fd4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fd6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fd8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fda		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fdc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fde		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fe0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fe2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fe4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fe6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fe8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fea		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fec		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1fee		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1ff0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1ff2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1ff4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1ff6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1ff8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1ffa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1ffc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x1ffe		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2000		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2002		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2004		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2006		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2008		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x200a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x200c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x200e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2010		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2012		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2014		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2016		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2018		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x201a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x201c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x201e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2020		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2022		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2024		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2026		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2028		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x202a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x202c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x202e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2030		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2032		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2034		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2036		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2038		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x203a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x203c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x203e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2040		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2042		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2044		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2046		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2048		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x204a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x204c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x204e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2050		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2052		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2054		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2056		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2058		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x205a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x205c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x205e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2060		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2062		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2064		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2066		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2068		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x206a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x206c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x206e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2070		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2072		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2074		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2076		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2078		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x207a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x207c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x207e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2080		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2082		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2084		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2086		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2088		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x208a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x208c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x208e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2090		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2092		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2094		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2096		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2098		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x209a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x209c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x209e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20a0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20a2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20a4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20a6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20a8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20aa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20ac		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20ae		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20b0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20b2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20b4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20b6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20b8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20ba		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20bc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20be		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20c0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20c2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20c4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20c6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20c8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20ca		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20cc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20ce		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20d0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20d2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20d4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20d6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20d8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20da		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20dc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20de		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20e0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20e2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20e4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20e6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20e8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20ea		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20ec		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20ee		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20f0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20f2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20f4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20f6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20f8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20fa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20fc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x20fe		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2100		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2102		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2104		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2106		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2108		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x210a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x210c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x210e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2110		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2112		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2114		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2116		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2118		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x211a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x211c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x211e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2120		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2122		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2124		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2126		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2128		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x212a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x212c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x212e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2130		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2132		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2134		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2136		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2138		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x213a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x213c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x213e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2140		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2142		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2144		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2146		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2148		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x214a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x214c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x214e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2150		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2152		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2154		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2156		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2158		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x215a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x215c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x215e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2160		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2162		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2164		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2166		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2168		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x216a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x216c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x216e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2170		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2172		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2174		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2176		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2178		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x217a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x217c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x217e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2180		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2182		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2184		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2186		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2188		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x218a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x218c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x218e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2190		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2192		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2194		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2196		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2198		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x219a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x219c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x219e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21a0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21a2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21a4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21a6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21a8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21aa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21ac		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21ae		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21b0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21b2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21b4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21b6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21b8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21ba		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21bc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21be		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21c0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21c2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21c4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21c6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21c8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21ca		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21cc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21ce		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21d0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21d2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21d4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21d6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21d8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21da		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21dc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21de		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21e0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21e2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21e4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21e6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21e8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21ea		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21ec		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21ee		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21f0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21f2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21f4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21f6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21f8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21fa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21fc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x21fe		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2200		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2202		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2204		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2206		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2208		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x220a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x220c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x220e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2210		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2212		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2214		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2216		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2218		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x221a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x221c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x221e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2220		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2222		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2224		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2226		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2228		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x222a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x222c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x222e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2230		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2232		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2234		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2236		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2238		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x223a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x223c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x223e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2240		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2242		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2244		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2246		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2248		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x224a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x224c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x224e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2250		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2252		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2254		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2256		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2258		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x225a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x225c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x225e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2260		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2262		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2264		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2266		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2268		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x226a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x226c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x226e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2270		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2272		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2274		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2276		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2278		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x227a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x227c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x227e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2280		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2282		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2284		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2286		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2288		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x228a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x228c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x228e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2290		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2292		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2294		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2296		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2298		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x229a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x229c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x229e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22a0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22a2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22a4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22a6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22a8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22aa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22ac		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22ae		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22b0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22b2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22b4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22b6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22b8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22ba		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22bc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22be		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22c0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22c2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22c4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22c6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22c8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22ca		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22cc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22ce		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22d0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22d2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22d4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22d6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22d8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22da		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22dc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22de		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22e0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22e2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22e4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22e6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22e8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22ea		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22ec		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22ee		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22f0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22f2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22f4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22f6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22f8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22fa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22fc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x22fe		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2300		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2302		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2304		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2306		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2308		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x230a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x230c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x230e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2310		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2312		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2314		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2316		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2318		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x231a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x231c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x231e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2320		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2322		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2324		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2326		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2328		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x232a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x232c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x232e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2330		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2332		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2334		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2336		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2338		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x233a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x233c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x233e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2340		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2342		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2344		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2346		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2348		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x234a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x234c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x234e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2350		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2352		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2354		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2356		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2358		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x235a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x235c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x235e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2360		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2362		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2364		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2366		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2368		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x236a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x236c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x236e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2370		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2372		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2374		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2376		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2378		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x237a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x237c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x237e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2380		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2382		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2384		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2386		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2388		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x238a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x238c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x238e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2390		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2392		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2394		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2396		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x2398		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x239a		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x239c		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x239e		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23a0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23a2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23a4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23a6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23a8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23aa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23ac		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23ae		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23b0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23b2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23b4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23b6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23b8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23ba		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23bc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23be		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23c0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23c2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23c4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23c6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23c8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23ca		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23cc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23ce		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23d0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23d2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23d4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23d6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23d8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23da		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23dc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23de		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23e0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23e2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23e4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23e6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23e8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23ea		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23ec		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23ee		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23f0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23f2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23f4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23f6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23f8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23fa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23fc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x23fe		VoC_NOP	|	VoC_NOP
