		//0x0000		VoC_code_section_0
		//0x0000		CII_prvDecodeFrame_VOC
		//0x0000		CII_prvDecodeSubFrameHighRate_VOC
		//0x0000		CII_prvInverseQuantizeMidRate
0xF019F018,	//0x0000		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0x0,DEFAULT)
0xF000F01A,	//0x0002		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0xF01DF01C,	//0x0004		VoC_lw16i_short(WRAP1,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF01FF01E,	//0x0006		VoC_lw16i_short(WRAP3,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x7FC11540,	//0x0008		VoC_sw16_d(REG0,0xffc1)
0x003F0A96,	//0x000a		VoC_lw16i(STATUS,0x3f)
0xFFC0F01B,	//0x000c		VoC_NAD	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
		//0x000e		MAIN_EXIT
0x003F1794,	//0x000e		VoC_cfg_lg(0x3f,)
0x00201792,	//0x0010		VoC_cfg_lg(0x20,)
0xFFC0DEA0,	//0x0012		VoC_NOP	|	VoC_cfg(0x20)
0xFFC0FFC0,	//0x0014		VoC_NAD	|	VoC_NOP
		//0x0016		DecFrame_start
0x27FF0AAA,	//0x0016		VoC_lw16i(SP16,0x27ff)
0x67FE0AAB,	//0x0018		VoC_lw16i(SP32,0x67fe)
0x003F1794,	//0x001a		VoC_cfg_lg(0x3f,)
0x000C1792,	//0x001c		VoC_cfg_lg(0xc,)
0x25C76E18,	//0x001e		VoC_bnez16_d(DecFrame_GetPCM,0x25c7)
0x0B000AC3,	//0x0020		VoC_lw16i(REG3,0x8b00)
0x04C00A86,	//0x0022		VoC_lw16i(REG6,0x4c0)
0x0C4C1486,	//0x0024		VoC_lw32_d(RL6,0xc4c)
0x7FC31543,	//0x0026		VoC_sw16_d(REG3,0xffc3)
0x7FC21546,	//0x0028		VoC_sw16_d(REG6,0xffc2)
0x7FC415C6,	//0x002a		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x002c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x002e		VoC_cfg_lg(0x8,)
0x00412B80,	//0x0030		VoC_jal(CII_WMAFileDecodeData_VOC)
0x0C491500,	//0x0032		VoC_sw16_d(REG0,0xc49)
0x000E31C0,	//0x0034		VoC_bnez16_r(MAIN_EXIT,REG0)
		//0x0036		DecFrame_GetPCM
0x08000A82,	//0x0036		VoC_lw16i(REG2,0x800)
0xFFC0E045,	//0x0038		VoC_NAD	|	VoC_movreg16(REG5,REG2,DEFAULT)
0x01332B80,	//0x003a		VoC_jal(CII_GetPCM_VOC)
0x25C76D9A,	//0x003c		VoC_bez16_d(DecFrame_start,0x25c7)
		//0x003e		DecFrame_return
0x2B00FFC0,	//0x003e		VoC_jump_lg(MAIN_EXIT)(lo)	|	VoC_NOP
0xDFE9000E,	//0x0040		VoC_push16(RA,DEFAULT)	|	VoC_jump_lg(MAIN_EXIT)(hi)
		//0x0041		CII_WMAFileDecodeData_VOC
		//0x0042		Label_LOOP_start
0x08061406,	//0x0042		VoC_lw16_d(REG6,0x806)
0x408EFFC0,	//0x0044		VoC_be16_rd(Label_case_csWMA_DecodePayloadHeader,REG6,0x11ae)(lo)	|	VoC_NOP
0x442E11AE,	//0x0046		VoC_bne16_rd(Label_case_csWMA_DecodeLoopNOTStart,REG6,0x11af)(lo)	|	VoC_be16_rd(Label_case_csWMA_DecodePayloadHeader,REG6,0x11ae)(hi)
0x2B0011AF,	//0x0048		VoC_jump_lg(Label_case_csWMA_DecodeLoopStart)(lo)	|	VoC_bne16_rd(Label_case_csWMA_DecodeLoopNOTStart,REG6,0x11af)(hi)
0xFFC0009A,	//0x004a		VoC_NAD	|	VoC_jump_lg(Label_case_csWMA_DecodeLoopStart)(hi)
		//0x004c		Label_case_csWMA_DecodeLoopNOTStart
0x012A2B00,	//0x004c		VoC_jump_lg(Label_case_default)
		//0x004e		Label_case_csWMA_DecodePayloadHeader
0x00010A81,	//0x004e		VoC_lw16i(REG1,0x1)
0x00070A86,	//0x0050		VoC_lw16i(REG6,0x7)
0x088B4431,	//0x0052		VoC_bne16_rd(Label_JudgeFrameState,REG1,0x88b)
0x08061506,	//0x0054		VoC_sw16_d(REG6,0x806)
0xFFC0E5EC,	//0x0056		VoC_NAD	|	VoC_jump(Label_LOOP_start)
		//0x0058		Label_JudgeFrameState
0x00000A80,	//0x0058		VoC_lw16i(REG0,0x0)
0x00020A82,	//0x005a		VoC_lw16i(REG2,0x2)
0x00010A81,	//0x005c		VoC_lw16i(REG1,0x1)
0x088B4082,	//0x005e		VoC_be16_rd(Label_waitstate,REG2,0x88b)
0x08904091,	//0x0060		VoC_be16_rd(Label_allFramedone,REG1,0x890)
0x08914090,	//0x0062		VoC_be16_rd(Label_first,REG0,0x891)
0x00922B00,	//0x0064		VoC_jump_lg(Label_state_change)
		//0x0066		Label_waitstate
0x088B1500,	//0x0066		VoC_sw16_d(REG0,0x88b)
0xFFC0E5C4,	//0x0068		VoC_NAD	|	VoC_jump(Label_first)
		//0x006a		Label_allFramedone
0x08901500,	//0x006a		VoC_sw16_d(REG0,0x890)
		//0x006c		Label_first
0x08911501,	//0x006c		VoC_sw16_d(REG1,0x891)
0x01E62B80,	//0x006e		VoC_jal(CII_audecDecodeInfo_VOC)
0x04040AC4,	//0x0070		VoC_lw16i(REG4,0x8404)
0x04010AC3,	//0x0072		VoC_lw16i(REG3,0x8401)
0x008835A7,	//0x0074		VoC_bne16_rr(Label_LOSTPACKET,REG4,REG7)
0x08941487,	//0x0076		VoC_lw32_d(RL7,0x894)
0x00020A82,	//0x0078		VoC_lw16i(REG2,0x2)
0x08985097,	//0x007a		VoC_bgt32_rd(Label_else_GT,RL7,0x898)
0x00000A87,	//0x007c		VoC_lw16i(REG7,0x0)
0x088B1502,	//0x007e		VoC_sw16_d(REG2,0x88b)
0x00000A80,	//0x0080		VoC_lw16i(REG0,0x0)
0x01302B00,	//0x0082		VoC_jump_lg(Label_FileDecode_exit)
		//0x0084		Label_else_GT
0x00060A80,	//0x0084		VoC_lw16i(REG0,0x6)
0x01302B00,	//0x0086		VoC_jump_lg(Label_FileDecode_exit)
		//0x0088		Label_LOSTPACKET
0x008C359F,	//0x0088		VoC_bne16_rr(Label_Failed,REG3,REG7)
0x00000A87,	//0x008a		VoC_lw16i(REG7,0x0)
		//0x008c		Label_Failed
0x00923247,	//0x008c		VoC_bnltz16_r(Label_state_change,REG7)
0x00010A80,	//0x008e		VoC_lw16i(REG0,0x1)
0x01302B00,	//0x0090		VoC_jump_lg(Label_FileDecode_exit)
		//0x0092		Label_state_change
0x00070A86,	//0x0092		VoC_lw16i(REG6,0x7)
0x1506FFC0,	//0x0094		VoC_sw16_d(REG6,0x806)(lo)	|	VoC_NOP
0x2B000806,	//0x0096		VoC_jump_lg(Label_LOOP_start)(lo)	|	VoC_sw16_d(REG6,0x806)(hi)
0xFFC00042,	//0x0098		VoC_NAD	|	VoC_jump_lg(Label_LOOP_start)(hi)
		//0x009a		Label_case_csWMA_DecodeLoopStart
0x00010A81,	//0x009a		VoC_lw16i(REG1,0x1)
0x00060A86,	//0x009c		VoC_lw16i(REG6,0x6)
0x00000A80,	//0x009e		VoC_lw16i(REG0,0x0)
0x088B4431,	//0x00a0		VoC_bne16_rd(Label_audecDecodeData,REG1,0x88b)
0x08061506,	//0x00a2		VoC_sw16_d(REG6,0x806)
0x088B1500,	//0x00a4		VoC_sw16_d(REG0,0x88b)
		//0x00a6		Label_audecDecodeData
0x02882B80,	//0x00a6		VoC_jal(CII_audecDecodeData_VOC)
0x0C491407,	//0x00a8		VoC_lw16_d(REG7,0xc49)
0x00040A84,	//0x00aa		VoC_lw16i(REG4,0x4)
0x00010A81,	//0x00ac		VoC_lw16i(REG1,0x1)
0x04010AC3,	//0x00ae		VoC_lw16i(REG3,0x8401)
0x04020AC2,	//0x00b0		VoC_lw16i(REG2,0x8402)
0x04040AC5,	//0x00b2		VoC_lw16i(REG5,0x8404)
0x00B835BC,	//0x00b4		VoC_bne16_rr(Label_LOSTPACKET2,REG7,REG4)
0x08901501,	//0x00b6		VoC_sw16_d(REG1,0x890)
		//0x00b8		Label_LOSTPACKET2
0x00C235BB,	//0x00b8		VoC_bne16_rr(Label_BROKEN_FRAME,REG7,REG3)
0x00060A86,	//0x00ba		VoC_lw16i(REG6,0x6)
0x00000A87,	//0x00bc		VoC_lw16i(REG7,0x0)
0x08901501,	//0x00be		VoC_sw16_d(REG1,0x890)
0x08061506,	//0x00c0		VoC_sw16_d(REG6,0x806)
		//0x00c2		Label_BROKEN_FRAME
0x00E435BA,	//0x00c2		VoC_bne16_rr(Label_ONHOLD,REG7,REG2)
0xFF46F000,	//0x00c4		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x00050A85,	//0x00c6		VoC_lw16i(REG5,0x5)
0x08D71500,	//0x00c8		VoC_sw16_d(REG0,0x8d7)
0x08D81586,	//0x00ca		VoC_sw32_d(RL6,0x8d8)
0x08DB1500,	//0x00cc		VoC_sw16_d(REG0,0x8db)
0x08DD1501,	//0x00ce		VoC_sw16_d(REG1,0x8dd)
0x08D21586,	//0x00d0		VoC_sw32_d(RL6,0x8d2)
0x7FFF0ACF,	//0x00d2		VoC_lw16i(RL7_HI,0xffff)
0x7FFE0ACE,	//0x00d4		VoC_lw16i(RL7_LO,0xfffe)
0x08F64425,	//0x00d6		VoC_bne16_rd(Label_PacketCurr,REG5,0x8f6)
0x08F61501,	//0x00d8		VoC_sw16_d(REG1,0x8f6)
		//0x00da		Label_PacketCurr
0x08E81587,	//0x00da		VoC_sw32_d(RL7,0x8e8)
0x00080A86,	//0x00dc		VoC_lw16i(REG6,0x8)
0x08901501,	//0x00de		VoC_sw16_d(REG1,0x890)
0x08061506,	//0x00e0		VoC_sw16_d(REG6,0x806)
0x00422B00,	//0x00e2		VoC_jump_lg(Label_LOOP_start)
		//0x00e4		Label_ONHOLD
0x00F835BD,	//0x00e4		VoC_bne16_rr(Label_NotOK,REG7,REG5)
0x08941487,	//0x00e6		VoC_lw32_d(RL7,0x894)
0x00010A81,	//0x00e8		VoC_lw16i(REG1,0x1)
0x08985097,	//0x00ea		VoC_bgt32_rd(Label_else_GT2,RL7,0x898)
0x00000A87,	//0x00ec		VoC_lw16i(REG7,0x0)
0x088B1501,	//0x00ee		VoC_sw16_d(REG1,0x88b)
0x00000A80,	//0x00f0		VoC_lw16i(REG0,0x0)
0x01302B00,	//0x00f2		VoC_jump_lg(Label_FileDecode_exit)
		//0x00f4		Label_else_GT2
0x00060A80,	//0x00f4		VoC_lw16i(REG0,0x6)
0x01302B00,	//0x00f6		VoC_jump_lg(Label_FileDecode_exit)
		//0x00f8		Label_NotOK
0x01263187,	//0x00f8		VoC_bez16_r(Label_DecodeLoopReturn,REG7)
0x00060A80,	//0x00fa		VoC_lw16i(REG0,0x6)
0x11AD4427,	//0x00fc		VoC_bne16_rd(Label_FileDecode_con,REG7,0x11ad)
0x01302B00,	//0x00fe		VoC_jump_lg(Label_FileDecode_exit)
		//0x0100		Label_FileDecode_con
0x00000A80,	//0x0100		VoC_lw16i(REG0,0x0)
0x0130353B,	//0x0102		VoC_be16_rr(Label_FileDecode_exit,REG7,REG3)
0x011E3247,	//0x0104		VoC_bnltz16_r(Label_NotFailed,REG7)
0x0A85FF46,	//0x0106		VoC_lw16i(REG5,0x5)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0x15000005,	//0x0108		VoC_sw16_d(REG0,0x8d7)(lo)	|	VoC_lw16i(REG5,0x5)(hi)
0x158608D7,	//0x010a		VoC_sw32_d(RL6,0x8d8)(lo)	|	VoC_sw16_d(REG0,0x8d7)(hi)
0x150008D8,	//0x010c		VoC_sw16_d(REG0,0x8db)(lo)	|	VoC_sw32_d(RL6,0x8d8)(hi)
0x150108DB,	//0x010e		VoC_sw16_d(REG1,0x8dd)(lo)	|	VoC_sw16_d(REG0,0x8db)(hi)
0x158608DD,	//0x0110		VoC_sw32_d(RL6,0x8d2)(lo)	|	VoC_sw16_d(REG1,0x8dd)(hi)
0x0ACF08D2,	//0x0112		VoC_lw16i(RL7_HI,0xffff)(lo)	|	VoC_sw32_d(RL6,0x8d2)(hi)
0x0ACE7FFF,	//0x0114		VoC_lw16i(RL7_LO,0xfffe)(lo)	|	VoC_lw16i(RL7_HI,0xffff)(hi)
0x442D7FFE,	//0x0116		VoC_bne16_rd(Label_PacketCurr2,REG5,0x8f6)(lo)	|	VoC_lw16i(RL7_LO,0xfffe)(hi)
0x150108F6,	//0x0118		VoC_sw16_d(REG1,0x8f6)(lo)	|	VoC_bne16_rd(Label_PacketCurr2,REG5,0x8f6)(hi)
0xFFC008F6,	//0x011a		VoC_NAD	|	VoC_sw16_d(REG1,0x8f6)(hi)
		//0x011c		Label_PacketCurr2
0x08E81587,	//0x011c		VoC_sw32_d(RL7,0x8e8)
		//0x011e		Label_NotFailed
0x00060A86,	//0x011e		VoC_lw16i(REG6,0x6)
0x00000A80,	//0x0120		VoC_lw16i(REG0,0x0)
0x08061506,	//0x0122		VoC_sw16_d(REG6,0x806)
0xFFC0E5CC,	//0x0124		VoC_NAD	|	VoC_jump(Label_FileDecode_exit)
		//0x0126		Label_DecodeLoopReturn
0x00000A80,	//0x0126		VoC_lw16i(REG0,0x0)
0xFFC0E5C8,	//0x0128		VoC_NAD	|	VoC_jump(Label_FileDecode_exit)
		//0x012a		Label_case_default
0x12A72B80,	//0x012a		VoC_jal(CII_WMAF_UpdateNewPayload_VOC)
0x00423187,	//0x012c		VoC_bez16_r(Label_LOOP_start,REG7)
0xE5C1E0E0,	//0x012e		VoC_jump(Label_FileDecode_exit)	|	VoC_movreg16(REG0,REG7,DEFAULT)
		//0x0130		Label_FileDecode_exit
0xFFC0DFA9,	//0x0130		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0132		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0133		CII_GetPCM_VOC
0x26001505,	//0x0134		VoC_sw16_d(REG5,0x2600)
0x08E01400,	//0x0136		VoC_lw16_d(REG0,0x8e0)
0x08E01401,	//0x0138		VoC_lw16_d(REG1,0x8e0)
0x11A94090,	//0x013a		VoC_be16_rd(CASE_LOOP_BEGIN,REG0,0x11a9)
0x11AA4081,	//0x013c		VoC_be16_rd(CASE_LOOP_BEGIN,REG1,0x11aa)
0x1505F005,	//0x013e		VoC_sw16_d(REG5,0x25c7)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x2B0025C7,	//0x0140		VoC_jump_lg(GPFUNCTION_END)(lo)	|	VoC_sw16_d(REG5,0x25c7)(hi)
0xFFC001E1,	//0x0142		VoC_NAD	|	VoC_jump_lg(GPFUNCTION_END)(hi)
		//0x0144		CASE_LOOP_BEGIN
0x26001400,	//0x0144		VoC_lw16_d(REG0,0x2600)
0x3410F023,	//0x0146		VoC_bgt16_rr(Get_u32MaxSamplesReq,REG2,REG0)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xE5C3014A,	//0x0148		VoC_jump(Get_u32MaxSamplesReq_END)	|	VoC_bgt16_rr(Get_u32MaxSamplesReq,REG2,REG0)(hi)
		//0x014a		Get_u32MaxSamplesReq
0xE5C1E002,	//0x014a		VoC_jump(Get_u32MaxSamplesReq_END)	|	VoC_movreg16(REG2,REG0,DEFAULT)
		//0x014c		Get_u32MaxSamplesReq_END
0xFFC0F88B,	//0x014c		VoC_NOP	|	VoC_shr16_ri(REG3,0xfffffff1,DEFAULT)
0x0154341A,	//0x014e		VoC_bgt16_rr(Get_cSamplesREQ,REG3,REG2)
0x25C71503,	//0x0150		VoC_sw16_d(REG3,0x25c7)
0xFFC0E5C5,	//0x0152		VoC_NAD	|	VoC_jump(Get_cSamplesREQ_END)
		//0x0154		Get_cSamplesREQ
0x25C71502,	//0x0154		VoC_sw16_d(REG2,0x25c7)
0xF007E5C1,	//0x0156		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jump(Get_cSamplesREQ_END)
		//0x0157		Get_cSamplesREQ_END
0x25C71406,	//0x0158		VoC_lw16_d(REG6,0x25c7)
0x057C2B80,	//0x015a		VoC_jal(CII_auReconMono_Tbl_VOC)
0x25C71506,	//0x015c		VoC_sw16_d(REG6,0x25c7)
0x4018F040,	//0x015e		VoC_be16_rd(CASE_CHANNEL2,REG0,0x8f9)(lo)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xE5CF08F9,	//0x0160		VoC_jump(CASE_CHANNEL_END)	|	VoC_be16_rd(CASE_CHANNEL2,REG0,0x8f9)(hi)
		//0x0162		CASE_CHANNEL2
0x09EE0A80,	//0x0162		VoC_lw16i(REG0,0x9ee)
0x09C60A81,	//0x0164		VoC_lw16i(REG1,0x9c6)
0x25C71406,	//0x0166		VoC_lw16_d(REG6,0x25c7)
0xFFC0C20F,	//0x0168		VoC_NAD	|	VoC_sub16_rr(REG7,REG0,REG1,DEFAULT)
0x057C2B80,	//0x016a		VoC_jal(CII_auReconMono_Tbl_VOC)
0x25C71506,	//0x016c		VoC_sw16_d(REG6,0x25c7)
0xFFC0E5C2,	//0x016e		VoC_NAD	|	VoC_jump(CASE_CHANNEL_END)
		//0x0170		CASE_CHANNEL_END
0x08F90836,	//0x0170		VoC_mult16_rd(REG6,REG6,0x8f9)
0x0A1C1486,	//0x0172		VoC_lw32_d(RL6,0xa1c)
0x0A8FF00E,	//0x0174		VoC_lw16i(RL7_HI,0x4000)(lo)	|	VoC_lw16i_short(RL7_LO,0x0,DEFAULT)
0x0A844000,	//0x0176		VoC_lw16i(REG4,0x8ea)(lo)	|	VoC_lw16i(RL7_HI,0x4000)(hi)
0xF80E08EA,	//0x0178		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i(REG4,0x8ea)(hi)
0x1544E537,	//0x017a		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_or32_rr(RL7,RL6,DEFAULT)
0x15467FC3,	//0x017c		VoC_sw16_d(REG6,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C77FC2,	//0x017e		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw16_d(REG6,0xffc2)(hi)
0xDE807FC4,	//0x0180		VoC_cfg(0x0)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x1794FFC0,	//0x0182		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14010008,	//0x0184		VoC_lw16_d(REG1,0x25c7)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x0B0825C7,	//0x0186		VoC_sub16_dr(REG0,0x2600,REG1)(lo)	|	VoC_lw16_d(REG1,0x25c7)(hi)
0xFFC02600,	//0x0188		VoC_NOP	|	VoC_sub16_dr(REG0,0x2600,REG1)(hi)
0x26001500,	//0x018a		VoC_sw16_d(REG0,0x2600)
0x01D83181,	//0x018c		VoC_bez16_r(CASE_LOOP_END,REG1)
0x09B96E04,	//0x018e		VoC_bnez16_d(CASE_DISCARDSILENCE_NOT,0x9b9)
0x01D12B00,	//0x0190		VoC_jump_lg(CASE_DISCARDSILENCE)
		//0x0192		CASE_DISCARDSILENCE_NOT
0x09B93821,	//0x0192		VoC_bgt16_rd(NGT_DISCARDSILENCE_not,REG1,0x9b9)
0x01C82B00,	//0x0194		VoC_jump_lg(NGT_DISCARDSILENCE)
		//0x0196		NGT_DISCARDSILENCE_not
0x09B91400,	//0x0196		VoC_lw16_d(REG0,0x9b9)
0x08F91403,	//0x0198		VoC_lw16_d(REG3,0x8f9)
0xC41CC242,	//0x019a		VoC_mult16_rr(REG4,REG0,REG3,DEFAULT)	|	VoC_sub16_rr(REG2,REG1,REG0,DEFAULT)
0x1486C49A,	//0x019c		VoC_lw32_d(RL6,0xa1c)(lo)	|	VoC_mult16_rr(REG2,REG2,REG3,DEFAULT)
0xE0860A1C,	//0x019e		VoC_movreg16(REG6,REG4,DEFAULT)	|	VoC_lw32_d(RL6,0xa1c)(hi)
0xC99FF007,	//0x01a0		VoC_add32_rr(RL7,RL6,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x08EA0A84,	//0x01a2		VoC_lw16i(REG4,0x8ea)
0x1544F812,	//0x01a4		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_shr16_ri(REG2,0x2,DEFAULT)
0x15427FC3,	//0x01a6		VoC_sw16_d(REG2,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C77FC2,	//0x01a8		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw16_d(REG2,0xffc2)(hi)
0xDE807FC4,	//0x01aa		VoC_cfg(0x0)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x1794FFC0,	//0x01ac		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xF00E0008,	//0x01ae		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x40000A8F,	//0x01b0		VoC_lw16i(RL7_HI,0x4000)
0x1544E537,	//0x01b2		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_or32_rr(RL7,RL6,DEFAULT)
0x15427FC3,	//0x01b4		VoC_sw16_d(REG2,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C77FC2,	//0x01b6		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw16_d(REG2,0xffc2)(hi)
0xDE807FC4,	//0x01b8		VoC_cfg(0x0)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x1794FFC0,	//0x01ba		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14000008,	//0x01bc		VoC_lw16_d(REG0,0x9b9)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x0B0109B9,	//0x01be		VoC_sub16_dr(REG1,0x25c7,REG0)(lo)	|	VoC_lw16_d(REG0,0x9b9)(hi)
0xF00025C7,	//0x01c0		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sub16_dr(REG1,0x25c7,REG0)(hi)
0x25C71501,	//0x01c2		VoC_sw16_d(REG1,0x25c7)
0x09B91500,	//0x01c4		VoC_sw16_d(REG0,0x9b9)
0xFFC0E5CB,	//0x01c6		VoC_NAD	|	VoC_jump(CASE_DISCARDSILENCE)
		//0x01c8		NGT_DISCARDSILENCE
0x09B91400,	//0x01c8		VoC_lw16_d(REG0,0x9b9)
0xF001C208,	//0x01ca		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)
0x09B91500,	//0x01cc		VoC_sw16_d(REG0,0x9b9)
0x25C71501,	//0x01ce		VoC_sw16_d(REG1,0x25c7)
0xF000E5C1,	//0x01d0		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jump(CASE_DISCARDSILENCE)
		//0x01d1		CASE_DISCARDSILENCE
0x25C74430,	//0x01d2		VoC_bne16_rd(CASE_LOOP_END,REG0,0x25c7)
0x26004020,	//0x01d4		VoC_be16_rd(CASE_LOOP_END,REG0,0x2600)
0x01442B00,	//0x01d6		VoC_jump_lg(CASE_LOOP_BEGIN)
		//0x01d8		CASE_LOOP_END
0x08F61400,	//0x01d8		VoC_lw16_d(REG0,0x8f6)
0x11AB4438,	//0x01da		VoC_bne16_rd(CASE_STATUS_END,REG0,0x11ab)
0x11A91400,	//0x01dc		VoC_lw16_d(REG0,0x11a9)
0x1500FFC0,	//0x01de		VoC_sw16_d(REG0,0x8f6)(lo)	|	VoC_NOP
0xF00708F6,	//0x01e0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw16_d(REG0,0x8f6)(hi)
		//0x01e1		CASE_STATUS_END
		//0x01e1		GPFUNCTION_END
0x1507DFA9,	//0x01e2		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800C49,	//0x01e4		VoC_return	|	VoC_sw16_d(REG7,0xc49)(hi)
		//0x01e6		CII_audecDecodeInfo_VOC
0xDF46DFE9,	//0x01e6		VoC_push32(RL6,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF006F025,	//0x01e8		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x1506F007,	//0x01ea		VoC_sw16_d(REG6,0x8e0)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x150608E0,	//0x01ec		VoC_sw16_d(REG6,0x8de)(lo)	|	VoC_sw16_d(REG6,0x8e0)(hi)
0x150508DE,	//0x01ee		VoC_sw16_d(REG5,0x8df)(lo)	|	VoC_sw16_d(REG6,0x8de)(hi)
0xDFC608DF,	//0x01f0		VoC_push16(REG6,DEFAULT)	|	VoC_sw16_d(REG5,0x8df)(hi)
0x08FD6E04,	//0x01f2		VoC_bnez16_d(LOOP_BEGIN_1,0x8fd)
0x02362B00,	//0x01f4		VoC_jump_lg(MFALLOWSUPERFRAME_FALSE)
		//0x01f6		LOOP_BEGIN_1
0x08D27A0E,	//0x01f6		VoC_bnez32_d(LOOP_END_1,0x8d2)
0x0E562B80,	//0x01f8		VoC_jal(CII_ibstrmReset_VOC)
0x2B80D90E,	//0x01fa		VoC_jal(CII_ibstrmGetMoreData_VOC)(lo)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0xE0A70CF2,	//0x01fc		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_jal(CII_ibstrmGetMoreData_VOC)(hi)
0x08E66DB8,	//0x01fe		VoC_bez16_d(LOOP_BEGIN_1,0x8e6)
0x00040AC7,	//0x0200		VoC_lw16i(REG7,0x8004)
0x02822B00,	//0x0202		VoC_jump_lg(DIFUNCTION_END)
		//0x0204		LOOP_END_1
0x08D21480,	//0x0204		VoC_lw32_d(REG01,0x8d2)
0xFCE0F004,	//0x0206		VoC_shru32_ri(REG01,0x1c,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x08E80987,	//0x0208		VoC_sub32_rd(RL7,REG01,0x8e8)
0x08DE1504,	//0x020a		VoC_sw16_d(REG4,0x8de)
0x11C409B9,	//0x020c		VoC_sub32_rd(REG23,RL7,0x11c4)
0x3301FFC0,	//0x020e		VoC_bez32_r(SET_MFPACKETLOSS_END,REG23)(lo)	|	VoC_NOP
0x0939021C,	//0x0210		VoC_add32_rd(REG23,RL7,0x11c6)(lo)	|	VoC_bez32_r(SET_MFPACKETLOSS_END,REG23)(hi)
0xFFC011C6,	//0x0212		VoC_NOP	|	VoC_add32_rd(REG23,RL7,0x11c6)(hi)
0x02173341,	//0x0214		VoC_bnez32_r(SET_MFPACKETLOSS_TRUE,REG23)
0xF024E5C6,	//0x0216		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_jump(SET_MFPACKETLOSS_END)
		//0x0217		SET_MFPACKETLOSS_TRUE
0x1504FFC0,	//0x0218		VoC_sw16_d(REG4,0x8de)(lo)	|	VoC_NOP
0xFFC008DE,	//0x021a		VoC_NAD	|	VoC_sw16_d(REG4,0x8de)(hi)
		//0x021c		SET_MFPACKETLOSS_END
0x08E81580,	//0x021c		VoC_sw32_d(REG01,0x8e8)
0x08D21480,	//0x021e		VoC_lw32_d(REG01,0x8d2)
0xE023F3A2,	//0x0220		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x1d,DEFAULT)
0x08EA0792,	//0x0222		VoC_sub16_rd(REG2,REG2,0x8ea)
0xFDC0F943,	//0x0224		VoC_shru32_ri(REG01,0xfffffff8,DEFAULT)	|	VoC_shru16_ri(REG3,0x8,DEFAULT)
0x000F1603,	//0x0226		VoC_and16_ri(REG3,0xf)
0x1503FED0,	//0x0228		VoC_sw16_d(REG3,0x8df)(lo)	|	VoC_shru32_rr(REG01,REG2,DEFAULT)
0xDA1008DF,	//0x022a		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_d(REG3,0x8df)(hi)
0x023031C0,	//0x022c		VoC_bnez16_r(CBITLEFTOVER_NEZ,REG0)
0x0E2E2B80,	//0x022e		VoC_jal(CII_ibstrmResetPacket_VOC)
		//0x0230		CBITLEFTOVER_NEZ
0xFFC0FF40,	//0x0230		VoC_NOP	|	VoC_lw32z(REG01,DEFAULT)
0x08D21580,	//0x0232		VoC_sw32_d(REG01,0x8d2)
0x02622B00,	//0x0234		VoC_jump_lg(MFALLOWSUPERFRAME_END)
		//0x0236		MFALLOWSUPERFRAME_FALSE
0x08D21480,	//0x0236		VoC_lw32_d(REG01,0x8d2)
0x08E87204,	//0x0238		VoC_bnltz16_d(MIPACKETCURR_NLTZ,0x8e8)
0x08E81580,	//0x023a		VoC_sw32_d(REG01,0x8e8)
		//0x023c		MIPACKETCURR_NLTZ
0x08E80981,	//0x023c		VoC_sub32_rd(REG23,REG01,0x8e8)
0x3301FFC0,	//0x023e		VoC_bez32_r(ICURRPREVDIFF_EZ,REG23)(lo)	|	VoC_NOP
0xFFC00244,	//0x0240		VoC_NAD	|	VoC_bez32_r(ICURRPREVDIFF_EZ,REG23)(hi)
0x0E2E2B80,	//0x0242		VoC_jal(CII_ibstrmResetPacket_VOC)
		//0x0244		ICURRPREVDIFF_EZ
		//0x0244		LOOP_BEGIN_2
0x08D21480,	//0x0244		VoC_lw32_d(REG01,0x8d2)
0x5CB8FFC0,	//0x0246		VoC_bne32_rd(LOOP_END_2,REG01,0x8e8)(lo)	|	VoC_NOP
0x2B8008E8,	//0x0248		VoC_jal(CII_ibstrmReset_VOC)(lo)	|	VoC_bne32_rd(LOOP_END_2,REG01,0x8e8)(hi)
0xD90E0E56,	//0x024a		VoC_lw32_sd(RL6,0x0,DEFAULT)	|	VoC_jal(CII_ibstrmReset_VOC)(hi)
0x0CF22B80,	//0x024c		VoC_jal(CII_ibstrmGetMoreData_VOC)
0x6DB5E0A7,	//0x024e		VoC_bez16_d(LOOP_BEGIN_2,0x8e6)(lo)	|	VoC_movreg16(REG7,REG5,DEFAULT)
0x0AC708E6,	//0x0250		VoC_lw16i(REG7,0x8004)(lo)	|	VoC_bez16_d(LOOP_BEGIN_2,0x8e6)(hi)
0x2B000004,	//0x0252		VoC_jump_lg(DIFUNCTION_END)(lo)	|	VoC_lw16i(REG7,0x8004)(hi)
0xFFC00282,	//0x0254		VoC_NAD	|	VoC_jump_lg(DIFUNCTION_END)(hi)
		//0x0256		LOOP_END_2
0x08D21480,	//0x0256		VoC_lw32_d(REG01,0x8d2)
0x1580FFC0,	//0x0258		VoC_sw32_d(REG01,0x8e8)(lo)	|	VoC_NOP
0x6C0708E8,	//0x025a		VoC_bez16_d(MFALLOWSUPERFRAME_END,0x8e6)(lo)	|	VoC_sw32_d(REG01,0x8e8)(hi)
0x0AC708E6,	//0x025c		VoC_lw16i(REG7,0x8005)(lo)	|	VoC_bez16_d(MFALLOWSUPERFRAME_END,0x8e6)(hi)
0x2B000005,	//0x025e		VoC_jump_lg(DIFUNCTION_END)(lo)	|	VoC_lw16i(REG7,0x8005)(hi)
0xFFC00282,	//0x0260		VoC_NAD	|	VoC_jump_lg(DIFUNCTION_END)(hi)
		//0x0262		MFALLOWSUPERFRAME_END
0x08DE6E04,	//0x0262		VoC_bnez16_d(MFPACKETLOSS_TRUE,0x8de)
0xE5DDF007,	//0x0264		VoC_jump(DIFUNCTION_END)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0266		MFPACKETLOSS_TRUE
0xF306D610,	//0x0266		VoC_lw16i_short(REG6,0x18,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
		//0x0268		LOOP_BEGIN_3
0x3486D90E,	//0x0268		VoC_bngt16_rr(LOOP_END_3,REG0,REG6)(lo)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0xDFC00271,	//0x026a		VoC_push16(REG0,DEFAULT)	|	VoC_bngt16_rr(LOOP_END_3,REG0,REG6)(hi)
0x0C532B80,	//0x026c		VoC_jal(CII_ibstrmFlushBits_VOC)
0xC230DF80,	//0x026e		VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xD90EE5F8,	//0x0270		VoC_lw32_sd(RL6,0x0,DEFAULT)	|	VoC_jump(LOOP_BEGIN_3)
		//0x0271		LOOP_END_3
0xFFC0E006,	//0x0272		VoC_NAD	|	VoC_movreg16(REG6,REG0,DEFAULT)
0x0C532B80,	//0x0274		VoC_jal(CII_ibstrmFlushBits_VOC)
0x7FFF0A80,	//0x0276		VoC_lw16i(REG0,0x7fff)
0x1500F024,	//0x0278		VoC_sw16_d(REG0,0x9d8)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x150009D8,	//0x027a		VoC_sw16_d(REG0,0xa00)(lo)	|	VoC_sw16_d(REG0,0x9d8)(hi)
0x15040A00,	//0x027c		VoC_sw16_d(REG4,0x8f8)(lo)	|	VoC_sw16_d(REG0,0xa00)(hi)
0x150408F8,	//0x027e		VoC_sw16_d(REG4,0x8f7)(lo)	|	VoC_sw16_d(REG4,0x8f8)(hi)
0xF00708F7,	//0x0280		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw16_d(REG4,0x8f7)(hi)
		//0x0282		DIFUNCTION_END
0xDFA9DF86,	//0x0282		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0x1507DF06,	//0x0284		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_pop32(RL6,DEFAULT)
0xE5800C49,	//0x0286		VoC_return	|	VoC_sw16_d(REG7,0xc49)(hi)
		//0x0288		CII_audecDecodeData_VOC
0x00000A87,	//0x0288		VoC_lw16i(REG7,0x0)
0x1507DFE9,	//0x028a		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_push16(RA,DEFAULT)
0x6C070C49,	//0x028c		VoC_bez16_d(Label_while_start,0x8e6)(lo)	|	VoC_sw16_d(REG7,0xc49)(hi)
0xFFC008E6,	//0x028e		VoC_NAD	|	VoC_bez16_d(Label_while_start,0x8e6)(hi)
0x0CF22B80,	//0x0290		VoC_jal(CII_ibstrmGetMoreData_VOC)
0x0C491505,	//0x0292		VoC_sw16_d(REG5,0xc49)
		//0x0294		Label_while_start
0x08E01406,	//0x0294		VoC_lw16_d(REG6,0x8e0)
0x3186FFC0,	//0x0296		VoC_bez16_r(Label_case_BEGIN_PACKET,REG6)(lo)	|	VoC_NOP
0x442E0342,	//0x0298		VoC_bne16_rd(Label_case_BEGIN_FRAME_not,REG6,0x11a9)(lo)	|	VoC_bez16_r(Label_case_BEGIN_PACKET,REG6)(hi)
0x2B0011A9,	//0x029a		VoC_jump_lg(Label_case_BEGIN_FRAME)(lo)	|	VoC_bne16_rd(Label_case_BEGIN_FRAME_not,REG6,0x11a9)(hi)
0xFFC0034A,	//0x029c		VoC_NAD	|	VoC_jump_lg(Label_case_BEGIN_FRAME)(hi)
		//0x029e		Label_case_BEGIN_FRAME_not
0x11AA4106,	//0x029e		VoC_be16_rd(Label_case_BEGIN_SUBFRAME,REG6,0x11aa)
0x11AB4426,	//0x02a0		VoC_bne16_rd(Label_case_DECODE_SUBFRAME_not,REG6,0x11ab)
0x02FC2B00,	//0x02a2		VoC_jump_lg(Label_case_DECODE_SUBFRAME)
		//0x02a4		Label_case_DECODE_SUBFRAME_not
0x11AC4426,	//0x02a4		VoC_bne16_rd(Label_case_END_SUBFRAME1_con,REG6,0x11ac)
0x030E2B00,	//0x02a6		VoC_jump_lg(Label_case_END_SUBFRAME1)
		//0x02a8		Label_case_END_SUBFRAME1_con
0x11AD4426,	//0x02a8		VoC_bne16_rd(Label_case_END_SUBFRAME2_con,REG6,0x11ad)
0x03182B00,	//0x02aa		VoC_jump_lg(Label_case_END_SUBFRAME2)
		//0x02ac		Label_case_END_SUBFRAME2_con
0x03632B00,	//0x02ac		VoC_jump_lg(Label_exit)
		//0x02ae		Label_case_BEGIN_SUBFRAME
0x00000A80,	//0x02ae		VoC_lw16i(REG0,0x0)
0x08E76C04,	//0x02b0		VoC_bez16_d(Label_LastSubFrame_not,0x8e7)
0x02F62B00,	//0x02b2		VoC_jump_lg(Label_LastSubFrame)
		//0x02b4		Label_LastSubFrame_not
0x0C4A1500,	//0x02b4		VoC_sw16_d(REG0,0xc4a)
		//0x02b6		Label_loop_channel_start
0x09D81406,	//0x02b6		VoC_lw16_d(REG6,0x9d8)
0x00000A87,	//0x02b8		VoC_lw16i(REG7,0x0)
0x0C4A6C06,	//0x02ba		VoC_bez16_d(Label_channel_select_over,0xc4a)
0x0A001406,	//0x02bc		VoC_lw16_d(REG6,0xa00)
0x00280A87,	//0x02be		VoC_lw16i(REG7,0x28)
		//0x02c0		Label_channel_select_over
0x09B740A6,	//0x02c0		VoC_be16_rd(Label_NormalFrame,REG6,0x9b7)
0x09B84C96,	//0x02c2		VoC_bnlt16_rd(Label_NormalFrame,REG6,0x9b8)
0x04020AC7,	//0x02c4		VoC_lw16i(REG7,0x8402)
0x1507FFC0,	//0x02c6		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_NOP
0x2B000C49,	//0x02c8		VoC_jump_lg(Label_exit)(lo)	|	VoC_sw16_d(REG7,0xc49)(hi)
0xFFC00363,	//0x02ca		VoC_NAD	|	VoC_jump_lg(Label_exit)(hi)
		//0x02cc		Label_NormalFrame
0x03662B80,	//0x02cc		VoC_jal(CII_auSaveHistoryMono_Tbl_VOC)
0x0C491507,	//0x02ce		VoC_sw16_d(REG7,0xc49)
0x03633207,	//0x02d0		VoC_bltz16_r(Label_exit,REG7)
0x0C4A1401,	//0x02d2		VoC_lw16_d(REG1,0xc4a)
0x09D80A85,	//0x02d4		VoC_lw16i(REG5,0x9d8)
0x0C4A6C04,	//0x02d6		VoC_bez16_d(Label_channel_select_over2,0xc4a)
0x0A000A85,	//0x02d8		VoC_lw16i(REG5,0xa00)
		//0x02da		Label_channel_select_over2
0x11A90709,	//0x02da		VoC_add16_rd(REG1,REG1,0x11a9)
0x7FFF0A86,	//0x02dc		VoC_lw16i(REG6,0x7fff)
0x0C4A1501,	//0x02de		VoC_sw16_d(REG1,0xc4a)
0x4C29DC56,	//0x02e0		VoC_bnlt16_rd(Label_loop_channel_end,REG1,0x8f9)(lo)	|	VoC_sw16_p(REG6,REG5,DEFAULT)
0x2B0008F9,	//0x02e2		VoC_jump_lg(Label_loop_channel_start)(lo)	|	VoC_bnlt16_rd(Label_loop_channel_end,REG1,0x8f9)(hi)
0xFFC002B6,	//0x02e4		VoC_NAD	|	VoC_jump_lg(Label_loop_channel_start)(hi)
		//0x02e6		Label_loop_channel_end
0x00030A83,	//0x02e6		VoC_lw16i(REG3,0x3)
0x00000A80,	//0x02e8		VoC_lw16i(REG0,0x0)
0x08E01503,	//0x02ea		VoC_sw16_d(REG3,0x8e0)
0x08E11500,	//0x02ec		VoC_sw16_d(REG0,0x8e1)
0x08E21500,	//0x02ee		VoC_sw16_d(REG0,0x8e2)
0x08E41500,	//0x02f0		VoC_sw16_d(REG0,0x8e4)
0x08E51500,	//0x02f2		VoC_sw16_d(REG0,0x8e5)
0xFFC0E5C8,	//0x02f4		VoC_NAD	|	VoC_jump(Label_case_DECODE_SUBFRAME)
		//0x02f6		Label_LastSubFrame
0x00050A85,	//0x02f6		VoC_lw16i(REG5,0x5)
0x1505FFC0,	//0x02f8		VoC_sw16_d(REG5,0x8e0)(lo)	|	VoC_NOP
0xFFC008E0,	//0x02fa		VoC_NAD	|	VoC_sw16_d(REG5,0x8e0)(hi)
		//0x02fc		Label_case_DECODE_SUBFRAME
0x09A96C08,	//0x02fc		VoC_bez16_d(Label_LowMidRate,0x9a9)
0x08EE6E06,	//0x02fe		VoC_bnez16_d(Label_LowMidRate,0x8ee)
0x00002B80,	//0x0300		VoC_jal(CII_prvDecodeSubFrameHighRate_VOC)
0xFFC0E5C4,	//0x0302		VoC_NAD	|	VoC_jump(Label_DecodeSubFrame_over)
		//0x0304		Label_LowMidRate
0x13B72B80,	//0x0304		VoC_jal(CII_prvDecodeSubFrame_VOC)
		//0x0306		Label_DecodeSubFrame_over
0x00020A82,	//0x0306		VoC_lw16i(REG2,0x2)
0x00040A84,	//0x0308		VoC_lw16i(REG4,0x4)
0x08E14422,	//0x030a		VoC_bne16_rd(Label_case_END_SUBFRAME1,REG2,0x8e1)
0x08E01504,	//0x030c		VoC_sw16_d(REG4,0x8e0)
		//0x030e		Label_case_END_SUBFRAME1
0x046C2B80,	//0x030e		VoC_jal(CII_auPreGetPCM_VOC)
0x00010A81,	//0x0310		VoC_lw16i(REG1,0x1)
0x09010709,	//0x0312		VoC_add16_rd(REG1,REG1,0x901)
0x1501FFC0,	//0x0314		VoC_sw16_d(REG1,0x901)(lo)	|	VoC_NOP
0xFFC00901,	//0x0316		VoC_NAD	|	VoC_sw16_d(REG1,0x901)(hi)
		//0x0318		Label_case_END_SUBFRAME2
0x08E76C22,	//0x0318		VoC_bez16_d(Label_NotLastSubFrame,0x8e7)
0x08FD6C0E,	//0x031a		VoC_bez16_d(Label_NO_AllowSuperFrame,0x8fd)
0x090C1808,	//0x031c		VoC_lw16i_set_inc(REG0,0x90c,0x2)
0x093E1809,	//0x031e		VoC_lw16i_set_inc(REG1,0x93e,0x2)
0x0970180A,	//0x0320		VoC_lw16i_set_inc(REG2,0x970,0x2)
0x03272C32,	//0x0322		VoC_loop_i(0x0,0x19)
0xD98FD9D6,	//0x0324		VoC_lw32_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG2,DEFAULT)
0xDDC7DDCE,	//0x0326		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
		//0x0327		VoC_endloop0
		//0x0328		Label_NO_AllowSuperFrame
0x00010A81,	//0x0328		VoC_lw16i(REG1,0x1)
0x08DF0B0A,	//0x032a		VoC_sub16_dr(REG2,0x8df,REG1)
0x08E01501,	//0x032c		VoC_sw16_d(REG1,0x8e0)
0x08DF1502,	//0x032e		VoC_sw16_d(REG2,0x8df)
0x03633102,	//0x0330		VoC_bgtz16_r(Label_exit,REG2)
0x00040A87,	//0x0332		VoC_lw16i(REG7,0x4)
0x1507FFC0,	//0x0334		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_NOP
0x2B000C49,	//0x0336		VoC_jump_lg(Label_exit)(lo)	|	VoC_sw16_d(REG7,0xc49)(hi)
0xFFC00363,	//0x0338		VoC_NAD	|	VoC_jump_lg(Label_exit)(hi)
		//0x033a		Label_NotLastSubFrame
0x00020A82,	//0x033a		VoC_lw16i(REG2,0x2)
0x1502FFC0,	//0x033c		VoC_sw16_d(REG2,0x8e0)(lo)	|	VoC_NOP
0x2B0008E0,	//0x033e		VoC_jump_lg(Label_exit)(lo)	|	VoC_sw16_d(REG2,0x8e0)(hi)
0xFFC00363,	//0x0340		VoC_NAD	|	VoC_jump_lg(Label_exit)(hi)
		//0x0342		Label_case_BEGIN_PACKET
0x00010A81,	//0x0342		VoC_lw16i(REG1,0x1)
0x1501FFC0,	//0x0344		VoC_sw16_d(REG1,0x902)(lo)	|	VoC_NOP
0x15010902,	//0x0346		VoC_sw16_d(REG1,0x8e0)(lo)	|	VoC_sw16_d(REG1,0x902)(hi)
0xFFC008E0,	//0x0348		VoC_NAD	|	VoC_sw16_d(REG1,0x8e0)(hi)
		//0x034a		Label_case_BEGIN_FRAME
0x00000A80,	//0x034a		VoC_lw16i(REG0,0x0)
0x00010A81,	//0x034c		VoC_lw16i(REG1,0x1)
0x00020A82,	//0x034e		VoC_lw16i(REG2,0x2)
0x09BD0709,	//0x0350		VoC_add16_rd(REG1,REG1,0x9bd)
0x09011500,	//0x0352		VoC_sw16_d(REG0,0x901)
0x08E71500,	//0x0354		VoC_sw16_d(REG0,0x8e7)
0x09BD1501,	//0x0356		VoC_sw16_d(REG1,0x9bd)
0x08E01502,	//0x0358		VoC_sw16_d(REG2,0x8e0)
0x08DF6C04,	//0x035a		VoC_bez16_d(Label_while_end,0x8df)
0x02942B00,	//0x035c		VoC_jump_lg(Label_while_start)
		//0x035e		Label_while_end
0x00040A87,	//0x035e		VoC_lw16i(REG7,0x4)
0x1507FFC0,	//0x0360		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_NOP
0xDFA90C49,	//0x0362		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG7,0xc49)(hi)
		//0x0363		Label_exit
0xE580FFC0,	//0x0364		VoC_return	|	VoC_NOP
		//0x0366		CII_auSaveHistoryMono_Tbl_VOC
0x09D80A83,	//0x0366		VoC_lw16i(REG3,0x9d8)
0x25C61507,	//0x0368		VoC_sw16_d(REG7,0x25c6)
0xF7D0C0FB,	//0x036a		VoC_lw16i_short(INC0,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x0A81D833,	//0x036c		VoC_lw16i(REG1,0x9d9)(lo)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0x148709D9,	//0x036e		VoC_lw32_d(RL7,0xa1e)(lo)	|	VoC_lw16i(REG1,0x9d9)(hi)
0xC0790A1E,	//0x0370		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw32_d(RL7,0xa1e)(hi)
0x10000A8C,	//0x0372		VoC_lw16i(RL6_LO,0x1000)
0x3187F00D,	//0x0374		VoC_bez16_r(GET_PIDST_END,REG7)(lo)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0xC9F70378,	//0x0376		VoC_add32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_bez16_r(GET_PIDST_END,REG7)(hi)
		//0x0378		GET_PIDST_END
0x1587D811,	//0x0378		VoC_sw32_d(RL7,0x2638)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x14042638,	//0x037a		VoC_lw16_d(REG4,0x90b)(lo)	|	VoC_sw32_d(RL7,0x2638)(hi)
0xF032090B,	//0x037c		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16_d(REG4,0x90b)(hi)
0x11AB0824,	//0x037e		VoC_mult16_rd(REG4,REG4,0x11ab)
0x0A181486,	//0x0380		VoC_lw32_d(RL6,0xa18)
0x0ACEC31C,	//0x0382		VoC_lw16i(RL7_LO,0x8000)(lo)	|	VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)
0x0ACF0000,	//0x0384		VoC_lw16i(RL7_HI,0xffff)(lo)	|	VoC_lw16i(RL7_LO,0x8000)(hi)
0x15867FFF,	//0x0386		VoC_sw32_d(RL6,0x25fe)(lo)	|	VoC_lw16i(RL7_HI,0xffff)(hi)
0x158725FE,	//0x0388		VoC_sw32_d(RL7,0x25fc)(lo)	|	VoC_sw32_d(RL6,0x25fe)(hi)
0x314425FC,	//0x038a		VoC_bngtz16_r(I_NLT_CSUBFRAMESAMPLE3QUAD,REG4)(lo)	|	VoC_sw32_d(RL7,0x25fc)(hi)
0xC0E303F6,	//0x038c		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_bngtz16_r(I_NLT_CSUBFRAMESAMPLE3QUAD,REG4)(hi)
0x0789F924,	//0x038e		VoC_sub16_rd(REG1,REG1,0x11aa)(lo)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0xF7D111AA,	//0x0390		VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)	|	VoC_sub16_rd(REG1,REG1,0x11aa)(hi)
0xF421727A,	//0x0392		VoC_lw16i_short(FORMAT32,0x4,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x13,DEFAULT)
0x00200A96,	//0x0394		VoC_lw16i(STATUS,0x20)
0x03F22E21,	//0x0396		VoC_loop_r(1,REG4)
0x26280A82,	//0x0398		VoC_lw16i(REG2,0x2628)
0x25FE1486,	//0x039a		VoC_lw32_d(RL6,0x25fe)
0x11CE09B6,	//0x039c		VoC_sub32_rd(RL6,RL6,0x11ce)
0x1586FFC0,	//0x039e		VoC_sw32_d(RL6,0x25fe)(lo)	|	VoC_NOP
0x0A8425FE,	//0x03a0		VoC_lw16i(REG4,0x12e6)(lo)	|	VoC_sw32_d(RL6,0x25fe)(hi)
0x0A8512E6,	//0x03a2		VoC_lw16i(REG5,0x10)(lo)	|	VoC_lw16i(REG4,0x12e6)(hi)
0x15440010,	//0x03a4		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_lw16i(REG5,0x10)(hi)
0x15457FC3,	//0x03a6		VoC_sw16_d(REG5,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C67FC2,	//0x03a8		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG5,0xffc2)(hi)
0xDE807FC4,	//0x03aa		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x03ac		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x0A800008,	//0x03ae		VoC_lw16i(REG0,0x25ea)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x2C1025EA,	//0x03b0		VoC_loop_i(0x0,0x8)(lo)	|	VoC_lw16i(REG0,0x25ea)(hi)
0xD9C203D8,	//0x03b2		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x8)(hi)
0x4DECD9CB,	//0x03b4		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0x4E7CF90C,	//0x03b6		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x03b8		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x59CBD9C2,	//0x03ba		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x4DECFF26,	//0x03bc		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x4E7CF90C,	//0x03be		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x03c0		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x11D05436,	//0x03c2		VoC_bngt32_rd(SHPCM1_BNGT_0X7FFF,RL6,0x11d0)
0x7FFF0A8C,	//0x03c4		VoC_lw16i(RL6_LO,0x7fff)
0xFFC0E5C6,	//0x03c6		VoC_NAD	|	VoC_jump(SHGET_PCM1_END)
		//0x03c8		SHPCM1_BNGT_0X7FFF
0x25FC6426,	//0x03c8		VoC_bnlt32_rd(SHGET_PCM1_END,RL6,0x25fc)
0x00000ACC,	//0x03ca		VoC_lw16i(RL6_LO,0x8000)
		//0x03cc		SHGET_PCM1_END
0xDCAC7F27,	//0x03cc		VoC_sw16inc_p(RL6_LO,REG2,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x11D05437,	//0x03ce		VoC_bngt32_rd(SHPCM2_BNGT_0X7FFF,RL7,0x11d0)
0x7FFF0A8E,	//0x03d0		VoC_lw16i(RL7_LO,0x7fff)
0xFFC0E5C6,	//0x03d2		VoC_NAD	|	VoC_jump(SHGET_PCM2_END)
		//0x03d4		SHPCM2_BNGT_0X7FFF
0x25FC6427,	//0x03d4		VoC_bnlt32_rd(SHGET_PCM2_END,RL7,0x25fc)
0x00000ACE,	//0x03d6		VoC_lw16i(RL7_LO,0x8000)
		//0x03d8		SHGET_PCM2_END
		//0x03d8		VoC_endloop0
0x1486DCAE,	//0x03d8		VoC_lw32_d(RL6,0x2638)(lo)	|	VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)
0xF00E2638,	//0x03da		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw32_d(RL6,0x2638)(hi)
0x40000A8F,	//0x03dc		VoC_lw16i(RL7_HI,0x4000)
0x13140A84,	//0x03de		VoC_lw16i(REG4,0x1314)
0x0A85E537,	//0x03e0		VoC_lw16i(REG5,0x8)(lo)	|	VoC_or32_rr(RL7,RL6,DEFAULT)
0x15440008,	//0x03e2		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_lw16i(REG5,0x8)(hi)
0x15457FC3,	//0x03e4		VoC_sw16_d(REG5,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C77FC2,	//0x03e6		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw16_d(REG5,0xffc2)(hi)
0xDE807FC4,	//0x03e8		VoC_cfg(0x0)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x1794FFC0,	//0x03ea		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xF0050008,	//0x03ec		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x00200A84,	//0x03ee		VoC_lw16i(REG4,0x20)
0xFFC0C996,	//0x03f0		VoC_NOP	|	VoC_add32_rr(RL6,RL6,REG45,DEFAULT)
		//0x03f2		VoC_endloop1
0x26381586,	//0x03f2		VoC_sw32_d(RL6,0x2638)
0x11AA0709,	//0x03f4		VoC_add16_rd(REG1,REG1,0x11aa)
		//0x03f6		I_NLT_CSUBFRAMESAMPLE3QUAD
0x09B80B1C,	//0x03f6		VoC_sub16_dr(REG4,0x9b8,REG3)
0x3144FFC0,	//0x03f8		VoC_bngtz16_r(I_NLT_ICOEFRECURQ4,REG4)(lo)	|	VoC_NOP
0xC0E30460,	//0x03fa		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_bngtz16_r(I_NLT_ICOEFRECURQ4,REG4)(hi)
0xF051F924,	//0x03fc		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0x045D2E21,	//0x03fe		VoC_loop_r(1,REG4)
0x26280A82,	//0x0400		VoC_lw16i(REG2,0x2628)
0x25FE1486,	//0x0402		VoC_lw32_d(RL6,0x25fe)
0x11CE09B6,	//0x0404		VoC_sub32_rd(RL6,RL6,0x11ce)
0x1586FFC0,	//0x0406		VoC_sw32_d(RL6,0x25fe)(lo)	|	VoC_NOP
0x0A8425FE,	//0x0408		VoC_lw16i(REG4,0x12e6)(lo)	|	VoC_sw32_d(RL6,0x25fe)(hi)
0x0A8512E6,	//0x040a		VoC_lw16i(REG5,0x10)(lo)	|	VoC_lw16i(REG4,0x12e6)(hi)
0x15440010,	//0x040c		VoC_sw16_d(REG4,0xffc3)(lo)	|	VoC_lw16i(REG5,0x10)(hi)
0x15457FC3,	//0x040e		VoC_sw16_d(REG5,0xffc2)(lo)	|	VoC_sw16_d(REG4,0xffc3)(hi)
0x15C67FC2,	//0x0410		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG5,0xffc2)(hi)
0xDE807FC4,	//0x0412		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x0414		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x0A800008,	//0x0416		VoC_lw16i(REG0,0x25ea)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x2C1025EA,	//0x0418		VoC_loop_i(0x0,0x8)(lo)	|	VoC_lw16i(REG0,0x25ea)(hi)
0xD9C20443,	//0x041a		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x8)(hi)
0x4DECD9CB,	//0x041c		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0x4E7CF90C,	//0x041e		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x0420		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x59CBD9C2,	//0x0422		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x4DECFF26,	//0x0424		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x4E7CF90C,	//0x0426		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xCE75F90E,	//0x0428		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x11CC0BB6,	//0x042a		VoC_sub32_dr(RL6,0x11cc,RL6)
0x11CC0BA7,	//0x042c		VoC_sub32_dr(RL7,0x11cc,ACC0)
0x11D05436,	//0x042e		VoC_bngt32_rd(SHPCM3_BNGT_0X7FFF,RL6,0x11d0)
0x7FFF0A8C,	//0x0430		VoC_lw16i(RL6_LO,0x7fff)
0xFFC0E5C6,	//0x0432		VoC_NAD	|	VoC_jump(SHGET_PCM3_END)
		//0x0434		SHPCM3_BNGT_0X7FFF
0x25FC6426,	//0x0434		VoC_bnlt32_rd(SHGET_PCM3_END,RL6,0x25fc)
0x00000ACC,	//0x0436		VoC_lw16i(RL6_LO,0x8000)
		//0x0438		SHGET_PCM3_END
0x11D05437,	//0x0438		VoC_bngt32_rd(SHPCM4_BNGT_0X7FFF,RL7,0x11d0)
0x7FFF0A8E,	//0x043a		VoC_lw16i(RL7_LO,0x7fff)
0xFFC0E5C6,	//0x043c		VoC_NAD	|	VoC_jump(SHGET_PCM4_END)
		//0x043e		SHPCM4_BNGT_0X7FFF
0x25FC6427,	//0x043e		VoC_bnlt32_rd(SHGET_PCM4_END,RL7,0x25fc)
0x00000ACE,	//0x0440		VoC_lw16i(RL7_LO,0x8000)
		//0x0442		SHGET_PCM4_END
0xDCAEDCAC,	//0x0442		VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x0443		VoC_endloop0
0x26381486,	//0x0444		VoC_lw32_d(RL6,0x2638)
0x0A8FF00E,	//0x0446		VoC_lw16i(RL7_HI,0x4000)(lo)	|	VoC_lw16i_short(RL7_LO,0x0,DEFAULT)
0x0A844000,	//0x0448		VoC_lw16i(REG4,0x1314)(lo)	|	VoC_lw16i(RL7_HI,0x4000)(hi)
0xE5371314,	//0x044a		VoC_or32_rr(RL7,RL6,DEFAULT)	|	VoC_lw16i(REG4,0x1314)(hi)
0x00080A85,	//0x044c		VoC_lw16i(REG5,0x8)
0x7FC31544,	//0x044e		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x0450		VoC_sw16_d(REG5,0xffc2)
0x7FC415C7,	//0x0452		VoC_sw32_d(RL7,0xffc4)
0xFFC0DE80,	//0x0454		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0456		VoC_cfg_lg(0x8,)
0x0A84F005,	//0x0458		VoC_lw16i(REG4,0x20)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC9960020,	//0x045a		VoC_add32_rr(RL6,RL6,REG45,DEFAULT)	|	VoC_lw16i(REG4,0x20)(hi)
0x1586FFC0,	//0x045c		VoC_sw32_d(RL6,0x2638)(lo)	|	VoC_NOP
		//0x045d		VoC_endloop1
0xFFC02638,	//0x045e		VoC_NAD	|	VoC_sw32_d(RL6,0x2638)(hi)
		//0x0460		I_NLT_ICOEFRECURQ4
0x09D80A84,	//0x0460		VoC_lw16i(REG4,0x9d8)
0xF4017007,	//0x0462		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x00600A96,	//0x0464		VoC_lw16i(STATUS,0x60)
0x25C60724,	//0x0466		VoC_add16_rd(REG4,REG4,0x25c6)
0x0C491507,	//0x0468		VoC_sw16_d(REG7,0xc49)
0xE580DC43,	//0x046a		VoC_return	|	VoC_sw16_p(REG3,REG4,DEFAULT)
		//0x046c		CII_auPreGetPCM_VOC
0x09D51406,	//0x046c		VoC_lw16_d(REG6,0x9d5)
0x00000A81,	//0x046e		VoC_lw16i(REG1,0x0)
0x08FC0736,	//0x0470		VoC_add16_rd(REG6,REG6,0x8fc)
0x09D81501,	//0x0472		VoC_sw16_d(REG1,0x9d8)
0x08F91404,	//0x0474		VoC_lw16_d(REG4,0x8f9)
0x0A1E1486,	//0x0476		VoC_lw32_d(RL6,0xa1e)
0x09D91506,	//0x0478		VoC_sw16_d(REG6,0x9d9)
0x09DA1586,	//0x047a		VoC_sw32_d(RL6,0x9da)
0x11AA4504,	//0x047c		VoC_bne16_rd(Label_MonoChannel0,REG4,0x11aa)
0x10000A8E,	//0x047e		VoC_lw16i(RL7_LO,0x1000)
0x1406F00F,	//0x0480		VoC_lw16_d(REG6,0x9fd)(lo)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0xC9BE09FD,	//0x0482		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_lw16_d(REG6,0x9fd)(hi)
0x0A001501,	//0x0484		VoC_sw16_d(REG1,0xa00)
0x08FC0736,	//0x0486		VoC_add16_rd(REG6,REG6,0x8fc)
0x0A021586,	//0x0488		VoC_sw32_d(RL6,0xa02)
0x0A011506,	//0x048a		VoC_sw16_d(REG6,0xa01)
		//0x048c		Label_MonoChannel0
0x09B31406,	//0x048c		VoC_lw16_d(REG6,0x9b3)
0x09B207B6,	//0x048e		VoC_sub16_rd(REG6,REG6,0x9b2)
0x090A1407,	//0x0490		VoC_lw16_d(REG7,0x90a)
0x04AA3146,	//0x0492		VoC_bngtz16_r(Label_iWinDiffNGTZ,REG6)
0xC3F7F80E,	//0x0494		VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x0733C1B5,	//0x0496		VoC_add16_rd(REG3,REG6,0x9d8)(lo)	|	VoC_add16_rr(REG5,REG6,REG6,DEFAULT)
0x072D09D8,	//0x0498		VoC_add16_rd(REG5,REG5,0x9d9)(lo)	|	VoC_add16_rd(REG3,REG6,0x9d8)(hi)
0x150309D9,	//0x049a		VoC_sw16_d(REG3,0x9d8)(lo)	|	VoC_add16_rd(REG5,REG5,0x9d9)(hi)
0x150509D8,	//0x049c		VoC_sw16_d(REG5,0x9d9)(lo)	|	VoC_sw16_d(REG3,0x9d8)(hi)
0x449C09D9,	//0x049e		VoC_bne16_rd(Label_iWinDiffNGTZ,REG4,0x11aa)(lo)	|	VoC_sw16_d(REG5,0x9d9)(hi)
0xC1B511AA,	//0x04a0		VoC_add16_rr(REG5,REG6,REG6,DEFAULT)	|	VoC_bne16_rd(Label_iWinDiffNGTZ,REG4,0x11aa)(hi)
0x0A000733,	//0x04a2		VoC_add16_rd(REG3,REG6,0xa00)
0x0A01072D,	//0x04a4		VoC_add16_rd(REG5,REG5,0xa01)
0x0A001503,	//0x04a6		VoC_sw16_d(REG3,0xa00)
0x0A011505,	//0x04a8		VoC_sw16_d(REG5,0xa01)
		//0x04aa		Label_iWinDiffNGTZ
0x09B31406,	//0x04aa		VoC_lw16_d(REG6,0x9b3)
0x09B407B6,	//0x04ac		VoC_sub16_rd(REG6,REG6,0x9b4)
0x08F61405,	//0x04ae		VoC_lw16_d(REG5,0x8f6)
0x04B43146,	//0x04b0		VoC_bngtz16_r(Label_iWinDiffNGTZ1,REG6)
0xC1F7F80E,	//0x04b2		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x04b4		Label_iWinDiffNGTZ1
0x08F81404,	//0x04b4		VoC_lw16_d(REG4,0x8f8)
0x11AB4025,	//0x04b6		VoC_be16_rd(Label_NotCodecBegin_not,REG5,0x11ab)
0x04D82B00,	//0x04b8		VoC_jump_lg(Label_NotCodecBegin)
		//0x04ba		Label_NotCodecBegin_not
0x08F91402,	//0x04ba		VoC_lw16_d(REG2,0x8f9)
0x09606C12,	//0x04bc		VoC_bez16_d(Label_EZandRetrun,0x960)
0x09D06C10,	//0x04be		VoC_bez16_d(Label_EZandRetrun,0x9d0)
0x09D26E0E,	//0x04c0		VoC_bnez16_d(Label_EZandRetrun,0x9d2)
0x11AA4832,	//0x04c2		VoC_blt16_rd(Label_NEZandRetrun,REG2,0x11aa)
0x09F86C0A,	//0x04c4		VoC_bez16_d(Label_EZandRetrun,0x9f8)
0x09FA6E08,	//0x04c6		VoC_bnez16_d(Label_EZandRetrun,0x9fa)
		//0x04c8		Label_NEZandRetrun
0x00000A81,	//0x04c8		VoC_lw16i(REG1,0x0)
0x09A31402,	//0x04ca		VoC_lw16_d(REG2,0x9a3)
0xFFC0E5C6,	//0x04cc		VoC_NAD	|	VoC_jump(Label_sw_DiscardSilence)
		//0x04ce		Label_EZandRetrun
0x00010A81,	//0x04ce		VoC_lw16i(REG1,0x1)
0x090A1402,	//0x04d0		VoC_lw16_d(REG2,0x90a)
		//0x04d2		Label_sw_DiscardSilence
0x08F71501,	//0x04d2		VoC_sw16_d(REG1,0x8f7)
0x09B91502,	//0x04d4		VoC_sw16_d(REG2,0x9b9)
0xFFC0E5CC,	//0x04d6		VoC_NAD	|	VoC_jump(Label_Not_fPacketLossAdj)
		//0x04d8		Label_NotCodecBegin
0x11A94494,	//0x04d8		VoC_bne16_rd(Label_Not_fPacketLossAdj,REG4,0x11a9)
0x09B61406,	//0x04da		VoC_lw16_d(REG6,0x9b6)
0x09B507B6,	//0x04dc		VoC_sub16_rd(REG6,REG6,0x9b5)
0x1506FFC0,	//0x04de		VoC_sw16_d(REG6,0x9b9)(lo)	|	VoC_NOP
0xFFC009B9,	//0x04e0		VoC_NAD	|	VoC_sw16_d(REG6,0x9b9)(hi)
		//0x04e2		Label_Not_fPacketLossAdj
0x00000A85,	//0x04e2		VoC_lw16i(REG5,0x0)
0x1505FFC0,	//0x04e4		VoC_sw16_d(REG5,0x8f8)(lo)	|	VoC_NOP
0x6E0508F8,	//0x04e6		VoC_bnez16_d(PGPLabel_con,0x9b9)(lo)	|	VoC_sw16_d(REG5,0x8f8)(hi)
0x2B0009B9,	//0x04e8		VoC_jump_lg(PGPLabel_return)(lo)	|	VoC_bnez16_d(PGPLabel_con,0x9b9)(hi)
0xFFC0057B,	//0x04ea		VoC_NAD	|	VoC_jump_lg(PGPLabel_return)(hi)
		//0x04ec		PGPLabel_con
0x09B93837,	//0x04ec		VoC_bgt16_rd(Label_GTDiscardSilence,REG7,0x9b9)
0x0A86E0E5,	//0x04ee		VoC_lw16i(REG6,0x0)(lo)	|	VoC_movreg16(REG5,REG7,DEFAULT)
0xE5C50000,	//0x04f0		VoC_jump(Label_continiue0)	|	VoC_lw16i(REG6,0x0)(hi)
		//0x04f2		Label_GTDiscardSilence
0x09B91405,	//0x04f2		VoC_lw16_d(REG5,0x9b9)
0x00010A86,	//0x04f4		VoC_lw16i(REG6,0x1)
		//0x04f6		Label_continiue0
0x00000A80,	//0x04f6		VoC_lw16i(REG0,0x0)
0x1500C3EF,	//0x04f8		VoC_sw16_d(REG0,0x8e4)(lo)	|	VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)
0xFFC008E4,	//0x04fa		VoC_NAD	|	VoC_sw16_d(REG0,0x8e4)(hi)
		//0x04fc		Lable_LorRchannel
0x09D81403,	//0x04fc		VoC_lw16_d(REG3,0x9d8)
0x08E46C04,	//0x04fe		VoC_bez16_d(Label_channel0,0x8e4)
0x0A001403,	//0x0500		VoC_lw16_d(REG3,0xa00)
		//0x0502		Label_channel0
0x09B60B1C,	//0x0502		VoC_sub16_dr(REG4,0x9b6,REG3)
0x342CFFC0,	//0x0504		VoC_bgt16_rr(Label_lessone,REG5,REG4)(lo)	|	VoC_NOP
0xE0A40508,	//0x0506		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_bgt16_rr(Label_lessone,REG5,REG4)(hi)
		//0x0508		Label_lessone
0x00000A80,	//0x0508		VoC_lw16i(REG0,0x0)
0x4C9BC0EA,	//0x050a		VoC_bnlt16_rd(Label_continiue1,REG3,0x90b)(lo)	|	VoC_add16_rr(REG2,REG3,REG5,DEFAULT)
0xE041090B,	//0x050c		VoC_movreg16(REG1,REG2,DEFAULT)	|	VoC_bnlt16_rd(Label_continiue1,REG3,0x90b)(hi)
0x090B4822,	//0x050e		VoC_blt16_rd(Label_LT1,REG2,0x90b)
0x090B1401,	//0x0510		VoC_lw16_d(REG1,0x90b)
		//0x0512		Label_LT1
0xFFC0C259,	//0x0512		VoC_NOP	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0xC008C0CB,	//0x0514		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
		//0x0516		Label_continiue1
0x09B64CA3,	//0x0516		VoC_bnlt16_rd(Label_continiue2,REG3,0x9b6)
0x4822E041,	//0x0518		VoC_blt16_rd(Label_LT2,REG2,0x9b6)(lo)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x140109B6,	//0x051a		VoC_lw16_d(REG1,0x9b6)(lo)	|	VoC_blt16_rd(Label_LT2,REG2,0x9b6)(hi)
0xC25909B6,	//0x051c		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x9b6)(hi)
		//0x051d		Label_LT2
0xC0CBFFC0,	//0x051e		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_NOP
0xFFC0C208,	//0x0520		VoC_NAD	|	VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)
		//0x0522		Label_continiue2
0x09B74C9B,	//0x0522		VoC_bnlt16_rd(Label_continiue3,REG3,0x9b7)
0x4822E041,	//0x0524		VoC_blt16_rd(Label_LT3,REG2,0x9b7)(lo)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x140109B7,	//0x0526		VoC_lw16_d(REG1,0x9b7)(lo)	|	VoC_blt16_rd(Label_LT3,REG2,0x9b7)(hi)
0xC25909B7,	//0x0528		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x9b7)(hi)
		//0x0529		Label_LT3
0xC208FFC0,	//0x052a		VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_NOP
0xF00DE023,	//0x052c		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
		//0x052d		Label_continiue3
0xF8FCF8F8,	//0x052e		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xE08CFFC0,	//0x0530		VoC_movreg16(RL6_LO,REG4,DEFAULT)	|	VoC_NOP
0x08E46E10,	//0x0532		VoC_bnez16_d(Label_channel1,0x8e4)
0x09D90700,	//0x0534		VoC_add16_rd(REG0,REG0,0x9d9)
0x09DA0936,	//0x0536		VoC_add32_rd(RL6,RL6,0x9da)
0x09D8072B,	//0x0538		VoC_add16_rd(REG3,REG5,0x9d8)
0x09D91500,	//0x053a		VoC_sw16_d(REG0,0x9d9)
0x09DA1586,	//0x053c		VoC_sw32_d(RL6,0x9da)
0x09D81503,	//0x053e		VoC_sw16_d(REG3,0x9d8)
0xFFC0E5CE,	//0x0540		VoC_NAD	|	VoC_jump(Lable_ChannelAdd)
		//0x0542		Label_channel1
0x0A010700,	//0x0542		VoC_add16_rd(REG0,REG0,0xa01)
0x0A020936,	//0x0544		VoC_add32_rd(RL6,RL6,0xa02)
0x0A00072B,	//0x0546		VoC_add16_rd(REG3,REG5,0xa00)
0x0A011500,	//0x0548		VoC_sw16_d(REG0,0xa01)
0x0A021586,	//0x054a		VoC_sw32_d(RL6,0xa02)
0x0A001503,	//0x054c		VoC_sw16_d(REG3,0xa00)
		//0x054e		Lable_ChannelAdd
0x08E41401,	//0x054e		VoC_lw16_d(REG1,0x8e4)
0x11A90709,	//0x0550		VoC_add16_rd(REG1,REG1,0x11a9)
0x1501FFC0,	//0x0552		VoC_sw16_d(REG1,0x8e4)(lo)	|	VoC_NOP
0x4C2908E4,	//0x0554		VoC_bnlt16_rd(Lable_LorRchannel_finish,REG1,0x8f9)(lo)	|	VoC_sw16_d(REG1,0x8e4)(hi)
0x2B0008F9,	//0x0556		VoC_jump_lg(Lable_LorRchannel)(lo)	|	VoC_bnlt16_rd(Lable_LorRchannel_finish,REG1,0x8f9)(hi)
0xFFC004FC,	//0x0558		VoC_NAD	|	VoC_jump_lg(Lable_LorRchannel)(hi)
		//0x055a		Lable_LorRchannel_finish
0x09D81401,	//0x055a		VoC_lw16_d(REG1,0x9d8)
0x056E3186,	//0x055c		VoC_bez16_r(Label_continiue4,REG6)
0x09B64D01,	//0x055e		VoC_bnlt16_rd(Label_continiue4,REG1,0x9b6)
0x09B60B08,	//0x0560		VoC_sub16_dr(REG0,0x9b6,REG1)
0x09C41486,	//0x0562		VoC_lw32_d(RL6,0x9c4)
0x05673429,	//0x0564		VoC_bgt16_rr(Label_NLT4,REG5,REG1)
0xF001E0A0,	//0x0566		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_movreg16(REG0,REG5,DEFAULT)
		//0x0567		Label_NLT4
0xC986F9F0,	//0x0568		VoC_add32_rr(RL6,RL6,REG01,DEFAULT)	|	VoC_shru16_ri(REG0,0xfffffffe,DEFAULT)
0x1586FFC0,	//0x056a		VoC_sw32_d(RL6,0x9c4)(lo)	|	VoC_NOP
0xFFC009C4,	//0x056c		VoC_NAD	|	VoC_sw32_d(RL6,0x9c4)(hi)
		//0x056e		Label_continiue4
0x09B90B2D,	//0x056e		VoC_sub16_dr(REG5,0x9b9,REG5)
0x08F61402,	//0x0570		VoC_lw16_d(REG2,0x8f6)
0x09B91505,	//0x0572		VoC_sw16_d(REG5,0x9b9)
0x11AB443A,	//0x0574		VoC_bne16_rd(PGPLabel_return,REG2,0x11ab)
0x00010A82,	//0x0576		VoC_lw16i(REG2,0x1)
0x1502FFC0,	//0x0578		VoC_sw16_d(REG2,0x8f6)(lo)	|	VoC_NOP
0xE58008F6,	//0x057a		VoC_return	|	VoC_sw16_d(REG2,0x8f6)(hi)
		//0x057b		PGPLabel_return
		//0x057c		CII_auReconMono_Tbl_VOC
0x09D80A81,	//0x057c		VoC_lw16i(REG1,0x9d8)
0x09C41486,	//0x057e		VoC_lw32_d(RL6,0x9c4)
0x1586C079,	//0x0580		VoC_sw32_d(RL6,0x25fe)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xF00525FE,	//0x0582		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw32_d(RL6,0x25fe)(hi)
0x1507D810,	//0x0584		VoC_sw16_d(REG7,0x25c6)(lo)	|	VoC_lw16_p(REG0,REG1,DEFAULT)
0xC03425C6,	//0x0586		VoC_add16_rr(REG4,REG0,REG6,DEFAULT)	|	VoC_sw16_d(REG7,0x25c6)(hi)
0x00000ACC,	//0x0588		VoC_lw16i(RL6_LO,0x8000)
0x7FFF0ACD,	//0x058a		VoC_lw16i(RL6_HI,0xffff)
0x25C71505,	//0x058c		VoC_sw16_d(REG5,0x25c7)
0x25C81504,	//0x058e		VoC_sw16_d(REG4,0x25c8)
0x25CA1500,	//0x0590		VoC_sw16_d(REG0,0x25ca)
0x25FC1586,	//0x0592		VoC_sw32_d(RL6,0x25fc)
0x1412F050,	//0x0594		VoC_lw16_d(INC2,0x8f9)(lo)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x0A8208F9,	//0x0596		VoC_lw16i(REG2,0x11d4)(lo)	|	VoC_lw16_d(INC2,0x8f9)(hi)
0x318711D4,	//0x0598		VoC_bez16_r(SET_OUTPCM_BUFF_END,REG7)(lo)	|	VoC_lw16i(REG2,0x11d4)(hi)
0x0712059E,	//0x059a		VoC_add16_rd(REG2,REG2,0x11a9)(lo)	|	VoC_bez16_r(SET_OUTPCM_BUFF_END,REG7)(hi)
0xFFC011A9,	//0x059c		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x11a9)(hi)
		//0x059e		SET_OUTPCM_BUFF_END
0x09DA1807,	//0x059e		VoC_lw16i_set_inc(REG3,0x9da,0x1)
0x09D90A81,	//0x05a0		VoC_lw16i(REG1,0x9d9)
0x25C6071B,	//0x05a2		VoC_add16_rd(REG3,REG3,0x25c6)
0x25C60709,	//0x05a4		VoC_add16_rd(REG1,REG1,0x25c6)
0xD811D99E,	//0x05a6		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw32_p(RL6,REG3,DEFAULT)
0x263A1586,	//0x05a8		VoC_sw32_d(RL6,0x263a)
0xF419725A,	//0x05aa		VoC_lw16i_short(FORMAT32,0x3,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x12,DEFAULT)
0x00200A96,	//0x05ac		VoC_lw16i(STATUS,0x20)
0x090B4820,	//0x05ae		VoC_blt16_rd(I_NLT_CSUBFRAMESAMPLEQUAD_not,REG0,0x90b)
0x062C2B00,	//0x05b0		VoC_jump_lg(I_NLT_CSUBFRAMESAMPLEQUAD)
		//0x05b2		I_NLT_CSUBFRAMESAMPLEQUAD_not
0x090B3C24,	//0x05b2		VoC_bngt16_rd(GET_ISEGEND_END,REG4,0x90b)
0x090B1404,	//0x05b4		VoC_lw16_d(REG4,0x90b)
		//0x05b6		GET_ISEGEND_END
0xFFC0C304,	//0x05b6		VoC_NOP	|	VoC_sub16_rr(REG4,REG4,REG0,DEFAULT)
0x062C3144,	//0x05b8		VoC_bngtz16_r(I_NLT_CSUBFRAMESAMPLEQUAD,REG4)
0x1504C020,	//0x05ba		VoC_sw16_d(REG4,0x25c7)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xF92425C7,	//0x05bc		VoC_shru16_ri(REG4,0x4,DEFAULT)	|	VoC_sw16_d(REG4,0x25c7)(hi)
0x25CA1500,	//0x05be		VoC_sw16_d(REG0,0x25ca)
0xFFC0F051,	//0x05c0		VoC_NAD	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x062A2E21,	//0x05c2		VoC_loop_r(1,REG4)
0x25FE1486,	//0x05c4		VoC_lw32_d(RL6,0x25fe)
0x263A1487,	//0x05c6		VoC_lw32_d(RL7,0x263a)
0x25CC0A80,	//0x05c8		VoC_lw16i(REG0,0x25cc)
0x26280A83,	//0x05ca		VoC_lw16i(REG3,0x2628)
0x12E60A84,	//0x05cc		VoC_lw16i(REG4,0x12e6)
0x00100A85,	//0x05ce		VoC_lw16i(REG5,0x10)
0x7FC31544,	//0x05d0		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x05d2		VoC_sw16_d(REG5,0xffc2)
0x7FC415C6,	//0x05d4		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x05d6		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x05d8		VoC_cfg_lg(0x8,)
0x13140A84,	//0x05da		VoC_lw16i(REG4,0x1314)
0x00080A85,	//0x05dc		VoC_lw16i(REG5,0x8)
0x7FC31544,	//0x05de		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x05e0		VoC_sw16_d(REG5,0xffc2)
0x7FC415C7,	//0x05e2		VoC_sw32_d(RL7,0xffc4)
0xFFC0DE80,	//0x05e4		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x05e6		VoC_cfg_lg(0x8,)
0x00200A84,	//0x05e8		VoC_lw16i(REG4,0x20)
0x0936F005,	//0x05ea		VoC_add32_rd(RL6,RL6,0x11ce)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC9D711CE,	//0x05ec		VoC_add32_rr(RL7,RL7,REG45,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x11ce)(hi)
0x25FE1586,	//0x05ee		VoC_sw32_d(RL6,0x25fe)
0x263A1587,	//0x05f0		VoC_sw32_d(RL7,0x263a)
0x06292C10,	//0x05f2		VoC_loop_i(0x0,0x8)
0xD9CBD9C2,	//0x05f4		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF90C4DEC,	//0x05f6		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x05f8		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD9C2CE75,	//0x05fa		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xFF2659CB,	//0x05fc		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF90C4DEC,	//0x05fe		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0600		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD8B4CE75,	//0x0602		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xE0057F27,	//0x0604		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x060A3244,	//0x0606		VoC_bnltz16_r(GET_SIGN_END_1,REG4)
0x7FFF0AC5,	//0x0608		VoC_lw16i(REG5,0xffff)
		//0x060a		GET_SIGN_END_1
0xE00758B6,	//0x060a		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0x06103246,	//0x060c		VoC_bnltz16_r(GET_SIGN_END_2,REG6)
0x7FFF0AC7,	//0x060e		VoC_lw16i(REG7,0xffff)
		//0x0610		GET_SIGN_END_2
0xFBFB7BFA,	//0x0610		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xC8FF48B6,	//0x0612		VoC_add32_rr(RL7,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(RL6,REG45,RL6,DEFAULT)
0x11D05436,	//0x0614		VoC_bngt32_rd(PCM1_BNGT_0X7FFF,RL6,0x11d0)
0x7FFF0A8C,	//0x0616		VoC_lw16i(RL6_LO,0x7fff)
0xFFC0E5C6,	//0x0618		VoC_NAD	|	VoC_jump(GET_PCM1_END)
		//0x061a		PCM1_BNGT_0X7FFF
0x25FC6426,	//0x061a		VoC_bnlt32_rd(GET_PCM1_END,RL6,0x25fc)
0x00000ACC,	//0x061c		VoC_lw16i(RL6_LO,0x8000)
		//0x061e		GET_PCM1_END
0x11D05437,	//0x061e		VoC_bngt32_rd(PCM2_BNGT_0X7FFF,RL7,0x11d0)
0x7FFF0A8E,	//0x0620		VoC_lw16i(RL7_LO,0x7fff)
0xFFC0E5C6,	//0x0622		VoC_NAD	|	VoC_jump(GET_PCM2_END)
		//0x0624		PCM2_BNGT_0X7FFF
0x25FC6427,	//0x0624		VoC_bnlt32_rd(GET_PCM2_END,RL7,0x25fc)
0x00000ACE,	//0x0626		VoC_lw16i(RL7_LO,0x8000)
		//0x0628		GET_PCM2_END
0xDCAEDCAC,	//0x0628		VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x0629		VoC_endloop0
		//0x062a		VoC_endloop1
0xFFC0FFC0,	//0x062a		VoC_NAD	|	VoC_NOP
		//0x062c		I_NLT_CSUBFRAMESAMPLEQUAD
0x25CA1400,	//0x062c		VoC_lw16_d(REG0,0x25ca)
0x25C81404,	//0x062e		VoC_lw16_d(REG4,0x25c8)
0x09B64820,	//0x0630		VoC_blt16_rd(I_NLT_ICOEFRECURQ2_con1,REG0,0x9b6)
0x06B42B00,	//0x0632		VoC_jump_lg(I_NLT_ICOEFRECURQ2)
		//0x0634		I_NLT_ICOEFRECURQ2_con1
0x09B63C24,	//0x0634		VoC_bngt16_rd(GET_ISEGEND_END_2,REG4,0x9b6)
0x09B61404,	//0x0636		VoC_lw16_d(REG4,0x9b6)
		//0x0638		GET_ISEGEND_END_2
0xFFC0C304,	//0x0638		VoC_NOP	|	VoC_sub16_rr(REG4,REG4,REG0,DEFAULT)
0x06B43144,	//0x063a		VoC_bngtz16_r(I_NLT_ICOEFRECURQ2,REG4)
0x0725C020,	//0x063c		VoC_add16_rd(REG5,REG4,0x25c7)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xF92425C7,	//0x063e		VoC_shru16_ri(REG4,0x4,DEFAULT)	|	VoC_add16_rd(REG5,REG4,0x25c7)(hi)
0x25C71505,	//0x0640		VoC_sw16_d(REG5,0x25c7)
0x25CA1500,	//0x0642		VoC_sw16_d(REG0,0x25ca)
0x11AA0789,	//0x0644		VoC_sub16_rd(REG1,REG1,0x11aa)
0xFFC0F7D1,	//0x0646		VoC_NAD	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0x06B02E21,	//0x0648		VoC_loop_r(1,REG4)
0x25CC0A80,	//0x064a		VoC_lw16i(REG0,0x25cc)
0x26280A83,	//0x064c		VoC_lw16i(REG3,0x2628)
0x25FE1486,	//0x064e		VoC_lw32_d(RL6,0x25fe)
0x263A1487,	//0x0650		VoC_lw32_d(RL7,0x263a)
0x12E60A84,	//0x0652		VoC_lw16i(REG4,0x12e6)
0x00100A85,	//0x0654		VoC_lw16i(REG5,0x10)
0x7FC31544,	//0x0656		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x0658		VoC_sw16_d(REG5,0xffc2)
0x7FC415C6,	//0x065a		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x065c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x065e		VoC_cfg_lg(0x8,)
0x13140A84,	//0x0660		VoC_lw16i(REG4,0x1314)
0x00080A85,	//0x0662		VoC_lw16i(REG5,0x8)
0x7FC31544,	//0x0664		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x0666		VoC_sw16_d(REG5,0xffc2)
0x7FC415C7,	//0x0668		VoC_sw32_d(RL7,0xffc4)
0xFFC0DE80,	//0x066a		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x066c		VoC_cfg_lg(0x8,)
0x00200A84,	//0x066e		VoC_lw16i(REG4,0x20)
0x0936F005,	//0x0670		VoC_add32_rd(RL6,RL6,0x11ce)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC9D711CE,	//0x0672		VoC_add32_rr(RL7,RL7,REG45,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x11ce)(hi)
0x25FE1586,	//0x0674		VoC_sw32_d(RL6,0x25fe)
0x263A1587,	//0x0676		VoC_sw32_d(RL7,0x263a)
0x06AF2C10,	//0x0678		VoC_loop_i(0x0,0x8)
0xD9CBD9C2,	//0x067a		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF90C4DEC,	//0x067c		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x067e		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD9C2CE75,	//0x0680		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xFF2659CB,	//0x0682		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF90C4DEC,	//0x0684		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xF90E4E7C,	//0x0686		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xD8B4CE75,	//0x0688		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xE0057F27,	//0x068a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x06903244,	//0x068c		VoC_bnltz16_r(GET_SIGN_END_3,REG4)
0x7FFF0AC5,	//0x068e		VoC_lw16i(REG5,0xffff)
		//0x0690		GET_SIGN_END_3
0xE00758B6,	//0x0690		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0x06963246,	//0x0692		VoC_bnltz16_r(GET_SIGN_END_4,REG6)
0x7FFF0AC7,	//0x0694		VoC_lw16i(REG7,0xffff)
		//0x0696		GET_SIGN_END_4
0xFBFB7BFA,	//0x0696		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xC8FF48B6,	//0x0698		VoC_add32_rr(RL7,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(RL6,REG45,RL6,DEFAULT)
0x11D05436,	//0x069a		VoC_bngt32_rd(PCM3_BNGT_0X7FFF,RL6,0x11d0)
0x7FFF0A8C,	//0x069c		VoC_lw16i(RL6_LO,0x7fff)
0xFFC0E5C6,	//0x069e		VoC_NAD	|	VoC_jump(GET_PCM3_END)
		//0x06a0		PCM3_BNGT_0X7FFF
0x25FC6426,	//0x06a0		VoC_bnlt32_rd(GET_PCM3_END,RL6,0x25fc)
0x00000ACC,	//0x06a2		VoC_lw16i(RL6_LO,0x8000)
		//0x06a4		GET_PCM3_END
0x11D05437,	//0x06a4		VoC_bngt32_rd(PCM4_BNGT_0X7FFF,RL7,0x11d0)
0x7FFF0A8E,	//0x06a6		VoC_lw16i(RL7_LO,0x7fff)
0xFFC0E5C6,	//0x06a8		VoC_NAD	|	VoC_jump(GET_PCM4_END)
		//0x06aa		PCM4_BNGT_0X7FFF
0x25FC6427,	//0x06aa		VoC_bnlt32_rd(GET_PCM4_END,RL7,0x25fc)
0x00000ACE,	//0x06ac		VoC_lw16i(RL7_LO,0x8000)
		//0x06ae		GET_PCM4_END
0xDCAEDCAC,	//0x06ae		VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x06af		VoC_endloop0
		//0x06b0		VoC_endloop1
0x0709FFC0,	//0x06b0		VoC_add16_rd(REG1,REG1,0x11aa)(lo)	|	VoC_NOP
0xFFC011AA,	//0x06b2		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x11aa)(hi)
		//0x06b4		I_NLT_ICOEFRECURQ2
0x25CA1400,	//0x06b4		VoC_lw16_d(REG0,0x25ca)
0x25C81404,	//0x06b6		VoC_lw16_d(REG4,0x25c8)
0x09B74820,	//0x06b8		VoC_blt16_rd(I_NLT_ICOEFRECURQ3_con,REG0,0x9b7)
0x06F22B00,	//0x06ba		VoC_jump_lg(I_NLT_ICOEFRECURQ3)
		//0x06bc		I_NLT_ICOEFRECURQ3_con
0x09B73C24,	//0x06bc		VoC_bngt16_rd(GET_ISEGEND_END_3,REG4,0x9b7)
0x09B71404,	//0x06be		VoC_lw16_d(REG4,0x9b7)
		//0x06c0		GET_ISEGEND_END_3
0xFFC0C304,	//0x06c0		VoC_NOP	|	VoC_sub16_rr(REG4,REG4,REG0,DEFAULT)
0x06F23144,	//0x06c2		VoC_bngtz16_r(I_NLT_ICOEFRECURQ3,REG4)
0x0725C020,	//0x06c4		VoC_add16_rd(REG5,REG4,0x25c7)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xF92425C7,	//0x06c6		VoC_shru16_ri(REG4,0x4,DEFAULT)	|	VoC_add16_rd(REG5,REG4,0x25c7)(hi)
0x25C71505,	//0x06c8		VoC_sw16_d(REG5,0x25c7)
0x25CA1500,	//0x06ca		VoC_sw16_d(REG0,0x25ca)
0x11AA0789,	//0x06cc		VoC_sub16_rd(REG1,REG1,0x11aa)
0xFFC0F7D1,	//0x06ce		VoC_NAD	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0x06EE2E21,	//0x06d0		VoC_loop_r(1,REG4)
0x06ED2C10,	//0x06d2		VoC_loop_i(0x0,0x8)
0xD9CFD9CE,	//0x06d4		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0xFA2FFA2E,	//0x06d6		VoC_shr32_ri(RL7,0x5,DEFAULT)	|	VoC_shr32_ri(RL6,0x5,DEFAULT)
0x11D05436,	//0x06d8		VoC_bngt32_rd(PCM5_BNGT_0X7FFF,RL6,0x11d0)
0x7FFF0A8C,	//0x06da		VoC_lw16i(RL6_LO,0x7fff)
0xFFC0E5C6,	//0x06dc		VoC_NAD	|	VoC_jump(GET_PCM5_END)
		//0x06de		PCM5_BNGT_0X7FFF
0x25FC6426,	//0x06de		VoC_bnlt32_rd(GET_PCM5_END,RL6,0x25fc)
0x00000ACC,	//0x06e0		VoC_lw16i(RL6_LO,0x8000)
		//0x06e2		GET_PCM5_END
0x11D05437,	//0x06e2		VoC_bngt32_rd(PCM6_BNGT_0X7FFF,RL7,0x11d0)
0x7FFF0A8E,	//0x06e4		VoC_lw16i(RL7_LO,0x7fff)
0xFFC0E5C6,	//0x06e6		VoC_NAD	|	VoC_jump(GET_PCM6_END)
		//0x06e8		PCM6_BNGT_0X7FFF
0x25FC6427,	//0x06e8		VoC_bnlt32_rd(GET_PCM6_END,RL7,0x25fc)
0x00000ACE,	//0x06ea		VoC_lw16i(RL7_LO,0x8000)
		//0x06ec		GET_PCM6_END
0xDCAEDCAC,	//0x06ec		VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x06ed		VoC_endloop0
		//0x06ee		VoC_endloop1
0x0709FFC0,	//0x06ee		VoC_add16_rd(REG1,REG1,0x11aa)(lo)	|	VoC_NOP
0xFFC011AA,	//0x06f0		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x11aa)(hi)
		//0x06f2		I_NLT_ICOEFRECURQ3
0x08F91406,	//0x06f2		VoC_lw16_d(REG6,0x8f9)
0x25FE1486,	//0x06f4		VoC_lw32_d(RL6,0x25fe)
0x11AA4826,	//0x06f6		VoC_blt16_rd(UPDATE_PISIN,REG6,0x11aa)
0x25C66C04,	//0x06f8		VoC_bez16_d(UPDATE_PISIN_END,0x25c6)
		//0x06fa		UPDATE_PISIN
0x09C41586,	//0x06fa		VoC_sw32_d(RL6,0x9c4)
		//0x06fc		UPDATE_PISIN_END
0x09D90A84,	//0x06fc		VoC_lw16i(REG4,0x9d9)
0x09D80A85,	//0x06fe		VoC_lw16i(REG5,0x9d8)
0x09DA0A86,	//0x0700		VoC_lw16i(REG6,0x9da)
0x25CA1407,	//0x0702		VoC_lw16_d(REG7,0x25ca)
0x25C60724,	//0x0704		VoC_add16_rd(REG4,REG4,0x25c6)
0x25C6072D,	//0x0706		VoC_add16_rd(REG5,REG5,0x25c6)
0x25C60736,	//0x0708		VoC_add16_rd(REG6,REG6,0x25c6)
0xDC57DC41,	//0x070a		VoC_sw16_p(REG7,REG5,DEFAULT)	|	VoC_sw16_p(REG1,REG4,DEFAULT)
0x7007DC63,	//0x070c		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw16_p(REG3,REG6,DEFAULT)
0x0A96F401,	//0x070e		VoC_lw16i(STATUS,0x60)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x14060060,	//0x0710		VoC_lw16_d(REG6,0x25c7)(lo)	|	VoC_lw16i(STATUS,0x60)(hi)
0x150725C7,	//0x0712		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_lw16_d(REG6,0x25c7)(hi)
0xE5800C49,	//0x0714		VoC_return	|	VoC_sw16_d(REG7,0xc49)(hi)
		//0x0716		CII_prvDecodeFrameHeader_VOC
0x0A80DFE9,	//0x0716		VoC_lw16i(REG0,0x0)(lo)	|	VoC_push16(RA,DEFAULT)
0x14060000,	//0x0718		VoC_lw16_d(REG6,0x8e2)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0x150008E2,	//0x071a		VoC_sw16_d(REG0,0x25c7)(lo)	|	VoC_lw16_d(REG6,0x8e2)(hi)
0x150025C7,	//0x071c		VoC_sw16_d(REG0,0x25c8)(lo)	|	VoC_sw16_d(REG0,0x25c7)(hi)
0x150025C8,	//0x071e		VoC_sw16_d(REG0,0x25c9)(lo)	|	VoC_sw16_d(REG0,0x25c8)(hi)
0x318625C9,	//0x0720		VoC_bez16_r(Lable_HDR_SIZE,REG6)(lo)	|	VoC_sw16_d(REG0,0x25c9)(hi)
0x40AE0738,	//0x0722		VoC_be16_rd(Lable_HDR_QUANT_JUMP,REG6,0x11a9)(lo)	|	VoC_bez16_r(Lable_HDR_SIZE,REG6)(hi)
0x40AE11A9,	//0x0724		VoC_be16_rd(Lable_HDR_NOISE_JUMP,REG6,0x11aa)(lo)	|	VoC_be16_rd(Lable_HDR_QUANT_JUMP,REG6,0x11a9)(hi)
0x409E11AA,	//0x0726		VoC_be16_rd(Lable_HDR_NOISE_JUMP,REG6,0x11ab)(lo)	|	VoC_be16_rd(Lable_HDR_NOISE_JUMP,REG6,0x11aa)(hi)
0x409E11AB,	//0x0728		VoC_be16_rd(Lable_HDR_MSKUPD_JUMP,REG6,0x11ac)(lo)	|	VoC_be16_rd(Lable_HDR_NOISE_JUMP,REG6,0x11ab)(hi)
0x409E11AC,	//0x072a		VoC_be16_rd(Lable_HDR_BARK_JUMP,REG6,0x11ad)(lo)	|	VoC_be16_rd(Lable_HDR_MSKUPD_JUMP,REG6,0x11ac)(hi)
0x2B0011AD,	//0x072c		VoC_jump_lg(Lable_DecFramHeader_exit)(lo)	|	VoC_be16_rd(Lable_HDR_BARK_JUMP,REG6,0x11ad)(hi)
0xFFC00949,	//0x072e		VoC_NAD	|	VoC_jump_lg(Lable_DecFramHeader_exit)(hi)
		//0x0730		Lable_HDR_QUANT_JUMP
0x07FC2B00,	//0x0730		VoC_jump_lg(Lable_HDR_QUANT)
		//0x0732		Lable_HDR_NOISE_JUMP
0x08442B00,	//0x0732		VoC_jump_lg(Lable_HDR_NOISE)
		//0x0734		Lable_HDR_MSKUPD_JUMP
0x08502B00,	//0x0734		VoC_jump_lg(Lable_HDR_MSKUPD)
		//0x0736		Lable_HDR_BARK_JUMP
0x089A2B00,	//0x0736		VoC_jump_lg(Lable_HDR_BARK)
		//0x0738		Lable_HDR_SIZE
0x08FE6E04,	//0x0738		VoC_bnez16_d(Lable_AllowSubFrame,0x8fe)
0x07922B00,	//0x073a		VoC_jump_lg(Lable_Not_AllowSubFrame)
		//0x073c		Lable_AllowSubFrame
0xF062F201,	//0x073c		VoC_lw16i_short(REG2,0x3,DEFAULT)	|	VoC_lw16i_short(REG1,0x10,DEFAULT)
0x09064039,	//0x073e		VoC_be16_rd(Lable_Out,REG1,0x906)
0xF042F081,	//0x0740		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x09063C19,	//0x0742		VoC_bngt16_rd(Lable_Out,REG1,0x906)
0xF180F022,	//0x0744		VoC_lw16i_short(REG0,0xc,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x0745		Lable_Out
0x25C61502,	//0x0746		VoC_sw16_d(REG2,0x25c6)
0x0DB52B80,	//0x0748		VoC_jal(CII_ibstrmLookForBits_VOC)
0x09493207,	//0x074a		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x09026C2E,	//0x074c		VoC_bez16_d(Lable_Not_HeaderReset,0x902)
0x25C61406,	//0x074e		VoC_lw16_d(REG6,0x25c6)
0x0C8B2B80,	//0x0750		VoC_jal(CII_ibstrmGetBits_VOC)
0x09493207,	//0x0752		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x1400E1C1,	//0x0754		VoC_lw16_d(REG0,0x9a4)(lo)	|	VoC_movreg16(REG1,RL7_LO,DEFAULT)
0xFE0809A4,	//0x0756		VoC_shr16_rr(REG0,REG1,DEFAULT)	|	VoC_lw16_d(REG0,0x9a4)(hi)
0x25C61406,	//0x0758		VoC_lw16_d(REG6,0x25c6)
0x25C71500,	//0x075a		VoC_sw16_d(REG0,0x25c7)
0x0C8B2B80,	//0x075c		VoC_jal(CII_ibstrmGetBits_VOC)
0x09493207,	//0x075e		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0xF003E1C1,	//0x0760		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_movreg16(REG1,RL7_LO,DEFAULT)
0x09A41400,	//0x0762		VoC_lw16_d(REG0,0x9a4)
0x09021503,	//0x0764		VoC_sw16_d(REG3,0x902)
0x1402FE08,	//0x0766		VoC_lw16_d(REG2,0x25c7)(lo)	|	VoC_shr16_rr(REG0,REG1,DEFAULT)
0x150025C7,	//0x0768		VoC_sw16_d(REG0,0x25c8)(lo)	|	VoC_lw16_d(REG2,0x25c7)(hi)
0x4CBA25C8,	//0x076a		VoC_bnlt16_rd(Lable_Not_HeaderReset,REG2,0x907)(lo)	|	VoC_sw16_d(REG0,0x25c8)(hi)
0x4CA80907,	//0x076c		VoC_bnlt16_rd(Lable_Not_HeaderReset,REG0,0x907)(lo)	|	VoC_bnlt16_rd(Lable_Not_HeaderReset,REG2,0x907)(hi)
0x3C9A0907,	//0x076e		VoC_bngt16_rd(Lable_Not_HeaderReset,REG2,0x9a4)(lo)	|	VoC_bnlt16_rd(Lable_Not_HeaderReset,REG0,0x907)(hi)
0x3C8809A4,	//0x0770		VoC_bngt16_rd(Lable_Not_HeaderReset,REG0,0x9a4)(lo)	|	VoC_bngt16_rd(Lable_Not_HeaderReset,REG2,0x9a4)(hi)
0x0AC709A4,	//0x0772		VoC_lw16i(REG7,0x8402)(lo)	|	VoC_bngt16_rd(Lable_Not_HeaderReset,REG0,0x9a4)(hi)
0xFFC00402,	//0x0774		VoC_NOP	|	VoC_lw16i(REG7,0x8402)(hi)
0x0C491507,	//0x0776		VoC_sw16_d(REG7,0xc49)
0x09492B00,	//0x0778		VoC_jump_lg(Lable_DecFramHeader_exit)
		//0x077a		Lable_Not_HeaderReset
0x25C61406,	//0x077a		VoC_lw16_d(REG6,0x25c6)
0x0C8B2B80,	//0x077c		VoC_jal(CII_ibstrmGetBits_VOC)
0x09493207,	//0x077e		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x1400E1C1,	//0x0780		VoC_lw16_d(REG0,0x9a4)(lo)	|	VoC_movreg16(REG1,RL7_LO,DEFAULT)
0xFE0809A4,	//0x0782		VoC_shr16_rr(REG0,REG1,DEFAULT)	|	VoC_lw16_d(REG0,0x9a4)(hi)
0x1500FFC0,	//0x0784		VoC_sw16_d(REG0,0x25c9)(lo)	|	VoC_NOP
0x4C9825C9,	//0x0786		VoC_bnlt16_rd(Lable_Not_AllowSubFrame,REG0,0x907)(lo)	|	VoC_sw16_d(REG0,0x25c9)(hi)
0x3C880907,	//0x0788		VoC_bngt16_rd(Lable_Not_AllowSubFrame,REG0,0x9a4)(lo)	|	VoC_bnlt16_rd(Lable_Not_AllowSubFrame,REG0,0x907)(hi)
0x0AC709A4,	//0x078a		VoC_lw16i(REG7,0x8402)(lo)	|	VoC_bngt16_rd(Lable_Not_AllowSubFrame,REG0,0x9a4)(hi)
0xFFC00402,	//0x078c		VoC_NOP	|	VoC_lw16i(REG7,0x8402)(hi)
0x0C491507,	//0x078e		VoC_sw16_d(REG7,0xc49)
0x09492B00,	//0x0790		VoC_jump_lg(Lable_DecFramHeader_exit)
		//0x0792		Lable_Not_AllowSubFrame
0x25C71402,	//0x0792		VoC_lw16_d(REG2,0x25c7)
0x25C81403,	//0x0794		VoC_lw16_d(REG3,0x25c8)
0x25C91404,	//0x0796		VoC_lw16_d(REG4,0x25c9)
0x094C2B80,	//0x0798		VoC_jal(CII_prvUpdateSubFrameConfig_VOC)
0x0C491507,	//0x079a		VoC_sw16_d(REG7,0xc49)
0x09493207,	//0x079c		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x09A02B80,	//0x079e		VoC_jal(CII_auAdaptToSubFrameConfig_VOC)
0xF042F021,	//0x07a0		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x08F94031,	//0x07a2		VoC_be16_rd(Lable_Channel_1,REG1,0x8f9)
0x08F94192,	//0x07a4		VoC_be16_rd(Lable_Channel_2,REG2,0x8f9)
0x07EA2B00,	//0x07a6		VoC_jump_lg(Lable_Channel_out)
		//0x07a8		Lable_Channel_1
0xFFC0F026,	//0x07a8		VoC_NAD	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0C8B2B80,	//0x07aa		VoC_jal(CII_ibstrmGetBits_VOC)
0x0C491507,	//0x07ac		VoC_sw16_d(REG7,0xc49)
0x3207E1C6,	//0x07ae		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0x0A800949,	//0x07b0		VoC_lw16i(REG0,0x1)(lo)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0x31860001,	//0x07b2		VoC_bez16_r(Label_SkipFlag,REG6)(lo)	|	VoC_lw16i(REG0,0x1)(hi)
0x0A8007B8,	//0x07b4		VoC_lw16i(REG0,0x0)(lo)	|	VoC_bez16_r(Label_SkipFlag,REG6)(hi)
0xFFC00000,	//0x07b6		VoC_NAD	|	VoC_lw16i(REG0,0x0)(hi)
		//0x07b8		Label_SkipFlag
0x09D0150E,	//0x07b8		VoC_sw16_d(RL7_LO,0x9d0)
0x25CA1500,	//0x07ba		VoC_sw16_d(REG0,0x25ca)
0x07EA2B00,	//0x07bc		VoC_jump_lg(Lable_Channel_out)
		//0x07be		Lable_Channel_2
0xFFC0F026,	//0x07be		VoC_NAD	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0C8B2B80,	//0x07c0		VoC_jal(CII_ibstrmGetBits_VOC)
0x0C491507,	//0x07c2		VoC_sw16_d(REG7,0xc49)
0x09493207,	//0x07c4		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x0903150E,	//0x07c6		VoC_sw16_d(RL7_LO,0x903)
0xFFC0F026,	//0x07c8		VoC_NAD	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0C8B2B80,	//0x07ca		VoC_jal(CII_ibstrmGetBits_VOC)
0x0C491507,	//0x07cc		VoC_sw16_d(REG7,0xc49)
0x3207E1C6,	//0x07ce		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0x150E0949,	//0x07d0		VoC_sw16_d(RL7_LO,0x9d0)(lo)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0xF02609D0,	//0x07d2		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_sw16_d(RL7_LO,0x9d0)(hi)
0x0C8B2B80,	//0x07d4		VoC_jal(CII_ibstrmGetBits_VOC)
0x1507E1C0,	//0x07d6		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x32070C49,	//0x07d8		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_sw16_d(REG7,0xc49)(hi)
0x150E0949,	//0x07da		VoC_sw16_d(RL7_LO,0x9f8)(lo)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0x0A8009F8,	//0x07dc		VoC_lw16i(REG0,0x0)(lo)	|	VoC_sw16_d(RL7_LO,0x9f8)(hi)
0x6E070000,	//0x07de		VoC_bnez16_d(Label_fSkipallEZ2,0x9d0)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0x6E0509D0,	//0x07e0		VoC_bnez16_d(Label_fSkipallEZ2,0x9f8)(lo)	|	VoC_bnez16_d(Label_fSkipallEZ2,0x9d0)(hi)
0x0A8009F8,	//0x07e2		VoC_lw16i(REG0,0x1)(lo)	|	VoC_bnez16_d(Label_fSkipallEZ2,0x9f8)(hi)
0xFFC00001,	//0x07e4		VoC_NOP	|	VoC_lw16i(REG0,0x1)(hi)
		//0x07e6		Label_fSkipallEZ2
0x25CA1500,	//0x07e6		VoC_sw16_d(REG0,0x25ca)
0x09EE0A86,	//0x07e8		VoC_lw16i(REG6,0x9ee)
		//0x07ea		Lable_Channel_out
0xFFC0F020,	//0x07ea		VoC_NOP	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x09AB1500,	//0x07ec		VoC_sw16_d(REG0,0x9ab)
0x25CA6C0C,	//0x07ee		VoC_bez16_d(Lable_zero_skipall,0x25ca)
0x09A96E04,	//0x07f0		VoC_bnez16_d(Label_not_LPC,0x9a9)
0x1EE92B80,	//0x07f2		VoC_jal(CII_prvDecodeFrameHeaderLpc_VOC)
		//0x07f4		Label_not_LPC
0xF021F0C6,	//0x07f4		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x6,DEFAULT)
0x08E21506,	//0x07f6		VoC_sw16_d(REG6,0x8e2)
0x09492B00,	//0x07f8		VoC_jump_lg(Lable_DecFramHeader_exit)
		//0x07fa		Lable_zero_skipall
0x08E21500,	//0x07fa		VoC_sw16_d(REG0,0x8e2)
		//0x07fc		Lable_HDR_QUANT
0x00150A80,	//0x07fc		VoC_lw16i(REG0,0x15)
0x0DB52B80,	//0x07fe		VoC_jal(CII_ibstrmLookForBits_VOC)
0x0C491507,	//0x0800		VoC_sw16_d(REG7,0xc49)
0x09493207,	//0x0802		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
		//0x0804		Lable_While_loop
0x00070A86,	//0x0804		VoC_lw16i(REG6,0x7)
0x0C8B2B80,	//0x0806		VoC_jal(CII_ibstrmGetBits_VOC)
0x007F0A82,	//0x0808		VoC_lw16i(REG2,0x7f)
0x1507E1C0,	//0x080a		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x32070C49,	//0x080c		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_sw16_d(REG7,0xc49)(hi)
0x35020949,	//0x080e		VoC_be16_rr(Label_escape_code,REG0,REG2)(lo)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0x07000818,	//0x0810		VoC_add16_rd(REG0,REG0,0x9ab)(lo)	|	VoC_be16_rr(Label_escape_code,REG0,REG2)(hi)
0xFFC009AB,	//0x0812		VoC_NOP	|	VoC_add16_rd(REG0,REG0,0x9ab)(hi)
0x09AB1500,	//0x0814		VoC_sw16_d(REG0,0x9ab)
0xFFC0E5C8,	//0x0816		VoC_NAD	|	VoC_jump(Lable_out_while)
		//0x0818		Label_escape_code
0x09AB0710,	//0x0818		VoC_add16_rd(REG0,REG2,0x9ab)
0x1500FFC0,	//0x081a		VoC_sw16_d(REG0,0x9ab)(lo)	|	VoC_NOP
0xE5E709AB,	//0x081c		VoC_jump(Lable_While_loop)	|	VoC_sw16_d(REG0,0x9ab)(hi)
		//0x081e		Lable_out_while
0x000F0A83,	//0x081e		VoC_lw16i(REG3,0xf)
0x000D0A80,	//0x0820		VoC_lw16i(REG0,0xd)
0x09AB3933,	//0x0822		VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)
0x00200A83,	//0x0824		VoC_lw16i(REG3,0x20)
0x000C0A80,	//0x0826		VoC_lw16i(REG0,0xc)
0x09AB3903,	//0x0828		VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)
0x00280A83,	//0x082a		VoC_lw16i(REG3,0x28)
0x000B0A80,	//0x082c		VoC_lw16i(REG0,0xb)
0x09AB3893,	//0x082e		VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)
0x002D0A83,	//0x0830		VoC_lw16i(REG3,0x2d)
0x000A0A80,	//0x0832		VoC_lw16i(REG0,0xa)
0x09AB3823,	//0x0834		VoC_bgt16_rd(DFHL_GET_IMAXESCLEVEL,REG3,0x9ab)
0x00090A80,	//0x0836		VoC_lw16i(REG0,0x9)
		//0x0838		DFHL_GET_IMAXESCLEVEL
0x09BB1403,	//0x0838		VoC_lw16_d(REG3,0x9bb)
0x08EF1500,	//0x083a		VoC_sw16_d(REG0,0x8ef)
0xF000F042,	//0x083c		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x08E51503,	//0x083e		VoC_sw16_d(REG3,0x8e5)
0x08E41500,	//0x0840		VoC_sw16_d(REG0,0x8e4)
0x08E21502,	//0x0842		VoC_sw16_d(REG2,0x8e2)
		//0x0844		Lable_HDR_NOISE
0x00010A81,	//0x0844		VoC_lw16i(REG1,0x1)
0x4421FFC0,	//0x0846		VoC_bne16_rd(Lable_change_state,REG1,0x8ee)(lo)	|	VoC_NOP
0x2B8008EE,	//0x0848		VoC_jal(CII_prvDecodeFrameHeaderNoiseSub_VOC)(lo)	|	VoC_bne16_rd(Lable_change_state,REG1,0x8ee)(hi)
0xF08414E5,	//0x084a		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_jal(CII_prvDecodeFrameHeaderNoiseSub_VOC)(hi)
		//0x084b		Lable_change_state
0x1504FFC0,	//0x084c		VoC_sw16_d(REG4,0x8e2)(lo)	|	VoC_NOP
0xFFC008E2,	//0x084e		VoC_NAD	|	VoC_sw16_d(REG4,0x8e2)(hi)
		//0x0850		Lable_HDR_MSKUPD
0x00010A80,	//0x0850		VoC_lw16i(REG0,0x1)
0x0DB52B80,	//0x0852		VoC_jal(CII_ibstrmLookForBits_VOC)
0x0C491507,	//0x0854		VoC_sw16_d(REG7,0xc49)
0x09493207,	//0x0856		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0x40000A87,	//0x0858		VoC_lw16i(REG7,0x4000)
0x00000A80,	//0x085a		VoC_lw16i(REG0,0x0)
0x09A3073F,	//0x085c		VoC_add16_rd(REG7,REG7,0x9a3)
0x07B9F031,	//0x085e		VoC_sub16_rd(REG1,REG7,0x9ce)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xF04209CE,	//0x0860		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_sub16_rd(REG1,REG7,0x9ce)(hi)
0x09C61501,	//0x0862		VoC_sw16_d(REG1,0x9c6)
0x09CE6C06,	//0x0864		VoC_bez16_d(Label_judge_Stero,0x9ce)
		//0x0866		LOOP_memset_left
0xFFC0DC90,	//0x0866		VoC_NOP	|	VoC_sw16inc_p(REG0,REG1,DEFAULT)
0x08663439,	//0x0868		VoC_bgt16_rr(LOOP_memset_left,REG7,REG1)
		//0x086a		Label_judge_Stero
0x08F94502,	//0x086a		VoC_bne16_rd(Label_Not_Stero,REG2,0x8f9)
0x09A3073F,	//0x086c		VoC_add16_rd(REG7,REG7,0x9a3)
0x07B9F031,	//0x086e		VoC_sub16_rd(REG1,REG7,0x9f6)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xFFC009F6,	//0x0870		VoC_NOP	|	VoC_sub16_rd(REG1,REG7,0x9f6)(hi)
0x09EE1501,	//0x0872		VoC_sw16_d(REG1,0x9ee)
0x09F66C06,	//0x0874		VoC_bez16_d(Label_Not_Stero,0x9f6)
		//0x0876		LOOP_memset_right
0x3439DC90,	//0x0876		VoC_bgt16_rr(LOOP_memset_right,REG7,REG1)(lo)	|	VoC_sw16inc_p(REG0,REG1,DEFAULT)
0xFFC00876,	//0x0878		VoC_NAD	|	VoC_bgt16_rr(LOOP_memset_right,REG7,REG1)(hi)
		//0x087a		Label_Not_Stero
0x09600A80,	//0x087a		VoC_lw16i(REG0,0x960)
0x09010700,	//0x087c		VoC_add16_rd(REG0,REG0,0x901)
0x1500F021,	//0x087e		VoC_sw16_d(REG0,0x25c6)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xDC0125C6,	//0x0880		VoC_sw16_p(REG1,REG0,DEFAULT)	|	VoC_sw16_d(REG0,0x25c6)(hi)
0x08FE6C0F,	//0x0882		VoC_bez16_d(Label_NotAllow,0x8fe)
0x093E4CA9,	//0x0884		VoC_bnlt16_rd(Label_NotAllow,REG1,0x93e)
0x00010A86,	//0x0886		VoC_lw16i(REG6,0x1)
0x0C8B2B80,	//0x0888		VoC_jal(CII_ibstrmGetBits_VOC)
0x0C491507,	//0x088a		VoC_sw16_d(REG7,0xc49)
0x25C61400,	//0x088c		VoC_lw16_d(REG0,0x25c6)
0x09493207,	//0x088e		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)
0xF000DC0E,	//0x0890		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sw16_p(RL7_LO,REG0,DEFAULT)
		//0x0891		Label_NotAllow
0x1500F0A5,	//0x0892		VoC_sw16_d(REG0,0x8e4)(lo)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0x150008E4,	//0x0894		VoC_sw16_d(REG0,0x8e5)(lo)	|	VoC_sw16_d(REG0,0x8e4)(hi)
0x150508E5,	//0x0896		VoC_sw16_d(REG5,0x8e2)(lo)	|	VoC_sw16_d(REG0,0x8e5)(hi)
0xFFC008E2,	//0x0898		VoC_NAD	|	VoC_sw16_d(REG5,0x8e2)(hi)
		//0x089a		Lable_HDR_BARK
0x09600A80,	//0x089a		VoC_lw16i(REG0,0x960)
0x0700FFC0,	//0x089c		VoC_add16_rd(REG0,REG0,0x901)(lo)	|	VoC_NOP
0xF0210901,	//0x089e		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x901)(hi)
0x25C61500,	//0x08a0		VoC_sw16_d(REG0,0x25c6)
0x09A96E04,	//0x08a2		VoC_bnez16_d(Lable_Begin_channel_Loop,0x9a9)
0x092E2B00,	//0x08a4		VoC_jump_lg(Lable_LPC)
		//0x08a6		Lable_Begin_channel_Loop
0x09D01405,	//0x08a6		VoC_lw16_d(REG5,0x9d0)
0x0C0E0A82,	//0x08a8		VoC_lw16i(REG2,0xc0e)
0x09D60A83,	//0x08aa		VoC_lw16i(REG3,0x9d6)
0x08E46C08,	//0x08ac		VoC_bez16_d(channel_select_over,0x8e4)
0x09F81405,	//0x08ae		VoC_lw16_d(REG5,0x9f8)
0x0C270A82,	//0x08b0		VoC_lw16i(REG2,0xc27)
0x09FE0A83,	//0x08b2		VoC_lw16i(REG3,0x9fe)
		//0x08b4		channel_select_over
0x25C71502,	//0x08b4		VoC_sw16_d(REG2,0x25c7)
0x25C81503,	//0x08b6		VoC_sw16_d(REG3,0x25c8)
0x25C61400,	//0x08b8		VoC_lw16_d(REG0,0x25c6)
0x00010A81,	//0x08ba		VoC_lw16i(REG1,0x1)
0x3185D806,	//0x08bc		VoC_bez16_r(Lable_iPower_Zero,REG5)(lo)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x35B10916,	//0x08be		VoC_bne16_rr(DFHLable_Next,REG6,REG1)(lo)	|	VoC_bez16_r(Lable_iPower_Zero,REG5)(hi)
0xFFC00902,	//0x08c0		VoC_NAD	|	VoC_bne16_rr(DFHLable_Next,REG6,REG1)(hi)
		//0x08c2		Label_mask_start
0x08E51406,	//0x08c2		VoC_lw16_d(REG6,0x8e5)
0x482EFFC0,	//0x08c4		VoC_blt16_rd(Label_mask_end_NOT,REG6,0x9ac)(lo)	|	VoC_NOP
0x2B0009AC,	//0x08c6		VoC_jump_lg(Label_mask_end)(lo)	|	VoC_blt16_rd(Label_mask_end_NOT,REG6,0x9ac)(hi)
0xFFC008F4,	//0x08c8		VoC_NAD	|	VoC_jump_lg(Label_mask_end)(hi)
		//0x08ca		Label_mask_end_NOT
0x60420A81,	//0x08ca		VoC_lw16i(REG1,0x6042)
0x0ACF2B80,	//0x08cc		VoC_jal(CII_huffDecGet_VOC)
0xDFC5E006,	//0x08ce		VoC_push16(REG5,DEFAULT)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0x0C532B80,	//0x08d0		VoC_jal(CII_ibstrmFlushBits_VOC)
0x0A84DF85,	//0x08d2		VoC_lw16i(REG4,0x3c)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x1507003C,	//0x08d4		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_lw16i(REG4,0x3c)(hi)
0x32070C49,	//0x08d6		VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(lo)	|	VoC_sw16_d(REG7,0xc49)(hi)
0xC3650949,	//0x08d8		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_bltz16_r(Lable_DecFramHeader_exit,REG7)(hi)
0x00010A81,	//0x08da		VoC_lw16i(REG1,0x1)
0x00240A84,	//0x08dc		VoC_lw16i(REG4,0x24)
0x08E56C0A,	//0x08de		VoC_bez16_d(Label_save_rgiMaskQ,0x8e5)
0x08E50B09,	//0x08e0		VoC_sub16_dr(REG1,0x8e5,REG1)
0x0709FFC0,	//0x08e2		VoC_add16_rd(REG1,REG1,0x25c7)(lo)	|	VoC_NOP
0xFFC025C7,	//0x08e4		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x25c7)(hi)
0xFFC0D814,	//0x08e6		VoC_NAD	|	VoC_lw16_p(REG4,REG1,DEFAULT)
		//0x08e8		Label_save_rgiMaskQ
0x08E51401,	//0x08e8		VoC_lw16_d(REG1,0x8e5)
0x070BC165,	//0x08ea		VoC_add16_rd(REG3,REG1,0x25c7)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x070925C7,	//0x08ec		VoC_add16_rd(REG1,REG1,0x11a9)(lo)	|	VoC_add16_rd(REG3,REG1,0x25c7)(hi)
0xDC3511A9,	//0x08ee		VoC_sw16_p(REG5,REG3,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x11a9)(hi)
0x08E51501,	//0x08f0		VoC_sw16_d(REG1,0x8e5)
0x08C22B00,	//0x08f2		VoC_jump_lg(Label_mask_start)
		//0x08f4		Label_mask_end
0x00000A80,	//0x08f4		VoC_lw16i(REG0,0x0)
0x09400A84,	//0x08f6		VoC_lw16i(REG4,0x940)
0x09010724,	//0x08f8		VoC_add16_rd(REG4,REG4,0x901)
0x08E51500,	//0x08fa		VoC_sw16_d(REG0,0x8e5)
0x25C61406,	//0x08fc		VoC_lw16_d(REG6,0x25c6)
0xD866D844,	//0x08fe		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x09041504,	//0x0900		VoC_sw16_d(REG4,0x904)
		//0x0902		DFHLable_Next
0x09203186,	//0x0902		VoC_bez16_r(Lable_Begin_channel_end,REG6)
0x25C72006,	//0x0904		VoC_lw16d_set_inc(REG2,0x25c7,0x1)
0xD823F020,	//0x0906		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x09AC0B07,	//0x0908		VoC_sub16_dr(REG7,0x9ac,REG0)
0xE7C5C082,	//0x090a		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x348BD8A1,	//0x090c		VoC_bngt16_rr(Lable_Max_Not_Change,REG1,REG3)(lo)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0xE0230910,	//0x090e		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_bngt16_rr(Lable_Max_Not_Change,REG1,REG3)(hi)
		//0x0910		Lable_Max_Not_Change
		//0x0910		VoC_endloop0
0x1401FFC0,	//0x0910		VoC_lw16_d(REG1,0x25c8)(lo)	|	VoC_NOP
0xFFC025C8,	//0x0912		VoC_NOP	|	VoC_lw16_d(REG1,0x25c8)(hi)
0xE5CBDC13,	//0x0914		VoC_jump(Lable_Begin_channel_end)	|	VoC_sw16_p(REG3,REG1,DEFAULT)
		//0x0916		Lable_iPower_Zero
0x092035B1,	//0x0916		VoC_bne16_rr(Lable_Begin_channel_end,REG6,REG1)
0x25C72006,	//0x0918		VoC_lw16d_set_inc(REG2,0x25c7,0x1)
0x09AC1407,	//0x091a		VoC_lw16_d(REG7,0x9ac)
0xE7C1F000,	//0x091c		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x091e		VoC_endloop0
0xFFC0DCA0,	//0x091e		VoC_NAD	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
		//0x0920		Lable_Begin_channel_end
0x08E41401,	//0x0920		VoC_lw16_d(REG1,0x8e4)
0x0709FFC0,	//0x0922		VoC_add16_rd(REG1,REG1,0x11a9)(lo)	|	VoC_NOP
0xFFC011A9,	//0x0924		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x11a9)(hi)
0x08E41501,	//0x0926		VoC_sw16_d(REG1,0x8e4)
0x08F94821,	//0x0928		VoC_blt16_rd(Lable_DONE_NOT,REG1,0x8f9)
0xFFC0E5DB,	//0x092a		VoC_NAD	|	VoC_jump(Lable_DONE)
		//0x092c		Lable_DONE_NOT
0x08A62B00,	//0x092c		VoC_jump_lg(Lable_Begin_channel_Loop)
		//0x092e		Lable_LPC
0x1EE92B80,	//0x092e		VoC_jal(CII_prvDecodeFrameHeaderLpc_VOC)
0x0B000AC3,	//0x0930		VoC_lw16i(REG3,0x8b00)
0x04C00A86,	//0x0932		VoC_lw16i(REG6,0x4c0)
0x0C4E1486,	//0x0934		VoC_lw32_d(RL6,0xc4e)
0x7FC31543,	//0x0936		VoC_sw16_d(REG3,0xffc3)
0x7FC21546,	//0x0938		VoC_sw16_d(REG6,0xffc2)
0x7FC415C6,	//0x093a		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x093c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x093e		VoC_cfg_lg(0x8,)
0x08EE6C05,	//0x0940		VoC_bez16_d(Lable_DONE,0x8ee)
0x2B80FFC0,	//0x0942		VoC_jal(CII_prvGetBandWeightLowRate_VOC)(lo)	|	VoC_NOP
0xF0C11E1E,	//0x0944		VoC_lw16i_short(REG1,0x6,DEFAULT)	|	VoC_jal(CII_prvGetBandWeightLowRate_VOC)(hi)
		//0x0945		Lable_DONE
0x1501FFC0,	//0x0946		VoC_sw16_d(REG1,0x8e2)(lo)	|	VoC_NOP
0xDFA908E2,	//0x0948		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG1,0x8e2)(hi)
		//0x0949		Lable_DecFramHeader_exit
0xE580FFC0,	//0x094a		VoC_return	|	VoC_NOP
		//0x094c		CII_prvUpdateSubFrameConfig_VOC
0xE0105FE9,	//0x094c		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x31C4F001,	//0x094e		VoC_bnez16_r(Label_Prev,REG4)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x15000956,	//0x0950		VoC_sw16_d(REG0,0x8e7)(lo)	|	VoC_bnez16_r(Label_Prev,REG4)(hi)
0x2B0008E7,	//0x0952		VoC_jump_lg(USFLabel_Exit)(lo)	|	VoC_sw16_d(REG0,0x8e7)(hi)
0xFFC0099C,	//0x0954		VoC_NAD	|	VoC_jump_lg(USFLabel_Exit)(hi)
		//0x0956		Label_Prev
0x095C3182,	//0x0956		VoC_bez16_r(Label_Curr,REG2)
0x090C1500,	//0x0958		VoC_sw16_d(REG0,0x90c)
0x090E1502,	//0x095a		VoC_sw16_d(REG2,0x90e)
		//0x095c		Label_Curr
0x09643183,	//0x095c		VoC_bez16_r(Label_Main,REG3)
0x093E1500,	//0x095e		VoC_sw16_d(REG0,0x93e)
0x09401503,	//0x0960		VoC_sw16_d(REG3,0x940)
0x09501501,	//0x0962		VoC_sw16_d(REG1,0x950)
		//0x0964		Label_Main
0x09500A82,	//0x0964		VoC_lw16i(REG2,0x950)
0x09400A83,	//0x0966		VoC_lw16i(REG3,0x940)
0x09010712,	//0x0968		VoC_add16_rd(REG2,REG2,0x901)
0x0901071B,	//0x096a		VoC_add16_rd(REG3,REG3,0x901)
0xD833D822,	//0x096c		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xC09DFFC0,	//0x096e		VoC_add16_rr(REG5,REG2,REG3,DEFAULT)	|	VoC_NOP
0x48ADFFC0,	//0x0970		VoC_blt16_rd(USFCLabel_Else,REG5,0x9a4)(lo)	|	VoC_NOP
0x150009A4,	//0x0972		VoC_sw16_d(REG0,0x8e7)(lo)	|	VoC_blt16_rd(USFCLabel_Else,REG5,0x9a4)(hi)
0x150108E7,	//0x0974		VoC_sw16_d(REG1,0x970)(lo)	|	VoC_sw16_d(REG0,0x8e7)(hi)
0x15040970,	//0x0976		VoC_sw16_d(REG4,0x972)(lo)	|	VoC_sw16_d(REG1,0x970)(hi)
0x15010972,	//0x0978		VoC_sw16_d(REG1,0x982)(lo)	|	VoC_sw16_d(REG4,0x972)(hi)
0x15000982,	//0x097a		VoC_sw16_d(REG0,0x970)(lo)	|	VoC_sw16_d(REG1,0x982)(hi)
0xE5DF0970,	//0x097c		VoC_jump(USFLabel_Exit)	|	VoC_sw16_d(REG0,0x970)(hi)
		//0x097e		USFCLabel_Else
0x09011403,	//0x097e		VoC_lw16_d(REG3,0x901)
0x09400A82,	//0x0980		VoC_lw16i(REG2,0x940)
0xC085C09A,	//0x0982		VoC_add16_rr(REG5,REG2,REG0,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0xDC54FFC0,	//0x0984		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_NOP
0x09500A86,	//0x0986		VoC_lw16i(REG6,0x950)
0xFFC0C19C,	//0x0988		VoC_NOP	|	VoC_add16_rr(REG4,REG6,REG3,DEFAULT)
0xD821D847,	//0x098a		VoC_lw16_p(REG1,REG2,DEFAULT)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
0xC07FFFC0,	//0x098c		VoC_add16_rr(REG7,REG1,REG7,DEFAULT)	|	VoC_NOP
0xFFC0C104,	//0x098e		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG0,DEFAULT)
0x81EADC47,	//0x0990		VoC_add16_rp(REG2,REG7,REG5,DEFAULT)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
0x093E0701,	//0x0992		VoC_add16_rd(REG1,REG0,0x93e)
0x1501FFC0,	//0x0994		VoC_sw16_d(REG1,0x93e)(lo)	|	VoC_NOP
0x3C2A093E,	//0x0996		VoC_bngt16_rd(USFLabel_Exit,REG2,0x9a4)(lo)	|	VoC_sw16_d(REG1,0x93e)(hi)
0x0AC709A4,	//0x0998		VoC_lw16i(REG7,0x8002)(lo)	|	VoC_bngt16_rd(USFLabel_Exit,REG2,0x9a4)(hi)
0xE5C20002,	//0x099a		VoC_jump(Lable_allExit)	|	VoC_lw16i(REG7,0x8002)(hi)
		//0x099c		USFLabel_Exit
0xDFA9F007,	//0x099c		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x099d		Lable_allExit
0xE580FFC0,	//0x099e		VoC_return	|	VoC_NOP
		//0x09a0		CII_auAdaptToSubFrameConfig_VOC
0x09400A81,	//0x09a0		VoC_lw16i(REG1,0x940)
0x093E1402,	//0x09a2		VoC_lw16_d(REG2,0x93e)
0x0901070E,	//0x09a4		VoC_add16_rd(REG6,REG1,0x901)
0x09A41403,	//0x09a6		VoC_lw16_d(REG3,0x9a4)
0xF82BD860,	//0x09a8		VoC_shr16_ri(REG3,0x5,DEFAULT)	|	VoC_lw16_p(REG0,REG6,DEFAULT)
0x09B31500,	//0x09aa		VoC_sw16_d(REG0,0x9b3)
0xFFC0F0A1,	//0x09ac		VoC_NAD	|	VoC_lw16i_short(REG1,0x5,DEFAULT)
		//0x09ae		LOG_FRAMESAMPLEHALF_BEGIN
0x11A93C33,	//0x09ae		VoC_bngt16_rd(LOG_FRAMESAMPLEHALF_END,REG3,0x11a9)
0x0709F80B,	//0x09b0		VoC_add16_rd(REG1,REG1,0x11a9)(lo)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0xE5FB11A9,	//0x09b2		VoC_jump(LOG_FRAMESAMPLEHALF_BEGIN)	|	VoC_add16_rd(REG1,REG1,0x11a9)(hi)
		//0x09b4		LOG_FRAMESAMPLEHALF_END
0x11A93822,	//0x09b4		VoC_bgt16_rd(MCSUBFRAME_NGT_1_not,REG2,0x11a9)
0x09D82B00,	//0x09b6		VoC_jump_lg(MCSUBFRAME_NGT_1)
		//0x09b8		MCSUBFRAME_NGT_1_not
0xF0A2F828,	//0x09b8		VoC_lw16i_short(REG2,0x5,DEFAULT)	|	VoC_shr16_ri(REG0,0x5,DEFAULT)
		//0x09ba		LOG_ISIZECURR_BEGIN
0x11A93C30,	//0x09ba		VoC_bngt16_rd(LOG_ISIZECURR_END,REG0,0x11a9)
0x0712F808,	//0x09bc		VoC_add16_rd(REG2,REG2,0x11a9)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xE5FB11A9,	//0x09be		VoC_jump(LOG_ISIZECURR_BEGIN)	|	VoC_add16_rd(REG2,REG2,0x11a9)(hi)
		//0x09c0		LOG_ISIZECURR_END
0xFFC0C252,	//0x09c0		VoC_NOP	|	VoC_sub16_rr(REG2,REG1,REG2,DEFAULT)
0x09081502,	//0x09c2		VoC_sw16_d(REG2,0x908)
0x09054832,	//0x09c4		VoC_blt16_rd(MIINCR_LT_POSSIBELWINSIZE,REG2,0x905)
0x04020AC7,	//0x09c6		VoC_lw16i(REG7,0x8402)
0x0ACC2B00,	//0x09c8		VoC_jump_lg(ATSFCFUNCTION_END)
		//0x09ca		MIINCR_LT_POSSIBELWINSIZE
0x11B80813,	//0x09ca		VoC_mult16_rd(REG3,REG2,0x11b8)
0x0AA60A80,	//0x09cc		VoC_lw16i(REG0,0xaa6)
0x0A240A84,	//0x09ce		VoC_lw16i(REG4,0xa24)
0xC11CC010,	//0x09d0		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x1504D800,	//0x09d2		VoC_sw16_d(REG4,0x9ad)(lo)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x150009AD,	//0x09d4		VoC_sw16_d(REG0,0x9ac)(lo)	|	VoC_sw16_d(REG4,0x9ad)(hi)
0xE5CC09AC,	//0x09d6		VoC_jump(MCSUBFRAME_END)	|	VoC_sw16_d(REG0,0x9ac)(hi)
		//0x09d8		MCSUBFRAME_NGT_1
0x1402F000,	//0x09d8		VoC_lw16_d(REG2,0xaa6)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x0A830AA6,	//0x09da		VoC_lw16i(REG3,0xa24)(lo)	|	VoC_lw16_d(REG2,0xaa6)(hi)
0x15000A24,	//0x09dc		VoC_sw16_d(REG0,0x908)(lo)	|	VoC_lw16i(REG3,0xa24)(hi)
0x15020908,	//0x09de		VoC_sw16_d(REG2,0x9ac)(lo)	|	VoC_sw16_d(REG0,0x908)(hi)
0x150309AC,	//0x09e0		VoC_sw16_d(REG3,0x9ad)(lo)	|	VoC_sw16_d(REG2,0x9ac)(hi)
0xD86009AD,	//0x09e2		VoC_lw16_p(REG0,REG6,DEFAULT)	|	VoC_sw16_d(REG3,0x9ad)(hi)
		//0x09e3		MCSUBFRAME_END
0x1500D864,	//0x09e4		VoC_sw16_d(REG0,0x90a)(lo)	|	VoC_lw16_p(REG4,REG6,DEFAULT)
0x1500090A,	//0x09e6		VoC_sw16_d(REG0,0x8fc)(lo)	|	VoC_sw16_d(REG0,0x90a)(hi)
0x0A2108FC,	//0x09e8		VoC_multf32_rd(REG23,REG4,0x9a7)(lo)	|	VoC_sw16_d(REG0,0x8fc)(hi)
0x0A2209A7,	//0x09ea		VoC_multf32_rd(REG45,REG4,0x9a8)(lo)	|	VoC_multf32_rd(REG23,REG4,0x9a7)(hi)
0xE00709A8,	//0x09ec		VoC_movreg16(REG7,REG0,DEFAULT)	|	VoC_multf32_rd(REG45,REG4,0x9a8)(hi)
0xFE8AFE89,	//0x09ee		VoC_shr32_rr(REG45,REG1,DEFAULT)	|	VoC_shr32_rr(REG23,REG1,DEFAULT)
0xF80FF8F8,	//0x09f0		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x1502C315,	//0x09f2		VoC_sw16_d(REG2,0x9a5)(lo)	|	VoC_sub16_rr(REG5,REG4,REG2,DEFAULT)
0x150409A5,	//0x09f4		VoC_sw16_d(REG4,0x9a6)(lo)	|	VoC_sw16_d(REG2,0x9a5)(hi)
0x150009A6,	//0x09f6		VoC_sw16_d(REG0,0x909)(lo)	|	VoC_sw16_d(REG4,0x9a6)(hi)
0xF0240909,	//0x09f8		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sw16_d(REG0,0x909)(hi)
0x090B1507,	//0x09fa		VoC_sw16_d(REG7,0x90b)
0x09CE1505,	//0x09fc		VoC_sw16_d(REG5,0x9ce)
0x09F61505,	//0x09fe		VoC_sw16_d(REG5,0x9f6)
0x00000A87,	//0x0a00		VoC_lw16i(REG7,0x0)
0x08EE4594,	//0x0a02		VoC_bne16_rd(NOISESUB_NE_1,REG4,0x8ee)
0x09091400,	//0x0a04		VoC_lw16_d(REG0,0x909)
0x00000A8F,	//0x0a06		VoC_lw16i(RL7_HI,0x0)
0x09BA0A01,	//0x0a08		VoC_multf32_rd(REG23,REG0,0x9ba)
0x40000A8E,	//0x0a0a		VoC_lw16i(RL7_LO,0x4000)
0x0AAB0A81,	//0x0a0c		VoC_lw16i(REG1,0xaab)
0x0709C879,	//0x0a0e		VoC_add16_rd(REG1,REG1,0x908)(lo)	|	VoC_add32_rr(REG23,REG23,RL7,DEFAULT)
0xFA790908,	//0x0a10		VoC_shr32_ri(REG23,0xf,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x908)(hi)
0x3C2AD811,	//0x0a12		VoC_bngt16_rd(FIRSTNOISEINDEX_NGT_SUBBAND,REG2,0x8fc)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x140208FC,	//0x0a14		VoC_lw16_d(REG2,0x8fc)(lo)	|	VoC_bngt16_rd(FIRSTNOISEINDEX_NGT_SUBBAND,REG2,0x8fc)(hi)
0xFFC008FC,	//0x0a16		VoC_NAD	|	VoC_lw16_d(REG2,0x8fc)(hi)
		//0x0a18		FIRSTNOISEINDEX_NGT_SUBBAND
0x09BB1501,	//0x0a18		VoC_sw16_d(REG1,0x9bb)
0x09BC1502,	//0x0a1a		VoC_sw16_d(REG2,0x9bc)
		//0x0a1c		NOISESUB_NE_1
0x090E0A81,	//0x0a1c		VoC_lw16i(REG1,0x90e)
0x09011402,	//0x0a1e		VoC_lw16_d(REG2,0x901)
0x090C0709,	//0x0a20		VoC_add16_rd(REG1,REG1,0x90c)
0x11A907B6,	//0x0a22		VoC_sub16_rd(REG6,REG6,0x11a9)
0x11A90789,	//0x0a24		VoC_sub16_rd(REG1,REG1,0x11a9)
0x3102D863,	//0x0a26		VoC_bgtz16_r(GET_SIZEPREV_END,REG2)(lo)	|	VoC_lw16_p(REG3,REG6,DEFAULT)
0xD8130A2A,	//0x0a28		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_bgtz16_r(GET_SIZEPREV_END,REG2)(hi)
		//0x0a2a		GET_SIZEPREV_END
0x11A90712,	//0x0a2a		VoC_add16_rd(REG2,REG2,0x11a9)
0x09B21503,	//0x0a2c		VoC_sw16_d(REG3,0x9b2)
0x11AA0736,	//0x0a2e		VoC_add16_rd(REG6,REG6,0x11aa)
0x09721403,	//0x0a30		VoC_lw16_d(REG3,0x972)
0x093E4C22,	//0x0a32		VoC_bnlt16_rd(GET_SIZENEXT_END,REG2,0x93e)
0xFFC0D863,	//0x0a34		VoC_NAD	|	VoC_lw16_p(REG3,REG6,DEFAULT)
		//0x0a36		GET_SIZENEXT_END
0x09B31400,	//0x0a36		VoC_lw16_d(REG0,0x9b3)
0x09B41503,	//0x0a38		VoC_sw16_d(REG3,0x9b4)
0x09B23880,	//0x0a3a		VoC_bgt16_rd(SIZEPREV_LT_SIZECURR,REG0,0x9b2)
0x1500F001,	//0x0a3c		VoC_sw16_d(REG0,0x9b6)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x150109B6,	//0x0a3e		VoC_sw16_d(REG1,0x9b5)(lo)	|	VoC_sw16_d(REG0,0x9b6)(hi)
0xE5CB09B5,	//0x0a40		VoC_jump(UPDATA_COEFRECURQ12_END)	|	VoC_sw16_d(REG1,0x9b5)(hi)
		//0x0a42		SIZEPREV_LT_SIZECURR
0x09B20781,	//0x0a42		VoC_sub16_rd(REG1,REG0,0x9b2)
0x09B20702,	//0x0a44		VoC_add16_rd(REG2,REG0,0x9b2)
0xF80AF809,	//0x0a46		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0x09B51501,	//0x0a48		VoC_sw16_d(REG1,0x9b5)
0x09B61502,	//0x0a4a		VoC_sw16_d(REG2,0x9b6)
		//0x0a4c		UPDATA_COEFRECURQ12_END
0x09B438A0,	//0x0a4c		VoC_bgt16_rd(SIZENEXT_LT_SIZECURR,REG0,0x9b4)
0x090A1401,	//0x0a4e		VoC_lw16_d(REG1,0x90a)
0x09091402,	//0x0a50		VoC_lw16_d(REG2,0x909)
0x09B71501,	//0x0a52		VoC_sw16_d(REG1,0x9b7)
0x09B81502,	//0x0a54		VoC_sw16_d(REG2,0x9b8)
0xFFC0E5D0,	//0x0a56		VoC_NAD	|	VoC_jump(UPDATA_COEFRECURQ34_END)
		//0x0a58		SIZENEXT_LT_SIZECURR
0x09B40781,	//0x0a58		VoC_sub16_rd(REG1,REG0,0x9b4)
0x09B40702,	//0x0a5a		VoC_add16_rd(REG2,REG0,0x9b4)
0xF80AF809,	//0x0a5c		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0x090A0709,	//0x0a5e		VoC_add16_rd(REG1,REG1,0x90a)
0x090A0712,	//0x0a60		VoC_add16_rd(REG2,REG2,0x90a)
0x09B71501,	//0x0a62		VoC_sw16_d(REG1,0x9b7)
0x09B81502,	//0x0a64		VoC_sw16_d(REG2,0x9b8)
		//0x0a66		UPDATA_COEFRECURQ34_END
0x3C28E001,	//0x0a66		VoC_bngt16_rd(GET_RECONSIZE_END,REG0,0x9b2)(lo)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x140109B2,	//0x0a68		VoC_lw16_d(REG1,0x9b2)(lo)	|	VoC_bngt16_rd(GET_RECONSIZE_END,REG0,0x9b2)(hi)
0xFFC009B2,	//0x0a6a		VoC_NAD	|	VoC_lw16_d(REG1,0x9b2)(hi)
		//0x0a6c		GET_RECONSIZE_END
0x0A1A1486,	//0x0a6c		VoC_lw32_d(RL6,0xa1a)
0x4429FF47,	//0x0a6e		VoC_bne16_rd(SET_PISINFORRECON_con,REG1,0x11c3)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x2B0011C3,	//0x0a70		VoC_jump_lg(SET_PISINFORRECON_END)(lo)	|	VoC_bne16_rd(SET_PISINFORRECON_con,REG1,0x11c3)(hi)
0xFFC00A96,	//0x0a72		VoC_NAD	|	VoC_jump_lg(SET_PISINFORRECON_END)(hi)
		//0x0a74		SET_PISINFORRECON_con
0x11C24431,	//0x0a74		VoC_bne16_rd(RECONSIZE_E_512,REG1,0x11c2)
0x20000A8E,	//0x0a76		VoC_lw16i(RL7_LO,0x2000)
0xFFC0E5DE,	//0x0a78		VoC_NAD	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0a7a		RECONSIZE_E_512
0x11C14431,	//0x0a7a		VoC_bne16_rd(RECONSIZE_E_256,REG1,0x11c1)
0x30000A8E,	//0x0a7c		VoC_lw16i(RL7_LO,0x3000)
0xFFC0E5D8,	//0x0a7e		VoC_NAD	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0a80		RECONSIZE_E_256
0x11C04431,	//0x0a80		VoC_bne16_rd(RECONSIZE_E_128,REG1,0x11c0)
0x38000A8E,	//0x0a82		VoC_lw16i(RL7_LO,0x3800)
0xFFC0E5D2,	//0x0a84		VoC_NAD	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0a86		RECONSIZE_E_128
0x11BE4431,	//0x0a86		VoC_bne16_rd(RECONSIZE_E_64,REG1,0x11be)
0x3C000A8E,	//0x0a88		VoC_lw16i(RL7_LO,0x3c00)
0xFFC0E5CC,	//0x0a8a		VoC_NAD	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0a8c		RECONSIZE_E_64
0x11BB4431,	//0x0a8c		VoC_bne16_rd(RECONSIZE_DEFAULT,REG1,0x11bb)
0x3E000A8E,	//0x0a8e		VoC_lw16i(RL7_LO,0x3e00)
0xFFC0E5C6,	//0x0a90		VoC_NAD	|	VoC_jump(SET_PISINFORRECON_END)
		//0x0a92		RECONSIZE_DEFAULT
0x04020AC7,	//0x0a92		VoC_lw16i(REG7,0x8402)
0x0ACC2B00,	//0x0a94		VoC_jump_lg(ATSFCFUNCTION_END)
		//0x0a96		SET_PISINFORRECON_END
0xE001C9BF,	//0x0a96		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_add32_rr(RL7,RL6,RL7,DEFAULT)
0x09C41587,	//0x0a98		VoC_sw32_d(RL7,0x9c4)
0x09B43C20,	//0x0a9a		VoC_bngt16_rd(GET_SAVESIZE_END,REG0,0x9b4)
0x09B41401,	//0x0a9c		VoC_lw16_d(REG1,0x9b4)
		//0x0a9e		GET_SAVESIZE_END
0x4439FF47,	//0x0a9e		VoC_bne16_rd(SAVESIZE_E_1024,REG1,0x11c3)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x0A8E11C3,	//0x0aa0		VoC_lw16i(RL7_LO,0x2000)(lo)	|	VoC_bne16_rd(SAVESIZE_E_1024,REG1,0x11c3)(hi)
0x2B002000,	//0x0aa2		VoC_jump_lg(SET_PISINFORSAVEHISTORY_END)(lo)	|	VoC_lw16i(RL7_LO,0x2000)(hi)
0xFFC00AC7,	//0x0aa4		VoC_NAD	|	VoC_jump_lg(SET_PISINFORSAVEHISTORY_END)(hi)
		//0x0aa6		SAVESIZE_E_1024
0x11C24431,	//0x0aa6		VoC_bne16_rd(SAVESIZE_E_512,REG1,0x11c2)
0x30000A8E,	//0x0aa8		VoC_lw16i(RL7_LO,0x3000)
0xFFC0E5DD,	//0x0aaa		VoC_NAD	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0aac		SAVESIZE_E_512
0x11C14431,	//0x0aac		VoC_bne16_rd(SAVESIZE_E_256,REG1,0x11c1)
0x38000A8E,	//0x0aae		VoC_lw16i(RL7_LO,0x3800)
0xFFC0E5D7,	//0x0ab0		VoC_NAD	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0ab2		SAVESIZE_E_256
0x11C04431,	//0x0ab2		VoC_bne16_rd(SAVESIZE_E_128,REG1,0x11c0)
0x3C000A8E,	//0x0ab4		VoC_lw16i(RL7_LO,0x3c00)
0xFFC0E5D1,	//0x0ab6		VoC_NAD	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0ab8		SAVESIZE_E_128
0x11BE4431,	//0x0ab8		VoC_bne16_rd(SAVESIZE_E_64,REG1,0x11be)
0x3E000A8E,	//0x0aba		VoC_lw16i(RL7_LO,0x3e00)
0xFFC0E5CB,	//0x0abc		VoC_NAD	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0abe		SAVESIZE_E_64
0x11BB4431,	//0x0abe		VoC_bne16_rd(SAVESIZE_DEFAULT,REG1,0x11bb)
0x3F000A8E,	//0x0ac0		VoC_lw16i(RL7_LO,0x3f00)
0xFFC0E5C5,	//0x0ac2		VoC_NAD	|	VoC_jump(SET_PISINFORSAVEHISTORY_END)
		//0x0ac4		SAVESIZE_DEFAULT
0x04020AC7,	//0x0ac4		VoC_lw16i(REG7,0x8402)
0xC9BFE5C6,	//0x0ac6		VoC_add32_rr(RL7,RL6,RL7,DEFAULT)	|	VoC_jump(ATSFCFUNCTION_END)
		//0x0ac7		SET_PISINFORSAVEHISTORY_END
0x1587FFC0,	//0x0ac8		VoC_sw32_d(RL7,0xa18)(lo)	|	VoC_NOP
0xFFC00A18,	//0x0aca		VoC_NAD	|	VoC_sw32_d(RL7,0xa18)(hi)
		//0x0acc		ATSFCFUNCTION_END
0x0C491507,	//0x0acc		VoC_sw16_d(REG7,0xc49)
0xDFE9E580,	//0x0ace		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0acf		CII_huffDecGet_VOC
0xFFC0DFC1,	//0x0ad0		VoC_NAD	|	VoC_push16(REG1,DEFAULT)
0x0DEF2B80,	//0x0ad2		VoC_jal(CII_ibstrmPeekBits_VOC)
0x0C491507,	//0x0ad4		VoC_sw16_d(REG7,0xc49)
0xFF3EDF81,	//0x0ad6		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0xE1A0E910,	//0x0ad8		VoC_movreg16(REG0,RL6_HI,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x1640FFC0,	//0x0ada		VoC_and16_ri(REG0,0xc000)(lo)	|	VoC_NOP
0xFFC04000,	//0x0adc		VoC_NOP	|	VoC_and16_ri(REG0,0xc000)(hi)
0xC041F970,	//0x0ade		VoC_add16_rr(REG1,REG1,REG0,DEFAULT)	|	VoC_shru16_ri(REG0,0xe,DEFAULT)
0x00000AC0,	//0x0ae0		VoC_lw16i(REG0,0x8000)
0xE410D812,	//0x0ae2		VoC_and16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16_p(REG2,REG1,DEFAULT)
0x31C0FFC0,	//0x0ae4		VoC_bnez16_r(HUF_DECODE_COMPLETE,REG0)(lo)	|	VoC_NOP
0xC0510AFA,	//0x0ae6		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_bnez16_r(HUF_DECODE_COMPLETE,REG0)(hi)
		//0x0ae8		VoC_endloop0
0xE8D0FDF6,	//0x0ae8		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_shru32_ri(RL6,0xfffffffe,DEFAULT)
0xFFC0E1A0,	//0x0aea		VoC_NOP	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x00001640,	//0x0aec		VoC_and16_ri(REG0,0x8000)
0xF978FFC0,	//0x0aee		VoC_shru16_ri(REG0,0xf,DEFAULT)	|	VoC_NOP
0x0AC0C041,	//0x0af0		VoC_lw16i(REG0,0x8000)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xD8120000,	//0x0af2		VoC_lw16_p(REG2,REG1,DEFAULT)	|	VoC_lw16i(REG0,0x8000)(hi)
0xFFC0E410,	//0x0af4		VoC_NOP	|	VoC_and16_rr(REG0,REG2,DEFAULT)
0x0AFA31C0,	//0x0af6		VoC_bnez16_r(HUF_DECODE_COMPLETE,REG0)
0xFDFEC051,	//0x0af8		VoC_shru32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
		//0x0af9		VoC_endloop0
		//0x0afa		HUF_DECODE_COMPLETE
0xF950E040,	//0x0afa		VoC_shru16_ri(REG0,0xa,DEFAULT)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0x03FF1602,	//0x0afc		VoC_and16_ri(REG2,0x3ff)
0x001F1600,	//0x0afe		VoC_and16_ri(REG0,0x1f)
0x03FC0A83,	//0x0b00		VoC_lw16i(REG3,0x3fc)
0x341AE045,	//0x0b02		VoC_bgt16_rr(PURESULT_LESS_0X3FC,REG3,REG2)(lo)	|	VoC_movreg16(REG5,REG2,DEFAULT)
0x16020B0E,	//0x0b04		VoC_and16_ri(REG2,0x3)(lo)	|	VoC_bgt16_rr(PURESULT_LESS_0X3FC,REG3,REG2)(hi)
0xC0540003,	//0x0b06		VoC_add16_rr(REG4,REG1,REG2,DEFAULT)	|	VoC_and16_ri(REG2,0x3)(hi)
0x00010A83,	//0x0b08		VoC_lw16i(REG3,0x1)
0xFFC0C11C,	//0x0b0a		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0xFFC0D845,	//0x0b0c		VoC_NAD	|	VoC_lw16_p(REG5,REG4,DEFAULT)
		//0x0b0e		PURESULT_LESS_0X3FC
0x11A80B04,	//0x0b0e		VoC_sub16_dr(REG4,0x11a8,REG0)
0xFEE7DFA9,	//0x0b10		VoC_shru32_rr(RL7,REG4,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0b12		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0b13		CII_prvGetNextRunDEC_VOC
0x08E36C04,	//0x0b14		VoC_bez16_d(Lable_ESCAPE_NOT,0x8e3)
0x0B942B00,	//0x0b16		VoC_jump_lg(Lable_ESCAPE)
		//0x0b18		Lable_ESCAPE_NOT
0xC182F0A0,	//0x0b18		VoC_add16_rr(REG2,REG6,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x5,DEFAULT)
0xD821DFC6,	//0x0b1a		VoC_lw16_p(REG1,REG2,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x0ACF2B80,	//0x0b1c		VoC_jal(CII_huffDecGet_VOC)
0x25C61505,	//0x0b1e		VoC_sw16_d(REG5,0x25c6)
0x25C81587,	//0x0b20		VoC_sw32_d(RL7,0x25c8)
0xFFC0E006,	//0x0b22		VoC_NAD	|	VoC_movreg16(REG6,REG0,DEFAULT)
0x0C532B80,	//0x0b24		VoC_jal(CII_ibstrmFlushBits_VOC)
0x0C491507,	//0x0b26		VoC_sw16_d(REG7,0xc49)
0x25C61400,	//0x0b28		VoC_lw16_d(REG0,0x25c6)
0xDF867021,	//0x0b2a		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x0B943180,	//0x0b2c		VoC_bez16_r(Lable_ESCAPE,REG0)
0x0B423581,	//0x0b2e		VoC_bne16_rr(Lable_iEntry_NotOne,REG0,REG1)
0xEFF17000,	//0x0b30		VoC_lw16i_short(REG1,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x11B00734,	//0x0b32		VoC_add16_rd(REG4,REG6,0x11b0)
0x09001407,	//0x0b34		VoC_lw16_d(REG7,0x900)
0x08F21501,	//0x0b36		VoC_sw16_d(REG1,0x8f2)
0x1501B93D,	//0x0b38		VoC_sw16_d(REG1,0x8f4)(lo)	|	VoC_sub16_pr(REG5,REG4,REG7,DEFAULT)
0xC14E08F4,	//0x0b3a		VoC_add16_rr(REG6,REG5,REG1,DEFAULT)	|	VoC_sw16_d(REG1,0x8f4)(hi)
0x08ED1500,	//0x0b3c		VoC_sw16_d(REG0,0x8ed)
0x08EC1506,	//0x0b3e		VoC_sw16_d(REG6,0x8ec)
0x0BBB2B00,	//0x0b40		VoC_jump_lg(Lable_Exit)
		//0x0b42		Lable_iEntry_NotOne
0x25C71506,	//0x0b42		VoC_sw16_d(REG6,0x25c7)
0x2B80F026,	//0x0b44		VoC_jal(CII_ibstrmFlushBits_VOC)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF0410C53,	//0x0b46		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_jal(CII_ibstrmFlushBits_VOC)(hi)
0x25C60B08,	//0x0b48		VoC_sub16_dr(REG0,0x25c6,REG1)
0x25C71406,	//0x0b4a		VoC_lw16_d(REG6,0x25c7)
0x1507E001,	//0x0b4c		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xF9090C49,	//0x0b4e		VoC_shru16_ri(REG1,0x1,DEFAULT)	|	VoC_sw16_d(REG7,0xc49)(hi)
0x11AE0734,	//0x0b50		VoC_add16_rd(REG4,REG6,0x11ae)
0xD847E023,	//0x0b52		VoC_lw16_p(REG7,REG4,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x0A85F9FB,	//0x0b54		VoC_lw16i(REG5,0x19a6)(lo)	|	VoC_shru16_ri(REG3,0xffffffff,DEFAULT)
0xC21B19A6,	//0x0b56		VoC_sub16_rr(REG3,REG0,REG3,DEFAULT)	|	VoC_lw16i(REG5,0x19a6)(hi)
0x0B66353D,	//0x0b58		VoC_be16_rr(Label_NoCompress1,REG7,REG5)
0x16B00A85,	//0x0b5a		VoC_lw16i(REG5,0x16b0)
0x353DFFC0,	//0x0b5c		VoC_be16_rr(Label_NoCompress1,REG7,REG5)(lo)	|	VoC_NOP
0x0A850B66,	//0x0b5e		VoC_lw16i(REG5,0x1624)(lo)	|	VoC_be16_rr(Label_NoCompress1,REG7,REG5)(hi)
0xFFC01624,	//0x0b60		VoC_NOP	|	VoC_lw16i(REG5,0x1624)(hi)
0x0B66353D,	//0x0b62		VoC_be16_rr(Label_NoCompress1,REG7,REG5)
0xE5C58065,	//0x0b64		VoC_jump(Label_jump1)	|	VoC_add16_rp(REG5,REG1,REG4,DEFAULT)
		//0x0b66		Label_NoCompress1
0xFFC08025,	//0x0b66		VoC_NOP	|	VoC_add16_rp(REG5,REG0,REG4,DEFAULT)
0xE5C9D852,	//0x0b68		VoC_jump(Label_Save1)	|	VoC_lw16_p(REG2,REG5,DEFAULT)
		//0x0b6a		Label_jump1
0xD852FFC0,	//0x0b6a		VoC_lw16_p(REG2,REG5,DEFAULT)	|	VoC_NOP
0x0B7131C3,	//0x0b6c		VoC_bnez16_r(Lable_Even1,REG3)
0x00FF1602,	//0x0b6e		VoC_and16_ri(REG2,0xff)
0xF942E5C2,	//0x0b70		VoC_shru16_ri(REG2,0x8,DEFAULT)	|	VoC_jump(Label_Save1)
		//0x0b71		Lable_Even1
		//0x0b72		Label_Save1
0x11AF0734,	//0x0b72		VoC_add16_rd(REG4,REG6,0x11af)
0x1F8F0A85,	//0x0b74		VoC_lw16i(REG5,0x1f8f)
0x1502D847,	//0x0b76		VoC_sw16_d(REG2,0x8ec)(lo)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
0x353D08EC,	//0x0b78		VoC_be16_rr(Label_NoCompress2,REG7,REG5)(lo)	|	VoC_sw16_d(REG2,0x8ec)(hi)
0x80650B7D,	//0x0b7a		VoC_add16_rp(REG5,REG1,REG4,DEFAULT)	|	VoC_be16_rr(Label_NoCompress2,REG7,REG5)(hi)
0x8025E5C5,	//0x0b7c		VoC_add16_rp(REG5,REG0,REG4,DEFAULT)	|	VoC_jump(Label_jump2)
		//0x0b7d		Label_NoCompress2
0xD852FFC0,	//0x0b7e		VoC_lw16_p(REG2,REG5,DEFAULT)	|	VoC_NOP
0xD852E5C8,	//0x0b80		VoC_lw16_p(REG2,REG5,DEFAULT)	|	VoC_jump(Label_Save2)
		//0x0b81		Label_jump2
0x0B8731C3,	//0x0b82		VoC_bnez16_r(Lable_Even2,REG3)
0x00FF1602,	//0x0b84		VoC_and16_ri(REG2,0xff)
0xF942E5C2,	//0x0b86		VoC_shru16_ri(REG2,0x8,DEFAULT)	|	VoC_jump(Label_Save2)
		//0x0b87		Lable_Even2
		//0x0b88		Label_Save2
0x25C81487,	//0x0b88		VoC_lw32_d(RL7,0x25c8)
0x08ED1502,	//0x0b8a		VoC_sw16_d(REG2,0x8ed)
0x09B9FCFF,	//0x0b8c		VoC_sub32_rd(REG23,RL7,0x11c4)(lo)	|	VoC_shru32_ri(RL7,0x1f,DEFAULT)
0xFFC011C4,	//0x0b8e		VoC_NOP	|	VoC_sub32_rd(REG23,RL7,0x11c4)(hi)
0x08F01581,	//0x0b90		VoC_sw32_d(REG23,0x8f0)
0x0BBB2B00,	//0x0b92		VoC_jump_lg(Lable_Exit)
		//0x0b94		Lable_ESCAPE
0x08EF1400,	//0x0b94		VoC_lw16_d(REG0,0x8ef)
0x09A20702,	//0x0b96		VoC_add16_rd(REG2,REG0,0x9a2)
0x11A90710,	//0x0b98		VoC_add16_rd(REG0,REG2,0x11a9)
0xDFC0FFC0,	//0x0b9a		VoC_push16(REG0,DEFAULT)	|	VoC_NOP
0x0DB52B80,	//0x0b9c		VoC_jal(CII_ibstrmLookForBits_VOC)
0xFFC0DF86,	//0x0b9e		VoC_NAD	|	VoC_pop16(REG6,DEFAULT)
0x0C8B2B80,	//0x0ba0		VoC_jal(CII_ibstrmGetBits_VOC)
0xDF477020,	//0x0ba2		VoC_push32(RL7,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x09A20702,	//0x0ba4		VoC_add16_rd(REG2,REG0,0x9a2)
0xFED7D90A,	//0x0ba6		VoC_shru32_rr(RL7,REG2,DEFAULT)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x150EE404,	//0x0ba8		VoC_sw16_d(RL7_LO,0x8ed)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xF00108ED,	//0x0baa		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_sw16_d(RL7_LO,0x8ed)(hi)
0xDF04C306,	//0x0bac		VoC_pop32(ACC0,DEFAULT)	|	VoC_sub16_rr(REG6,REG4,REG0,DEFAULT)
0x08F01506,	//0x0bae		VoC_sw16_d(REG6,0x8f0)
0x11B90B15,	//0x0bb0		VoC_sub16_dr(REG5,0x11b9,REG2)
0x11CA1483,	//0x0bb2		VoC_lw32_d(REG67,0x11ca)
0xE4E3FEEB,	//0x0bb4		VoC_and32_rr(REG67,ACC0,DEFAULT)	|	VoC_shru32_rr(REG67,REG5,DEFAULT)
0x1501F80E,	//0x0bb6		VoC_sw16_d(REG1,0x8e3)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x150608E3,	//0x0bb8		VoC_sw16_d(REG6,0x8ec)(lo)	|	VoC_sw16_d(REG1,0x8e3)(hi)
0xDFA908EC,	//0x0bba		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG6,0x8ec)(hi)
		//0x0bbb		Lable_Exit
0xE580FFC0,	//0x0bbc		VoC_return	|	VoC_NOP
		//0x0bbe		CII_prvSetDetTable_VOC
0x09AA1401,	//0x0bbe		VoC_lw16_d(REG1,0x9aa)
0x09031402,	//0x0bc0		VoC_lw16_d(REG2,0x903)
0x0A80FF47,	//0x0bc2		VoC_lw16i(REG0,0x9cb)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x0A8409CB,	//0x0bc4		VoC_lw16i(REG4,0x9cc)(lo)	|	VoC_lw16i(REG0,0x9cb)(hi)
0x0A8509CC,	//0x0bc6		VoC_lw16i(REG5,0x9cd)(lo)	|	VoC_lw16i(REG4,0x9cc)(hi)
0x6C0909CD,	//0x0bc8		VoC_bez16_d(Label_DMAHuffmanDecTbl,0x8e4)(lo)	|	VoC_lw16i(REG5,0x9cd)(hi)
0x0A8008E4,	//0x0bca		VoC_lw16i(REG0,0x9f3)(lo)	|	VoC_bez16_d(Label_DMAHuffmanDecTbl,0x8e4)(hi)
0x0A8409F3,	//0x0bcc		VoC_lw16i(REG4,0x9f4)(lo)	|	VoC_lw16i(REG0,0x9f3)(hi)
0x0A8509F4,	//0x0bce		VoC_lw16i(REG5,0x9f5)(lo)	|	VoC_lw16i(REG4,0x9f4)(hi)
0xFFC009F5,	//0x0bd0		VoC_NAD	|	VoC_lw16i(REG5,0x9f5)(hi)
		//0x0bd2		Label_DMAHuffmanDecTbl
0x11AB4021,	//0x0bd2		VoC_be16_rd(Label_FOURTYFOURS_QB_CON,REG1,0x11ab)
0x0BF82B00,	//0x0bd4		VoC_jump_lg(Label_FOURTYFOURS_QB)
		//0x0bd6		Label_FOURTYFOURS_QB_CON
0x08E46C12,	//0x0bd6		VoC_bez16_d(Label_Else1,0x8e4)
0x11A94502,	//0x0bd8		VoC_bne16_rd(Label_Else1,REG2,0x11a9)
0x02840A86,	//0x0bda		VoC_lw16i(REG6,0x284)
0x11D40A88,	//0x0bdc		VoC_lw16i(ACC0_LO,0x11d4)
0x15240A89,	//0x0bde		VoC_lw16i(ACC0_HI,0x1524)
0x15FD0A8A,	//0x0be0		VoC_lw16i(ACC1_LO,0x15fd)
0xDC49DC08,	//0x0be2		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B00DC5A,	//0x0be4		VoC_jump_lg(prvSetDetTable_Label_Exit)(lo)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
0xFFC00C44,	//0x0be6		VoC_NAD	|	VoC_jump_lg(prvSetDetTable_Label_Exit)(hi)
		//0x0be8		Label_Else1
0x0A040A8E,	//0x0be8		VoC_lw16i(RL7_LO,0xa04)
0x02A40A86,	//0x0bea		VoC_lw16i(REG6,0x2a4)
0x11D40A88,	//0x0bec		VoC_lw16i(ACC0_LO,0x11d4)
0x153C0A89,	//0x0bee		VoC_lw16i(ACC0_HI,0x153c)
0x16290A8A,	//0x0bf0		VoC_lw16i(ACC1_LO,0x1629)
0xDC49DC08,	//0x0bf2		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B00DC5A,	//0x0bf4		VoC_jump_lg(prvSetDetTable_Label_Exit)(lo)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
0xFFC00C44,	//0x0bf6		VoC_NAD	|	VoC_jump_lg(prvSetDetTable_Label_Exit)(hi)
		//0x0bf8		Label_FOURTYFOURS_QB
0x11A94021,	//0x0bf8		VoC_be16_rd(Label_FOURTYFOURS_OB_CON,REG1,0x11a9)
0x0C202B00,	//0x0bfa		VoC_jump_lg(Label_FOURTYFOURS_OB)
		//0x0bfc		Label_FOURTYFOURS_OB_CON
0x08E46C14,	//0x0bfc		VoC_bez16_d(Label_Else2,0x8e4)
0x11A94512,	//0x0bfe		VoC_bne16_rd(Label_Else2,REG2,0x11a9)
0x14880A8E,	//0x0c00		VoC_lw16i(RL7_LO,0x1488)
0x03C80A86,	//0x0c02		VoC_lw16i(REG6,0x3c8)
0x11D40A88,	//0x0c04		VoC_lw16i(ACC0_LO,0x11d4)
0x16240A89,	//0x0c06		VoC_lw16i(ACC0_HI,0x1624)
0x184D0A8A,	//0x0c08		VoC_lw16i(ACC1_LO,0x184d)
0xDC49DC08,	//0x0c0a		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B00DC5A,	//0x0c0c		VoC_jump_lg(prvSetDetTable_Label_Exit)(lo)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
0xFFC00C44,	//0x0c0e		VoC_NAD	|	VoC_jump_lg(prvSetDetTable_Label_Exit)(hi)
		//0x0c10		Label_Else2
0x23A40A8E,	//0x0c10		VoC_lw16i(RL7_LO,0x23a4)
0x04600A86,	//0x0c12		VoC_lw16i(REG6,0x460)
0x11D40A88,	//0x0c14		VoC_lw16i(ACC0_LO,0x11d4)
0x16B00A89,	//0x0c16		VoC_lw16i(ACC0_HI,0x16b0)
0x19480A8A,	//0x0c18		VoC_lw16i(ACC1_LO,0x1948)
0xDC49DC08,	//0x0c1a		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B00DC5A,	//0x0c1c		VoC_jump_lg(prvSetDetTable_Label_Exit)(lo)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
0xFFC00C44,	//0x0c1e		VoC_NAD	|	VoC_jump_lg(prvSetDetTable_Label_Exit)(hi)
		//0x0c20		Label_FOURTYFOURS_OB
0x11AA4021,	//0x0c20		VoC_be16_rd(prvSetDetTable_Label_Exit_NOT,REG1,0x11aa)
0x0C442B00,	//0x0c22		VoC_jump_lg(prvSetDetTable_Label_Exit)
		//0x0c24		prvSetDetTable_Label_Exit_NOT
0x08E46C12,	//0x0c24		VoC_bez16_d(Label_Else3,0x8e4)
0x11A94502,	//0x0c26		VoC_bne16_rd(Label_Else3,REG2,0x11a9)
0x35240A8E,	//0x0c28		VoC_lw16i(RL7_LO,0x3524)
0x070C0A86,	//0x0c2a		VoC_lw16i(REG6,0x70c)
0x11D40A88,	//0x0c2c		VoC_lw16i(ACC0_LO,0x11d4)
0x19A60A89,	//0x0c2e		VoC_lw16i(ACC0_HI,0x19a6)
0x1DD30A8A,	//0x0c30		VoC_lw16i(ACC1_LO,0x1dd3)
0xDC49DC08,	//0x0c32		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0xE5CFDC5A,	//0x0c34		VoC_jump(prvSetDetTable_Label_Exit)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
		//0x0c36		Label_Else3
0x51500A8E,	//0x0c36		VoC_lw16i(RL7_LO,0x5150)
0x09780A86,	//0x0c38		VoC_lw16i(REG6,0x978)
0x11D40A88,	//0x0c3a		VoC_lw16i(ACC0_LO,0x11d4)
0x1CF40A89,	//0x0c3c		VoC_lw16i(ACC0_HI,0x1cf4)
0x1F8F0A8A,	//0x0c3e		VoC_lw16i(ACC1_LO,0x1f8f)
0xDC49DC08,	//0x0c40		VoC_sw16_p(ACC0_HI,REG4,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0xFFC0DC5A,	//0x0c42		VoC_NAD	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
		//0x0c44		prvSetDetTable_Label_Exit
0x08EA0A83,	//0x0c44		VoC_lw16i(REG3,0x8ea)
0x0A20093E,	//0x0c46		VoC_add32_rd(RL6,RL7,0xa20)
0x7FC31543,	//0x0c48		VoC_sw16_d(REG3,0xffc3)
0x7FC21546,	//0x0c4a		VoC_sw16_d(REG6,0xffc2)
0x7FC415C6,	//0x0c4c		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x0c4e		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0c50		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x0c52		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c53		CII_ibstrmFlushBits_VOC
0xF300F007,	//0x0c54		VoC_lw16i_short(REG0,0x18,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xF105F024,	//0x0c56		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x08DB1401,	//0x0c58		VoC_lw16_d(REG1,0x8db)
0x08D71403,	//0x0c5a		VoC_lw16_d(REG3,0x8d7)
0x08D81487,	//0x0c5c		VoC_lw32_d(RL7,0x8d8)
0xF032FF44,	//0x0c5e		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x08D51402,	//0x0c60		VoC_lw16_d(REG2,0x8d5)
		//0x0c62		FBLOOP_BEGIN
0x0C6C3418,	//0x0c62		VoC_bgt16_rr(FBLOOP_END,REG3,REG0)
0x0C6C3141,	//0x0c64		VoC_bngtz16_r(FBLOOP_END,REG1)
0xFDC7D8A8,	//0x0c66		VoC_shru32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG2,DEFAULT)
0xE527C0EB,	//0x0c68		VoC_or32_rr(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0xE5F7C261,	//0x0c6a		VoC_jump(FBLOOP_BEGIN)	|	VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)
		//0x0c6c		FBLOOP_END
0x08D81587,	//0x0c6c		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x0c6e		VoC_sw16_d(REG2,0x8d5)
0x08D71503,	//0x0c70		VoC_sw16_d(REG3,0x8d7)
0x08DB1501,	//0x0c72		VoC_sw16_d(REG1,0x8db)
0x08D74890,	//0x0c74		VoC_blt16_rd(FBGETMOREDATE_END,REG0,0x8d7)
0x08DB6808,	//0x0c76		VoC_bgtz16_d(FBGETMOREDATE_END,0x8db)
0x2B80DFC6,	//0x0c78		VoC_jal(CII_ibstrmGetMoreData_VOC)(lo)	|	VoC_push16(REG6,DEFAULT)
0xDF860CF2,	//0x0c7a		VoC_pop16(REG6,DEFAULT)	|	VoC_jal(CII_ibstrmGetMoreData_VOC)(hi)
0xFFC0E0A7,	//0x0c7c		VoC_NAD	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0c7e		FBGETMOREDATE_END
0x08D73886,	//0x0c7e		VoC_bgt16_rd(FBDWNUMBITS_GT_DWBITSLEFT,REG6,0x8d7)
0x08D70B30,	//0x0c80		VoC_sub16_dr(REG0,0x8d7,REG6)
0x1500FFC0,	//0x0c82		VoC_sw16_d(REG0,0x8d7)(lo)	|	VoC_NOP
0xE5C308D7,	//0x0c84		VoC_jump(FBFUNCTION_END)	|	VoC_sw16_d(REG0,0x8d7)(hi)
		//0x0c86		FBDWNUMBITS_GT_DWBITSLEFT
0x00040AC7,	//0x0c86		VoC_lw16i(REG7,0x8004)
		//0x0c88		FBFUNCTION_END
0xFFC0DFA9,	//0x0c88		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0c8a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c8b		CII_ibstrmGetBits_VOC
0xF007F300,	//0x0c8c		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x18,DEFAULT)
0x08D748A0,	//0x0c8e		VoC_blt16_rd(GBGETMOREDATE_END,REG0,0x8d7)
0x08DB680A,	//0x0c90		VoC_bgtz16_d(GBGETMOREDATE_END,0x8db)
0xDFC6DF46,	//0x0c92		VoC_push16(REG6,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x0CF22B80,	//0x0c94		VoC_jal(CII_ibstrmGetMoreData_VOC)
0xDF06DF86,	//0x0c96		VoC_pop32(RL6,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xFFC0E0A7,	//0x0c98		VoC_NAD	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0c9a		GBGETMOREDATE_END
0x08DB1400,	//0x0c9a		VoC_lw16_d(REG0,0x8db)
0x1401F8E8,	//0x0c9c		VoC_lw16_d(REG1,0x8d7)(lo)	|	VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)
0x34B008D7,	//0x0c9e		VoC_bngt16_rr(DWNUMBITS_NGT_BEGIN,REG6,REG0)(lo)	|	VoC_lw16_d(REG1,0x8d7)(hi)
0xC0420CA6,	//0x0ca0		VoC_add16_rr(REG2,REG1,REG0,DEFAULT)	|	VoC_bngt16_rr(DWNUMBITS_NGT_BEGIN,REG6,REG0)(hi)
0x3432FFC0,	//0x0ca2		VoC_bgt16_rr(DWNUMBITS_NGT_END,REG6,REG2)(lo)	|	VoC_NOP
0xFFC00CEC,	//0x0ca4		VoC_NAD	|	VoC_bgt16_rr(DWNUMBITS_NGT_END,REG6,REG2)(hi)
		//0x0ca6		DWNUMBITS_NGT_BEGIN
0x08D73926,	//0x0ca6		VoC_bgt16_rd(GBDWNUMBITS_GT_DWBITSLEFT,REG6,0x8d7)
0x0B30E0C2,	//0x0ca8		VoC_sub16_dr(REG0,0x8d7,REG6)(lo)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xF9FA08D7,	//0x0caa		VoC_shru16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_sub16_dr(REG0,0x8d7,REG6)(hi)
0x08D71500,	//0x0cac		VoC_sw16_d(REG0,0x8d7)
0x60000A83,	//0x0cae		VoC_lw16i(REG3,0x6000)
0x08D81487,	//0x0cb0		VoC_lw32_d(RL7,0x8d8)
0xFEC7C0D3,	//0x0cb2		VoC_shru32_rr(RL7,REG0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xF007D99A,	//0x0cb4		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw32_p(REG45,REG3,DEFAULT)
0x2B00E4D7,	//0x0cb6		VoC_jump_lg(GBFUNCTION_END)(lo)	|	VoC_and32_rr(RL7,REG45,DEFAULT)
0xFFC00CEF,	//0x0cb8		VoC_NAD	|	VoC_jump_lg(GBFUNCTION_END)(hi)
		//0x0cba		GBDWNUMBITS_GT_DWBITSLEFT
0x08D71400,	//0x0cba		VoC_lw16_d(REG0,0x8d7)
0x60000A81,	//0x0cbc		VoC_lw16i(REG1,0x6000)
0x1487F9F8,	//0x0cbe		VoC_lw32_d(RL7,0x8d8)(lo)	|	VoC_shru16_ri(REG0,0xffffffff,DEFAULT)
0xC00808D8,	//0x0cc0		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_lw32_d(RL7,0x8d8)(hi)
0x08D707B1,	//0x0cc2		VoC_sub16_rd(REG1,REG6,0x8d7)
0xF080D981,	//0x0cc4		VoC_lw16i_short(REG0,0x4,DEFAULT)	|	VoC_lw32_p(REG23,REG0,DEFAULT)
0x3C18E4CF,	//0x0cc6		VoC_bngt16_rd(MCBBUFLEN_LT_4_not,REG0,0x8db)(lo)	|	VoC_and32_rr(RL7,REG23,DEFAULT)
0xE5DF08DB,	//0x0cc8		VoC_jump(MCBBUFLEN_LT_4)	|	VoC_bngt16_rd(MCBBUFLEN_LT_4_not,REG0,0x8db)(hi)
		//0x0cca		MCBBUFLEN_LT_4_not
0x08D52006,	//0x0cca		VoC_lw16d_set_inc(REG2,0x8d5,0x1)
0xD8A5FFC0,	//0x0ccc		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_NOP
0xF9C5D8A6,	//0x0cce		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xD8A4D8A3,	//0x0cd0		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG2,DEFAULT)
0xE475F9C3,	//0x0cd2		VoC_or16_rr(REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)
0x1502E45C,	//0x0cd4		VoC_sw16_d(REG2,0x8d5)(lo)	|	VoC_or16_rr(REG4,REG3,DEFAULT)
0x158208D5,	//0x0cd6		VoC_sw32_d(REG45,0x8d8)(lo)	|	VoC_sw16_d(REG2,0x8d5)(hi)
0x0B0B08D8,	//0x0cd8		VoC_sub16_dr(REG3,0x11b9,REG1)(lo)	|	VoC_sw32_d(REG45,0x8d8)(hi)
0x0B0211B9,	//0x0cda		VoC_sub16_dr(REG2,0x8db,REG0)(lo)	|	VoC_sub16_dr(REG3,0x11b9,REG1)(hi)
0x0B0E08DB,	//0x0cdc		VoC_sub16_dr(REG6,0x11a8,REG1)(lo)	|	VoC_sub16_dr(REG2,0x8db,REG0)(hi)
0x150211A8,	//0x0cde		VoC_sw16_d(REG2,0x8db)(lo)	|	VoC_sub16_dr(REG6,0x11a8,REG1)(hi)
0xFEF708DB,	//0x0ce0		VoC_shru32_rr(RL7,REG6,DEFAULT)	|	VoC_sw16_d(REG2,0x8db)(hi)
0x1503FEDA,	//0x0ce2		VoC_sw16_d(REG3,0x8d7)(lo)	|	VoC_shru32_rr(REG45,REG3,DEFAULT)
0xE51708D7,	//0x0ce4		VoC_or32_rr(RL7,REG45,DEFAULT)	|	VoC_sw16_d(REG3,0x8d7)(hi)
0xE5C8F007,	//0x0ce6		VoC_jump(GBFUNCTION_END)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0ce8		MCBBUFLEN_LT_4
0x2B80E026,	//0x0ce8		VoC_jal(CII_prvFinalLoad_VOC)(lo)	|	VoC_movreg16(REG6,REG1,DEFAULT)
0xE5C40E62,	//0x0cea		VoC_jump(GBFUNCTION_END)	|	VoC_jal(CII_prvFinalLoad_VOC)(hi)
		//0x0cec		DWNUMBITS_NGT_END
0x0AC7FF47,	//0x0cec		VoC_lw16i(REG7,0x8004)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xDFA90004,	//0x0cee		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i(REG7,0x8004)(hi)
		//0x0cef		GBFUNCTION_END
0xE580FFC0,	//0x0cf0		VoC_return	|	VoC_NOP
		//0x0cf2		CII_ibstrmGetMoreData_VOC
0xFFC0DFE9,	//0x0cf2		VoC_NAD	|	VoC_push16(RA,DEFAULT)
0x0EBA2B80,	//0x0cf4		VoC_jal(CII_WMARawDecCBGetData_VOC)
0x080A0A80,	//0x0cf6		VoC_lw16i(REG0,0x80a)
0x08DB1501,	//0x0cf8		VoC_sw16_d(REG1,0x8db)
0x08D51500,	//0x0cfa		VoC_sw16_d(REG0,0x8d5)
0xF100DFA9,	//0x0cfc		VoC_lw16i_short(REG0,0x8,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x441DF001,	//0x0cfe		VoC_bne16_rd(IF_NEW_PACKET_END,REG5,0x11ab)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xF02111AB,	//0x0d00		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_bne16_rd(IF_NEW_PACKET_END,REG5,0x11ab)(hi)
		//0x0d02		IF_NEW_PACKET_END
0x08DB6E09,	//0x0d02		VoC_bnez16_d(MCBBUFFLEN_NEZ,0x8db)
0xF004F022,	//0x0d04		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x08E61502,	//0x0d06		VoC_sw16_d(REG2,0x8e6)
0x2B00F005,	//0x0d08		VoC_jump_lg(GMDFUNCTION_END)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF0020DB4,	//0x0d0a		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_jump_lg(GMDFUNCTION_END)(hi)
		//0x0d0b		MCBBUFFLEN_NEZ
0x1502FFC0,	//0x0d0c		VoC_sw16_d(REG2,0x8e6)(lo)	|	VoC_NOP
0x318108E6,	//0x0d0e		VoC_bez16_r(NEWPACKET_NEZ_1,REG1)(lo)	|	VoC_sw16_d(REG2,0x8e6)(hi)
0x14020D1A,	//0x0d10		VoC_lw16_d(REG2,0x8d5)(lo)	|	VoC_bez16_r(NEWPACKET_NEZ_1,REG1)(hi)
0x140308D5,	//0x0d12		VoC_lw16_d(REG3,0x8db)(lo)	|	VoC_lw16_d(REG2,0x8d5)(hi)
0x150208DB,	//0x0d14		VoC_sw16_d(REG2,0x8d4)(lo)	|	VoC_lw16_d(REG3,0x8db)(hi)
0x150308D4,	//0x0d16		VoC_sw16_d(REG3,0x8d6)(lo)	|	VoC_sw16_d(REG2,0x8d4)(hi)
0xFFC008D6,	//0x0d18		VoC_NAD	|	VoC_sw16_d(REG3,0x8d6)(hi)
		//0x0d1a		NEWPACKET_NEZ_1
0x08DC6E12,	//0x0d1a		VoC_bnez16_d(FALLOWPACKETS_NEZ,0x8dc)
0x0D7E3181,	//0x0d1c		VoC_bez16_r(FALLOWPACKETS_END,REG1)
0xF00DF02C,	//0x0d1e		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
0x08D20931,	//0x0d20		VoC_add32_rd(REG23,RL6,0x8d2)
0x03FF0A86,	//0x0d22		VoC_lw16i(REG6,0x3ff)
0xE4D9F007,	//0x0d24		VoC_and32_rr(REG23,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x1581FFC0,	//0x0d26		VoC_sw32_d(REG23,0x8d2)(lo)	|	VoC_NOP
0x2B0008D2,	//0x0d28		VoC_jump_lg(FALLOWPACKETS_END)(lo)	|	VoC_sw32_d(REG23,0x8d2)(hi)
0xFFC00D7E,	//0x0d2a		VoC_NAD	|	VoC_jump_lg(FALLOWPACKETS_END)(hi)
		//0x0d2c		FALLOWPACKETS_NEZ
0x0D7E3181,	//0x0d2c		VoC_bez16_r(FALLOWPACKETS_END,REG1)
0x08FD6C06,	//0x0d2e		VoC_bez16_d(FALLOWSUPERFRAME_FALSE,0x8fd)
0x0711F162,	//0x0d30		VoC_add16_rd(REG1,REG2,0x8ea)(lo)	|	VoC_lw16i_short(REG2,0xb,DEFAULT)
0xE5C208EA,	//0x0d32		VoC_jump(FALLOWSUPERFRAME_END)	|	VoC_add16_rd(REG1,REG2,0x8ea)(hi)
		//0x0d34		FALLOWSUPERFRAME_FALSE
0xFFC0F001,	//0x0d34		VoC_NOP	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
		//0x0d35		FALLOWSUPERFRAME_END
0x2006E020,	//0x0d36		VoC_lw16d_set_inc(REG2,0x8d5,0x1)(lo)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x160008D5,	//0x0d38		VoC_and16_ri(REG0,0x7)(lo)	|	VoC_lw16d_set_inc(REG2,0x8d5,0x1)(hi)
0xD8A30007,	//0x0d3a		VoC_lw16inc_p(REG3,REG2,DEFAULT)	|	VoC_and16_ri(REG0,0x7)(hi)
0xE066D8A7,	//0x0d3c		VoC_movreg16(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG7,REG2,DEFAULT)
0xF9C6F823,	//0x0d3e		VoC_shru16_ri(REG6,0xfffffff8,DEFAULT)	|	VoC_shr16_ri(REG3,0x4,DEFAULT)
0xC1BBDFC3,	//0x0d40		VoC_add16_rr(REG3,REG6,REG7,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0xD8A7D8A6,	//0x0d42		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xC1BAF9C6,	//0x0d44		VoC_add16_rr(REG2,REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffff8,DEFAULT)
0x11B00700,	//0x0d46		VoC_add16_rd(REG0,REG0,0x11b0)
0x1581E024,	//0x0d48		VoC_sw32_d(REG23,0x8d2)(lo)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0xF91C08D2,	//0x0d4a		VoC_shru16_ri(REG4,0x3,DEFAULT)	|	VoC_sw32_d(REG23,0x8d2)(hi)
0x08D50723,	//0x0d4c		VoC_add16_rd(REG3,REG4,0x8d5)
0x08DB0B26,	//0x0d4e		VoC_sub16_dr(REG6,0x8db,REG4)
0x08D51503,	//0x0d50		VoC_sw16_d(REG3,0x8d5)
0x08DB1506,	//0x0d52		VoC_sw16_d(REG6,0x8db)
0x1402DF83,	//0x0d54		VoC_lw16_d(REG2,0x8da)(lo)	|	VoC_pop16(REG3,DEFAULT)
0x150308DA,	//0x0d56		VoC_sw16_d(REG3,0x8da)(lo)	|	VoC_lw16_d(REG2,0x8da)(hi)
0x6E2008DA,	//0x0d58		VoC_bnez16_d(FSUPPRESSPACKETLOSS_TURE,0x8dd)(lo)	|	VoC_sw16_d(REG3,0x8da)(hi)
0xC2D208DD,	//0x0d5a		VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)	|	VoC_bnez16_d(FSUPPRESSPACKETLOSS_TURE,0x8dd)(hi)
0x0796F1E7,	//0x0d5c		VoC_sub16_rd(REG6,REG2,0x11a9)(lo)	|	VoC_lw16i_short(REG7,0xf,DEFAULT)
0xC0BF11A9,	//0x0d5e		VoC_add16_rr(REG7,REG2,REG7,DEFAULT)	|	VoC_sub16_rd(REG6,REG2,0x11a9)(hi)
0x0D7E3186,	//0x0d60		VoC_bez16_r(FALLOWPACKETS_END,REG6)
0x0D7E3187,	//0x0d62		VoC_bez16_r(FALLOWPACKETS_END,REG7)
0xF082F004,	//0x0d64		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x08D40716,	//0x0d66		VoC_add16_rd(REG6,REG2,0x8d4)
0x08D60B17,	//0x0d68		VoC_sub16_dr(REG7,0x8d6,REG2)
0x08D51506,	//0x0d6a		VoC_sw16_d(REG6,0x8d5)
0x08DB1507,	//0x0d6c		VoC_sw16_d(REG7,0x8db)
0x08D21481,	//0x0d6e		VoC_lw32_d(REG23,0x8d2)
0x00200A86,	//0x0d70		VoC_lw16i(REG6,0x20)
0x1581C38E,	//0x0d72		VoC_sw32_d(REG23,0x8d8)(lo)	|	VoC_sub16_rr(REG6,REG6,REG1,DEFAULT)
0x150608D8,	//0x0d74		VoC_sw16_d(REG6,0x8d7)(lo)	|	VoC_sw32_d(REG23,0x8d8)(hi)
0x2B0008D7,	//0x0d76		VoC_jump_lg(GMDFUNCTION_END)(lo)	|	VoC_sw16_d(REG6,0x8d7)(hi)
0xF0020DB4,	//0x0d78		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_jump_lg(GMDFUNCTION_END)(hi)
		//0x0d79		FSUPPRESSPACKETLOSS_TURE
0x1502FFC0,	//0x0d7a		VoC_sw16_d(REG2,0x8dd)(lo)	|	VoC_NOP
0xFFC008DD,	//0x0d7c		VoC_NAD	|	VoC_sw16_d(REG2,0x8dd)(hi)
		//0x0d7e		FALLOWPACKETS_END
0x08D71406,	//0x0d7e		VoC_lw16_d(REG6,0x8d7)
0x08DB1407,	//0x0d80		VoC_lw16_d(REG7,0x8db)
0x11B707B6,	//0x0d82		VoC_sub16_rd(REG6,REG6,0x11b7)
0x0DB23147,	//0x0d84		VoC_bngtz16_r(UPDATE_PIBUFLEN,REG7)
0x0DB23106,	//0x0d86		VoC_bgtz16_r(UPDATE_PIBUFLEN,REG6)
0x08D52005,	//0x0d88		VoC_lw16d_set_inc(REG1,0x8d5,0x1)
0x08D81484,	//0x0d8a		VoC_lw32_d(ACC0,0x8d8)
0x11B50784,	//0x0d8c		VoC_sub16_rd(REG4,REG0,0x11b5)
0x11A80B02,	//0x0d8e		VoC_sub16_dr(REG2,0x11a8,REG0)
0x07BFD893,	//0x0d90		VoC_sub16_rd(REG7,REG7,0x11a9)(lo)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0xFE5311A9,	//0x0d92		VoC_shru16_rr(REG3,REG2,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x11a9)(hi)
0xFE43FEE4,	//0x0d94		VoC_shru16_rr(REG3,REG0,DEFAULT)	|	VoC_shru32_rr(ACC0,REG4,DEFAULT)
0xE06EF00F,	//0x0d96		VoC_movreg16(RL7_LO,REG3,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0xC93CF102,	//0x0d98		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xFFC0C3A6,	//0x0d9a		VoC_NAD	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
		//0x0d9c		GMDLOOP_BEGIN
0x0DA83147,	//0x0d9c		VoC_bngtz16_r(GMDLOOP_END,REG7)
0x0DA83106,	//0x0d9e		VoC_bgtz16_r(GMDLOOP_END,REG6)
0x07BFD893,	//0x0da0		VoC_sub16_rd(REG7,REG7,0x11a9)(lo)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0xFDC411A9,	//0x0da2		VoC_shru32_ri(ACC0,0xfffffff8,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x11a9)(hi)
0xC196E06E,	//0x0da4		VoC_add16_rr(REG6,REG6,REG2,DEFAULT)	|	VoC_movreg16(RL7_LO,REG3,DEFAULT)
0xE5F5C93C,	//0x0da6		VoC_jump(GMDLOOP_BEGIN)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
		//0x0da8		GMDLOOP_END
0x08D51501,	//0x0da8		VoC_sw16_d(REG1,0x8d5)
0x11B70736,	//0x0daa		VoC_add16_rd(REG6,REG6,0x11b7)
0x08DB1507,	//0x0dac		VoC_sw16_d(REG7,0x8db)
0x08D71506,	//0x0dae		VoC_sw16_d(REG6,0x8d7)
0x08D81584,	//0x0db0		VoC_sw32_d(ACC0,0x8d8)
		//0x0db2		UPDATE_PIBUFLEN
0x08DB1404,	//0x0db2		VoC_lw16_d(REG4,0x8db)
		//0x0db4		GMDFUNCTION_END
0xDFE9E580,	//0x0db4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0db5		CII_ibstrmLookForBits_VOC
0x08DB27BD,	//0x0db6		VoC_lw16d_set_inc(REG1,0x8db,0xffffffff)
0x11B0080A,	//0x0db8		VoC_mult16_rd(REG2,REG1,0x11b0)
0x0712F007,	//0x0dba		VoC_add16_rd(REG2,REG2,0x8d7)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x140308D7,	//0x0dbc		VoC_lw16_d(REG3,0x8d7)(lo)	|	VoC_add16_rd(REG2,REG2,0x8d7)(hi)
0x348208D7,	//0x0dbe		VoC_bngt16_rr(DWNUMBITS_END,REG0,REG2)(lo)	|	VoC_lw16_d(REG3,0x8d7)(hi)
0xFF440DE0,	//0x0dc0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bngt16_rr(DWNUMBITS_END,REG0,REG2)(hi)
0x08D81487,	//0x0dc2		VoC_lw32_d(RL7,0x8d8)
0x08D52006,	//0x0dc4		VoC_lw16d_set_inc(REG2,0x8d5,0x1)
		//0x0dc6		LFBLOOP_BEGIN
0x11B738A3,	//0x0dc6		VoC_bgt16_rd(LFBLOOP_END,REG3,0x11b7)
0x0DD23141,	//0x0dc8		VoC_bngtz16_r(LFBLOOP_END,REG1)
0xFDC7D8A8,	//0x0dca		VoC_shru32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG2,DEFAULT)
0x11B0071B,	//0x0dcc		VoC_add16_rd(REG3,REG3,0x11b0)
0xDE08E527,	//0x0dce		VoC_inc_p(REG1,DEFAULT)	|	VoC_or32_rr(RL7,ACC0,DEFAULT)
0xFFC0E5F6,	//0x0dd0		VoC_NAD	|	VoC_jump(LFBLOOP_BEGIN)
		//0x0dd2		LFBLOOP_END
0x08D81587,	//0x0dd2		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x0dd4		VoC_sw16_d(REG2,0x8d5)
0x08D71503,	//0x0dd6		VoC_sw16_d(REG3,0x8d7)
0x08DB1501,	//0x0dd8		VoC_sw16_d(REG1,0x8db)
0x2B80DFC0,	//0x0dda		VoC_jal(CII_ibstrmGetMoreData_VOC)(lo)	|	VoC_push16(REG0,DEFAULT)
0xDF800CF2,	//0x0ddc		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CII_ibstrmGetMoreData_VOC)(hi)
0xFFC0E0A7,	//0x0dde		VoC_NAD	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0de0		DWNUMBITS_END
0x08DB1401,	//0x0de0		VoC_lw16_d(REG1,0x8db)
0x1403F9E9,	//0x0de2		VoC_lw16_d(REG3,0x8d7)(lo)	|	VoC_shru16_ri(REG1,0xfffffffd,DEFAULT)
0x070A08D7,	//0x0de4		VoC_add16_rd(REG2,REG1,0x8d7)(lo)	|	VoC_lw16_d(REG3,0x8d7)(hi)
0xFFC008D7,	//0x0de6		VoC_NOP	|	VoC_add16_rd(REG2,REG1,0x8d7)(hi)
0x0DEC3482,	//0x0de8		VoC_bngt16_rr(LFBFUNCTION_END,REG0,REG2)
0x00040AC7,	//0x0dea		VoC_lw16i(REG7,0x8004)
		//0x0dec		LFBFUNCTION_END
0xFFC0DFA9,	//0x0dec		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0dee		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0def		CII_ibstrmPeekBits_VOC
0xF300F007,	//0x0df0		VoC_lw16i_short(REG0,0x18,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xF105F024,	//0x0df2		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x08DB1401,	//0x0df4		VoC_lw16_d(REG1,0x8db)
0x08D71403,	//0x0df6		VoC_lw16_d(REG3,0x8d7)
0x08D81487,	//0x0df8		VoC_lw32_d(RL7,0x8d8)
0x2006FF44,	//0x0dfa		VoC_lw16d_set_inc(REG2,0x8d5,0x1)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC008D5,	//0x0dfc		VoC_NAD	|	VoC_lw16d_set_inc(REG2,0x8d5,0x1)(hi)
		//0x0dfe		PBLOOP_BEGIN
0x0E083418,	//0x0dfe		VoC_bgt16_rr(PBLOOP_END,REG3,REG0)
0x0E083141,	//0x0e00		VoC_bngtz16_r(PBLOOP_END,REG1)
0xFDC7D8A8,	//0x0e02		VoC_shru32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG2,DEFAULT)
0xE527C0EB,	//0x0e04		VoC_or32_rr(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0xE5F7C261,	//0x0e06		VoC_jump(PBLOOP_BEGIN)	|	VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)
		//0x0e08		PBLOOP_END
0x08D81587,	//0x0e08		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x0e0a		VoC_sw16_d(REG2,0x8d5)
0x08D71503,	//0x0e0c		VoC_sw16_d(REG3,0x8d7)
0x08DB1501,	//0x0e0e		VoC_sw16_d(REG1,0x8db)
0x08D74838,	//0x0e10		VoC_blt16_rd(PBGETMOREDATE_END,REG0,0x8d7)
0x08DB6805,	//0x0e12		VoC_bgtz16_d(PBGETMOREDATE_END,0x8db)
0x0CF22B80,	//0x0e14		VoC_jal(CII_ibstrmGetMoreData_VOC)
0xF2E0E0A7,	//0x0e16		VoC_lw16i_short(REG0,0x17,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0e17		PBGETMOREDATE_END
0x3C88FFC0,	//0x0e18		VoC_bngt16_rd(MDWBITSLEFT_NLT_DWNUMBITS,REG0,0x8d7)(lo)	|	VoC_NOP
0x6C0508D7,	//0x0e1a		VoC_bez16_d(ALLOWSUPERFRAME_FALSE,0x8fd)(lo)	|	VoC_bngt16_rd(MDWBITSLEFT_NLT_DWNUMBITS,REG0,0x8d7)(hi)
0x0AC708FD,	//0x0e1c		VoC_lw16i(REG7,0x8004)(lo)	|	VoC_bez16_d(ALLOWSUPERFRAME_FALSE,0x8fd)(hi)
0xE5CC0004,	//0x0e1e		VoC_jump(PBFUNCTION_END)	|	VoC_lw16i(REG7,0x8004)(hi)
		//0x0e20		ALLOWSUPERFRAME_FALSE
0x08D71400,	//0x0e20		VoC_lw16_d(REG0,0x8d7)
		//0x0e22		MDWBITSLEFT_NLT_DWNUMBITS
0x08D70B01,	//0x0e22		VoC_sub16_dr(REG1,0x8d7,REG0)
0x08D81487,	//0x0e24		VoC_lw32_d(RL7,0x8d8)
0x11B90782,	//0x0e26		VoC_sub16_rd(REG2,REG0,0x11b9)
0xFFC0FECF,	//0x0e28		VoC_NOP	|	VoC_shru32_rr(RL7,REG1,DEFAULT)
0xDFA9FED7,	//0x0e2a		VoC_pop16(RA,DEFAULT)	|	VoC_shru32_rr(RL7,REG2,DEFAULT)
		//0x0e2b		PBFUNCTION_END
0xE580FFC0,	//0x0e2c		VoC_return	|	VoC_NOP
		//0x0e2e		CII_ibstrmResetPacket_VOC
0x6C05F160,	//0x0e2e		VoC_bez16_d(RPFALLOWSUPERFRAME_FALSE,0x8fd)(lo)	|	VoC_lw16i_short(REG0,0xb,DEFAULT)
0x070008FD,	//0x0e30		VoC_add16_rd(REG0,REG0,0x8ea)(lo)	|	VoC_bez16_d(RPFALLOWSUPERFRAME_FALSE,0x8fd)(hi)
0xE5C308EA,	//0x0e32		VoC_jump(RPFALLOWSUPERFRAME_END)	|	VoC_add16_rd(REG0,REG0,0x8ea)(hi)
		//0x0e34		RPFALLOWSUPERFRAME_FALSE
0xFFC0F000,	//0x0e34		VoC_NAD	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x0e36		RPFALLOWSUPERFRAME_END
0x08D41401,	//0x0e36		VoC_lw16_d(REG1,0x8d4)
0xF918E003,	//0x0e38		VoC_shru16_ri(REG0,0x3,DEFAULT)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x00071603,	//0x0e3a		VoC_and16_ri(REG3,0x7)
0x08D60B04,	//0x0e3c		VoC_sub16_dr(REG4,0x8d6,REG0)
0x11B0071B,	//0x0e3e		VoC_add16_rd(REG3,REG3,0x11b0)
0x0B18C041,	//0x0e40		VoC_sub16_dr(REG0,0x11a8,REG3)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0x07A411A8,	//0x0e42		VoC_sub16_rd(REG4,REG4,0x11a9)(lo)	|	VoC_sub16_dr(REG0,0x11a8,REG3)(hi)
0xD81211A9,	//0x0e44		VoC_lw16_p(REG2,REG1,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x11a9)(hi)
0x11A90709,	//0x0e46		VoC_add16_rd(REG1,REG1,0x11a9)
0x1504FE42,	//0x0e48		VoC_sw16_d(REG4,0x8db)(lo)	|	VoC_shru16_rr(REG2,REG0,DEFAULT)
0xFE5A08DB,	//0x0e4a		VoC_shru16_rr(REG2,REG3,DEFAULT)	|	VoC_sw16_d(REG4,0x8db)(hi)
0x08D51501,	//0x0e4c		VoC_sw16_d(REG1,0x8d5)
0x11B50B1C,	//0x0e4e		VoC_sub16_dr(REG4,0x11b5,REG3)
0x1504F003,	//0x0e50		VoC_sw16_d(REG4,0x8d7)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x158108D7,	//0x0e52		VoC_sw32_d(REG23,0x8d8)(lo)	|	VoC_sw16_d(REG4,0x8d7)(hi)
0xE58008D8,	//0x0e54		VoC_return	|	VoC_sw32_d(REG23,0x8d8)(hi)
		//0x0e56		CII_ibstrmReset_VOC
0xF000FF46,	//0x0e56		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
0x1586F022,	//0x0e58		VoC_sw32_d(RL6,0x8d8)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x150008D8,	//0x0e5a		VoC_sw16_d(REG0,0x8d7)(lo)	|	VoC_sw32_d(RL6,0x8d8)(hi)
0x150008D7,	//0x0e5c		VoC_sw16_d(REG0,0x8db)(lo)	|	VoC_sw16_d(REG0,0x8d7)(hi)
0x150208DB,	//0x0e5e		VoC_sw16_d(REG2,0x8dd)(lo)	|	VoC_sw16_d(REG0,0x8db)(hi)
0xE58008DD,	//0x0e60		VoC_return	|	VoC_sw16_d(REG2,0x8dd)(hi)
		//0x0e62		CII_prvFinalLoad_VOC
0xDFC6DFE9,	//0x0e62		VoC_push16(REG6,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF007DF47,	//0x0e64		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0xF000FF47,	//0x0e66		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0x08DB1401,	//0x0e68		VoC_lw16_d(REG1,0x8db)
0x08D52006,	//0x0e6a		VoC_lw16d_set_inc(REG2,0x8d5,0x1)
0xF005F103,	//0x0e6c		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0xFFC0F026,	//0x0e6e		VoC_NAD	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x0e70		FLLOOP_BEGIN_1
0x0E783141,	//0x0e70		VoC_bngtz16_r(FLLOOP_END_1,REG1)
0xD8A4FDC7,	//0x0e72		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff8,DEFAULT)
0xE517C271,	//0x0e74		VoC_or32_rr(RL7,REG45,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG6,DEFAULT)
0xE5F9C018,	//0x0e76		VoC_jump(FLLOOP_BEGIN_1)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
		//0x0e78		FLLOOP_END_1
0x08DB1501,	//0x0e78		VoC_sw16_d(REG1,0x8db)
0x08D81587,	//0x0e7a		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x0e7c		VoC_sw16_d(REG2,0x8d5)
0x08D71500,	//0x0e7e		VoC_sw16_d(REG0,0x8d7)
0x0CF22B80,	//0x0e80		VoC_jal(CII_ibstrmGetMoreData_VOC)
0xDF86E0A7,	//0x0e82		VoC_pop16(REG6,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
0x0EA23184,	//0x0e84		VoC_bez16_r(IBUFLEN_EZ,REG4)
0x08D81487,	//0x0e86		VoC_lw32_d(RL7,0x8d8)
0x08D71400,	//0x0e88		VoC_lw16_d(REG0,0x8d7)
0x08DB1401,	//0x0e8a		VoC_lw16_d(REG1,0x8db)
0x08D52006,	//0x0e8c		VoC_lw16d_set_inc(REG2,0x8d5,0x1)
0xF103FF46,	//0x0e8e		VoC_lw16i_short(REG3,0x8,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
0xFFC0F024,	//0x0e90		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
		//0x0e92		FLLOOP_BEGIN_2
0x0E9A34B0,	//0x0e92		VoC_bngt16_rr(FLLOOP_END_2,REG6,REG0)
0xD8ACFDC7,	//0x0e94		VoC_lw16inc_p(RL6_LO,REG2,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff8,DEFAULT)
0xE537C261,	//0x0e96		VoC_or32_rr(RL7,RL6,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)
0xE5F9C018,	//0x0e98		VoC_jump(FLLOOP_BEGIN_2)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
		//0x0e9a		FLLOOP_END_2
0x08DB1501,	//0x0e9a		VoC_sw16_d(REG1,0x8db)
0x08D81587,	//0x0e9c		VoC_sw32_d(RL7,0x8d8)
0x08D51502,	//0x0e9e		VoC_sw16_d(REG2,0x8d5)
0x08D71500,	//0x0ea0		VoC_sw16_d(REG0,0x8d7)
		//0x0ea2		IBUFLEN_EZ
0xE0C5DF07,	//0x0ea2		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0x11A80B36,	//0x0ea4		VoC_sub16_dr(REG6,0x11a8,REG6)
0x0A81F9FD,	//0x0ea6		VoC_lw16i(REG1,0x6000)(lo)	|	VoC_shru16_ri(REG5,0xffffffff,DEFAULT)
0xFEF76000,	//0x0ea8		VoC_shru32_rr(RL7,REG6,DEFAULT)	|	VoC_lw16i(REG1,0x6000)(hi)
0x08D81486,	//0x0eaa		VoC_lw32_d(RL6,0x8d8)
0x0730C069,	//0x0eac		VoC_add16_rd(REG0,REG6,0x8d7)(lo)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xD98908D7,	//0x0eae		VoC_lw32_p(REG23,REG1,DEFAULT)	|	VoC_add16_rd(REG0,REG6,0x8d7)(hi)
0x0734FEC6,	//0x0eb0		VoC_add16_rd(REG4,REG6,0x8d7)(lo)	|	VoC_shru32_rr(RL6,REG0,DEFAULT)
0xE4CE08D7,	//0x0eb2		VoC_and32_rr(RL6,REG23,DEFAULT)	|	VoC_add16_rd(REG4,REG6,0x8d7)(hi)
0x08D71504,	//0x0eb4		VoC_sw16_d(REG4,0x8d7)
0xDFA9E537,	//0x0eb6		VoC_pop16(RA,DEFAULT)	|	VoC_or32_rr(RL7,RL6,DEFAULT)
0xE580FFC0,	//0x0eb8		VoC_return	|	VoC_NOP
		//0x0eba		CII_WMARawDecCBGetData_VOC
0x6E23DFE9,	//0x0eba		VoC_bnez16_d(BLOCKLEFT_PAYLOADLEFT_EQZ_END,0x805)(lo)	|	VoC_push16(RA,DEFAULT)
0x6E210805,	//0x0ebc		VoC_bnez16_d(BLOCKLEFT_PAYLOADLEFT_EQZ_END,0x804)(lo)	|	VoC_bnez16_d(BLOCKLEFT_PAYLOADLEFT_EQZ_END,0x805)(hi)
0xF1010804,	//0x0ebe		VoC_lw16i_short(REG1,0x8,DEFAULT)	|	VoC_bnez16_d(BLOCKLEFT_PAYLOADLEFT_EQZ_END,0x804)(hi)
0x08061400,	//0x0ec0		VoC_lw16_d(REG0,0x806)
0x08061501,	//0x0ec2		VoC_sw16_d(REG1,0x806)
0x2B80DFC0,	//0x0ec4		VoC_jal(CII_WMAF_UpdateNewPayload_VOC)(lo)	|	VoC_push16(REG0,DEFAULT)
0xE0E112A7,	//0x0ec6		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_jal(CII_WMAF_UpdateNewPayload_VOC)(hi)
0xDF80F242,	//0x0ec8		VoC_pop16(REG0,DEFAULT)	|	VoC_lw16i_short(REG2,0x12,DEFAULT)
0x0ED0358A,	//0x0eca		VoC_bne16_rr(RC_EQ_NOMOREDATATHISTIME_END,REG1,REG2)
0xF005F001,	//0x0ecc		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x0F1A2B00,	//0x0ece		VoC_jump_lg(FUNCTION_END)
		//0x0ed0		RC_EQ_NOMOREDATATHISTIME_END
0x08061500,	//0x0ed0		VoC_sw16_d(REG0,0x806)
0x089E6C06,	//0x0ed2		VoC_bez16_d(COMPRESSEDPAYLOAD_EQ1_END,0x89e)
0xF005F001,	//0x0ed4		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x0F1A2B00,	//0x0ed6		VoC_jump_lg(FUNCTION_END)
		//0x0ed8		COMPRESSEDPAYLOAD_EQ1_END
0x0EDE3181,	//0x0ed8		VoC_bez16_r(BLOCKLEFT_PAYLOADLEFT_EQZ_END,REG1)
0xF065F001,	//0x0eda		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x0F1A2B00,	//0x0edc		VoC_jump_lg(FUNCTION_END)
		//0x0ede		BLOCKLEFT_PAYLOADLEFT_EQZ_END
0x08056E16,	//0x0ede		VoC_bnez16_d(BLOCKLEFT_EQZ_END,0x805)
0x08046E06,	//0x0ee0		VoC_bnez16_d(PAYLOADLEFT_EQZ_END,0x804)
0xF065F001,	//0x0ee2		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x0F1A2B00,	//0x0ee4		VoC_jump_lg(FUNCTION_END)
		//0x0ee6		PAYLOADLEFT_EQZ_END
0x08041400,	//0x0ee6		VoC_lw16_d(REG0,0x804)
0x0781F022,	//0x0ee8		VoC_sub16_rd(REG1,REG0,0x89a)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x1403089A,	//0x0eea		VoC_lw16_d(REG3,0x89a)(lo)	|	VoC_sub16_rd(REG1,REG0,0x89a)(hi)
0x1501089A,	//0x0eec		VoC_sw16_d(REG1,0x804)(lo)	|	VoC_lw16_d(REG3,0x89a)(hi)
0x15020804,	//0x0eee		VoC_sw16_d(REG2,0x807)(lo)	|	VoC_sw16_d(REG1,0x804)(hi)
0x15030807,	//0x0ef0		VoC_sw16_d(REG3,0x805)(lo)	|	VoC_sw16_d(REG2,0x807)(hi)
0xFFC00805,	//0x0ef2		VoC_NAD	|	VoC_sw16_d(REG3,0x805)(hi)
		//0x0ef4		BLOCKLEFT_EQZ_END
0x00800A81,	//0x0ef4		VoC_lw16i(REG1,0x80)
0x3C29FFC0,	//0x0ef6		VoC_bngt16_rd(GET_NUM_BYTES_END,REG1,0x805)(lo)	|	VoC_NOP
0x14010805,	//0x0ef8		VoC_lw16_d(REG1,0x805)(lo)	|	VoC_bngt16_rd(GET_NUM_BYTES_END,REG1,0x805)(hi)
0xFFC00805,	//0x0efa		VoC_NAD	|	VoC_lw16_d(REG1,0x805)(hi)
		//0x0efc		GET_NUM_BYTES_END
0x08081486,	//0x0efc		VoC_lw32_d(RL6,0x808)
0x0F1E2B80,	//0x0efe		VoC_jal(CII_WMAStrmCBGetData_RawDec_VOC)
0x1400FF07,	//0x0f00		VoC_lw16_d(REG0,0x88a)(lo)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xFC87088A,	//0x0f02		VoC_shru32_ri(RL7,0x10,DEFAULT)	|	VoC_lw16_d(REG0,0x88a)(hi)
0x08050B0B,	//0x0f04		VoC_sub16_dr(REG3,0x805,REG1)
0x0808093E,	//0x0f06		VoC_add32_rd(RL6,RL7,0x808)
0x08051503,	//0x0f08		VoC_sw16_d(REG3,0x805)
0x08081586,	//0x0f0a		VoC_sw32_d(RL6,0x808)
0x08071402,	//0x0f0c		VoC_lw16_d(REG2,0x807)
0x0F123180,	//0x0f0e		VoC_bez16_r(HAS_NO_DRM,REG0)
0xE5C9F065,	//0x0f10		VoC_jump(FUNCTION_END)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
		//0x0f12		HAS_NO_DRM
0x0F193182,	//0x0f12		VoC_bez16_r(NOT_BLOCK_START,REG2)
0xF065F000,	//0x0f14		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x08071500,	//0x0f16		VoC_sw16_d(REG0,0x807)
0xF005E5C2,	//0x0f18		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_jump(FUNCTION_END)
		//0x0f19		NOT_BLOCK_START
		//0x0f1a		FUNCTION_END
0xFFC0DFA9,	//0x0f1a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x0f1c		VoC_NAD	|	VoC_return
		//0x0f1e		CII_WMAStrmCBGetData_RawDec_VOC
0x080009B1,	//0x0f1e		VoC_sub32_rd(REG23,RL6,0x800)
0x08020B15,	//0x0f20		VoC_sub16_dr(REG5,0x802,REG2)
0x348DFFC0,	//0x0f22		VoC_bngt16_rr(WMAUPDATE_STRM_END,REG1,REG5)(lo)	|	VoC_NOP
0xDFE90F2A,	//0x0f24		VoC_push16(RA,DEFAULT)	|	VoC_bngt16_rr(WMAUPDATE_STRM_END,REG1,REG5)(hi)
0x138D2B80,	//0x0f26		VoC_jal(CII_WMAFileCBGetData_VOC)
0xDFA9FFC0,	//0x0f28		VoC_pop16(RA,DEFAULT)	|	VoC_NOP
		//0x0f2a		WMAUPDATE_STRM_END
0x0A84E040,	//0x0f2a		VoC_lw16i(REG4,0x0)(lo)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0xF8080000,	//0x0f2c		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x00000A85,	//0x0f2e		VoC_lw16i(REG5,0x0)
0x1602C020,	//0x0f30		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xF0300001,	//0x0f32		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_and16_ri(REG2,0x1)(hi)
0x00010A87,	//0x0f34		VoC_lw16i(REG7,0x1)
0x0A83D886,	//0x0f36		VoC_lw16i(REG3,0x80a)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF033080A,	//0x0f38		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw16i(REG3,0x80a)(hi)
0x0F4331C2,	//0x0f3a		VoC_bnez16_r(CBGREAD_BYTE_2,REG2)
		//0x0f3c		CBGREAD_BYTE_1
0x348DE0C4,	//0x0f3c		VoC_bngt16_rr(CBGGET_BYTES_END,REG1,REG5)(lo)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x16040F4A,	//0x0f3e		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_bngt16_rr(CBGGET_BYTES_END,REG1,REG5)(hi)
0xC17D00FF,	//0x0f40		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xF946DCB4,	//0x0f42		VoC_shru16_ri(REG6,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x0f43		CBGREAD_BYTE_2
0x0F4A348D,	//0x0f44		VoC_bngt16_rr(CBGGET_BYTES_END,REG1,REG5)
0xC17DDCB6,	//0x0f46		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xE5F3D886,	//0x0f48		VoC_jump(CBGREAD_BYTE_1)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x0f4a		CBGGET_BYTES_END
0xDFE9E580,	//0x0f4a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f4b		CII_WMAStrmCBGetData_PHdrParse_VOC
0x080009B1,	//0x0f4c		VoC_sub32_rd(REG23,RL6,0x800)
0x08021404,	//0x0f4e		VoC_lw16_d(REG4,0x802)
0x348DC315,	//0x0f50		VoC_bngt16_rr(CBDUPDATE_STRM_END,REG1,REG5)(lo)	|	VoC_sub16_rr(REG5,REG4,REG2,DEFAULT)
0x2B800F55,	//0x0f52		VoC_jal(CII_WMAFileCBGetData_VOC)(lo)	|	VoC_bngt16_rr(CBDUPDATE_STRM_END,REG1,REG5)(hi)
0xE040138D,	//0x0f54		VoC_movreg16(REG0,REG2,DEFAULT)	|	VoC_jal(CII_WMAFileCBGetData_VOC)(hi)
		//0x0f55		CBDUPDATE_STRM_END
0x00000A84,	//0x0f56		VoC_lw16i(REG4,0x0)
0x0A85F808,	//0x0f58		VoC_lw16i(REG5,0x0)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xC0200000,	//0x0f5a		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x0)(hi)
0x00011602,	//0x0f5c		VoC_and16_ri(REG2,0x1)
0x0A87F030,	//0x0f5e		VoC_lw16i(REG7,0x1)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xD8860001,	//0x0f60		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16i(REG7,0x1)(hi)
0x0C401807,	//0x0f62		VoC_lw16i_set_inc(REG3,0xc40,0x1)
0x0F6D31C2,	//0x0f64		VoC_bnez16_r(READ_BYTE_2,REG2)
		//0x0f66		READ_BYTE_1
0x348DE0C4,	//0x0f66		VoC_bngt16_rr(GET_BYTES_END,REG1,REG5)(lo)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x16040F74,	//0x0f68		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_bngt16_rr(GET_BYTES_END,REG1,REG5)(hi)
0xC17D00FF,	//0x0f6a		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xF946DCB4,	//0x0f6c		VoC_shru16_ri(REG6,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x0f6d		READ_BYTE_2
0x0F74348D,	//0x0f6e		VoC_bngt16_rr(GET_BYTES_END,REG1,REG5)
0xC17DDCB6,	//0x0f70		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xE5F3D886,	//0x0f72		VoC_jump(READ_BYTE_1)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x0f74		GET_BYTES_END
0xFFC0DFA9,	//0x0f74		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0f76		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f77		CII_WMA_ParsePacketHeader_VOC
0x1486F021,	//0x0f78		VoC_lw32_d(RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xFFC00892,	//0x0f7a		VoC_NAD	|	VoC_lw32_d(RL6,0x892)(hi)
0x0F4B2B80,	//0x0f7c		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x11A94029,	//0x0f7e		VoC_be16_rd(LOAD_1BYTES_OK,REG1,0x11a9)
0x2B00F067,	//0x0f80		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFF461174,	//0x0f82		VoC_lw32z(RL6,DEFAULT)	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x0f83		LOAD_1BYTES_OK
0x0C401401,	//0x0f84		VoC_lw16_d(REG1,0xc40)
0x08B41586,	//0x0f86		VoC_sw32_d(RL6,0x8b4)
0xF939E020,	//0x0f88		VoC_shru16_ri(REG1,0x7,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x08B0150C,	//0x0f8a		VoC_sw16_d(RL6_LO,0x8b0)
0x08B11501,	//0x0f8c		VoC_sw16_d(REG1,0x8b1)
0x08B2150C,	//0x0f8e		VoC_sw16_d(RL6_LO,0x8b2)
0x08B16C2C,	//0x0f90		VoC_bez16_d(FECCPRESENT_FALSE,0x8b1)
0xE002E001,	//0x0f92		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x11B52801,	//0x0f94		VoC_and16_rd(REG1,0x11b5)
0x11BD2802,	//0x0f96		VoC_and16_rd(REG2,0x11bd)
0x0FA03181,	//0x0f98		VoC_bez16_r(FALSE_1,REG1)
0xF007F023,	//0x0f9a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x08B01503,	//0x0f9c		VoC_sw16_d(REG3,0x8b0)
0x11742B00,	//0x0f9e		VoC_jump_lg(PPHFUNCTION_END)
		//0x0fa0		FALSE_1
0x0FA63182,	//0x0fa0		VoC_bez16_r(FALSE_2,REG2)
0x2B00F027,	//0x0fa2		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC01174,	//0x0fa4		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x0fa6		FALSE_2
0x11B42800,	//0x0fa6		VoC_and16_rd(REG0,0x11b4)
0x1500F003,	//0x0fa8		VoC_sw16_d(REG0,0x8b2)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x070208B2,	//0x0faa		VoC_add16_rd(REG2,REG0,0x11a9)(lo)	|	VoC_sw16_d(REG0,0x8b2)(hi)
0x402811A9,	//0x0fac		VoC_be16_rd(BECLEN_NE_2,REG0,0x11aa)(lo)	|	VoC_add16_rd(REG2,REG0,0x11a9)(hi)
0xF02711AA,	//0x0fae		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_be16_rd(BECLEN_NE_2,REG0,0x11aa)(hi)
0x11742B00,	//0x0fb0		VoC_jump_lg(PPHFUNCTION_END)
		//0x0fb2		BECLEN_NE_2
0x08B41581,	//0x0fb2		VoC_sw32_d(REG23,0x8b4)
0x090EF021,	//0x0fb4		VoC_add32_rd(RL6,REG23,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xFFC00892,	//0x0fb6		VoC_NAD	|	VoC_add32_rd(RL6,REG23,0x892)(hi)
0x0F4B2B80,	//0x0fb8		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C401400,	//0x0fba		VoC_lw16_d(REG0,0xc40)
		//0x0fbc		FECCPRESENT_FALSE
0x08B41486,	//0x0fbc		VoC_lw32_d(RL6,0x8b4)
0xE002E001,	//0x0fbe		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x11BD2801,	//0x0fc0		VoC_and16_rd(REG1,0x11bd)
0x08B61586,	//0x0fc2		VoC_sw32_d(RL6,0x8b6)
0x2802F929,	//0x0fc4		VoC_and16_rd(REG2,0x11b7)(lo)	|	VoC_shru16_ri(REG1,0x5,DEFAULT)
0x150111B7,	//0x0fc6		VoC_sw16_d(REG1,0x8b3)(lo)	|	VoC_and16_rd(REG2,0x11b7)(hi)
0xF91A08B3,	//0x0fc8		VoC_shru16_ri(REG2,0x3,DEFAULT)	|	VoC_sw16_d(REG1,0x8b3)(hi)
0x0FD23181,	//0x0fca		VoC_bez16_r(BPACKETLENTYPE_NEZ,REG1)
0x11AA4031,	//0x0fcc		VoC_be16_rd(BPACKETLENTYPE_NEZ,REG1,0x11aa)
0x2B00F027,	//0x0fce		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC01174,	//0x0fd0		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x0fd2		BPACKETLENTYPE_NEZ
0x08B81502,	//0x0fd2		VoC_sw16_d(REG2,0x8b8)
0x11AB4432,	//0x0fd4		VoC_bne16_rd(BPADLENTYPE_NE3,REG2,0x11ab)
0x2B00F027,	//0x0fd6		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC01174,	//0x0fd8		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x0fda		BPADLENTYPE_NE3
0x11C40936,	//0x0fda		VoC_add32_rd(RL6,RL6,0x11c4)
0x1586E001,	//0x0fdc		VoC_sw32_d(RL6,0x8b4)(lo)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x280008B4,	//0x0fde		VoC_and16_rd(REG0,0x11ae)(lo)	|	VoC_sw32_d(RL6,0x8b4)(hi)
0x280111AE,	//0x0fe0		VoC_and16_rd(REG1,0x11a9)(lo)	|	VoC_and16_rd(REG0,0x11ae)(hi)
0xF90811A9,	//0x0fe2		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_rd(REG1,0x11a9)(hi)
0x08BA1501,	//0x0fe4		VoC_sw16_d(REG1,0x8ba)
0x08B91500,	//0x0fe6		VoC_sw16_d(REG0,0x8b9)
0x0936F021,	//0x0fe8		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xFFC00892,	//0x0fea		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x0fec		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C401400,	//0x0fee		VoC_lw16_d(REG0,0xc40)
0xF063F082,	//0x0ff0		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x08BB1502,	//0x0ff2		VoC_sw16_d(REG2,0x8bb)
0x08BC1503,	//0x0ff4		VoC_sw16_d(REG3,0x8bc)
0x11BC4420,	//0x0ff6		VoC_bne16_rd(BE_0X5D_not,REG0,0x11bc)
0x10222B00,	//0x0ff8		VoC_jump_lg(BE_0X5D)
		//0x0ffa		BE_0X5D_not
0xE002E001,	//0x0ffa		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x2801E003,	//0x0ffc		VoC_and16_rd(REG1,0x11bf)(lo)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x280211BF,	//0x0ffe		VoC_and16_rd(REG2,0x11ba)(lo)	|	VoC_and16_rd(REG1,0x11bf)(hi)
0x280311BA,	//0x1000		VoC_and16_rd(REG3,0x11b3)(lo)	|	VoC_and16_rd(REG2,0x11ba)(hi)
0x402911B3,	//0x1002		VoC_be16_rd(BE_0X40,REG1,0x11bb)(lo)	|	VoC_and16_rd(REG3,0x11b3)(hi)
0xF02711BB,	//0x1004		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_be16_rd(BE_0X40,REG1,0x11bb)(hi)
0x11742B00,	//0x1006		VoC_jump_lg(PPHFUNCTION_END)
		//0x1008		BE_0X40
0x11B5402A,	//0x1008		VoC_be16_rd(BE_0X10,REG2,0x11b5)
0x2B00F027,	//0x100a		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xF9131174,	//0x100c		VoC_shru16_ri(REG3,0x2,DEFAULT)	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x100d		BE_0X10
0x11AB2800,	//0x100e		VoC_and16_rd(REG0,0x11ab)
0x08BC1503,	//0x1010		VoC_sw16_d(REG3,0x8bc)
0x101831C3,	//0x1012		VoC_bnez16_r(BOFFSETLENTYPE_NEZ,REG3)
0x2B00F027,	//0x1014		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC01174,	//0x1016		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x1018		BOFFSETLENTYPE_NEZ
0x11AB4C23,	//0x1018		VoC_bnlt16_rd(BOFFSETLENTYPE_NLT_3,REG3,0x11ab)
0x08BB1503,	//0x101a		VoC_sw16_d(REG3,0x8bb)
		//0x101c		BOFFSETLENTYPE_NLT_3
0x11A94030,	//0x101c		VoC_be16_rd(BE_0X5D,REG0,0x11a9)
0x2B00F027,	//0x101e		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC01174,	//0x1020		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x1022		BE_0X5D
0x08B41486,	//0x1022		VoC_lw32_d(RL6,0x8b4)
0x0936F021,	//0x1024		VoC_add32_rd(RL6,RL6,0x11c4)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x140611C4,	//0x1026		VoC_lw16_d(REG6,0x8b3)(lo)	|	VoC_add32_rd(RL6,RL6,0x11c4)(hi)
0x158608B3,	//0x1028		VoC_sw32_d(RL6,0x8be)(lo)	|	VoC_lw16_d(REG6,0x8b3)(hi)
0x158608BE,	//0x102a		VoC_sw32_d(RL6,0x8b4)(lo)	|	VoC_sw32_d(RL6,0x8be)(hi)
0x452E08B4,	//0x102c		VoC_bne16_rd(BPACKETLENTYPE_NE_OX01,REG6,0x11a9)(lo)	|	VoC_sw32_d(RL6,0x8b4)(hi)
0x093611A9,	//0x102e		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_bne16_rd(BPACKETLENTYPE_NE_OX01,REG6,0x11a9)(hi)
0xFFC00892,	//0x1030		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x1032		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C401400,	//0x1034		VoC_lw16_d(REG0,0xc40)
0x08B41486,	//0x1036		VoC_lw32_d(RL6,0x8b4)
0x0936F001,	//0x1038		VoC_add32_rd(RL6,RL6,0x11c4)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x158011C4,	//0x103a		VoC_sw32_d(REG01,0x8c0)(lo)	|	VoC_add32_rd(RL6,RL6,0x11c4)(hi)
0x158608C0,	//0x103c		VoC_sw32_d(RL6,0x8b4)(lo)	|	VoC_sw32_d(REG01,0x8c0)(hi)
0x2B0008B4,	//0x103e		VoC_jump_lg(CASE_BPACKETLENTYPE_END)(lo)	|	VoC_sw32_d(RL6,0x8b4)(hi)
0xFFC01074,	//0x1040		VoC_NAD	|	VoC_jump_lg(CASE_BPACKETLENTYPE_END)(hi)
		//0x1042		BPACKETLENTYPE_NE_OX01
0x11AA4586,	//0x1042		VoC_bne16_rd(BPACKETLENTYPE_NE_OX02,REG6,0x11aa)
0x0936F041,	//0x1044		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC00892,	//0x1046		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x1048		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411400,	//0x104a		VoC_lw16_d(REG0,0xc41)
0xF042F001,	//0x104c		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xF003F9C0,	//0x104e		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C402880,	//0x1050		VoC_or16_rd(REG0,0xc40)
0x08B40909,	//0x1052		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C01580,	//0x1054		VoC_sw32_d(REG01,0x8c0)
0x08B41581,	//0x1056		VoC_sw32_d(REG23,0x8b4)
0xFFC0E5DC,	//0x1058		VoC_NAD	|	VoC_jump(CASE_BPACKETLENTYPE_END)
		//0x105a		BPACKETLENTYPE_NE_OX02
0x11AB4596,	//0x105a		VoC_bne16_rd(CASE_BPACKETLENTYPE_END,REG6,0x11ab)
0x0936F081,	//0x105c		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xFFC00892,	//0x105e		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x1060		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411400,	//0x1062		VoC_lw16_d(REG0,0xc41)
0x0C431401,	//0x1064		VoC_lw16_d(REG1,0xc43)
0xF9C0F082,	//0x1066		VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xF003F9C1,	//0x1068		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_shru16_ri(REG1,0xfffffff8,DEFAULT)
0x0C402880,	//0x106a		VoC_or16_rd(REG0,0xc40)
0x0C422881,	//0x106c		VoC_or16_rd(REG1,0xc42)
0x08B40909,	//0x106e		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C01580,	//0x1070		VoC_sw32_d(REG01,0x8c0)
0x08B41581,	//0x1072		VoC_sw32_d(REG23,0x8b4)
		//0x1074		CASE_BPACKETLENTYPE_END
0x08B41486,	//0x1074		VoC_lw32_d(RL6,0x8b4)
0x08B91406,	//0x1076		VoC_lw16_d(REG6,0x8b9)
0x08C21586,	//0x1078		VoC_sw32_d(RL6,0x8c2)
0x11A94526,	//0x107a		VoC_bne16_rd(BSEQUENCELENTYPE_NE_0X01,REG6,0x11a9)
0x0936F021,	//0x107c		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x2B800892,	//0x107e		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(lo)	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0xF0010F4B,	//0x1080		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(hi)
0x08B41486,	//0x1082		VoC_lw32_d(RL6,0x8b4)
0x0C401400,	//0x1084		VoC_lw16_d(REG0,0xc40)
0x11C40936,	//0x1086		VoC_add32_rd(RL6,RL6,0x11c4)
0x08C41580,	//0x1088		VoC_sw32_d(REG01,0x8c4)
0x08B41586,	//0x108a		VoC_sw32_d(RL6,0x8b4)
0x10C02B00,	//0x108c		VoC_jump_lg(CASE_BSEQUENCELENTYPE_END)
		//0x108e		BSEQUENCELENTYPE_NE_0X01
0x11AA4586,	//0x108e		VoC_bne16_rd(BSEQUENCELENTYPE_NE_0X02,REG6,0x11aa)
0x0936F041,	//0x1090		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC00892,	//0x1092		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x1094		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411400,	//0x1096		VoC_lw16_d(REG0,0xc41)
0xF042F001,	//0x1098		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xF003F9C0,	//0x109a		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C402880,	//0x109c		VoC_or16_rd(REG0,0xc40)
0x08B40909,	//0x109e		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C41580,	//0x10a0		VoC_sw32_d(REG01,0x8c4)
0x08B41581,	//0x10a2		VoC_sw32_d(REG23,0x8b4)
0xFFC0E5DC,	//0x10a4		VoC_NAD	|	VoC_jump(CASE_BSEQUENCELENTYPE_END)
		//0x10a6		BSEQUENCELENTYPE_NE_0X02
0x11AB4596,	//0x10a6		VoC_bne16_rd(CASE_BSEQUENCELENTYPE_END,REG6,0x11ab)
0x0936F081,	//0x10a8		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xFFC00892,	//0x10aa		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x10ac		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411400,	//0x10ae		VoC_lw16_d(REG0,0xc41)
0x0C431401,	//0x10b0		VoC_lw16_d(REG1,0xc43)
0xF9C0F082,	//0x10b2		VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xF003F9C1,	//0x10b4		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_shru16_ri(REG1,0xfffffff8,DEFAULT)
0x0C402880,	//0x10b6		VoC_or16_rd(REG0,0xc40)
0x0C422881,	//0x10b8		VoC_or16_rd(REG1,0xc42)
0x08B40909,	//0x10ba		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C41580,	//0x10bc		VoC_sw32_d(REG01,0x8c4)
0x08B41581,	//0x10be		VoC_sw32_d(REG23,0x8b4)
		//0x10c0		CASE_BSEQUENCELENTYPE_END
0x08B41486,	//0x10c0		VoC_lw32_d(RL6,0x8b4)
0x08B81406,	//0x10c2		VoC_lw16_d(REG6,0x8b8)
0x08C61586,	//0x10c4		VoC_sw32_d(RL6,0x8c6)
0x11A94526,	//0x10c6		VoC_bne16_rd(BPADLENTYPE_NE_0X01,REG6,0x11a9)
0x0936F021,	//0x10c8		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x2B800892,	//0x10ca		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(lo)	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0xF0010F4B,	//0x10cc		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(hi)
0x08B41486,	//0x10ce		VoC_lw32_d(RL6,0x8b4)
0x0C401400,	//0x10d0		VoC_lw16_d(REG0,0xc40)
0x11C40936,	//0x10d2		VoC_add32_rd(RL6,RL6,0x11c4)
0x08C81580,	//0x10d4		VoC_sw32_d(REG01,0x8c8)
0x08B41586,	//0x10d6		VoC_sw32_d(RL6,0x8b4)
0x110C2B00,	//0x10d8		VoC_jump_lg(CASE_BPADLENTYPE_END)
		//0x10da		BPADLENTYPE_NE_0X01
0x11AA4586,	//0x10da		VoC_bne16_rd(BPADLENTYPE_NE_0X02,REG6,0x11aa)
0x0936F041,	//0x10dc		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC00892,	//0x10de		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x10e0		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411400,	//0x10e2		VoC_lw16_d(REG0,0xc41)
0xF042F001,	//0x10e4		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xF003F9C0,	//0x10e6		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C402880,	//0x10e8		VoC_or16_rd(REG0,0xc40)
0x08B40909,	//0x10ea		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C81580,	//0x10ec		VoC_sw32_d(REG01,0x8c8)
0x08B41581,	//0x10ee		VoC_sw32_d(REG23,0x8b4)
0xFFC0E5DC,	//0x10f0		VoC_NAD	|	VoC_jump(CASE_BPADLENTYPE_END)
		//0x10f2		BPADLENTYPE_NE_0X02
0x11AB4596,	//0x10f2		VoC_bne16_rd(CASE_BPADLENTYPE_END,REG6,0x11ab)
0x0936F081,	//0x10f4		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xFFC00892,	//0x10f6		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x10f8		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411400,	//0x10fa		VoC_lw16_d(REG0,0xc41)
0x0C431401,	//0x10fc		VoC_lw16_d(REG1,0xc43)
0xF9C0F082,	//0x10fe		VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xF003F9C1,	//0x1100		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_shru16_ri(REG1,0xfffffff8,DEFAULT)
0x0C402880,	//0x1102		VoC_or16_rd(REG0,0xc40)
0x0C422881,	//0x1104		VoC_or16_rd(REG1,0xc42)
0x08B40909,	//0x1106		VoC_add32_rd(REG23,REG23,0x8b4)
0x08C81580,	//0x1108		VoC_sw32_d(REG01,0x8c8)
0x08B41581,	//0x110a		VoC_sw32_d(REG23,0x8b4)
		//0x110c		CASE_BPADLENTYPE_END
0x08B41486,	//0x110c		VoC_lw32_d(RL6,0x8b4)
0x0936F0C1,	//0x110e		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x6,DEFAULT)
0xFFC00892,	//0x1110		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x1112		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x11AE4031,	//0x1114		VoC_be16_rd(LOAD_6BYTES_OK,REG1,0x11ae)
0x2B00F067,	//0x1116		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFFC01174,	//0x1118		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x111a		LOAD_6BYTES_OK
0x0C411400,	//0x111a		VoC_lw16_d(REG0,0xc41)
0x0C431401,	//0x111c		VoC_lw16_d(REG1,0xc43)
0x0C451402,	//0x111e		VoC_lw16_d(REG2,0xc45)
0xF9C1F9C0,	//0x1120		VoC_shru16_ri(REG1,0xfffffff8,DEFAULT)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0xF0C4F9C2,	//0x1122		VoC_lw16i_short(REG4,0x6,DEFAULT)	|	VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)
0x2880F005,	//0x1124		VoC_or16_rd(REG0,0xc40)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x28810C40,	//0x1126		VoC_or16_rd(REG1,0xc42)(lo)	|	VoC_or16_rd(REG0,0xc40)(hi)
0x28820C42,	//0x1128		VoC_or16_rd(REG2,0xc44)(lo)	|	VoC_or16_rd(REG1,0xc42)(hi)
0x09120C44,	//0x112a		VoC_add32_rd(REG45,REG45,0x8b4)(lo)	|	VoC_or16_rd(REG2,0xc44)(hi)
0x158008B4,	//0x112c		VoC_sw32_d(REG01,0x8ca)(lo)	|	VoC_add32_rd(REG45,REG45,0x8b4)(hi)
0x150208CA,	//0x112e		VoC_sw16_d(REG2,0x8bd)(lo)	|	VoC_sw32_d(REG01,0x8ca)(hi)
0x158208BD,	//0x1130		VoC_sw32_d(REG45,0x8b4)(lo)	|	VoC_sw16_d(REG2,0x8bd)(hi)
0xFF4108B4,	//0x1132		VoC_lw32z(REG23,DEFAULT)	|	VoC_sw32_d(REG45,0x8b4)(hi)
0xF001F020,	//0x1134		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x08CE1581,	//0x1136		VoC_sw32_d(REG23,0x8ce)
0x08CC1501,	//0x1138		VoC_sw16_d(REG1,0x8cc)
0x08CD1501,	//0x113a		VoC_sw16_d(REG1,0x8cd)
0x08D01580,	//0x113c		VoC_sw32_d(REG01,0x8d0)
0x08BA6C35,	//0x113e		VoC_bez16_d(PPHFMULTIPACKET_FALSE,0x8ba)
0x08B41486,	//0x1140		VoC_lw32_d(RL6,0x8b4)
0x0936F021,	//0x1142		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xFFC00892,	//0x1144		VoC_NAD	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0x0F4B2B80,	//0x1146		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x11A94031,	//0x1148		VoC_be16_rd(LOAD_1BYTES_OK_2,REG1,0x11a9)
0x2B00F067,	//0x114a		VoC_jump_lg(PPHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFFC01174,	//0x114c		VoC_NAD	|	VoC_jump_lg(PPHFUNCTION_END)(hi)
		//0x114e		LOAD_1BYTES_OK_2
0x0C401402,	//0x114e		VoC_lw16_d(REG2,0xc40)
0x0C401400,	//0x1150		VoC_lw16_d(REG0,0xc40)
0x00C01602,	//0x1152		VoC_and16_ri(REG2,0xc0)
0x08B41486,	//0x1154		VoC_lw32_d(RL6,0x8b4)
0x1586F932,	//0x1156		VoC_sw32_d(RL6,0x8ce)(lo)	|	VoC_shru16_ri(REG2,0x6,DEFAULT)
0x150208CE,	//0x1158		VoC_sw16_d(REG2,0x8cc)(lo)	|	VoC_sw32_d(RL6,0x8ce)(hi)
0x403A08CC,	//0x115a		VoC_be16_rd(BPAYLENTYPE_E2_E1,REG2,0x11aa)(lo)	|	VoC_sw16_d(REG2,0x8cc)(hi)
0x402A11AA,	//0x115c		VoC_be16_rd(BPAYLENTYPE_E2_E1,REG2,0x11a9)(lo)	|	VoC_be16_rd(BPAYLENTYPE_E2_E1,REG2,0x11aa)(hi)
0xF02711A9,	//0x115e		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_be16_rd(BPAYLENTYPE_E2_E1,REG2,0x11a9)(hi)
0xFFC0E5D4,	//0x1160		VoC_NAD	|	VoC_jump(PPHFUNCTION_END)
		//0x1162		BPAYLENTYPE_E2_E1
0x003F1600,	//0x1162		VoC_and16_ri(REG0,0x3f)
0x1502F001,	//0x1164		VoC_sw16_d(REG2,0x8cd)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x158008CD,	//0x1166		VoC_sw32_d(REG01,0x8d0)(lo)	|	VoC_sw16_d(REG2,0x8cd)(hi)
0x334008D0,	//0x1168		VoC_bnez32_r(CPAYLOADS_NEZ,REG01)(lo)	|	VoC_sw32_d(REG01,0x8d0)(hi)
0xF027116E,	//0x116a		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bnez32_r(CPAYLOADS_NEZ,REG01)(hi)
0xFFC0E5C8,	//0x116c		VoC_NAD	|	VoC_jump(PPHFUNCTION_END)
		//0x116e		CPAYLOADS_NEZ
0x11C40936,	//0x116e		VoC_add32_rd(RL6,RL6,0x11c4)
0x1586FFC0,	//0x1170		VoC_sw32_d(RL6,0x8b4)(lo)	|	VoC_NOP
0xF00708B4,	//0x1172		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw32_d(RL6,0x8b4)(hi)
		//0x1173		PPHFMULTIPACKET_FALSE
		//0x1174		PPHFUNCTION_END
0x1507DFA9,	//0x1174		VoC_sw16_d(REG7,0xc48)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800C48,	//0x1176		VoC_return	|	VoC_sw16_d(REG7,0xc48)(hi)
		//0x1178		CII_WMA_ParsePayloadHeader_VOC
0x1486DFE9,	//0x1178		VoC_lw32_d(RL6,0x892)(lo)	|	VoC_push16(RA,DEFAULT)
0xF0410892,	//0x117a		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_lw32_d(RL6,0x892)(hi)
0x08B40936,	//0x117c		VoC_add32_rd(RL6,RL6,0x8b4)
0x0F4B2B80,	//0x117e		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x11AA4031,	//0x1180		VoC_be16_rd(LOAD_2BYTES_OK,REG1,0x11aa)
0x2B00F067,	//0x1182		VoC_jump_lg(PPLHFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFFC012A3,	//0x1184		VoC_NAD	|	VoC_jump_lg(PPLHFUNCTION_END)(hi)
		//0x1186		LOAD_2BYTES_OK
0x08B41400,	//0x1186		VoC_lw16_d(REG0,0x8b4)
0x0C401401,	//0x1188		VoC_lw16_d(REG1,0xc40)
0x0C411402,	//0x118a		VoC_lw16_d(REG2,0xc41)
0x00031601,	//0x118c		VoC_and16_ri(REG1,0x3)
0x08A01500,	//0x118e		VoC_sw16_d(REG0,0x8a0)
0x089F1501,	//0x1190		VoC_sw16_d(REG1,0x89f)
0x08A21502,	//0x1192		VoC_sw16_d(REG2,0x8a2)
0x08921486,	//0x1194		VoC_lw32_d(RL6,0x892)
0xF04EF00F,	//0x1196		VoC_lw16i_short(RL7_LO,0x2,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0x08B40936,	//0x1198		VoC_add32_rd(RL6,RL6,0x8b4)
0x08BC1406,	//0x119a		VoC_lw16_d(REG6,0x8bc)
0x44AEC9BE,	//0x119c		VoC_bne16_rd(BOFFSETLENTYPE_NE_0X01,REG6,0x11a9)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0xF02111A9,	//0x119e		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_bne16_rd(BOFFSETLENTYPE_NE_0X01,REG6,0x11a9)(hi)
0x0F4B2B80,	//0x11a0		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x1400F001,	//0x11a2		VoC_lw16_d(REG0,0xc40)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC00C40,	//0x11a4		VoC_NOP	|	VoC_lw16_d(REG0,0xc40)(hi)
0x08A41580,	//0x11a6		VoC_sw32_d(REG01,0x8a4)
0x11CE2B00,	//0x11a8		VoC_jump_lg(SWITCH_BOFFSETLENTYPE_END)
		//0x11aa		BOFFSETLENTYPE_NE_0X01
0x11AA4506,	//0x11aa		VoC_bne16_rd(BOFFSETLENTYPE_NE_0X02,REG6,0x11aa)
0xFFC0F041,	//0x11ac		VoC_NAD	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x0F4B2B80,	//0x11ae		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411400,	//0x11b0		VoC_lw16_d(REG0,0xc41)
0xF001F9C0,	//0x11b2		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C402880,	//0x11b4		VoC_or16_rd(REG0,0xc40)
0x1580FFC0,	//0x11b6		VoC_sw32_d(REG01,0x8a4)(lo)	|	VoC_NOP
0xE5D508A4,	//0x11b8		VoC_jump(SWITCH_BOFFSETLENTYPE_END)	|	VoC_sw32_d(REG01,0x8a4)(hi)
		//0x11ba		BOFFSETLENTYPE_NE_0X02
0x11AB4526,	//0x11ba		VoC_bne16_rd(SWITCH_BOFFSETLENTYPE_END,REG6,0x11ab)
0xFFC0F081,	//0x11bc		VoC_NAD	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x0F4B2B80,	//0x11be		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411400,	//0x11c0		VoC_lw16_d(REG0,0xc41)
0x0C431401,	//0x11c2		VoC_lw16_d(REG1,0xc43)
0xF9C1F9C0,	//0x11c4		VoC_shru16_ri(REG1,0xfffffff8,DEFAULT)	|	VoC_shru16_ri(REG0,0xfffffff8,DEFAULT)
0x0C402880,	//0x11c6		VoC_or16_rd(REG0,0xc40)
0x0C422881,	//0x11c8		VoC_or16_rd(REG1,0xc42)
0x1580FFC0,	//0x11ca		VoC_sw32_d(REG01,0x8a4)(lo)	|	VoC_NOP
0xFFC008A4,	//0x11cc		VoC_NAD	|	VoC_sw32_d(REG01,0x8a4)(hi)
		//0x11ce		SWITCH_BOFFSETLENTYPE_END
0x08BB1402,	//0x11ce		VoC_lw16_d(REG2,0x8bb)
0xF021F003,	//0x11d0		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xFFC0C98E,	//0x11d2		VoC_NAD	|	VoC_add32_rr(RL6,RL6,REG23,DEFAULT)
0x0F4B2B80,	//0x11d4		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C401400,	//0x11d6		VoC_lw16_d(REG0,0xc40)
0x11CA1481,	//0x11d8		VoC_lw32_d(REG23,0x11ca)
0x08AA1500,	//0x11da		VoC_sw16_d(REG0,0x8aa)
0x08A81581,	//0x11dc		VoC_sw32_d(REG23,0x8a8)
0x0936F006,	//0x11de		VoC_add32_rd(RL6,RL6,0x11c4)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x45B811C4,	//0x11e0		VoC_bne16_rd(CBREPDATA_NE_1,REG0,0x11a9)(lo)	|	VoC_add32_rd(RL6,RL6,0x11c4)(hi)
0x148711A9,	//0x11e2		VoC_lw32_d(RL7,0x8a4)(lo)	|	VoC_bne16_rd(CBREPDATA_NE_1,REG0,0x11a9)(hi)
0xF02408A4,	//0x11e4		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw32_d(RL7,0x8a4)(hi)
0x1587FF41,	//0x11e6		VoC_sw32_d(RL7,0x8a8)(lo)	|	VoC_lw32z(REG23,DEFAULT)
0x158108A8,	//0x11e8		VoC_sw32_d(REG23,0x8a4)(lo)	|	VoC_sw32_d(RL7,0x8a8)(hi)
0x158108A4,	//0x11ea		VoC_sw32_d(REG23,0x8a6)(lo)	|	VoC_sw32_d(REG23,0x8a4)(hi)
0x150408A6,	//0x11ec		VoC_sw16_d(REG4,0x89e)(lo)	|	VoC_sw32_d(REG23,0x8a6)(hi)
0xF061089E,	//0x11ee		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_sw16_d(REG4,0x89e)(hi)
0x2B80DFC6,	//0x11f0		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(lo)	|	VoC_push16(REG6,DEFAULT)
0xDF860F4B,	//0x11f2		VoC_pop16(REG6,DEFAULT)	|	VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)(hi)
0x0C406A30,	//0x11f4		VoC_bngtz16_d(CBREPDATA_END,0xc40)
0x08BA6C2E,	//0x11f6		VoC_bez16_d(CBREPDATA_END,0x8ba)
0x0C421406,	//0x11f8		VoC_lw16_d(REG6,0xc42)
0xFFC0F9C6,	//0x11fa		VoC_NOP	|	VoC_shru16_ri(REG6,0xfffffff8,DEFAULT)
0x0C412886,	//0x11fc		VoC_or16_rd(REG6,0xc41)
0x12242B00,	//0x11fe		VoC_jump_lg(CBREPDATA_END)
		//0x1200		CBREPDATA_NE_1
0x11B04C20,	//0x1200		VoC_bnlt16_rd(CBREPDATA_con,REG0,0x11b0)
0x12242B00,	//0x1202		VoC_jump_lg(CBREPDATA_END)
		//0x1204		CBREPDATA_con
0xDFC6F101,	//0x1204		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0x0F4B2B80,	//0x1206		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x1402DF86,	//0x1208		VoC_lw16_d(REG2,0xc41)(lo)	|	VoC_pop16(REG6,DEFAULT)
0x14030C41,	//0x120a		VoC_lw16_d(REG3,0xc43)(lo)	|	VoC_lw16_d(REG2,0xc41)(hi)
0xF9C20C43,	//0x120c		VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)	|	VoC_lw16_d(REG3,0xc43)(hi)
0x2882F9C3,	//0x120e		VoC_or16_rd(REG2,0xc40)(lo)	|	VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)
0x28830C40,	//0x1210		VoC_or16_rd(REG3,0xc42)(lo)	|	VoC_or16_rd(REG2,0xc40)(hi)
0x14040C42,	//0x1212		VoC_lw16_d(REG4,0xc45)(lo)	|	VoC_or16_rd(REG3,0xc42)(hi)
0x14050C45,	//0x1214		VoC_lw16_d(REG5,0xc47)(lo)	|	VoC_lw16_d(REG4,0xc45)(hi)
0xF9C40C47,	//0x1216		VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_lw16_d(REG5,0xc47)(hi)
0x2884F9C5,	//0x1218		VoC_or16_rd(REG4,0xc44)(lo)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0x28850C44,	//0x121a		VoC_or16_rd(REG5,0xc46)(lo)	|	VoC_or16_rd(REG4,0xc44)(hi)
0xF0010C46,	//0x121c		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_or16_rd(REG5,0xc46)(hi)
0x08A61581,	//0x121e		VoC_sw32_d(REG23,0x8a6)
0x08A81582,	//0x1220		VoC_sw32_d(REG45,0x8a8)
0x089E1501,	//0x1222		VoC_sw16_d(REG1,0x89e)
		//0x1224		CBREPDATA_END
0x08AA1400,	//0x1224		VoC_lw16_d(REG0,0x8aa)
0x08B41486,	//0x1226		VoC_lw32_d(RL6,0x8b4)
0x08BB0700,	//0x1228		VoC_add16_rd(REG0,REG0,0x8bb)
0x0700F001,	//0x122a		VoC_add16_rd(REG0,REG0,0x11ab)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x093611AB,	//0x122c		VoC_add32_rd(RL6,RL6,0x892)(lo)	|	VoC_add16_rd(REG0,REG0,0x11ab)(hi)
0x15000892,	//0x122e		VoC_sw16_d(REG0,0x8a1)(lo)	|	VoC_add32_rd(RL6,RL6,0x892)(hi)
0xC98608A1,	//0x1230		VoC_add32_rr(RL6,RL6,REG01,DEFAULT)	|	VoC_sw16_d(REG0,0x8a1)(hi)
0x08CC1400,	//0x1232		VoC_lw16_d(REG0,0x8cc)
0x6E05F003,	//0x1234		VoC_bnez16_d(FMULTIPAYLOADS_true,0x8ba)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x2B0008BA,	//0x1236		VoC_jump_lg(PPHFMULTIPAYLOADS_FALSE)(lo)	|	VoC_bnez16_d(FMULTIPAYLOADS_true,0x8ba)(hi)
0xFFC01266,	//0x1238		VoC_NAD	|	VoC_jump_lg(PPHFMULTIPAYLOADS_FALSE)(hi)
		//0x123a		FMULTIPAYLOADS_true
0x11A94490,	//0x123a		VoC_bne16_rd(BPAYLENTYPE_NE_0X01,REG0,0x11a9)
0xFFC0F021,	//0x123c		VoC_NAD	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x0F4B2B80,	//0x123e		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C401402,	//0x1240		VoC_lw16_d(REG2,0xc40)
0x12802B00,	//0x1242		VoC_jump_lg(FMULTIPAYLOADS_END)
		//0x1244		BPAYLENTYPE_NE_0X01
0x11AA44B0,	//0x1244		VoC_bne16_rd(BPAYLENTYPE_NE_0X02,REG0,0x11aa)
0xFFC0F041,	//0x1246		VoC_NAD	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x0F4B2B80,	//0x1248		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411402,	//0x124a		VoC_lw16_d(REG2,0xc41)
0xFFC0F9C2,	//0x124c		VoC_NOP	|	VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)
0x0C402882,	//0x124e		VoC_or16_rd(REG2,0xc40)
0x12802B00,	//0x1250		VoC_jump_lg(FMULTIPAYLOADS_END)
		//0x1252		BPAYLENTYPE_NE_0X02
0x11AB4020,	//0x1252		VoC_be16_rd(FMULTIPAYLOADS_con,REG0,0x11ab)
0x12802B00,	//0x1254		VoC_jump_lg(FMULTIPAYLOADS_END)
		//0x1256		FMULTIPAYLOADS_con
0xFFC0F081,	//0x1256		VoC_NAD	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x0F4B2B80,	//0x1258		VoC_jal(CII_WMAStrmCBGetData_PHdrParse_VOC)
0x0C411402,	//0x125a		VoC_lw16_d(REG2,0xc41)
0x0C431403,	//0x125c		VoC_lw16_d(REG3,0xc43)
0xF9C3F9C2,	//0x125e		VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)	|	VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)
0x0C402882,	//0x1260		VoC_or16_rd(REG2,0xc40)
0x0C422883,	//0x1262		VoC_or16_rd(REG3,0xc42)
0xFFC0E5DC,	//0x1264		VoC_NAD	|	VoC_jump(FMULTIPAYLOADS_END)
		//0x1266		PPHFMULTIPAYLOADS_FALSE
0x08C0760E,	//0x1266		VoC_bngtz32_d(CBEXPLICITPACKETLENGTH_NGTZ,0x8c0)
0x08C01481,	//0x1268		VoC_lw32_d(REG23,0x8c0)
0x08A11400,	//0x126a		VoC_lw16_d(REG0,0x8a1)
0x08B40989,	//0x126c		VoC_sub32_rd(REG23,REG23,0x8b4)
0x0989F001,	//0x126e		VoC_sub32_rd(REG23,REG23,0x8c8)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC008C8,	//0x1270		VoC_NOP	|	VoC_sub32_rd(REG23,REG23,0x8c8)(hi)
0xE5CDCA41,	//0x1272		VoC_jump(FMULTIPAYLOADS_END)	|	VoC_sub32_rr(REG23,REG23,REG01,DEFAULT)
		//0x1274		CBEXPLICITPACKETLENGTH_NGTZ
0x08961481,	//0x1274		VoC_lw32_d(REG23,0x896)
0x08A11400,	//0x1276		VoC_lw16_d(REG0,0x8a1)
0x08B40989,	//0x1278		VoC_sub32_rd(REG23,REG23,0x8b4)
0x0989F001,	//0x127a		VoC_sub32_rd(REG23,REG23,0x8c8)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC008C8,	//0x127c		VoC_NOP	|	VoC_sub32_rd(REG23,REG23,0x8c8)(hi)
0xFFC0CA41,	//0x127e		VoC_NAD	|	VoC_sub32_rr(REG23,REG23,REG01,DEFAULT)
		//0x1280		FMULTIPAYLOADS_END
0x128431C6,	//0x1280		VoC_bnez16_r(WTOTALDATABYTES_NEZ,REG6)
0xFFC0E046,	//0x1282		VoC_NAD	|	VoC_movreg16(REG6,REG2,DEFAULT)
		//0x1284		WTOTALDATABYTES_NEZ
0x08A31502,	//0x1284		VoC_sw16_d(REG2,0x8a3)
0x08CD0710,	//0x1286		VoC_add16_rd(REG0,REG2,0x8cd)
0x0700F007,	//0x1288		VoC_add16_rd(REG0,REG0,0x8a1)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xF00108A1,	//0x128a		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x8a1)(hi)
0x08A11500,	//0x128c		VoC_sw16_d(REG0,0x8a1)
0x08B40900,	//0x128e		VoC_add32_rd(REG01,REG01,0x8b4)
0x08AE1583,	//0x1290		VoC_sw32_d(REG67,0x8ae)
0x08B41580,	//0x1292		VoC_sw32_d(REG01,0x8b4)
0x088C1487,	//0x1294		VoC_lw32_d(RL7,0x88c)
0x08B41486,	//0x1296		VoC_lw32_d(RL6,0x8b4)
0x11C4093F,	//0x1298		VoC_add32_rd(RL7,RL7,0x11c4)
0x08965036,	//0x129a		VoC_bgt32_rd(RETURN_CORRUPTDATA,RL6,0x896)
0x08965C36,	//0x129c		VoC_bne32_rd(RETURN_OK,RL6,0x896)
0x08D06427,	//0x129e		VoC_bnlt32_rd(RETURN_OK,RL7,0x8d0)
		//0x12a0		RETURN_CORRUPTDATA
0xE5C2F0C7,	//0x12a0		VoC_jump(PPLHFUNCTION_END)	|	VoC_lw16i_short(REG7,0x6,DEFAULT)
		//0x12a2		RETURN_OK
0xDFA9F007,	//0x12a2		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x12a3		PPLHFUNCTION_END
0x0C481507,	//0x12a4		VoC_sw16_d(REG7,0xc48)
0xDFE9E580,	//0x12a6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x12a7		CII_WMAF_UpdateNewPayload_VOC
		//0x12a8		CASE_NEWASFPACKET
0x08061400,	//0x12a8		VoC_lw16_d(REG0,0x806)
0x08941486,	//0x12aa		VoC_lw32_d(RL6,0x894)
0x11AB4020,	//0x12ac		VoC_be16_rd(CASE_DECODEPAYLOADSTART_not,REG0,0x11ab)
0x12DC2B00,	//0x12ae		VoC_jump_lg(CASE_DECODEPAYLOADSTART)
		//0x12b0		CASE_DECODEPAYLOADSTART_not
0x08985436,	//0x12b0		VoC_bngt32_rd(NEXTPACKETOFFSET_GT_LASTPACKETOFFSET,RL6,0x898)
0x2B00F0C7,	//0x12b2		VoC_jump_lg(UNPFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x6,DEFAULT)
0xFFC0138A,	//0x12b4		VoC_NAD	|	VoC_jump_lg(UNPFUNCTION_END)(hi)
		//0x12b6		NEXTPACKETOFFSET_GT_LASTPACKETOFFSET
0x08960937,	//0x12b6		VoC_add32_rd(RL7,RL6,0x896)
0x08921586,	//0x12b8		VoC_sw32_d(RL6,0x892)
0x08941587,	//0x12ba		VoC_sw32_d(RL7,0x894)
0x0F772B80,	//0x12bc		VoC_jal(CII_WMA_ParsePacketHeader_VOC)
0x11AB4497,	//0x12be		VoC_bne16_rd(WMARC_NE_3,REG7,0x11ab)
0x08921486,	//0x12c0		VoC_lw32_d(RL6,0x892)
0x1586F247,	//0x12c2		VoC_sw32_d(RL6,0x894)(lo)	|	VoC_lw16i_short(REG7,0x12,DEFAULT)
0x2B000894,	//0x12c4		VoC_jump_lg(UNPFUNCTION_END)(lo)	|	VoC_sw32_d(RL6,0x894)(hi)
0xFFC0138A,	//0x12c6		VoC_NAD	|	VoC_jump_lg(UNPFUNCTION_END)(hi)
		//0x12c8		WMARC_NE_3
0x12CE3187,	//0x12c8		VoC_bez16_r(WMARC_EZ,REG7)
0x2B00F087,	//0x12ca		VoC_jump_lg(UNPFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xFFC0138A,	//0x12cc		VoC_NAD	|	VoC_jump_lg(UNPFUNCTION_END)(hi)
		//0x12ce		WMARC_EZ
0x08B16C06,	//0x12ce		VoC_bez16_d(UNPFECCPRESENT_FALSE,0x8b1)
0x08B06C04,	//0x12d0		VoC_bez16_d(UNPFECCPRESENT_FALSE,0x8b0)
0x12A82B00,	//0x12d2		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x12d4		UNPFECCPRESENT_FALSE
0xFF46F080,	//0x12d4		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x08061500,	//0x12d6		VoC_sw16_d(REG0,0x806)
0x088C1586,	//0x12d8		VoC_sw32_d(RL6,0x88c)
0x12A82B00,	//0x12da		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x12dc		CASE_DECODEPAYLOADSTART
0x088C1486,	//0x12dc		VoC_lw32_d(RL6,0x88c)
0x4028F063,	//0x12de		VoC_be16_rd(CASE_DECODEPAYLOAD_not,REG0,0x11ac)(lo)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x2B0011AC,	//0x12e0		VoC_jump_lg(CASE_DECODEPAYLOAD)(lo)	|	VoC_be16_rd(CASE_DECODEPAYLOAD_not,REG0,0x11ac)(hi)
0xFFC01325,	//0x12e2		VoC_NAD	|	VoC_jump_lg(CASE_DECODEPAYLOAD)(hi)
		//0x12e4		CASE_DECODEPAYLOAD_not
0x08D06036,	//0x12e4		VoC_blt32_rd(IPAYLOAD_LT_CPAYLOADS,RL6,0x8d0)
0x08061503,	//0x12e6		VoC_sw16_d(REG3,0x806)
0x12A82B00,	//0x12e8		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x12ea		IPAYLOAD_LT_CPAYLOADS
0x11782B80,	//0x12ea		VoC_jal(CII_WMA_ParsePayloadHeader_VOC)
0x3187F100,	//0x12ec		VoC_bez16_r(WMARC_EZ_I,REG7)(lo)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x150012F4,	//0x12ee		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_bez16_r(WMARC_EZ_I,REG7)(hi)
0x2B000806,	//0x12f0		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0xFFC012A8,	//0x12f2		VoC_NAD	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
		//0x12f4		WMARC_EZ_I
0x08A01400,	//0x12f4		VoC_lw16_d(REG0,0x8a0)
0x08A10700,	//0x12f6		VoC_add16_rd(REG0,REG0,0x8a1)
0x0780F001,	//0x12f8		VoC_sub16_rd(REG0,REG0,0x8a3)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x140208A3,	//0x12fa		VoC_lw16_d(REG2,0x8aa)(lo)	|	VoC_sub16_rd(REG0,REG0,0x8a3)(hi)
0x158008AA,	//0x12fc		VoC_sw32_d(REG01,0x88e)(lo)	|	VoC_lw16_d(REG2,0x8aa)(hi)
0x4092088E,	//0x12fe		VoC_be16_rd(CBREPDATA_E_1,REG2,0x11a9)(lo)	|	VoC_sw32_d(REG01,0x88e)(hi)
0xF0A011A9,	//0x1300		VoC_lw16i_short(REG0,0x5,DEFAULT)	|	VoC_be16_rd(CBREPDATA_E_1,REG2,0x11a9)(hi)
0x1500F001,	//0x1302		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x15010806,	//0x1304		VoC_sw16_d(REG1,0x89e)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0x2B00089E,	//0x1306		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw16_d(REG1,0x89e)(hi)
0xF12012A8,	//0x1308		VoC_lw16i_short(REG0,0x9,DEFAULT)	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
		//0x1309		CBREPDATA_E_1
0x1500F021,	//0x130a		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x15010806,	//0x130c		VoC_sw16_d(REG1,0x89e)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0x2B00089E,	//0x130e		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw16_d(REG1,0x89e)(hi)
0x140012A8,	//0x1310		VoC_lw16_d(REG0,0x8a3)(lo)	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
0xFFC008A3,	//0x1312		VoC_NOP	|	VoC_lw16_d(REG0,0x8a3)(hi)
		//0x1313		MOD_BEGIN
0x089A4830,	//0x1314		VoC_blt16_rd(MOD_END,REG0,0x89a)
0x089A0780,	//0x1316		VoC_sub16_rd(REG0,REG0,0x89a)
0xFFC0E5FB,	//0x1318		VoC_NAD	|	VoC_jump(MOD_BEGIN)
		//0x131a		MOD_END
0x131F3180,	//0x131a		VoC_bez16_r(CBPAYLOADSIZE_MOD_NBLOCKALIGN_EZ,REG0)
0x2B00F0A7,	//0x131c		VoC_jump_lg(UNPFUNCTION_END)(lo)	|	VoC_lw16i_short(REG7,0x5,DEFAULT)
0xF100138A,	//0x131e		VoC_lw16i_short(REG0,0x8,DEFAULT)	|	VoC_jump_lg(UNPFUNCTION_END)(hi)
		//0x131f		CBPAYLOADSIZE_MOD_NBLOCKALIGN_EZ
0x1500FFC0,	//0x1320		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_NOP
0x2B000806,	//0x1322		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0xF00D12A8,	//0x1324		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
		//0x1325		CASE_DECODEPAYLOAD
0x089F140C,	//0x1326		VoC_lw16_d(RL6_LO,0x89f)
0x4028F103,	//0x1328		VoC_be16_rd(CASE_DECODEPAYLOADNOT,REG0,0x11ad)(lo)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x2B0011AD,	//0x132a		VoC_jump_lg(CASE_DECODEPAYLOADEND)(lo)	|	VoC_be16_rd(CASE_DECODEPAYLOADNOT,REG0,0x11ad)(hi)
0xFFC01350,	//0x132c		VoC_NAD	|	VoC_jump_lg(CASE_DECODEPAYLOADEND)(hi)
		//0x132e		CASE_DECODEPAYLOADNOT
0x089C5836,	//0x132e		VoC_be32_rd(BSTREAMID_E_WAUDIOSTREAMID,RL6,0x89c)
0x08061503,	//0x1330		VoC_sw16_d(REG3,0x806)
0x12A82B00,	//0x1332		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x1334		BSTREAMID_E_WAUDIOSTREAMID
0x08921486,	//0x1334		VoC_lw32_d(RL6,0x892)
0x0936F020,	//0x1336		VoC_add32_rd(RL6,RL6,0x88e)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x1401088E,	//0x1338		VoC_lw16_d(REG1,0x89a)(lo)	|	VoC_add32_rd(RL6,RL6,0x88e)(hi)
0x1586089A,	//0x133a		VoC_sw32_d(RL6,0x808)(lo)	|	VoC_lw16_d(REG1,0x89a)(hi)
0x15000808,	//0x133c		VoC_sw16_d(REG0,0x807)(lo)	|	VoC_sw32_d(RL6,0x808)(hi)
0x0B0A0807,	//0x133e		VoC_sub16_dr(REG2,0x8a3,REG1)(lo)	|	VoC_sw16_d(REG0,0x807)(hi)
0x150108A3,	//0x1340		VoC_sw16_d(REG1,0x805)(lo)	|	VoC_sub16_dr(REG2,0x8a3,REG1)(hi)
0x15020805,	//0x1342		VoC_sw16_d(REG2,0x804)(lo)	|	VoC_sw16_d(REG1,0x805)(hi)
0x6C050804,	//0x1344		VoC_bez16_d(BHASDRM_FALSE,0x88a)(lo)	|	VoC_sw16_d(REG2,0x804)(hi)
0xF1C7088A,	//0x1346		VoC_lw16i_short(REG7,0xe,DEFAULT)	|	VoC_bez16_d(BHASDRM_FALSE,0x88a)(hi)
0x138A2B00,	//0x1348		VoC_jump_lg(UNPFUNCTION_END)
		//0x134a		BHASDRM_FALSE
0xF007F0C0,	//0x134a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x6,DEFAULT)
0x08061500,	//0x134c		VoC_sw16_d(REG0,0x806)
0x138A2B00,	//0x134e		VoC_jump_lg(UNPFUNCTION_END)
		//0x1350		CASE_DECODEPAYLOADEND
0x11B044A8,	//0x1350		VoC_bne16_rd(CASE_DECODECOMPRESSEDPAYLOAD,REG0,0x11b0)
0x088C1486,	//0x1352		VoC_lw32_d(RL6,0x88c)
0x0936F080,	//0x1354		VoC_add32_rd(RL6,RL6,0x11c4)(lo)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x150011C4,	//0x1356		VoC_sw16_d(REG0,0x806)(lo)	|	VoC_add32_rd(RL6,RL6,0x11c4)(hi)
0x15860806,	//0x1358		VoC_sw32_d(RL6,0x88c)(lo)	|	VoC_sw16_d(REG0,0x806)(hi)
0x2B00088C,	//0x135a		VoC_jump_lg(CASE_NEWASFPACKET)(lo)	|	VoC_sw32_d(RL6,0x88c)(hi)
0xF00D12A8,	//0x135c		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_jump_lg(CASE_NEWASFPACKET)(hi)
		//0x135d		CASE_DECODECOMPRESSEDPAYLOAD
0x089F140C,	//0x135e		VoC_lw16_d(RL6_LO,0x89f)
0x4028F103,	//0x1360		VoC_be16_rd(CASE_DEFAULT_not,REG0,0x11b1)(lo)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x2B0011B1,	//0x1362		VoC_jump_lg(CASE_DEFAULT)(lo)	|	VoC_be16_rd(CASE_DEFAULT_not,REG0,0x11b1)(hi)
0xFFC01387,	//0x1364		VoC_NAD	|	VoC_jump_lg(CASE_DEFAULT)(hi)
		//0x1366		CASE_DEFAULT_not
0x089C5836,	//0x1366		VoC_be32_rd(BSTREAMID_E_WAUDIOSTREAMID_II,RL6,0x89c)
0x08061503,	//0x1368		VoC_sw16_d(REG3,0x806)
0x12A82B00,	//0x136a		VoC_jump_lg(CASE_NEWASFPACKET)
		//0x136c		BSTREAMID_E_WAUDIOSTREAMID_II
0x08921486,	//0x136c		VoC_lw32_d(RL6,0x892)
0x0936F020,	//0x136e		VoC_add32_rd(RL6,RL6,0x88e)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x1401088E,	//0x1370		VoC_lw16_d(REG1,0x89a)(lo)	|	VoC_add32_rd(RL6,RL6,0x88e)(hi)
0x1586089A,	//0x1372		VoC_sw32_d(RL6,0x808)(lo)	|	VoC_lw16_d(REG1,0x89a)(hi)
0xFF410808,	//0x1374		VoC_lw32z(REG23,DEFAULT)	|	VoC_sw32_d(RL6,0x808)(hi)
0x08071500,	//0x1376		VoC_sw16_d(REG0,0x807)
0x08051501,	//0x1378		VoC_sw16_d(REG1,0x805)
0x08AC1581,	//0x137a		VoC_sw32_d(REG23,0x8ac)
0x08AB1500,	//0x137c		VoC_sw16_d(REG0,0x8ab)
0x088A6C04,	//0x137e		VoC_bez16_d(BHASDRM_FALSE_II,0x88a)
0xE5C9F1C7,	//0x1380		VoC_jump(UNPFUNCTION_END)	|	VoC_lw16i_short(REG7,0xe,DEFAULT)
		//0x1382		BHASDRM_FALSE_II
0xF007F0C0,	//0x1382		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x6,DEFAULT)
0x08061500,	//0x1384		VoC_sw16_d(REG0,0x806)
0xF227E5C4,	//0x1386		VoC_lw16i_short(REG7,0x11,DEFAULT)	|	VoC_jump(UNPFUNCTION_END)
		//0x1387		CASE_DEFAULT
0xF007E5C2,	//0x1388		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jump(UNPFUNCTION_END)
		//0x138a		UNPFUNCTION_END
0xFFC0DFA9,	//0x138a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF030E580,	//0x138c		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_return
		//0x138d		CII_WMAFileCBGetData_VOC
0x0A86F033,	//0x138e		VoC_lw16i(REG6,0xf80)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xF0070F80,	//0x1390		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i(REG6,0xf80)(hi)
0x0800091F,	//0x1392		VoC_add32_rd(RL7,REG67,0x800)
0x11A9072D,	//0x1394		VoC_add16_rd(REG5,REG5,0x11a9)
0x1587E043,	//0x1396		VoC_sw32_d(RL7,0x800)(lo)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0xC2B20800,	//0x1398		VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_sw32_d(RL7,0x800)(hi)
0xF80BF80D,	//0x139a		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0xF808E040,	//0x139c		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0x0A221485,	//0x139e		VoC_lw32_d(ACC1,0xa22)
0xFFC0C95C,	//0x13a0		VoC_NOP	|	VoC_add32_rr(ACC0,ACC1,REG67,DEFAULT)
0x0A221584,	//0x13a2		VoC_sw32_d(ACC0,0xa22)
0x00200A87,	//0x13a4		VoC_lw16i(REG7,0x20)
0x2E28F816,	//0x13a6		VoC_loop_r(0,REG5)(lo)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xD8B413AB,	//0x13a8		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_loop_r(0,REG5)(hi)
0xDC84FFC0,	//0x13aa		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
		//0x13ab		VoC_endloop0
0x7FC31547,	//0x13ac		VoC_sw16_d(REG7,0xffc3)
0x7FC21546,	//0x13ae		VoC_sw16_d(REG6,0xffc2)
0x7FC415C5,	//0x13b0		VoC_sw32_d(ACC1,0xffc4)
0xFFC0DE80,	//0x13b2		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x13b4		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x13b6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x13b7		CII_prvDecodeSubFrame_VOC
0x00000A87,	//0x13b8		VoC_lw16i(REG7,0x0)
0x08E11406,	//0x13ba		VoC_lw16_d(REG6,0x8e1)
0x0C491507,	//0x13bc		VoC_sw16_d(REG7,0xc49)
0x13C83186,	//0x13be		VoC_bez16_r(Label_case_SUBFRM_HDR,REG6)
0x11A94196,	//0x13c0		VoC_be16_rd(Label_case_SUBFRM_COEF,REG6,0x11a9)
0x11AA4426,	//0x13c2		VoC_bne16_rd(Label_case_SUBFRM_con,REG6,0x11aa)
0x13F62B00,	//0x13c4		VoC_jump_lg(Label_case_SUBFRM_DONE)
		//0x13c6		Label_case_SUBFRM_con
0x149D2B00,	//0x13c6		VoC_jump_lg(DSFLabel_exit)
		//0x13c8		Label_case_SUBFRM_HDR
0x07162B80,	//0x13c8		VoC_jal(CII_prvDecodeFrameHeader_VOC)
0xF021F0C6,	//0x13ca		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x6,DEFAULT)
0x08E24026,	//0x13cc		VoC_be16_rd(DSFLabel_con,REG6,0x8e2)
0x149D2B00,	//0x13ce		VoC_jump_lg(DSFLabel_exit)
		//0x13d0		DSFLabel_con
0x00000A80,	//0x13d0		VoC_lw16i(REG0,0x0)
0x08E11501,	//0x13d2		VoC_sw16_d(REG1,0x8e1)
0x09001500,	//0x13d4		VoC_sw16_d(REG0,0x900)
0x08E41500,	//0x13d6		VoC_sw16_d(REG0,0x8e4)
0x08E31500,	//0x13d8		VoC_sw16_d(REG0,0x8e3)
		//0x13da		Label_case_SUBFRM_COEF
0x08F94D30,	//0x13da		VoC_bnlt16_rd(Label_DecodeCoefficient_end,REG0,0x8f9)
0x08E41500,	//0x13dc		VoC_sw16_d(REG0,0x8e4)
0x0BBE2B80,	//0x13de		VoC_jal(CII_prvSetDetTable_VOC)
0x09C60A86,	//0x13e0		VoC_lw16i(REG6,0x9c6)
0x08E46C04,	//0x13e2		VoC_bez16_d(Label_DecodeCoefficientMono,0x8e4)
0x09EE0A86,	//0x13e4		VoC_lw16i(REG6,0x9ee)
		//0x13e6		Label_DecodeCoefficientMono
0x14A02B80,	//0x13e6		VoC_jal(CII_prvDecodeCoefficientMono_VOC)
0x08E41400,	//0x13e8		VoC_lw16_d(REG0,0x8e4)
0x0700F001,	//0x13ea		VoC_add16_rd(REG0,REG0,0x11a9)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x150111A9,	//0x13ec		VoC_sw16_d(REG1,0x900)(lo)	|	VoC_add16_rd(REG0,REG0,0x11a9)(hi)
0xE5EB0900,	//0x13ee		VoC_jump(Label_case_SUBFRM_COEF)	|	VoC_sw16_d(REG1,0x900)(hi)
		//0x13f0		Label_DecodeCoefficient_end
0x00020A82,	//0x13f0		VoC_lw16i(REG2,0x2)
0x1502FFC0,	//0x13f2		VoC_sw16_d(REG2,0x8e1)(lo)	|	VoC_NOP
0xFFC008E1,	//0x13f4		VoC_NAD	|	VoC_sw16_d(REG2,0x8e1)(hi)
		//0x13f6		Label_case_SUBFRM_DONE
0x16002B80,	//0x13f6		VoC_jal(CII_SetActualPower_VOC)
0x09AB1406,	//0x13f8		VoC_lw16_d(REG6,0x9ab)
0x163C2B80,	//0x13fa		VoC_jal(CII_qstCalcQuantStep_VOC)
0x09AE1583,	//0x13fc		VoC_sw32_d(REG67,0x9ae)
0x00000A80,	//0x13fe		VoC_lw16i(REG0,0x0)
0x09B01587,	//0x1400		VoC_sw32_d(RL7,0x9b0)
		//0x1402		Label_channel_loop_start
0x08E41500,	//0x1402		VoC_sw16_d(REG0,0x8e4)
0x08F94820,	//0x1404		VoC_blt16_rd(Label_SD2LR_not,REG0,0x8f9)
0x14382B00,	//0x1406		VoC_jump_lg(Label_SD2LR)
		//0x1408		Label_SD2LR_not
0x09D01401,	//0x1408		VoC_lw16_d(REG1,0x9d0)
0x09D51402,	//0x140a		VoC_lw16_d(REG2,0x9d5)
0x14123180,	//0x140c		VoC_bez16_r(Label_LorR_channel,REG0)
0x09F81401,	//0x140e		VoC_lw16_d(REG1,0x9f8)
0x09FD1402,	//0x1410		VoC_lw16_d(REG2,0x9fd)
		//0x1412		Label_LorR_channel
0x14263181,	//0x1412		VoC_bez16_r(Label_else,REG1)
0x09A96C0A,	//0x1414		VoC_bez16_d(Label_LowRate,0x9a9)
0x00002B80,	//0x1416		VoC_jal(CII_prvInverseQuantizeMidRate)
0x0C497204,	//0x1418		VoC_bnltz16_d(DSFLabel_con1,0xc49)
0x149D2B00,	//0x141a		VoC_jump_lg(DSFLabel_exit)
		//0x141c		DSFLabel_con1
0xFFC0E5D4,	//0x141c		VoC_NAD	|	VoC_jump(Label_channel_loop_end)
		//0x141e		Label_LowRate
0x17782B80,	//0x141e		VoC_jal(CII_prvInverseQuantizeLowRate)
0x0C497204,	//0x1420		VoC_bnltz16_d(DSFLabel_con2,0xc49)
0x149D2B00,	//0x1422		VoC_jump_lg(DSFLabel_exit)
		//0x1424		DSFLabel_con2
0xFFC0E5CC,	//0x1424		VoC_NAD	|	VoC_jump(Label_channel_loop_end)
		//0x1426		Label_else
0x08FC0716,	//0x1426		VoC_add16_rd(REG6,REG2,0x8fc)
0xF052FF47,	//0x1428		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0x08FC0736,	//0x142a		VoC_add16_rd(REG6,REG6,0x8fc)
		//0x142c		Label_memset0_start
0xFFC0DDD7,	//0x142c		VoC_NOP	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x142C3432,	//0x142e		VoC_bgt16_rr(Label_memset0_start,REG6,REG2)
		//0x1430		Label_channel_loop_end
0x08E41400,	//0x1430		VoC_lw16_d(REG0,0x8e4)
0x0700FFC0,	//0x1432		VoC_add16_rd(REG0,REG0,0x11a9)(lo)	|	VoC_NOP
0x2B0011A9,	//0x1434		VoC_jump_lg(Label_channel_loop_start)(lo)	|	VoC_add16_rd(REG0,REG0,0x11a9)(hi)
0xFFC01402,	//0x1436		VoC_NAD	|	VoC_jump_lg(Label_channel_loop_start)(hi)
		//0x1438		Label_SD2LR
0x00020A82,	//0x1438		VoC_lw16i(REG2,0x2)
0x00010A81,	//0x143a		VoC_lw16i(REG1,0x1)
0x09D01403,	//0x143c		VoC_lw16_d(REG3,0x9d0)
0x08F945B2,	//0x143e		VoC_bne16_rd(Label_NoiseSub,REG2,0x8f9)
0x09F82883,	//0x1440		VoC_or16_rd(REG3,0x9f8)
0x09034591,	//0x1442		VoC_bne16_rd(Label_NoiseSub,REG1,0x903)
0x145C3183,	//0x1444		VoC_bez16_r(Label_NoiseSub,REG3)
0x09D52008,	//0x1446		VoC_lw16d_set_inc(REG0,0x9d5,0x2)
0x09FD2009,	//0x1448		VoC_lw16d_set_inc(REG1,0x9fd,0x2)
0x08FC0703,	//0x144a		VoC_add16_rd(REG3,REG0,0x8fc)
0x00010A84,	//0x144c		VoC_lw16i(REG4,0x1)
0x08FC071B,	//0x144e		VoC_add16_rd(REG3,REG3,0x8fc)
		//0x1450		Label_loop_SD2LR_start
0xFFC0D986,	//0x1450		VoC_NOP	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0x958D918C,	//0x1452		VoC_sub32_rp(ACC1,RL6,REG1,DEFAULT)	|	VoC_add32_rp(ACC0,RL6,REG1,DEFAULT)
0xDDCDDDC4,	//0x1454		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x14503418,	//0x1456		VoC_bgt16_rr(Label_loop_SD2LR_start,REG3,REG0)
0x09D01504,	//0x1458		VoC_sw16_d(REG4,0x9d0)
0x09F81504,	//0x145a		VoC_sw16_d(REG4,0x9f8)
		//0x145c		Label_NoiseSub
0x08EE6E20,	//0x145c		VoC_bnez16_d(Label_DctIV,0x8ee)
0x00000A85,	//0x145e		VoC_lw16i(REG5,0x0)
0x09A61402,	//0x1460		VoC_lw16_d(REG2,0x9a6)
0x08FC1403,	//0x1462		VoC_lw16_d(REG3,0x8fc)
0xC0DBC092,	//0x1464		VoC_add16_rr(REG3,REG3,REG3,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG2,DEFAULT)
0xFF47F050,	//0x1466		VoC_lw32z(RL7,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
		//0x1468		Label_channel_loop2_start
0x09D50710,	//0x1468		VoC_add16_rd(REG0,REG2,0x9d5)
0x09D5071B,	//0x146a		VoC_add16_rd(REG3,REG3,0x9d5)
0x14723185,	//0x146c		VoC_bez16_r(Label_loop_NoNoiseSub_start,REG5)
0x09FD0710,	//0x146e		VoC_add16_rd(REG0,REG2,0x9fd)
0x09FD071B,	//0x1470		VoC_add16_rd(REG3,REG3,0x9fd)
		//0x1472		Label_loop_NoNoiseSub_start
0xFFC0DDC7,	//0x1472		VoC_NOP	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x14723418,	//0x1474		VoC_bgt16_rr(Label_loop_NoNoiseSub_start,REG3,REG0)
0x11A9072D,	//0x1476		VoC_add16_rd(REG5,REG5,0x11a9)
0x4ABDFFC0,	//0x1478		VoC_blt16_rd(Label_channel_loop2_start,REG5,0x8f9)(lo)	|	VoC_NOP
0xFFC008F9,	//0x147a		VoC_NAD	|	VoC_blt16_rd(Label_channel_loop2_start,REG5,0x8f9)(hi)
		//0x147c		Label_DctIV
0x0A161486,	//0x147c		VoC_lw32_d(RL6,0xa16)
0x08EA0A83,	//0x147e		VoC_lw16i(REG3,0x8ea)
0x04000A86,	//0x1480		VoC_lw16i(REG6,0x400)
0x7FC31543,	//0x1482		VoC_sw16_d(REG3,0xffc3)
0x7FC21546,	//0x1484		VoC_sw16_d(REG6,0xffc2)
0x7FC415C6,	//0x1486		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x1488		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x148a		VoC_cfg_lg(0x8,)
0x09D06C06,	//0x148c		VoC_bez16_d(DSFLabel_rightchannel,0x9d0)
0x09D51405,	//0x148e		VoC_lw16_d(REG5,0x9d5)
0x1C802B80,	//0x1490		VoC_jal(CII_auDctIV_VOC)
		//0x1492		DSFLabel_rightchannel
0x00020A82,	//0x1492		VoC_lw16i(REG2,0x2)
0x4482FFC0,	//0x1494		VoC_bne16_rd(DSFLabel_exit,REG2,0x8f9)(lo)	|	VoC_NOP
0x6C0608F9,	//0x1496		VoC_bez16_d(DSFLabel_exit,0x9f8)(lo)	|	VoC_bne16_rd(DSFLabel_exit,REG2,0x8f9)(hi)
0x140509F8,	//0x1498		VoC_lw16_d(REG5,0x9fd)(lo)	|	VoC_bez16_d(DSFLabel_exit,0x9f8)(hi)
0x2B8009FD,	//0x149a		VoC_jal(CII_auDctIV_VOC)(lo)	|	VoC_lw16_d(REG5,0x9fd)(hi)
0xDFA91C80,	//0x149c		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_auDctIV_VOC)(hi)
		//0x149d		DSFLabel_exit
0xE580FFC0,	//0x149e		VoC_return	|	VoC_NOP
		//0x14a0		CII_prvDecodeCoefficientMono_VOC
0x0731DFE9,	//0x14a0		VoC_add16_rd(REG1,REG6,0x11b2)(lo)	|	VoC_push16(RA,DEFAULT)
0x073411B2,	//0x14a2		VoC_add16_rd(REG4,REG6,0x11b0)(lo)	|	VoC_add16_rd(REG1,REG6,0x11b2)(hi)
0xD81211B0,	//0x14a4		VoC_lw16_p(REG2,REG1,DEFAULT)	|	VoC_add16_rd(REG4,REG6,0x11b0)(hi)
0x3182D847,	//0x14a6		VoC_bez16_r(DCMLabel_Exit,REG2)(lo)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
0x2B8014AB,	//0x14a8		VoC_jal(CII_prvDecodeRunLevel_VOC)(lo)	|	VoC_bez16_r(DCMLabel_Exit,REG2)(hi)
0xDFA914AE,	//0x14aa		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_prvDecodeRunLevel_VOC)(hi)
		//0x14ab		DCMLabel_Exit
0xE580F005,	//0x14ac		VoC_return	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x14ae		CII_prvDecodeRunLevel_VOC
0xDFC7DFE9,	//0x14ae		VoC_push16(REG7,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF005DFC6,	//0x14b0		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x09001400,	//0x14b2		VoC_lw16_d(REG0,0x900)
		//0x14b4		Lable_Begin_While
0x09003827,	//0x14b4		VoC_bgt16_rd(prvDecodeRunLevel_Label_Exit_NOT,REG7,0x900)
0x14E02B00,	//0x14b6		VoC_jump_lg(prvDecodeRunLevel_Label_Exit)
		//0x14b8		prvDecodeRunLevel_Label_Exit_NOT
0x2B80FFC0,	//0x14b8		VoC_jal(CII_prvGetNextRunDEC_VOC)(lo)	|	VoC_NOP
0xF0010B13,	//0x14ba		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_jal(CII_prvGetNextRunDEC_VOC)(hi)
0x08F06C08,	//0x14bc		VoC_bez16_d(DRLLable_next,0x8f0)
0x08ED078A,	//0x14be		VoC_sub16_rd(REG2,REG1,0x8ed)
0x1502FFC0,	//0x14c0		VoC_sw16_d(REG2,0x8ed)(lo)	|	VoC_NOP
0xFFC008ED,	//0x14c2		VoC_NAD	|	VoC_sw16_d(REG2,0x8ed)(hi)
		//0x14c4		DRLLable_next
0x09001400,	//0x14c4		VoC_lw16_d(REG0,0x900)
0x0703D624,	//0x14c6		VoC_add16_rd(REG3,REG0,0x8ec)(lo)	|	VoC_lw16_sd(REG4,0x1,DEFAULT)
0xFFC008EC,	//0x14c8		VoC_NOP	|	VoC_add16_rd(REG3,REG0,0x8ec)(hi)
0x14D03423,	//0x14ca		VoC_bgt16_rr(Lable_Normal,REG4,REG3)
0x04020AC5,	//0x14cc		VoC_lw16i(REG5,0x8402)
0xFFC0E5D2,	//0x14ce		VoC_NAD	|	VoC_jump(prvDecodeRunLevel_Label_Exit)
		//0x14d0		Lable_Normal
0x08ED1401,	//0x14d0		VoC_lw16_d(REG1,0x8ed)
0xF024D616,	//0x14d2		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xF005D862,	//0x14d4		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16_p(REG2,REG6,DEFAULT)
0xC0E0C09A,	//0x14d6		VoC_add16_rr(REG0,REG3,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x1500DC21,	//0x14d8		VoC_sw16_d(REG0,0x900)(lo)	|	VoC_sw16_p(REG1,REG2,DEFAULT)
0xD6270900,	//0x14da		VoC_lw16_sd(REG7,0x1,DEFAULT)	|	VoC_sw16_d(REG0,0x900)(hi)
0x08E31505,	//0x14dc		VoC_sw16_d(REG5,0x8e3)
0x14B42B00,	//0x14de		VoC_jump_lg(Lable_Begin_While)
		//0x14e0		prvDecodeRunLevel_Label_Exit
0xDF80DF80,	//0x14e0		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xFFC0DFA9,	//0x14e2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x14e4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x14e5		CII_prvDecodeFrameHeaderNoiseSub_VOC
0x00020A86,	//0x14e6		VoC_lw16i(REG6,0x2)
0x00000A87,	//0x14e8		VoC_lw16i(REG7,0x0)
0x08E24026,	//0x14ea		VoC_be16_rd(DFHLabel_LOOP_channel_start,REG6,0x8e2)
0x15742B00,	//0x14ec		VoC_jump_lg(Label_HDR_NOISE2)
		//0x14ee		DFHLabel_LOOP_channel_start
0x08E41406,	//0x14ee		VoC_lw16_d(REG6,0x8e4)
0x09AC1400,	//0x14f0		VoC_lw16_d(REG0,0x9ac)
0x08F94826,	//0x14f2		VoC_blt16_rd(Label_LOOP_channel_con,REG6,0x8f9)
0x156A2B00,	//0x14f4		VoC_jump_lg(DFHLabel_LOOP_channel_end)
		//0x14f6		Label_LOOP_channel_con
0x09BB0780,	//0x14f6		VoC_sub16_rd(REG0,REG0,0x9bb)
0x0DB52B80,	//0x14f8		VoC_jal(CII_ibstrmLookForBits_VOC)
0x15DE3207,	//0x14fa		VoC_bltz16_r(Label_DecFramHeader_exit,REG7)
0x09D01401,	//0x14fc		VoC_lw16_d(REG1,0x9d0)
0x09C81406,	//0x14fe		VoC_lw16_d(REG6,0x9c8)
0x09CE0A85,	//0x1500		VoC_lw16i(REG5,0x9ce)
0x08E46C08,	//0x1502		VoC_bez16_d(Label_LorRchannel,0x8e4)
0x09F81401,	//0x1504		VoC_lw16_d(REG1,0x9f8)
0x09F01406,	//0x1506		VoC_lw16_d(REG6,0x9f0)
0x09F60A85,	//0x1508		VoC_lw16i(REG5,0x9f6)
		//0x150a		Label_LorRchannel
0x155A3181,	//0x150a		VoC_bez16_r(Label_iPowerEZ,REG1)
0x09BC1404,	//0x150c		VoC_lw16_d(REG4,0x9bc)
0x00000A80,	//0x150e		VoC_lw16i(REG0,0x0)
0x09A507A4,	//0x1510		VoC_sub16_rd(REG4,REG4,0x9a5)
0xDC54DC60,	//0x1512		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_sw16_p(REG0,REG6,DEFAULT)
		//0x1514		Label_innerLOOP_start
0x09AD2004,	//0x1514		VoC_lw16d_set_inc(REG0,0x9ad,0x1)
0x08E50700,	//0x1516		VoC_add16_rd(REG0,REG0,0x8e5)
0xD883FFC0,	//0x1518		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_NOP
0x4C2BD802,	//0x151a		VoC_bnlt16_rd(Label_compare_MAX,REG3,0x9bc)(lo)	|	VoC_lw16_p(REG2,REG0,DEFAULT)
0x140309BC,	//0x151c		VoC_lw16_d(REG3,0x9bc)(lo)	|	VoC_bnlt16_rd(Label_compare_MAX,REG3,0x9bc)(hi)
0xFFC009BC,	//0x151e		VoC_NAD	|	VoC_lw16_d(REG3,0x9bc)(hi)
		//0x1520		Label_compare_MAX
0x09A64823,	//0x1520		VoC_blt16_rd(Label_innerLOOP_con,REG3,0x9a6)
0x15502B00,	//0x1522		VoC_jump_lg(Label_innerLOOP_end)
		//0x1524		Label_innerLOOP_con
0x09A63C22,	//0x1524		VoC_bngt16_rd(Label_compare_MIN,REG2,0x9a6)
0x09A61402,	//0x1526		VoC_lw16_d(REG2,0x9a6)
		//0x1528		Label_compare_MIN
0xDFC5DFC6,	//0x1528		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x0A86DF41,	//0x152a		VoC_lw16i(REG6,0x1)(lo)	|	VoC_push32(REG23,DEFAULT)
0x2B800001,	//0x152c		VoC_jal(CII_ibstrmGetBits_VOC)(lo)	|	VoC_lw16i(REG6,0x1)(hi)
0xDF010C8B,	//0x152e		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(CII_ibstrmGetBits_VOC)(hi)
0xDF86DF85,	//0x1530		VoC_pop16(REG6,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x15DE3207,	//0x1532		VoC_bltz16_r(Label_DecFramHeader_exit,REG7)
0x08E50734,	//0x1534		VoC_add16_rd(REG4,REG6,0x8e5)
0xDC4EE1C7,	//0x1536		VoC_sw16_p(RL7_LO,REG4,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0x15403187,	//0x1538		VoC_bez16_r(Label_iResultEZ,REG7)
0x0724D864,	//0x153a		VoC_add16_rd(REG4,REG4,0x11a9)(lo)	|	VoC_lw16_p(REG4,REG6,DEFAULT)
0xFFC011A9,	//0x153c		VoC_NOP	|	VoC_add16_rd(REG4,REG4,0x11a9)(hi)
0xE5C7DC64,	//0x153e		VoC_jump(Label_piBand)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
		//0x1540		Label_iResultEZ
0xFFC0C29A,	//0x1540		VoC_NOP	|	VoC_sub16_rr(REG2,REG2,REG3,DEFAULT)
0xFFC080AA,	//0x1542		VoC_NOP	|	VoC_add16_rp(REG2,REG2,REG5,DEFAULT)
0xFFC0DC52,	//0x1544		VoC_NAD	|	VoC_sw16_p(REG2,REG5,DEFAULT)
		//0x1546		Label_piBand
0x08E51404,	//0x1546		VoC_lw16_d(REG4,0x8e5)
0x11A90724,	//0x1548		VoC_add16_rd(REG4,REG4,0x11a9)
0x1504FFC0,	//0x154a		VoC_sw16_d(REG4,0x8e5)(lo)	|	VoC_NOP
0x2B0008E5,	//0x154c		VoC_jump_lg(Label_innerLOOP_start)(lo)	|	VoC_sw16_d(REG4,0x8e5)(hi)
0xFFC01514,	//0x154e		VoC_NAD	|	VoC_jump_lg(Label_innerLOOP_start)(hi)
		//0x1550		Label_innerLOOP_end
0x08E51404,	//0x1550		VoC_lw16_d(REG4,0x8e5)
0x08E50733,	//0x1552		VoC_add16_rd(REG3,REG6,0x8e5)
0x00000A82,	//0x1554		VoC_lw16i(REG2,0x0)
0x09AC4C84,	//0x1556		VoC_bnlt16_rd(DFHNSLabel_continue,REG4,0x9ac)
0xE5C5DC32,	//0x1558		VoC_jump(DFHNSLabel_continue)	|	VoC_sw16_p(REG2,REG3,DEFAULT)
		//0x155a		Label_iPowerEZ
0x00000A86,	//0x155a		VoC_lw16i(REG6,0x0)
0xDC56FFC0,	//0x155c		VoC_sw16_p(REG6,REG5,DEFAULT)	|	VoC_NOP
		//0x155e		DFHNSLabel_continue
0x08E41403,	//0x155e		VoC_lw16_d(REG3,0x8e4)
0x09BB1404,	//0x1560		VoC_lw16_d(REG4,0x9bb)
0x11A9071B,	//0x1562		VoC_add16_rd(REG3,REG3,0x11a9)
0x08E51504,	//0x1564		VoC_sw16_d(REG4,0x8e5)
0x08E41503,	//0x1566		VoC_sw16_d(REG3,0x8e4)
0x14EE2B00,	//0x1568		VoC_jump_lg(DFHLabel_LOOP_channel_start)
		//0x156a		DFHLabel_LOOP_channel_end
0x00030A86,	//0x156a		VoC_lw16i(REG6,0x3)
0x00000A85,	//0x156c		VoC_lw16i(REG5,0x0)
0x08E21506,	//0x156e		VoC_sw16_d(REG6,0x8e2)
0x08E41505,	//0x1570		VoC_sw16_d(REG5,0x8e4)
0x08E51505,	//0x1572		VoC_sw16_d(REG5,0x8e5)
		//0x1574		Label_HDR_NOISE2
0x00030A86,	//0x1574		VoC_lw16i(REG6,0x3)
0x08E24026,	//0x1576		VoC_be16_rd(Label2_LOOP_channel_start,REG6,0x8e2)
0x15DE2B00,	//0x1578		VoC_jump_lg(Label_DecFramHeader_exit)
		//0x157a		Label2_LOOP_channel_start
0x08E41406,	//0x157a		VoC_lw16_d(REG6,0x8e4)
0x08F94826,	//0x157c		VoC_blt16_rd(Label2_LOOP_channel_con,REG6,0x8f9)
0x15DE2B00,	//0x157e		VoC_jump_lg(Label2_LOOP_channel_end)
		//0x1580		Label2_LOOP_channel_con
0x09D01401,	//0x1580		VoC_lw16_d(REG1,0x9d0)
0x09C81406,	//0x1582		VoC_lw16_d(REG6,0x9c8)
0x09CA1403,	//0x1584		VoC_lw16_d(REG3,0x9ca)
0x08E46C08,	//0x1586		VoC_bez16_d(Label2_LorRchannel,0x8e4)
0x09F81401,	//0x1588		VoC_lw16_d(REG1,0x9f8)
0x09F01406,	//0x158a		VoC_lw16_d(REG6,0x9f0)
0x09F21403,	//0x158c		VoC_lw16_d(REG3,0x9f2)
		//0x158e		Label2_LorRchannel
0x15D23181,	//0x158e		VoC_bez16_r(Label2_continue,REG1)
0xFFC0D862,	//0x1590		VoC_NOP	|	VoC_lw16_p(REG2,REG6,DEFAULT)
0x15D23142,	//0x1592		VoC_bngtz16_r(Label2_NGTZ,REG2)
0x08E56E18,	//0x1594		VoC_bnez16_d(Label2_innerLOOP_start,0x8e5)
0xDF41DFC6,	//0x1596		VoC_push32(REG23,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x00070A86,	//0x1598		VoC_lw16i(REG6,0x7)
0x0C8B2B80,	//0x159a		VoC_jal(CII_ibstrmGetBits_VOC)
0xDF86DF01,	//0x159c		VoC_pop16(REG6,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x15DE3207,	//0x159e		VoC_bltz16_r(Label_DecFramHeader_exit,REG7)
0x1404E1C0,	//0x15a0		VoC_lw16_d(REG4,0x8e5)(lo)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x0A8108E5,	//0x15a2		VoC_lw16i(REG1,0x13)(lo)	|	VoC_lw16_d(REG4,0x8e5)(hi)
0x07240013,	//0x15a4		VoC_add16_rd(REG4,REG4,0x11a9)(lo)	|	VoC_lw16i(REG1,0x13)(hi)
0xC20811A9,	//0x15a6		VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x11a9)(hi)
0x08E51504,	//0x15a8		VoC_sw16_d(REG4,0x8e5)
0xFFC0DC30,	//0x15aa		VoC_NAD	|	VoC_sw16_p(REG0,REG3,DEFAULT)
		//0x15ac		Label2_innerLOOP_start
0x08E53822,	//0x15ac		VoC_bgt16_rd(Label2_innerLOOP_con,REG2,0x8e5)
0x15D22B00,	//0x15ae		VoC_jump_lg(Label2_innerLOOP_end)
		//0x15b0		Label2_innerLOOP_con
0x0A81DF41,	//0x15b0		VoC_lw16i(REG1,0xc54)(lo)	|	VoC_push32(REG23,DEFAULT)
0x2B800C54,	//0x15b2		VoC_jal(CII_huffDecGet_VOC)(lo)	|	VoC_lw16i(REG1,0xc54)(hi)
0xDF010ACF,	//0x15b4		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(CII_huffDecGet_VOC)(hi)
0x15DE3207,	//0x15b6		VoC_bltz16_r(Label_DecFramHeader_exit,REG7)
0xDFC5DF41,	//0x15b8		VoC_push16(REG5,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x2B80E006,	//0x15ba		VoC_jal(CII_ibstrmFlushBits_VOC)(lo)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xDF850C53,	//0x15bc		VoC_pop16(REG5,DEFAULT)	|	VoC_jal(CII_ibstrmFlushBits_VOC)(hi)
0x3207DF01,	//0x15be		VoC_bltz16_r(Label_DecFramHeader_exit,REG7)(lo)	|	VoC_pop32(REG23,DEFAULT)
0x140015DE,	//0x15c0		VoC_lw16_d(REG0,0x8e5)(lo)	|	VoC_bltz16_r(Label_DecFramHeader_exit,REG7)(hi)
0x0A8608E5,	//0x15c2		VoC_lw16i(REG6,0x12)(lo)	|	VoC_lw16_d(REG0,0x8e5)(hi)
0xC01C0012,	//0x15c4		VoC_add16_rr(REG4,REG0,REG3,DEFAULT)	|	VoC_lw16i(REG6,0x12)(hi)
0x07A1C375,	//0x15c6		VoC_sub16_rd(REG1,REG4,0x11a9)(lo)	|	VoC_sub16_rr(REG5,REG5,REG6,DEFAULT)
0x070011A9,	//0x15c8		VoC_add16_rd(REG0,REG0,0x11a9)(lo)	|	VoC_sub16_rd(REG1,REG4,0x11a9)(hi)
0x814911A9,	//0x15ca		VoC_add16_rp(REG1,REG5,REG1,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x11a9)(hi)
0x08E51500,	//0x15cc		VoC_sw16_d(REG0,0x8e5)
0x2B00DC41,	//0x15ce		VoC_jump_lg(Label2_innerLOOP_start)(lo)	|	VoC_sw16_p(REG1,REG4,DEFAULT)
0xFFC015AC,	//0x15d0		VoC_NAD	|	VoC_jump_lg(Label2_innerLOOP_start)(hi)
		//0x15d2		Label2_innerLOOP_end
		//0x15d2		Label2_NGTZ
		//0x15d2		Label2_continue
0x08E41403,	//0x15d2		VoC_lw16_d(REG3,0x8e4)
0x00000A84,	//0x15d4		VoC_lw16i(REG4,0x0)
0x11A9071B,	//0x15d6		VoC_add16_rd(REG3,REG3,0x11a9)
0x08E51504,	//0x15d8		VoC_sw16_d(REG4,0x8e5)
0x08E41503,	//0x15da		VoC_sw16_d(REG3,0x8e4)
0x157A2B00,	//0x15dc		VoC_jump_lg(Label2_LOOP_channel_start)
		//0x15de		Label2_LOOP_channel_end
		//0x15de		Label_DecFramHeader_exit
0x1507DFA9,	//0x15de		VoC_sw16_d(REG7,0xc49)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800C49,	//0x15e0		VoC_return	|	VoC_sw16_d(REG7,0xc49)(hi)
0xFFFFFFFF,	//0x15e2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15e4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15e6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15e8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15ea		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15ec		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15ee		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15f0		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15f2		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15f4		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15f6		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15f8		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15fa		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15fc		VoC_NOP	|	VoC_NOP
0xFFFFFFFF,	//0x15fe		VoC_NOP	|	VoC_NOP
