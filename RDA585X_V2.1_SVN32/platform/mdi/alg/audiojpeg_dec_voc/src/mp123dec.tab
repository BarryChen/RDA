		//0x0230		VoC_code_section_1
		//0x0230		VPP_MP3_DECODE
0xDFE9FF43,	//0x0230		VoC_push16(RA,DEFAULT)	|	VoC_lw32z(REG67,DEFAULT)
0x401D1507,	//0x0232		VoC_sw16_d(REG7,0x401d)
0x401E1583,	//0x0234		VoC_sw32_d(REG67,0x401e)
0x40016E06,	//0x0236		VoC_bnez16_d(main_decode_while_new_add,0x4001)
0x03832B80,	//0x0238		VoC_jal(CII_reload_data_temp)
0x02942B00,	//0x023a		VoC_jump_lg(main_decode_while)
		//0x023c		main_decode_while_new_add
0xF5F977F8,	//0x023c		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)
0xE00771DA,	//0x023e		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xe,DEFAULT)
0xF4047033,	//0x0240		VoC_lw16i_short(WRAP0,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xF406701D,	//0x0242		VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0xF403701F,	//0x0244		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x7FC11547,	//0x0246		VoC_sw16_d(REG7,0xffc1)
0x003F0A96,	//0x0248		VoC_lw16i(STATUS,0x3f)
0x1808FF44,	//0x024a		VoC_lw16i_set_inc(REG0,0x47d8,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x150847D8,	//0x024c		VoC_sw16_d(ACC0_LO,0x48df)(lo)	|	VoC_lw16i_set_inc(REG0,0x47d8,0x2)(hi)
0x2D0248DF,	//0x024e		VoC_loop_i(0x0,0x81)(lo)	|	VoC_sw16_d(ACC0_LO,0x48df)(hi)
0xDDC40251,	//0x0250		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x81)(hi)
		//0x0251		VoC_endloop0
0x47E51507,	//0x0252		VoC_sw16_d(REG7,0x47e5)
0x08000A85,	//0x0254		VoC_lw16i(REG5,0x800)
0x00000A84,	//0x0256		VoC_lw16i(REG4,0x0)
0x47E61504,	//0x0258		VoC_sw16_d(REG4,0x47e6)
0x47EB1504,	//0x025a		VoC_sw16_d(REG4,0x47eb)
0x47EC1504,	//0x025c		VoC_sw16_d(REG4,0x47ec)
0x47F91504,	//0x025e		VoC_sw16_d(REG4,0x47f9)
0x48E61804,	//0x0260		VoC_lw16i_set_inc(REG0,0x48e6,0x1)
0x15AC1809,	//0x0262		VoC_lw16i_set_inc(REG1,0x15ac,0x2)
0x51E6180A,	//0x0264		VoC_lw16i_set_inc(REG2,0x51e6,0x2)
0x026F2C21,	//0x0266		VoC_loop_i(0x1,0x10)
0x026B2D20,	//0x0268		VoC_loop_i(0x0,0x90)
0xDDCCDC88,	//0x026a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
		//0x026b		VoC_endloop0
0x026E2C80,	//0x026c		VoC_loop_i(0x0,0x40)
		//0x026e		VoC_endloop0
0xFFC0DDD4,	//0x026e		VoC_NOP	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x026f		VoC_endloop1
0x47C81808,	//0x0270		VoC_lw16i_set_inc(REG0,0x47c8,0x2)
0xDDC4E901,	//0x0272		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x0273		VoC_endloop0
0x03C32B80,	//0x0274		VoC_jal(CII_mad_frame_mute)
0x1794F003,	//0x0276		VoC_cfg_lg(0x8,)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x15030008,	//0x0278		VoC_sw16_d(REG3,0x48e0)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x2B8048E0,	//0x027a		VoC_jal(CII_reload_data_temp)(lo)	|	VoC_sw16_d(REG3,0x48e0)(hi)
0xF0230383,	//0x027c		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_jal(CII_reload_data_temp)(hi)
		//0x027d		main_decode_do
0x1407F7E6,	//0x027e		VoC_lw16_d(REG7,0x47f8)(lo)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0x150347F8,	//0x0280		VoC_sw16_d(REG3,0x47e9)(lo)	|	VoC_lw16_d(REG7,0x47f8)(hi)
0x401F47E9,	//0x0282		VoC_be16_rd(main_decode_while_100_1,REG7,0x408)(lo)	|	VoC_sw16_d(REG3,0x47e9)(hi)
0xE5C50408,	//0x0284		VoC_jump(main_decode_while_100)	|	VoC_be16_rd(main_decode_while_100_1,REG7,0x408)(hi)
		//0x0286		main_decode_while_100_1
0x401D1506,	//0x0286		VoC_sw16_d(REG6,0x401d)
0x02E22B00,	//0x0288		VoC_jump_lg(main_decode_exit)
		//0x028a		main_decode_while_100
0xFF46701B,	//0x028a		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x44F64427,	//0x028c		VoC_bne16_rd(main_decode_100_2,REG7,0x44f6)
0x02E22B00,	//0x028e		VoC_jump_lg(main_decode_exit)
		//0x0290		main_decode_100_2
0x04054427,	//0x0290		VoC_bne16_rd(main_decode_while,REG7,0x405)
0x02E22B00,	//0x0292		VoC_jump_lg(main_decode_exit)
		//0x0294		main_decode_while
0x2B80F15C,	//0x0294		VoC_jal(CII_mad_header_decode)(lo)	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
0xF21C03D3,	//0x0296		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_jal(CII_mad_header_decode)(hi)
0x04024587,	//0x0298		VoC_bne16_rd(main_decode_mad_header_decode,REG7,0x402)
0x47F81406,	//0x029a		VoC_lw16_d(REG6,0x47f8)
0x1647E0C7,	//0x029c		VoC_and16_ri(REG7,0xff00)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x31877F00,	//0x029e		VoC_bez16_r(main_decode_do,REG7)(lo)	|	VoC_and16_ri(REG7,0xff00)(hi)
0xFFC0027D,	//0x02a0		VoC_NAD	|	VoC_bez16_r(main_decode_do,REG7)(hi)
0x14562B80,	//0x02a2		VoC_jal(CII_decode_error)
0x44F64427,	//0x02a4		VoC_bne16_rd(main_decode_while_2,REG7,0x44f6)
0x02E22B00,	//0x02a6		VoC_jump_lg(main_decode_exit)
		//0x02a8		main_decode_while_2
0x04054427,	//0x02a8		VoC_bne16_rd(main_decode_while_200,REG7,0x405)
0x02E22B00,	//0x02aa		VoC_jump_lg(main_decode_exit)
		//0x02ac		main_decode_while_200
0x44FF4287,	//0x02ac		VoC_be16_rd(main_decode_while,REG7,0x44ff)
0x42EA4237,	//0x02ae		VoC_be16_rd(main_decode_while,REG7,0x42ea)
		//0x02b0		main_decode_mad_header_decode
0x06892B80,	//0x02b0		VoC_jal(CII_mad_frame_decode)
0x453FF006,	//0x02b2		VoC_bne16_rd(mad_frame_decode_l10a,REG7,0x402)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x14060402,	//0x02b4		VoC_lw16_d(REG6,0x47f8)(lo)	|	VoC_bne16_rd(mad_frame_decode_l10a,REG7,0x402)(hi)
0xE0C747F8,	//0x02b6		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x47f8)(hi)
0x7F001647,	//0x02b8		VoC_and16_ri(REG7,0xff00)
0x027D3187,	//0x02ba		VoC_bez16_r(main_decode_do,REG7)
0x14562B80,	//0x02bc		VoC_jal(CII_decode_error)
0x44F64427,	//0x02be		VoC_bne16_rd(main_decode_mad_header_decode_1,REG7,0x44f6)
0x02E22B00,	//0x02c0		VoC_jump_lg(main_decode_exit)
		//0x02c2		main_decode_mad_header_decode_1
0x04054427,	//0x02c2		VoC_bne16_rd(main_decode_mad_header_decode_2,REG7,0x405)
0xFFC065DE,	//0x02c4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(main_decode_exit)
		//0x02c6		main_decode_mad_header_decode_2
0x44FF4027,	//0x02c6		VoC_be16_rd(mad_frame_decode_l10a,REG7,0x44ff)
0x02942B00,	//0x02c8		VoC_jump_lg(main_decode_while)
		//0x02ca		mad_frame_decode_l10a
0x47D81404,	//0x02ca		VoC_lw16_d(REG4,0x47d8)
0x47E01403,	//0x02cc		VoC_lw16_d(REG3,0x47e0)
0x409CF185,	//0x02ce		VoC_be16_rd(NS_end,REG4,0x408)(lo)	|	VoC_lw16i_short(REG5,0xc,DEFAULT)
0x0A850408,	//0x02d0		VoC_lw16i(REG5,0x24)(lo)	|	VoC_be16_rd(NS_end,REG4,0x408)(hi)
0x443C0024,	//0x02d2		VoC_bne16_rd(NS_end,REG4,0x42df)(lo)	|	VoC_lw16i(REG5,0x24)(hi)
0x160342DF,	//0x02d4		VoC_and16_ri(REG3,0x1000)(lo)	|	VoC_bne16_rd(NS_end,REG4,0x42df)(hi)
0x31831000,	//0x02d6		VoC_bez16_r(NS_end,REG3)(lo)	|	VoC_and16_ri(REG3,0x1000)(hi)
0xF24502DA,	//0x02d8		VoC_lw16i_short(REG5,0x12,DEFAULT)	|	VoC_bez16_r(NS_end,REG3)(hi)
		//0x02da		NS_end
0x1505F21C,	//0x02da		VoC_sw16_d(REG5,0x47fb)(lo)	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
0x0A8247FB,	//0x02dc		VoC_lw16i(REG2,0xcac)(lo)	|	VoC_sw16_d(REG5,0x47fb)(hi)
0x2B800CAC,	//0x02de		VoC_jal(CII_mad_synth_frame)(lo)	|	VoC_lw16i(REG2,0xcac)(hi)
0xF00706C8,	//0x02e0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jal(CII_mad_synth_frame)(hi)
		//0x02e2		main_decode_exit
0x401D1400,	//0x02e2		VoC_lw16_d(REG0,0x401d)
0x035831C0,	//0x02e4		VoC_bnez16_r(main_decode_output_2,REG0)
0x47FA1482,	//0x02e6		VoC_lw32_d(REG45,0x47fa)
0x0CAC0A80,	//0x02e8		VoC_lw16i(REG0,0xcac)
0x40061486,	//0x02ea		VoC_lw32_d(RL6,0x4006)
0xC5ADF206,	//0x02ec		VoC_mult16_rr(REG5,REG6,REG5,DEFAULT)	|	VoC_lw16i_short(REG6,0x10,DEFAULT)
0x401CF808,	//0x02ee		VoC_be16_rd(main_decode_output_3,REG4,0x408)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xF8FD0408,	//0x02f0		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_be16_rd(main_decode_output_3,REG4,0x408)(hi)
		//0x02f2		main_decode_output_3
0x03583185,	//0x02f2		VoC_bez16_r(main_decode_output_2,REG5)
0xDF435FC0,	//0x02f4		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x6E13DF42,	//0x02f6		VoC_bnez16_d(MP3Decode_Channelprocess,0x4002)(lo)	|	VoC_push32(REG45,DEFAULT)
0x450C4002,	//0x02f8		VoC_bne16_rd(MP3Decode_Channelprocess,REG4,0x44fe)(lo)	|	VoC_bnez16_d(MP3Decode_Channelprocess,0x4002)(hi)
0x6C0F44FE,	//0x02fa		VoC_bez16_d(MP3Decode_Channelprocess,0x48e4)(lo)	|	VoC_bne16_rd(MP3Decode_Channelprocess,REG4,0x44fe)(hi)
0x180B48E4,	//0x02fc		VoC_lw16i_set_inc(REG3,0xcac,0x2)(lo)	|	VoC_bez16_d(MP3Decode_Channelprocess,0x48e4)(hi)
0x18040CAC,	//0x02fe		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0xcac,0x2)(hi)
0xD99B0000,	//0x0300		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
		//0x0301		MP3Decode_Channelprocess_L0
0xF80F780E,	//0x0302		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xE0C7C1F6,	//0x0304		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG6,DEFAULT)
0xDDDBDE00,	//0x0306		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x03013428,	//0x0308		VoC_bgt16_rr(MP3Decode_Channelprocess_L0,REG5,REG0)
		//0x030a		MP3Decode_Channelprocess
0x48E26C10,	//0x030a		VoC_bez16_d(NON_CLIP_BUFFER_CLEAR_cancel,0x48e2)
0x03600A86,	//0x030c		VoC_lw16i(REG6,0x360)
0x00001805,	//0x030e		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x5D6A1808,	//0x0310		VoC_lw16i_set_inc(REG0,0x5d6a,0x2)
0x48E21501,	//0x0312		VoC_sw16_d(REG1,0x48e2)
0xDE08FF44,	//0x0314		VoC_inc_p(REG1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0315		NON_CLIP_BUFFER_CLEAR
0x3431DDC4,	//0x0316		VoC_bgt16_rr(NON_CLIP_BUFFER_CLEAR,REG6,REG1)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xFFC00315,	//0x0318		VoC_NAD	|	VoC_bgt16_rr(NON_CLIP_BUFFER_CLEAR,REG6,REG1)(hi)
		//0x031a		NON_CLIP_BUFFER_CLEAR_cancel
0xDF805F02,	//0x031a		VoC_pop16(REG0,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0x1582DF03,	//0x031c		VoC_sw32_d(REG45,0x47fa)(lo)	|	VoC_pop32(REG67,DEFAULT)
0x150447FA,	//0x031e		VoC_sw16_d(REG4,0x4015)(lo)	|	VoC_sw32_d(REG45,0x47fa)(hi)
0x5FC04015,	//0x0320		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_d(REG4,0x4015)(hi)
0xF020DF46,	//0x0322		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_push32(RL6,IN_PARALLEL)
0x1500DFC5,	//0x0324		VoC_sw16_d(REG0,0x48e3)(lo)	|	VoC_push16(REG5,DEFAULT)
0xDFC748E3,	//0x0326		VoC_push16(REG7,DEFAULT)	|	VoC_sw16_d(REG0,0x48e3)(hi)
0x0CAC0A80,	//0x0328		VoC_lw16i(REG0,0xcac)
0x15AC0A81,	//0x032a		VoC_lw16i(REG1,0x15ac)
0x404A1484,	//0x032c		VoC_lw32_d(ACC0,0x404a)
0x1D882B80,	//0x032e		VoC_jal(Coolsand_NonClipDigitalGain_MP3)
0xF046F005,	//0x0330		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x48E31505,	//0x0332		VoC_sw16_d(REG5,0x48e3)
0x40154486,	//0x0334		VoC_bne16_rd(MP3Decode_NONCLIP_L0,REG6,0x4015)
0x0CAD0A80,	//0x0336		VoC_lw16i(REG0,0xcad)
0x15AC0A81,	//0x0338		VoC_lw16i(REG1,0x15ac)
0x1D882B80,	//0x033a		VoC_jal(Coolsand_NonClipDigitalGain_MP3)
		//0x033c		MP3Decode_NONCLIP_L0
0xDF85DF87,	//0x033c		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0xDF065F80,	//0x033e		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x7FC21545,	//0x0340		VoC_sw16_d(REG5,0xffc2)
0x7FC31540,	//0x0342		VoC_sw16_d(REG0,0xffc3)
0x7FC415C6,	//0x0344		VoC_sw32_d(RL6,0xffc4)
0x47FB1404,	//0x0346		VoC_lw16_d(REG4,0x47fb)
0xE00579F4,	//0x0348		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffe,DEFAULT)
0x1582FFC0,	//0x034a		VoC_sw32_d(REG45,0x4016)(lo)	|	VoC_NOP
0xDE804016,	//0x034c		VoC_cfg(0x0)	|	VoC_sw32_d(REG45,0x4016)(hi)
0x1794FFC0,	//0x034e		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x6C070008,	//0x0350		VoC_bez16_d(main_decode_output_2,0x4002)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xDFC74002,	//0x0352		VoC_push16(REG7,DEFAULT)	|	VoC_bez16_d(main_decode_output_2,0x4002)(hi)
0x1E3C2B80,	//0x0354		VoC_jal(CS_sbc_encode)
0xFFC05F87,	//0x0356		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
		//0x0358		main_decode_output_2
0xE0057021,	//0x0358		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x48E01402,	//0x035a		VoC_lw16_d(REG2,0x48e0)
0x40141501,	//0x035c		VoC_sw16_d(REG1,0x4014)
0xDFA978F2,	//0x035e		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffffe,DEFAULT)
0x48E01505,	//0x0360		VoC_sw16_d(REG5,0x48e0)
0x40011505,	//0x0362		VoC_sw16_d(REG5,0x4001)
0x401B1502,	//0x0364		VoC_sw16_d(REG2,0x401b)
0x401C1507,	//0x0366		VoC_sw16_d(REG7,0x401c)
0x47EC1407,	//0x0368		VoC_lw16_d(REG7,0x47ec)
0x07FF1607,	//0x036a		VoC_and16_ri(REG7,0x7ff)
0x7FF01647,	//0x036c		VoC_and16_ri(REG7,0xfff0)
0x47F91406,	//0x036e		VoC_lw16_d(REG6,0x47f9)
0xE10043BD,	//0x0370		VoC_lw16i_short(REG0,0x10,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG7,DEFAULT)
0x03763105,	//0x0372		VoC_bgtz16_r(VPP_MP3_DECODE_L0,REG5)
0x0400072D,	//0x0374		VoC_add16_rd(REG5,REG5,0x400)
		//0x0376		VPP_MP3_DECODE_L0
0x038234A8,	//0x0376		VoC_bngt16_rr(VPP_MP3_DECODE_L1,REG5,REG0)
0xC1C74345,	//0x0378		VoC_add16_rr(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG0,DEFAULT)
0x07FF1607,	//0x037a		VoC_and16_ri(REG7,0x7ff)
0x401B0B2A,	//0x037c		VoC_sub16_dr(REG2,0x401b,REG5)
0x47F91507,	//0x037e		VoC_sw16_d(REG7,0x47f9)
0x401B1502,	//0x0380		VoC_sw16_d(REG2,0x401b)
		//0x0382		VPP_MP3_DECODE_L1
0xF144E580,	//0x0382		VoC_lw16i_short(REG4,0xa,DEFAULT)	|	VoC_return
		//0x0383		CII_reload_data_temp
0x47EC1407,	//0x0384		VoC_lw16_d(REG7,0x47ec)
0x07FF1607,	//0x0386		VoC_and16_ri(REG7,0x7ff)
0x47F91406,	//0x0388		VoC_lw16_d(REG6,0x47f9)
0x1507C3BD,	//0x038a		VoC_sw16_d(REG7,0x47ec)(lo)	|	VoC_sub16_rr(REG5,REG6,REG7,DEFAULT)
0x324547EC,	//0x038c		VoC_bnltz16_r(CII_reload_data_temp_L0,REG5)(lo)	|	VoC_sw16_d(REG7,0x47ec)(hi)
0x072D0392,	//0x038e		VoC_add16_rd(REG5,REG5,0x400)(lo)	|	VoC_bnltz16_r(CII_reload_data_temp_L0,REG5)(hi)
0xFFC00400,	//0x0390		VoC_NAD	|	VoC_add16_rd(REG5,REG5,0x400)(hi)
		//0x0392		CII_reload_data_temp_L0
0x06000A83,	//0x0392		VoC_lw16i(REG3,0x600)
0x03C2342B,	//0x0394		VoC_bgt16_rr(CII_reload_data_temp_L1,REG5,REG3)
0xF8177816,	//0x0396		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x3107C3F7,	//0x0398		VoC_bgtz16_r(CII_reload_data_temp_L2,REG7)(lo)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0x0A85039E,	//0x039a		VoC_lw16i(REG5,0x200)(lo)	|	VoC_bgtz16_r(CII_reload_data_temp_L2,REG7)(hi)
0xC1EF0200,	//0x039c		VoC_add16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x200)(hi)
		//0x039e		CII_reload_data_temp_L2
0x40041486,	//0x039e		VoC_lw32_d(RL6,0x4004)
0x7FFC1647,	//0x03a0		VoC_and16_ri(REG7,0xfffc)
0x7FC11544,	//0x03a2		VoC_sw16_d(REG4,0xffc1)
0x7FC31546,	//0x03a4		VoC_sw16_d(REG6,0xffc3)
0x7FC21547,	//0x03a6		VoC_sw16_d(REG7,0xffc2)
0x7FC415C6,	//0x03a8		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x03aa		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x03ac		VoC_cfg_lg(0x8,)
0x7A73F006,	//0x03ae		VoC_shr32_ri(REG67,0xe,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x499EE004,	//0x03b0		VoC_add32_rr(RL6,RL6,REG67,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x1544FB93,	//0x03b2		VoC_sw16_d(REG4,0xffc1)(lo)	|	VoC_shr32_ri(REG67,0xfffffff2,IN_PARALLEL)
0x15867FC1,	//0x03b4		VoC_sw32_d(RL6,0x4004)(lo)	|	VoC_sw16_d(REG4,0xffc1)(hi)
0x073B4004,	//0x03b6		VoC_add16_rd(REG3,REG7,0x48e0)(lo)	|	VoC_sw32_d(RL6,0x4004)(hi)
0xF8F748E0,	//0x03b8		VoC_shr16_ri(REG7,0xfffffffe,DEFAULT)	|	VoC_add16_rd(REG3,REG7,0x48e0)(hi)
0x47F9073F,	//0x03ba		VoC_add16_rd(REG7,REG7,0x47f9)
0x07FF1607,	//0x03bc		VoC_and16_ri(REG7,0x7ff)
0x48E01503,	//0x03be		VoC_sw16_d(REG3,0x48e0)
0x47F91507,	//0x03c0		VoC_sw16_d(REG7,0x47f9)
		//0x03c2		CII_reload_data_temp_L1
0xFF44E580,	//0x03c2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_return
		//0x03c3		CII_mad_frame_mute
0x15AC1808,	//0x03c4		VoC_lw16i_set_inc(REG0,0x15ac,0x2)
0x48E61809,	//0x03c6		VoC_lw16i_set_inc(REG1,0x48e6,0x2)
0x1A2C180A,	//0x03c8		VoC_lw16i_set_inc(REG2,0x1a2c,0x2)
0x03D12C07,	//0x03ca		VoC_loop_i(0x1,0x3)
0x03D02D80,	//0x03cc		VoC_loop_i(0x0,0xc0)
0xDDCCDDC4,	//0x03ce		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x03d0		VoC_endloop0
0xFFC0DDD4,	//0x03d0		VoC_NOP	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x03d1		VoC_endloop1
0xF031E580,	//0x03d2		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_return
		//0x03d3		CII_mad_header_decode
0xFF475FE9,	//0x03d4		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x47EC2006,	//0x03d6		VoC_lw16d_set_inc(REG2,0x47ec,0x1)
0x47F92007,	//0x03d8		VoC_lw16d_set_inc(REG3,0x47f9,0x1)
0xE02677E7,	//0x03da		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0x04003C32,	//0x03dc		VoC_bngt16_rd(mad_header_decode_100,REG2,0x400)
0x47F81506,	//0x03de		VoC_sw16_d(REG6,0x47f8)
0x05262B00,	//0x03e0		VoC_jump_lg(mad_header_decode_fail)
		//0x03e2		mad_header_decode_100
0x47E86C22,	//0x03e2		VoC_bez16_d(mad_header_decode_skip,0x47e8)
0x47E96E04,	//0x03e4		VoC_bnez16_d(mad_header_decode_skip_100,0x47e9)
0x47EB1402,	//0x03e6		VoC_lw16_d(REG2,0x47eb)
		//0x03e8		mad_header_decode_skip_100
0xE01642D4,	//0x03e8		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG2,DEFAULT)
0x03FD3144,	//0x03ea		VoC_bngtz16_r(mad_header_decode_skip_200,REG4)
0x47E84D0C,	//0x03ec		VoC_bnlt16_rd(mad_header_decode_skip_200,REG4,0x47e8)
0x47E80B24,	//0x03ee		VoC_sub16_dr(REG4,0x47e8,REG4)
0x04004823,	//0x03f0		VoC_blt16_rd(mad_frame_decode101,REG3,0x400)
0x0400079B,	//0x03f2		VoC_sub16_rd(REG3,REG3,0x400)
		//0x03f4		mad_frame_decode101
0x1503FFC0,	//0x03f4		VoC_sw16_d(REG3,0x47ec)(lo)	|	VoC_NOP
0x150447EC,	//0x03f6		VoC_sw16_d(REG4,0x47e8)(lo)	|	VoC_sw16_d(REG3,0x47ec)(hi)
0x150647E8,	//0x03f8		VoC_sw16_d(REG6,0x47f8)(lo)	|	VoC_sw16_d(REG4,0x47e8)(hi)
0x2B0047F8,	//0x03fa		VoC_jump_lg(mad_header_decode_fail)(lo)	|	VoC_sw16_d(REG6,0x47f8)(hi)
0xFFC00526,	//0x03fc		VoC_NOP	|	VoC_jump_lg(mad_header_decode_fail)(hi)
		//0x03fd		mad_header_decode_skip_200
0x47E80712,	//0x03fe		VoC_add16_rd(REG2,REG2,0x47e8)
0x47E8150F,	//0x0400		VoC_sw16_d(RL7_HI,0x47e8)
0x47E91506,	//0x0402		VoC_sw16_d(REG6,0x47e9)
		//0x0404		mad_header_decode_skip
		//0x0404		mad_header_decode_sync
0x47E96C3B,	//0x0404		VoC_bez16_d(mad_header_decode_sync_100,0x47e9)
0xE01642D4,	//0x0406		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG2,DEFAULT)
0x42EA3824,	//0x0408		VoC_bgt16_rd(mad_header_decode111,REG4,0x42ea)
0x04000724,	//0x040a		VoC_add16_rd(REG4,REG4,0x400)
		//0x040c		mad_header_decode111
0x44FC4CAC,	//0x040c		VoC_bnlt16_rd(mad_header_decode_sync_200,REG4,0x44fc)
0x04004822,	//0x040e		VoC_blt16_rd(mad_header_decode101,REG2,0x400)
0x04000792,	//0x0410		VoC_sub16_rd(REG2,REG2,0x400)
		//0x0412		mad_header_decode101
0x1502FFC0,	//0x0412		VoC_sw16_d(REG2,0x47ec)(lo)	|	VoC_NOP
0x150647EC,	//0x0414		VoC_sw16_d(REG6,0x47f8)(lo)	|	VoC_sw16_d(REG2,0x47ec)(hi)
0x2B0047F8,	//0x0416		VoC_jump_lg(mad_header_decode_fail)(lo)	|	VoC_sw16_d(REG6,0x47f8)(hi)
0xF15D0526,	//0x0418		VoC_lw16i_short(WRAP1,0xa,DEFAULT)	|	VoC_jump_lg(mad_header_decode_fail)(hi)
		//0x0419		mad_header_decode_sync_200
0xF6446041,	//0x041a		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x1604F909,	//0x041c		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_shru16_ri(REG1,0x1,DEFAULT)
0xD8950001,	//0x041e		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x04263184,	//0x0420		VoC_bez16_r(mad_header_decode_sync_even,REG4)
0xD8947945,	//0x0422		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x8,DEFAULT)
0xE465F9C4,	//0x0424		VoC_or16_rr(REG5,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)
		//0x0426		mad_header_decode_sync_even
0x1645F21D,	//0x0426		VoC_and16_ri(REG5,0xe0ff)(lo)	|	VoC_lw16i_short(WRAP1,0x10,DEFAULT)
0x071760FF,	//0x0428		VoC_add16_rd(REG7,REG2,0x408)(lo)	|	VoC_and16_ri(REG5,0xe0ff)(hi)
0x0A860408,	//0x042a		VoC_lw16i(REG6,0x101)(lo)	|	VoC_add16_rd(REG7,REG2,0x408)(hi)
0x442D0101,	//0x042c		VoC_bne16_rd(no_mad_header_decode_sync_100_end,REG5,0x403)(lo)	|	VoC_lw16i(REG6,0x101)(hi)
0x2B000403,	//0x042e		VoC_jump_lg(mad_header_decode_sync_100_end)(lo)	|	VoC_bne16_rd(no_mad_header_decode_sync_100_end,REG5,0x403)(hi)
0xFFC00474,	//0x0430		VoC_NAD	|	VoC_jump_lg(mad_header_decode_sync_100_end)(hi)
		//0x0432		no_mad_header_decode_sync_100_end
0x04004827,	//0x0432		VoC_blt16_rd(mad_header_decode102,REG7,0x400)
0x040007BF,	//0x0434		VoC_sub16_rd(REG7,REG7,0x400)
		//0x0436		mad_header_decode102
0x1502FFC0,	//0x0436		VoC_sw16_d(REG2,0x47eb)(lo)	|	VoC_NOP
0x150747EB,	//0x0438		VoC_sw16_d(REG7,0x47ec)(lo)	|	VoC_sw16_d(REG2,0x47eb)(hi)
0x150647EC,	//0x043a		VoC_sw16_d(REG6,0x47f8)(lo)	|	VoC_sw16_d(REG7,0x47ec)(hi)
0x2B0047F8,	//0x043c		VoC_jump_lg(mad_header_decode_fail)(lo)	|	VoC_sw16_d(REG6,0x47f8)(hi)
0xF01B0526,	//0x043e		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_jump_lg(mad_header_decode_fail)(hi)
		//0x043f		mad_header_decode_sync_100
0xF6407F46,	//0x0440		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x1604E044,	//0x0442		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0xF9080001,	//0x0444		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0xF004715C,	//0x0446		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
0x044C3184,	//0x0448		VoC_bez16_r(mad_header_decode_mad_bit_init_even_100,REG4)
0xE2A0E240,	//0x044a		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x044c		mad_header_decode_mad_bit_init_even_100
0x2B80FFC0,	//0x044c		VoC_jal(CII_mad_stream_sync)(lo)	|	VoC_NOP
0xF21C05E8,	//0x044e		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_jal(CII_mad_stream_sync)(hi)
0x04024027,	//0x0450		VoC_be16_rd(no2_mad_header_decode_sync_100_end,REG7,0x402)
0x04742B00,	//0x0452		VoC_jump_lg(mad_header_decode_sync_100_end)
		//0x0454		no2_mad_header_decode_sync_100_end
0x00010A86,	//0x0454		VoC_lw16i(REG6,0x1)
0x47EC079F,	//0x0456		VoC_sub16_rd(REG7,REG3,0x47ec)
0x42EA3827,	//0x0458		VoC_bgt16_rd(mad_header_decode104,REG7,0x42ea)
0x0400073F,	//0x045a		VoC_add16_rd(REG7,REG7,0x400)
		//0x045c		mad_header_decode104
0x44FC079C,	//0x045c		VoC_sub16_rd(REG4,REG3,0x44fc)
0x04623104,	//0x045e		VoC_bgtz16_r(mad_header_decode_sync_403,REG4)
0x04000724,	//0x0460		VoC_add16_rd(REG4,REG4,0x400)
		//0x0462		mad_header_decode_sync_403
0x04663107,	//0x0462		VoC_bgtz16_r(mad_header_decode_sync_402,REG7)
0x42EA0B3F,	//0x0464		VoC_sub16_dr(REG7,0x42ea,REG7)
		//0x0466		mad_header_decode_sync_402
0x44FC4897,	//0x0466		VoC_blt16_rd(mad_header_decode_sync_400,REG7,0x44fc)
0x04004824,	//0x0468		VoC_blt16_rd(mad_header_decode103,REG4,0x400)
0x040007A4,	//0x046a		VoC_sub16_rd(REG4,REG4,0x400)
		//0x046c		mad_header_decode103
0x1504FFC0,	//0x046c		VoC_sw16_d(REG4,0x47ec)(lo)	|	VoC_NOP
0xFFC047EC,	//0x046e		VoC_NAD	|	VoC_sw16_d(REG4,0x47ec)(hi)
		//0x0470		mad_header_decode_sync_400
0x47F81506,	//0x0470		VoC_sw16_d(REG6,0x47f8)
0x05262B00,	//0x0472		VoC_jump_lg(mad_header_decode_fail)
		//0x0474		mad_header_decode_sync_100_end
0x0713DFC3,	//0x0474		VoC_add16_rd(REG3,REG2,0x408)(lo)	|	VoC_push16(REG3,DEFAULT)
0x48230408,	//0x0476		VoC_blt16_rd(mad_header_decode105,REG3,0x400)(lo)	|	VoC_add16_rd(REG3,REG2,0x408)(hi)
0x079B0400,	//0x0478		VoC_sub16_rd(REG3,REG3,0x400)(lo)	|	VoC_blt16_rd(mad_header_decode105,REG3,0x400)(hi)
0xF01B0400,	//0x047a		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_sub16_rd(REG3,REG3,0x400)(hi)
		//0x047b		mad_header_decode105
0x47EB1502,	//0x047c		VoC_sw16_d(REG2,0x47eb)
0x47EC1503,	//0x047e		VoC_sw16_d(REG3,0x47ec)
0xF6407F46,	//0x0480		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x00011602,	//0x0482		VoC_and16_ri(REG2,0x1)
0xF0047908,	//0x0484		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x048A3182,	//0x0486		VoC_bez16_r(mad_header_decode_mad_bit_init_even,REG2)
0xE2A0E240,	//0x0488		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x048a		mad_header_decode_mad_bit_init_even
0x47D81806,	//0x048a		VoC_lw16i_set_inc(REG2,0x47d8,0x1)
0x052D2B80,	//0x048c		VoC_jal(CII_decode_header)
0x47ED1500,	//0x048e		VoC_sw16_d(REG0,0x47ed)
0x47EE1586,	//0x0490		VoC_sw32_d(RL6,0x47ee)
0x47F0151B,	//0x0492		VoC_sw16_d(BITCACHE,0x47f0)
0x47F81505,	//0x0494		VoC_sw16_d(REG5,0x47f8)
0x4429DF83,	//0x0496		VoC_bne16_rd(no_mad_header_decode_fail,REG1,0x402)(lo)	|	VoC_pop16(REG3,DEFAULT)
0x2B000402,	//0x0498		VoC_jump_lg(mad_header_decode_fail)(lo)	|	VoC_bne16_rd(no_mad_header_decode_fail,REG1,0x402)(hi)
0xFFC00526,	//0x049a		VoC_NAD	|	VoC_jump_lg(mad_header_decode_fail)(hi)
		//0x049c		no_mad_header_decode_fail
0x01010A86,	//0x049c		VoC_lw16i(REG6,0x101)
0x47DC6E06,	//0x049e		VoC_bnez16_d(mad_header_bitrate,0x47dc)
0x47F81506,	//0x04a0		VoC_sw16_d(REG6,0x47f8)
0x05262B00,	//0x04a2		VoC_jump_lg(mad_header_decode_fail)
		//0x04a4		mad_header_bitrate
0x1405F024,	//0x04a4		VoC_lw16_d(REG5,0x47e0)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x160547E0,	//0x04a6		VoC_and16_ri(REG5,0x80)(lo)	|	VoC_lw16_d(REG5,0x47e0)(hi)
0x31050080,	//0x04a8		VoC_bgtz16_r(mad_header_decode_pad_slot,REG5)(lo)	|	VoC_and16_ri(REG5,0x80)(hi)
0xF00404AC,	//0x04aa		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bgtz16_r(mad_header_decode_pad_slot,REG5)(hi)
		//0x04ac		mad_header_decode_pad_slot
0xFF45F019,	//0x04ac		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x47DD140A,	//0x04ae		VoC_lw16_d(ACC1_LO,0x47dd)
0x47DC1406,	//0x04b0		VoC_lw16_d(REG6,0x47dc)
0xFC1D7061,	//0x04b2		VoC_shru32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0x00480A82,	//0x04b4		VoC_lw16i(REG2,0x48)
0x47D84481,	//0x04b6		VoC_bne16_rd(mad_header_decode_no_MAD_LAYER_III,REG1,0x47d8)
0x47E01405,	//0x04b8		VoC_lw16_d(REG5,0x47e0)
0x10001605,	//0x04ba		VoC_and16_ri(REG5,0x1000)
0x04BF3105,	//0x04bc		VoC_bgtz16_r(mad_header_decode_no_MAD_LAYER_72,REG5)
		//0x04be		mad_header_decode_no_MAD_LAYER_III
0xF021F8FA,	//0x04be		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
		//0x04bf		mad_header_decode_no_MAD_LAYER_72
0x47D84421,	//0x04c0		VoC_bne16_rd(mad_header_decode_no_MAD_LAYER_I,REG1,0x47d8)
0xFFC07182,	//0x04c2		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0xc,DEFAULT)
		//0x04c4		mad_header_decode_no_MAD_LAYER_I
0x007D0A87,	//0x04c4		VoC_lw16i(REG7,0x7d)
0xF005C4BA,	//0x04c6		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_mult16_rr(REG2,REG2,REG7,DEFAULT)
0xFFC0CD94,	//0x04c8		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG2,DEFAULT)
		//0x04ca		mad_header_decode_div_102
0x04D0362C,	//0x04ca		VoC_bgt32_rr(mad_header_decode_div_mode101,ACC1,ACC0)
0x072DCB2C,	//0x04cc		VoC_add16_rd(REG5,REG5,0x408)(lo)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xE5FB0408,	//0x04ce		VoC_jump(mad_header_decode_div_102)	|	VoC_add16_rd(REG5,REG5,0x408)(hi)
		//0x04d0		mad_header_decode_div_mode101
0x4419C165,	//0x04d0		VoC_bne16_rd(mad_header_decode_no_MAD_LAYER_I_2,REG1,0x47d8)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xF8F547D8,	//0x04d2		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_bne16_rd(mad_header_decode_no_MAD_LAYER_I_2,REG1,0x47d8)(hi)
		//0x04d4		mad_header_decode_no_MAD_LAYER_I_2
0x072CF7F9,	//0x04d4		VoC_add16_rd(REG4,REG5,0x44fc)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0x079A44FC,	//0x04d6		VoC_sub16_rd(REG2,REG3,0x47eb)(lo)	|	VoC_add16_rd(REG4,REG5,0x44fc)(hi)
0x310247EB,	//0x04d8		VoC_bgtz16_r(MAD_HEADER_101,REG2)(lo)	|	VoC_sub16_rd(REG2,REG3,0x47eb)(hi)
0x071204DE,	//0x04da		VoC_add16_rd(REG2,REG2,0x400)(lo)	|	VoC_bgtz16_r(MAD_HEADER_101,REG2)(hi)
0xFFC00400,	//0x04dc		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x400)(hi)
		//0x04de		MAD_HEADER_101
0x00010A86,	//0x04de		VoC_lw16i(REG6,0x1)
0x47EB1407,	//0x04e0		VoC_lw16_d(REG7,0x47eb)
0x34A2C17D,	//0x04e2		VoC_bngt16_rr(mad_header_N,REG4,REG2)(lo)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x482F04F0,	//0x04e4		VoC_blt16_rd(mad_header_decode106,REG7,0x400)(lo)	|	VoC_bngt16_rr(mad_header_N,REG4,REG2)(hi)
0x07BF0400,	//0x04e6		VoC_sub16_rd(REG7,REG7,0x400)(lo)	|	VoC_blt16_rd(mad_header_decode106,REG7,0x400)(hi)
0xFFC00400,	//0x04e8		VoC_NAD	|	VoC_sub16_rd(REG7,REG7,0x400)(hi)
		//0x04ea		mad_header_decode106
0x47F81506,	//0x04ea		VoC_sw16_d(REG6,0x47f8)
0x47EC1507,	//0x04ec		VoC_sw16_d(REG7,0x47ec)
0x05262B00,	//0x04ee		VoC_jump_lg(mad_header_decode_fail)
		//0x04f0		mad_header_N
0x04003C25,	//0x04f0		VoC_bngt16_rd(MAD_HEADER102,REG5,0x400)
0x040007AD,	//0x04f2		VoC_sub16_rd(REG5,REG5,0x400)
		//0x04f4		MAD_HEADER102
0x1505FFC0,	//0x04f4		VoC_sw16_d(REG5,0x47ec)(lo)	|	VoC_NOP
0x140547EC,	//0x04f6		VoC_lw16_d(REG5,0x47e0)(lo)	|	VoC_sw16_d(REG5,0x47ec)(hi)
0x168547E0,	//0x04f8		VoC_or16_ri(REG5,0x8)(lo)	|	VoC_lw16_d(REG5,0x47e0)(hi)
0x6E270008,	//0x04fa		VoC_bnez16_d(mad_header_sync,0x47e9)(lo)	|	VoC_or16_ri(REG5,0x8)(hi)
0x200647E9,	//0x04fc		VoC_lw16d_set_inc(REG2,0x47ec,0x1)(lo)	|	VoC_bnez16_d(mad_header_sync,0x47e9)(hi)
0x604447EC,	//0x04fe		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_lw16d_set_inc(REG2,0x47ec,0x1)(hi)
0xF031F641,	//0x0500		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
0xE0167909,	//0x0502		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0x1,DEFAULT)
0x00011604,	//0x0504		VoC_and16_ri(REG4,0x1)
0x3184D897,	//0x0506		VoC_bez16_r(mad_header_decode_sync_even_333,REG4)(lo)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x7947050E,	//0x0508		VoC_shru16_ri(REG7,0x8,DEFAULT)	|	VoC_bez16_r(mad_header_decode_sync_even_333,REG4)(hi)
0xF9C4D894,	//0x050a		VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
0xFFC06467,	//0x050c		VoC_NAD(IN_PARALLEL)	|	VoC_or16_rr(REG7,REG4,DEFAULT)
		//0x050e		mad_header_decode_sync_even_333
0x60FF1647,	//0x050e		VoC_and16_ri(REG7,0xe0ff)
0x47EB1404,	//0x0510		VoC_lw16_d(REG4,0x47eb)
0x04080722,	//0x0512		VoC_add16_rd(REG2,REG4,0x408)
0x040340A7,	//0x0514		VoC_be16_rd(mad_header_sync_100,REG7,0x403)
0x04004822,	//0x0516		VoC_blt16_rd(mad_header_decode108,REG2,0x400)
0x04000792,	//0x0518		VoC_sub16_rd(REG2,REG2,0x400)
		//0x051a		mad_header_decode108
0x1502FFC0,	//0x051a		VoC_sw16_d(REG2,0x47ec)(lo)	|	VoC_NOP
0x2B0047EC,	//0x051c		VoC_jump_lg(mad_header_decode_sync)(lo)	|	VoC_sw16_d(REG2,0x47ec)(hi)
0xFFC00404,	//0x051e		VoC_NAD	|	VoC_jump_lg(mad_header_decode_sync)(hi)
		//0x0520		mad_header_sync_100
0x47E91506,	//0x0520		VoC_sw16_d(REG6,0x47e9)
		//0x0522		mad_header_sync
0x47E01505,	//0x0522		VoC_sw16_d(REG5,0x47e0)
0xE5C5F007,	//0x0524		VoC_jump(mad_header_decode_return0)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0526		mad_header_decode_fail
0xF7E7F006,	//0x0526		VoC_lw16i_short(REG7,0xffffffff,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x47E91506,	//0x0528		VoC_sw16_d(REG6,0x47e9)
		//0x052a		mad_header_decode_return0
0xFFC0DFA9,	//0x052a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF7E1E580,	//0x052c		VoC_lw16i_short(REG1,0xffffffff,DEFAULT)	|	VoC_return
		//0x052d		CII_decode_header
0x44FC0713,	//0x052e		VoC_add16_rd(REG3,REG2,0x44fc)
0x62ACE240,	//0x0530		VoC_rbinc_i(REG4,0xb,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE240FF43,	//0x0532		VoC_lbinc_p(REG0)	|	VoC_lw32z(REG67,IN_PARALLEL)
0x31C4E284,	//0x0534		VoC_bnez16_r(decode_header101,REG4)(lo)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x16860539,	//0x0536		VoC_or16_ri(REG6,0x4000)(lo)	|	VoC_bnez16_r(decode_header101,REG4)(hi)
0xE2844000,	//0x0538		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_or16_ri(REG6,0x4000)(hi)
		//0x0539		decode_header101
0x053F31C4,	//0x053a		VoC_bnez16_r(decode_header102,REG4)
0x10001686,	//0x053c		VoC_or16_ri(REG6,0x1000)
0xE0C5E5CA,	//0x053e		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_jump(decode_header103)
		//0x053f		decode_header102
0x40001605,	//0x0540		VoC_and16_ri(REG5,0x4000)
0x05483185,	//0x0542		VoC_bez16_r(decode_header103,REG5)
0x01010A85,	//0x0544		VoC_lw16i(REG5,0x101)
0xE580DD9B,	//0x0546		VoC_return	|	VoC_sw32_p(REG67,REG3,DEFAULT)
		//0x0548		decode_header103
0x0B25E288,	//0x0548		VoC_sub16_dr(REG5,0x4502,REG4)(lo)	|	VoC_rbinc_i(REG4,0x2,DEFAULT)
0x31C44502,	//0x054a		VoC_bnez16_r(decode_header104,REG4)(lo)	|	VoC_sub16_dr(REG5,0x4502,REG4)(hi)
0x0A850551,	//0x054c		VoC_lw16i(REG5,0x102)(lo)	|	VoC_bnez16_r(decode_header104,REG4)(hi)
0xDD9B0102,	//0x054e		VoC_sw32_p(REG67,REG3,DEFAULT)	|	VoC_lw16i(REG5,0x102)(hi)
0xE284E580,	//0x0550		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_return
		//0x0551		decode_header104
0xDFC5DC25,	//0x0552		VoC_push16(REG5,DEFAULT)	|	VoC_sw16_p(REG5,REG2,DEFAULT)
0x401E1504,	//0x0554		VoC_sw16_d(REG4,0x401e)
0x057231C4,	//0x0556		VoC_bnez16_r(decode_header105,REG4)
0x00101686,	//0x0558		VoC_or16_ri(REG6,0x10)
0xDF465FC0,	//0x055a		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF435FDB,	//0x055c		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(BITCACHE,DEFAULT)
0xDF415FE9,	//0x055e		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x06662B80,	//0x0560		VoC_jal(CII_creat_crc_table)
0xEFF47207,	//0x0562		VoC_lw16i_short(REG4,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x10,DEFAULT)
0x2B80DFC1,	//0x0564		VoC_jal(CII_mad_bit_crc)(lo)	|	VoC_push16(REG1,DEFAULT)
0xDF810619,	//0x0566		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_mad_bit_crc)(hi)
0xDF015FA9,	//0x0568		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x45040714,	//0x056a		VoC_add16_rd(REG4,REG2,0x4504)
0xDF035F9B,	//0x056c		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(BITCACHE,DEFAULT)
0xF0065C4E,	//0x056e		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_sw16_p(RL7_LO,REG4,DEFAULT)
0xDF065F80,	//0x0570		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
		//0x0572		decode_header105
0xDF856290,	//0x0572		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x4,DEFAULT)
0x42F04434,	//0x0574		VoC_bne16_rd(decode_header106,REG4,0x42f0)
0x01030A85,	//0x0576		VoC_lw16i(REG5,0x103)
0xE580DD9B,	//0x0578		VoC_return	|	VoC_sw32_p(REG67,REG3,DEFAULT)
		//0x057a		decode_header106
0xF6C25F41,	//0x057a		VoC_movreg16(REG2,REG6,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x10001602,	//0x057c		VoC_and16_ri(REG2,0x1000)
0x040807AB,	//0x057e		VoC_sub16_rd(REG3,REG5,0x408)
0x05863182,	//0x0580		VoC_bez16_r(decode_header107,REG2)
0xF80BE0A3,	//0x0582		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_movreg16(REG3,REG5,DEFAULT)
0x42DF071B,	//0x0584		VoC_add16_rd(REG3,REG3,0x42df)
		//0x0586		decode_header107
0x44F6081B,	//0x0586		VoC_mult16_rd(REG3,REG3,0x44f6)
0x43B80A82,	//0x0588		VoC_lw16i(REG2,0x43b8)
0xC0E3FFC0,	//0x058a		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_NOP
0x6288C0D5,	//0x058c		VoC_rbinc_i(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG5,REG3,REG2,DEFAULT)
0xD85ADF01,	//0x058e		VoC_lw16_p(ACC1_LO,REG5,DEFAULT)	|	VoC_pop32(REG23,IN_PARALLEL)
0x150ADD9B,	//0x0590		VoC_sw16_d(ACC1_LO,0x401a)(lo)	|	VoC_sw32_p(REG67,REG3,DEFAULT)
0x442C401A,	//0x0592		VoC_bne16_rd(decode_header108,REG4,0x42df)(lo)	|	VoC_sw16_d(ACC1_LO,0x401a)(hi)
0x0A8542DF,	//0x0594		VoC_lw16i(REG5,0x104)(lo)	|	VoC_bne16_rd(decode_header108,REG4,0x42df)(hi)
0xE5800104,	//0x0596		VoC_return	|	VoC_lw16i(REG5,0x104)(hi)
		//0x0598		decode_header108
0x2C440AC1,	//0x0598		VoC_lw16i(REG1,0xac44)
0x05A23184,	//0x059a		VoC_bez16_r(decode_header_samplerate,REG4)
0x3B800AC1,	//0x059c		VoC_lw16i(REG1,0xbb80)
0x04084024,	//0x059e		VoC_be16_rd(decode_header_samplerate,REG4,0x408)
0x7D000A81,	//0x05a0		VoC_lw16i(REG1,0x7d00)
		//0x05a2		decode_header_samplerate
0x1605E0C5,	//0x05a2		VoC_and16_ri(REG5,0x1000)(lo)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x31851000,	//0x05a4		VoC_bez16_r(decode_header109,REG5)(lo)	|	VoC_and16_ri(REG5,0x1000)(hi)
0xF90905AE,	//0x05a6		VoC_shru16_ri(REG1,0x1,DEFAULT)	|	VoC_bez16_r(decode_header109,REG5)(hi)
0x1605E0C5,	//0x05a8		VoC_and16_ri(REG5,0x4000)(lo)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x31854000,	//0x05aa		VoC_bez16_r(decode_header109,REG5)(lo)	|	VoC_and16_ri(REG5,0x4000)(hi)
0xF80905AE,	//0x05ac		VoC_shr16_ri(REG1,0x1,DEFAULT)	|	VoC_bez16_r(decode_header109,REG5)(hi)
		//0x05ae		decode_header109
0xE028FF44,	//0x05ae		VoC_movreg16(ACC0_LO,REG1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xF62B6284,	//0x05b0		VoC_movreg16(ACC1_HI,REG1,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x40181584,	//0x05b2		VoC_sw32_d(ACC0,0x4018)
0x45020715,	//0x05b4		VoC_add16_rd(REG5,REG2,0x4502)
0x05BA3184,	//0x05b6		VoC_bez16_r(decode_header110,REG4)
0x00801686,	//0x05b8		VoC_or16_ri(REG6,0x80)
		//0x05ba		decode_header110
0xE284DDAD,	//0x05ba		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_sw32_p(ACC1,REG5,DEFAULT)
0x05C03184,	//0x05bc		VoC_bez16_r(decode_header111,REG4)
0x01001687,	//0x05be		VoC_or16_ri(REG7,0x100)
		//0x05c0		decode_header111
0xDE106288,	//0x05c0		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x2,DEFAULT)
0x42DF0B24,	//0x05c2		VoC_sub16_dr(REG4,0x42df,REG4)
0x401F1504,	//0x05c4		VoC_sw16_d(REG4,0x401f)
0xDCA4E289,	//0x05c6		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_rbinc_i(REG5,0x2,DEFAULT)
0xE284DCA5,	//0x05c8		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x05CE3184,	//0x05ca		VoC_bez16_r(decode_header112,REG4)
0x00201686,	//0x05cc		VoC_or16_ri(REG6,0x20)
		//0x05ce		decode_header112
0x3184E284,	//0x05ce		VoC_bez16_r(decode_header113,REG4)(lo)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x168605D3,	//0x05d0		VoC_or16_ri(REG6,0x40)(lo)	|	VoC_bez16_r(decode_header113,REG4)(hi)
0xF0050040,	//0x05d2		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_or16_ri(REG6,0x40)(hi)
		//0x05d3		decode_header113
0x4424E288,	//0x05d4		VoC_bne16_rd(decode_header114,REG4,0x44fe)(lo)	|	VoC_rbinc_i(REG4,0x2,DEFAULT)
0x0A8544FE,	//0x05d6		VoC_lw16i(REG5,0x105)(lo)	|	VoC_bne16_rd(decode_header114,REG4,0x44fe)(hi)
0xDCA40105,	//0x05d8		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16i(REG5,0x105)(hi)
		//0x05d9		decode_header114
0x42DF0712,	//0x05da		VoC_add16_rd(REG2,REG2,0x42df)
0x1601E0C1,	//0x05dc		VoC_and16_ri(REG1,0x10)(lo)	|	VoC_movreg16(REG1,REG6,DEFAULT)
0xE2400010,	//0x05de		VoC_lbinc_p(REG0)	|	VoC_and16_ri(REG1,0x10)(hi)
0x05E53181,	//0x05e0		VoC_bez16_r(decode_header115,REG1)
0xE240E280,	//0x05e2		VoC_lbinc_p(REG0)	|	VoC_rbinc_i(REG4,0x10,DEFAULT)
0xDD9BDCA4,	//0x05e4		VoC_sw32_p(REG67,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x05e5		decode_header115
0xE580F001,	//0x05e6		VoC_return	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
		//0x05e8		CII_mad_stream_sync
0xE2A2E240,	//0x05e8		VoC_rbinc_i(REG6,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x05ea		mad_stream_sync_200
0xDE10E240,	//0x05ea		VoC_inc_p(REG2,DEFAULT)	|	VoC_lbinc_p(REG0)
0x04004822,	//0x05ec		VoC_blt16_rd(mad_stream_sync_201,REG2,0x400)
0x04000792,	//0x05ee		VoC_sub16_rd(REG2,REG2,0x400)
		//0x05f0		mad_stream_sync_201
0xF9C7E2A3,	//0x05f0		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_rbinc_i(REG7,0x8,DEFAULT)
0xE0E6E477,	//0x05f2		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_or16_rr(REG7,REG6,DEFAULT)
0x1647F946,	//0x05f4		VoC_and16_ri(REG7,0xe0ff)(lo)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0xC2D560FF,	//0x05f6		VoC_sub16_rr(REG5,REG3,REG2,DEFAULT)	|	VoC_and16_ri(REG7,0xe0ff)(hi)
0x05FC3205,	//0x05f8		VoC_bltz16_r(mad_stream_sync_101,REG5)
0x04083C85,	//0x05fa		VoC_bngt16_rd(mad_stream_sync_100,REG5,0x408)
		//0x05fc		mad_stream_sync_101
0x0400072D,	//0x05fc		VoC_add16_rd(REG5,REG5,0x400)
0x04083C25,	//0x05fe		VoC_bngt16_rd(mad_stream_sync_100,REG5,0x408)
0x04034697,	//0x0600		VoC_bne16_rd(mad_stream_sync_200,REG7,0x403)
		//0x0602		mad_stream_sync_100
0x04080792,	//0x0602		VoC_sub16_rd(REG2,REG2,0x408)
0xE00742D5,	//0x0604		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG3,REG2,DEFAULT)
0x060C3205,	//0x0606		VoC_bltz16_r(mad_stream_sync_301,REG5)
0x44FC4C95,	//0x0608		VoC_bnlt16_rd(mad_stream_sync_300,REG5,0x44fc)
0xFFC065C6,	//0x060a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(mad_stream_sync_302)
		//0x060c		mad_stream_sync_301
0x0400072D,	//0x060c		VoC_add16_rd(REG5,REG5,0x400)
0x44FC4C25,	//0x060e		VoC_bnlt16_rd(mad_stream_sync_300,REG5,0x44fc)
		//0x0610		mad_stream_sync_302
0xE580F7E7,	//0x0610		VoC_return	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
		//0x0612		mad_stream_sync_300
0x47ED1500,	//0x0612		VoC_sw16_d(REG0,0x47ed)
0x47EE1586,	//0x0614		VoC_sw32_d(RL6,0x47ee)
0x47F0151B,	//0x0616		VoC_sw16_d(BITCACHE,0x47f0)
0xDFC7E580,	//0x0618		VoC_push16(REG7,DEFAULT)	|	VoC_return
		//0x0619		CII_mad_bit_crc
0x1FA2F005,	//0x061a		VoC_lw16i_set_inc(REG2,0x18,0xfffffff8)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x792F0018,	//0x061c		VoC_shru16_ri(REG7,0x5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x18,0xfffffff8)(hi)
0x1809FF17,	//0x061e		VoC_lw16i_set_inc(REG1,0xcac,0x2)(lo)	|	VoC_movreg32(RL7,REG45,IN_PARALLEL)
0x31870CAC,	//0x0620		VoC_bez16_r(mad_bit_crc_200,REG7)(lo)	|	VoC_lw16i_set_inc(REG1,0xcac,0x2)(hi)
0x2E390638,	//0x0622		VoC_loop_r(1,REG7)(lo)	|	VoC_bez16_r(mad_bit_crc_200,REG7)(hi)
0xE2400637,	//0x0624		VoC_lbinc_p(REG0)	|	VoC_loop_r(1,REG7)(hi)
0xE240E283,	//0x0626		VoC_lbinc_p(REG0)	|	VoC_rbinc_i(REG7,0x10,DEFAULT)
0xE88DE282,	//0x0628		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_rbinc_i(REG6,0x10,DEFAULT)
0xFF3A7F1C,	//0x062a		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0xFC427ED4,	//0x062c		VoC_shru32_ri(REG45,0x8,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG2,DEFAULT)
0xFDC76562,	//0x062e		VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)	|	VoC_xor32_rr(REG45,ACC0,DEFAULT)
0x00FF1604,	//0x0630		VoC_and16_ri(REG4,0xff)
0x5E10C064,	//0x0632		VoC_inc_p(REG2,DEFAULT)	|	VoC_add16_rr(REG4,REG1,REG4,DEFAULT)
0xD844E005,	//0x0634		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
		//0x0636		VoC_endloop0
0xF302E557,	//0x0636		VoC_lw16i_short(REG2,0x18,DEFAULT)	|	VoC_xor32_rr(RL7,REG45,DEFAULT)
		//0x0637		VoC_endloop1
		//0x0638		mad_bit_crc_200
0xE0055F87,	//0x0638		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x001F1607,	//0x063a		VoC_and16_ri(REG7,0x1f)
0xF91F60E2,	//0x063c		VoC_shru16_ri(REG7,0x3,IN_PARALLEL)	|	VoC_movreg16(REG2,REG7,DEFAULT)
0x06503187,	//0x063e		VoC_bez16_r(mad_bit_crc_100,REG7)
0x67CEE240,	//0x0640		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE2A2E007,	//0x0642		VoC_rbinc_i(REG6,0x8,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x7F44FF3A,	//0x0644		VoC_lw32z(ACC0,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x655AFC42,	//0x0646		VoC_xor32_rr(REG45,REG67,DEFAULT)	|	VoC_shru32_ri(REG45,0x8,IN_PARALLEL)
0x1604FDC7,	//0x0648		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)
0x406400FF,	//0x064a		VoC_add16_rr(REG4,REG1,REG4,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xE240E005,	//0x064c		VoC_lbinc_p(REG0)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xE557D844,	//0x064e		VoC_xor32_rr(RL7,REG45,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
		//0x064f		VoC_endloop0
		//0x0650		mad_bit_crc_100
0x00071602,	//0x0650		VoC_and16_ri(REG2,0x7)
0x3182F007,	//0x0652		VoC_bez16_r(mad_bit_crc_100_end,REG2)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xFFC00665,	//0x0654		VoC_NAD	|	VoC_bez16_r(mad_bit_crc_100_end,REG2)(hi)
0xFF3A668E,	//0x0656		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
0xFDFF6286,	//0x0658		VoC_shru32_ri(RL7,0xffffffff,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0xFC7A7022,	//0x065a		VoC_shru32_ri(REG45,0xf,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xE414E55A,	//0x065c		VoC_and16_rr(REG4,REG2,DEFAULT)	|	VoC_xor32_rr(REG45,REG67,DEFAULT)
0x06643184,	//0x065e		VoC_bez16_r(mad_bit_crc_100_end_9,REG4)
0x0AC8FF44,	//0x0660		VoC_lw16i(ACC0_LO,0x8005)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xE5670005,	//0x0662		VoC_xor32_rr(RL7,ACC0,DEFAULT)	|	VoC_lw16i(ACC0_LO,0x8005)(hi)
		//0x0664		mad_bit_crc_100_end_9
		//0x0664		VoC_endloop0
0xE580FF3A,	//0x0664		VoC_return	|	VoC_movreg32(REG45,RL7,DEFAULT)
		//0x0665		mad_bit_crc_100_end
		//0x0666		CII_creat_crc_table
0x0CAC1806,	//0x0666		VoC_lw16i_set_inc(REG2,0xcac,0x1)
0xFFC07000,	//0x0668		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x066a		creat_crc_table_lable100
0x00800A83,	//0x066a		VoC_lw16i(REG3,0x80)
0xFF44F004,	//0x066c		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x066d		creat_crc_table_lable200
0x00000AC6,	//0x066e		VoC_lw16i(REG6,0x8000)
0xF6886426,	//0x0670		VoC_movreg16(ACC0_LO,REG4,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG4,DEFAULT)
0xE104FBFC,	//0x0672		VoC_movreg16(REG4,ACC0_LO,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0x06783186,	//0x0674		VoC_bez16_r(creat_crc_table_lable300,REG6)
0x00051744,	//0x0676		VoC_xor16_ri(REG4,0x8005)
		//0x0678		creat_crc_table_lable300
0xE41FE007,	//0x0678		VoC_and16_rr(REG7,REG3,DEFAULT)	|	VoC_movreg16(REG7,REG0,DEFAULT)
0x067E3187,	//0x067a		VoC_bez16_r(creat_crc_table_lable400,REG7)
0x00051744,	//0x067c		VoC_xor16_ri(REG4,0x8005)
		//0x067e		creat_crc_table_lable400
0x31C3F80B,	//0x067e		VoC_bnez16_r(creat_crc_table_lable200,REG3)(lo)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0xDCA4066D,	//0x0680		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_bnez16_r(creat_crc_table_lable200,REG3)(hi)
0x04080700,	//0x0682		VoC_add16_rd(REG0,REG0,0x408)
0x01000A84,	//0x0684		VoC_lw16i(REG4,0x100)
0x066A3420,	//0x0686		VoC_bgt16_rr(creat_crc_table_lable100,REG4,REG0)
0xDFE9E580,	//0x0688		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0689		CII_mad_frame_decode
0x47F71406,	//0x068a		VoC_lw16_d(REG6,0x47f7)
0x47E01407,	//0x068c		VoC_lw16_d(REG7,0x47e0)
0x47E41506,	//0x068e		VoC_sw16_d(REG6,0x47e4)
0x00081607,	//0x0690		VoC_and16_ri(REG7,0x8)
0x069A3107,	//0x0692		VoC_bgtz16_r(mad_frame_decode_audio_data,REG7)
0x03D32B80,	//0x0694		VoC_jal(CII_mad_header_decode)
0x04024427,	//0x0696		VoC_bne16_rd(mad_frame_decode_audio_data,REG7,0x402)
0x06C22B00,	//0x0698		VoC_jump_lg(mad_frame_decode_fail)
		//0x069a		mad_frame_decode_audio_data
0x47E01407,	//0x069a		VoC_lw16_d(REG7,0x47e0)
0x7FF71647,	//0x069c		VoC_and16_ri(REG7,0xfffffff7)
0x47D81406,	//0x069e		VoC_lw16_d(REG6,0x47d8)
0x47E01507,	//0x06a0		VoC_sw16_d(REG7,0x47e0)
0x04084436,	//0x06a2		VoC_bne16_rd(mad_frame_decode_no_I,REG6,0x408)
0x19942B80,	//0x06a4		VoC_jal(CII_mad_layer_I)
0xFFC065CC,	//0x06a6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(mad_frame_decode_audio_data_end)
		//0x06a8		mad_frame_decode_no_I
0x44FE4436,	//0x06a8		VoC_bne16_rd(mad_frame_decode_no_II,REG6,0x44fe)
0x1B042B80,	//0x06aa		VoC_jal(CII_mad_layer_II)
0xFFC065C6,	//0x06ac		VoC_NAD(IN_PARALLEL)	|	VoC_jump(mad_frame_decode_audio_data_end)
		//0x06ae		mad_frame_decode_no_II
0x0AD52B80,	//0x06ae		VoC_jal(CII_mad_layer_III)
0x48DE1401,	//0x06b0		VoC_lw16_d(REG1,0x48de)
		//0x06b2		mad_frame_decode_audio_data_end
0x040244A9,	//0x06b2		VoC_bne16_rd(mad_frame_decode_go_ancillary_data,REG1,0x402)
0x47F81406,	//0x06b4		VoC_lw16_d(REG6,0x47f8)
0x7F001646,	//0x06b6		VoC_and16_ri(REG6,0xff00)
0x47EB1407,	//0x06b8		VoC_lw16_d(REG7,0x47eb)
0x06C23106,	//0x06ba		VoC_bgtz16_r(mad_frame_decode_fail,REG6)
0x47EC1507,	//0x06bc		VoC_sw16_d(REG7,0x47ec)
0xDFA9E5C4,	//0x06be		VoC_pop16(RA,DEFAULT)	|	VoC_jump(mad_frame_decode_fail)
		//0x06bf		mad_frame_decode_go_ancillary_data
0xE580F007,	//0x06c0		VoC_return	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x06c2		mad_frame_decode_fail
0x5FA9F006,	//0x06c2		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1506EFF7,	//0x06c4		VoC_sw16_d(REG6,0x47f5)(lo)	|	VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)
0xE58047F5,	//0x06c6		VoC_return	|	VoC_sw16_d(REG6,0x47f5)(hi)
		//0x06c8		CII_mad_synth_frame
0x1482DFE9,	//0x06c8		VoC_lw32_d(REG45,0x47fa)(lo)	|	VoC_push16(RA,DEFAULT)
0x150247FA,	//0x06ca		VoC_sw16_d(REG2,0x66cc)(lo)	|	VoC_lw32_d(REG45,0x47fa)(hi)
0x150266CC,	//0x06cc		VoC_sw16_d(REG2,0x66cd)(lo)	|	VoC_sw16_d(REG2,0x66cc)(hi)
0x0A8266CD,	//0x06ce		VoC_lw16i(REG2,0x668c)(lo)	|	VoC_sw16_d(REG2,0x66cd)(hi)
0xDFC0668C,	//0x06d0		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i(REG2,0x668c)(hi)
0xFF435FC0,	//0x06d2		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x5FC2DFC0,	//0x06d4		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x1408DF42,	//0x06d6		VoC_lw16_d(ACC0_LO,0x47e5)(lo)	|	VoC_push32(REG45,IN_PARALLEL)
0x200947E5,	//0x06d8		VoC_lw16d_set_inc(REG1,0x47dd,0x2)(lo)	|	VoC_lw16_d(ACC0_LO,0x47e5)(hi)
0xE10947DD,	//0x06da		VoC_movreg16(ACC0_HI,ACC0_LO,DEFAULT)	|	VoC_lw16d_set_inc(REG1,0x47dd,0x2)(hi)
0x0A80DFC6,	//0x06dc		VoC_lw16i(REG0,0x15ac)(lo)	|	VoC_push16(REG6,DEFAULT)
0x0A8615AC,	//0x06de		VoC_lw16i(REG6,0x47c8)(lo)	|	VoC_lw16i(REG0,0x15ac)(hi)
0x158447C8,	//0x06e0		VoC_sw32_d(ACC0,0x6734)(lo)	|	VoC_lw16i(REG6,0x47c8)(hi)
0x0A876734,	//0x06e2		VoC_lw16i(REG7,0x51e6)(lo)	|	VoC_sw32_d(ACC0,0x6734)(hi)
0xDA4051E6,	//0x06e4		VoC_sw16_sd(REG0,0x3,DEFAULT)	|	VoC_lw16i(REG7,0x51e6)(hi)
0x1406DA56,	//0x06e6		VoC_lw16_d(REG6,0x6734)(lo)	|	VoC_sw16_sd(REG6,0x4,DEFAULT)
0xFFC06734,	//0x06e8		VoC_NAD	|	VoC_lw16_d(REG6,0x6734)(hi)
		//0x06ea		syn_full_LBegin
0x07DB3184,	//0x06ea		VoC_bez16_r(syn_full_LEnd,REG4)
0xDF43DD0A,	//0x06ec		VoC_push32(REG67,DEFAULT)	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
		//0x06ee		syn_full_LSecBg
0x07BA3185,	//0x06ee		VoC_bez16_r(syn_full_LSecEnd,REG5)
0xD90B5FC5,	//0x06f0		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xF6C57024,	//0x06f2		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xF80D6426,	//0x06f4		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG4,DEFAULT)
0xF8C65FC0,	//0x06f6		VoC_shr16_ri(REG6,0xfffffff8,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xF48541BA,	//0x06f8		VoC_lw16i_short(WRAP1,0x10,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG7,DEFAULT)
0x02000A83,	//0x06fa		VoC_lw16i(REG3,0x200)
0xFFC0409B,	//0x06fc		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG3,REG2,REG3,DEFAULT)
0x08402B80,	//0x06fe		VoC_jal(CII_dct32)
0xD9097024,	//0x0700		VoC_lw32_sd(REG23,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xF64577C7,	//0x0702		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xfffffffe,DEFAULT)
0xC3666417,	//0x0704		VoC_sub16_rr(REG6,REG5,REG4,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG2,DEFAULT)
0x000F1606,	//0x0706		VoC_and16_ri(REG6,0xf)
0xF80F780E,	//0x0708		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xE1016385,	//0x070a		VoC_lw16i_short(REG1,0x10,IN_PARALLEL)	|	VoC_not16_r(REG5,DEFAULT)
0xC18E6425,	//0x070c		VoC_add16_rr(REG6,REG6,REG1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG4,DEFAULT)
0xF8C56422,	//0x070e		VoC_shr16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_and16_rr(REG2,REG4,DEFAULT)
0xC15878C2,	//0x0710		VoC_add16_rr(REG0,REG5,REG3,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffff8,DEFAULT)
0xF41D409A,	//0x0712		VoC_lw16i_short(WRAP1,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x01F00A84,	//0x0714		VoC_lw16i(REG4,0x1f0)
0x0A84C023,	//0x0716		VoC_lw16i(REG4,0x4080)(lo)	|	VoC_add16_rr(REG3,REG0,REG4,DEFAULT)
0x7F0E4080,	//0x0718		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw16i(REG4,0x4080)(hi)
0x5642C131,	//0x071a		VoC_lw16_sd(REG2,0x3,DEFAULT)	|	VoC_add16_rr(REG1,REG4,REG6,IN_PARALLEL)
0x5F43E175,	//0x071c		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i_short(REG5,0x17,IN_PARALLEL)
0x7F44F402,	//0x071e		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0x6907D9C3,	//0x0720		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0x99CDFBFB,	//0x0722		VoC_multf32_rp(ACC1,REG7,REG1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x7B8DF90E,	//0x0724		VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xD9C3D171,	//0x0726		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_macXinc_rp(REG6,REG1,IN_PARALLEL)
		//0x0728		VoC_endloop0
0xFBFB492C,	//0x0728		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xF780590B,	//0x072a		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x42EA0BA4,	//0x072c		VoC_sub32_dr(ACC0,0x42ea,ACC0)
0xD9C34139,	//0x072e		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG4,REG7,DEFAULT)
0x003E0A83,	//0x0730		VoC_lw16i(REG3,0x3e)
0xF3FB409B,	//0x0732		VoC_lw16i_short(INC3,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG2,REG3,DEFAULT)
0xFBFB6907,	//0x0734		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF90E99CD,	//0x0736		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG1,DEFAULT)
0xD1717B8D,	//0x0738		VoC_macXinc_rp(REG6,REG1,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)
0x492CD9C3,	//0x073a		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x073b		VoC_endloop0
0x0936FBFB,	//0x073c		VoC_add32_rd(RL6,RL6,0x4566)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x590B4566,	//0x073e		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x4566)(hi)
0x7A14F7A0,	//0x0740		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_movreg16(REG0,RL6_HI,IN_PARALLEL)
0x0724F00A,	//0x0742		VoC_add16_rd(REG4,REG4,0x44ff)(lo)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0x5DD444FF,	//0x0744		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x44ff)(hi)
0xFFC0C131,	//0x0746		VoC_NAD	|	VoC_add16_rr(REG1,REG4,REG6,IN_PARALLEL)
0x078D2C1F,	//0x0748		VoC_loop_i(0x1,0xf)
0xD9C37F44,	//0x074a		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFBFB6907,	//0x074c		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF90E99CD,	//0x074e		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG1,DEFAULT)
0xD1717B8D,	//0x0750		VoC_macXinc_rp(REG6,REG1,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)
0x492CD9C3,	//0x0752		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x0753		VoC_endloop0
0x590BFBFB,	//0x0754		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x0BA4F780,	//0x0756		VoC_sub32_dr(ACC0,0x42ea,ACC0)(lo)	|	VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)
0x413942EA,	//0x0758		VoC_add16_rr(REG1,REG4,REG7,DEFAULT)	|	VoC_sub32_dr(ACC0,0x42ea,ACC0)(hi)
0x6907D9C3,	//0x075a		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0x99CDFBFB,	//0x075c		VoC_multf32_rp(ACC1,REG7,REG1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x7B8DF90E,	//0x075e		VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xD9C3D171,	//0x0760		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_macXinc_rp(REG6,REG1,IN_PARALLEL)
		//0x0762		VoC_endloop0
0xFBFB492C,	//0x0762		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x4339D90B,	//0x0764		VoC_sub16_rr(REG1,REG4,REG7,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x7A14F005,	//0x0766		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xE180C069,	//0x0768		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0xDDD47F44,	//0x076a		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x6907D9C3,	//0x076c		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x99CDFBFB,	//0x076e		VoC_multf32_rp(ACC1,REG7,REG1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x7B8DF90E,	//0x0770		VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xD9C3D171,	//0x0772		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_macXinc_rp(REG6,REG1,IN_PARALLEL)
		//0x0774		VoC_endloop0
0xFBFB492C,	//0x0774		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xC331D90B,	//0x0776		VoC_sub16_rr(REG1,REG4,REG6,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF7A04069,	//0x0778		VoC_movreg16(REG0,RL6_HI,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x45660936,	//0x077a		VoC_add32_rd(RL6,RL6,0x4566)
0x6907D9C3,	//0x077c		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x99CDFBFB,	//0x077e		VoC_multf32_rp(ACC1,REG7,REG1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x7B8DF90E,	//0x0780		VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xD9C3D171,	//0x0782		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_macXinc_rp(REG6,REG1,IN_PARALLEL)
		//0x0784		VoC_endloop0
0xFBFB492C,	//0x0784		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x0724D90B,	//0x0786		VoC_add16_rd(REG4,REG4,0x44ff)(lo)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x7A1444FF,	//0x0788		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x44ff)(hi)
0x61A0F3FD,	//0x078a		VoC_movreg16(REG0,RL6_HI,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0xDDDCC131,	//0x078c		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG4,REG6,IN_PARALLEL)
		//0x078d		VoC_endloop1
0xE0137F44,	//0x078e		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x6907D9C3,	//0x0790		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x99CDFBFB,	//0x0792		VoC_multf32_rp(ACC1,REG7,REG1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x7B8DF90E,	//0x0794		VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xD9C3D171,	//0x0796		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_macXinc_rp(REG6,REG1,IN_PARALLEL)
		//0x0798		VoC_endloop0
0xFBFB492C,	//0x0798		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x42EA0BA4,	//0x079a		VoC_sub32_dr(ACC0,0x42ea,ACC0)
0xE044DF03,	//0x079c		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x0A82FA14,	//0x079e		VoC_lw16i(REG2,0x668c)(lo)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0xD90B668C,	//0x07a0		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_lw16i(REG2,0x668c)(hi)
0x419EDA42,	//0x07a2		VoC_add16_rr(REG6,REG6,REG3,DEFAULT)	|	VoC_sw16_sd(REG2,0x3,DEFAULT)
0x1606DF80,	//0x07a4		VoC_and16_ri(REG6,0xf)(lo)	|	VoC_pop16(REG0,IN_PARALLEL)
0x0A85000F,	//0x07a6		VoC_lw16i(REG5,0x40)(lo)	|	VoC_and16_ri(REG6,0xf)(hi)
0xC0280040,	//0x07a8		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x40)(hi)
0xDD0B5F85,	//0x07aa		VoC_sw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_pop16(REG5,DEFAULT)
0xDDA4435D,	//0x07ac		VoC_sw32_p(ACC0,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)
0x0A82F21D,	//0x07ae		VoC_lw16i(REG2,0x668c)(lo)	|	VoC_lw16i_short(WRAP1,0x10,DEFAULT)
0x5651668C,	//0x07b0		VoC_lw16_sd(REG1,0x4,DEFAULT)	|	VoC_lw16i(REG2,0x668c)(hi)
0xDFC5F009,	//0x07b2		VoC_push16(REG5,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x07EA2B80,	//0x07b4		VoC_jal(CoolSand_audio_linear_dither)
0xDF8577F1,	//0x07b6		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
0x06EE2B00,	//0x07b8		VoC_jump_lg(syn_full_LSecBg)
		//0x07ba		syn_full_LSecEnd
0xD6125F03,	//0x07ba		VoC_lw16_sd(REG2,0x0,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0x07C231C2,	//0x07bc		VoC_bnez16_r(syn_full_L4,REG2)
0x67341506,	//0x07be		VoC_sw16_d(REG6,0x6734)
0xFFC065C4,	//0x07c0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(syn_full_L5)
		//0x07c2		syn_full_L4
0x67351506,	//0x07c2		VoC_sw16_d(REG6,0x6735)
		//0x07c4		syn_full_L5
0x66CD1402,	//0x07c4		VoC_lw16_d(REG2,0x66cd)
0x04080712,	//0x07c6		VoC_add16_rd(REG2,REG2,0x408)
0x1502D90A,	//0x07c8		VoC_sw16_d(REG2,0x66cc)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF02266CC,	//0x07ca		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_sw16_d(REG2,0x66cc)(hi)
0x0A86D640,	//0x07cc		VoC_lw16i(REG6,0x900)(lo)	|	VoC_lw16_sd(REG0,0x3,DEFAULT)
0xC0300900,	//0x07ce		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x900)(hi)
0x0407073F,	//0x07d0		VoC_add16_rd(REG7,REG7,0x407)
0x47CE0A86,	//0x07d2		VoC_lw16i(REG6,0x47ce)
0xDA124314,	//0x07d4		VoC_sw16_sd(REG2,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)
0x1406DA56,	//0x07d6		VoC_lw16_d(REG6,0x6735)(lo)	|	VoC_sw16_sd(REG6,0x4,DEFAULT)
0x2B006735,	//0x07d8		VoC_jump_lg(syn_full_LBegin)(lo)	|	VoC_lw16_d(REG6,0x6735)(hi)
0xDF8306EA,	//0x07da		VoC_pop16(REG3,DEFAULT)	|	VoC_jump_lg(syn_full_LBegin)(hi)
		//0x07db		syn_full_LEnd
0x5F80DF83,	//0x07dc		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xDF83DF02,	//0x07de		VoC_pop16(REG3,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x1406DF83,	//0x07e0		VoC_lw16_d(REG6,0x47e5)(lo)	|	VoC_pop16(REG3,DEFAULT)
0xF1E747E5,	//0x07e2		VoC_lw16i_short(REG7,0xf,DEFAULT)	|	VoC_lw16_d(REG6,0x47e5)(hi)
0xE43EC176,	//0x07e4		VoC_and16_rr(REG6,REG7,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x1506DFA9,	//0x07e6		VoC_sw16_d(REG6,0x47e5)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE58047E5,	//0x07e8		VoC_return	|	VoC_sw16_d(REG6,0x47e5)(hi)
		//0x07ea		CoolSand_audio_linear_dither
0xD9CED9CD,	//0x07ea		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG1,DEFAULT)
0x0789D9CF,	//0x07ec		VoC_sub16_rd(REG1,REG1,0x4504)(lo)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0x14834504,	//0x07ee		VoC_lw32_d(REG67,0x47fa)(lo)	|	VoC_sub16_rd(REG1,REG1,0x4504)(hi)
0x200B47FA,	//0x07f0		VoC_lw16d_set_inc(REG3,0x66cc,0x2)(lo)	|	VoC_lw32_d(REG67,0x47fa)(hi)
0x402E66CC,	//0x07f2		VoC_be16_rd(CoolSand_audio_linear_dither_L0,REG6,0x44fe)(lo)	|	VoC_lw16d_set_inc(REG3,0x66cc,0x2)(hi)
0x200744FE,	//0x07f4		VoC_lw16d_set_inc(REG3,0x66cc,0x1)(lo)	|	VoC_be16_rd(CoolSand_audio_linear_dither_L0,REG6,0x44fe)(hi)
0xFFC066CC,	//0x07f6		VoC_NAD	|	VoC_lw16d_set_inc(REG3,0x66cc,0x1)(hi)
		//0x07f8		CoolSand_audio_linear_dither_L0
0x08382C40,	//0x07f8		VoC_loop_i(0x0,0x20)
0xFF424B73,	//0x07fa		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_sub32_rr(REG67,ACC1,RL6,DEFAULT)
0xFF3748FB,	//0x07fc		VoC_movreg32(RL7,RL6,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
0xFF2E12D3,	//0x07fe		VoC_movreg32(RL6,ACC1,IN_PARALLEL)	|	VoC_add32inc_rp(REG67,REG67,REG2,DEFAULT)
0x10000A84,	//0x0800		VoC_lw16i(REG4,0x1000)
0xC8D27A0E,	//0x0802		VoC_add32_rr(REG45,REG67,REG45,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0x47D66132,	//0x0804		VoC_blt32_rd(clip_100,REG45,0x47d6)
0x7FFF0ACA,	//0x0806		VoC_lw16i(ACC1_LO,0xffff)
0x0FFF0A8B,	//0x0808		VoC_lw16i(ACC1_HI,0xfff)
0x08163695,	//0x080a		VoC_bngt32_rr(clip_101,REG45,ACC1)
0x5424CAAC,	//0x080c		VoC_bngt32_rd(clip_102,ACC0,0x47d4)(lo)	|	VoC_sub32_rr(ACC0,REG45,ACC1,DEFAULT)
0x158447D4,	//0x080e		VoC_sw32_d(ACC0,0x47d4)(lo)	|	VoC_bngt32_rd(clip_102,ACC0,0x47d4)(hi)
0xFF2A47D4,	//0x0810		VoC_movreg32(REG45,ACC1,DEFAULT)	|	VoC_sw32_d(ACC0,0x47d4)(hi)
		//0x0811		clip_102
0x0816369D,	//0x0812		VoC_bngt32_rr(clip_101,REG67,ACC1)
0xFFC07F2B,	//0x0814		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG67,ACC1,DEFAULT)
		//0x0816		clip_101
0x47D61582,	//0x0816		VoC_sw32_d(REG45,0x47d6)
0xFFC065D8,	//0x0818		VoC_NAD(IN_PARALLEL)	|	VoC_jump(clip_end)
		//0x081a		clip_100
0x42EA0B94,	//0x081a		VoC_sub32_dr(ACC0,0x42ea,REG45)
0x47D65524,	//0x081c		VoC_bngt32_rd(clip_end,ACC0,0x47d6)
0x0ACBFF45,	//0x081e		VoC_lw16i(ACC1_HI,0xf000)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x36AA7000,	//0x0820		VoC_bngt32_rr(clip_200,ACC1,REG45)(lo)	|	VoC_lw16i(ACC1_HI,0xf000)(hi)
0xCB54082E,	//0x0822		VoC_sub32_rr(ACC0,ACC1,REG45,DEFAULT)	|	VoC_bngt32_rr(clip_200,ACC1,REG45)(hi)
0x47D45424,	//0x0824		VoC_bngt32_rd(clip_201,ACC0,0x47d4)
0x47D41584,	//0x0826		VoC_sw32_d(ACC0,0x47d4)
		//0x0828		clip_201
0x0B94FF2A,	//0x0828		VoC_sub32_dr(ACC0,0x42ea,REG45)(lo)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0x36AB42EA,	//0x082a		VoC_bngt32_rr(clip_200,ACC1,REG67)(lo)	|	VoC_sub32_dr(ACC0,0x42ea,REG45)(hi)
0xFF2B082E,	//0x082c		VoC_movreg32(REG67,ACC1,DEFAULT)	|	VoC_bngt32_rr(clip_200,ACC1,REG67)(hi)
		//0x082e		clip_200
0x47D61584,	//0x082e		VoC_sw32_d(ACC0,0x47d6)
		//0x0830		clip_end
0x7FFF0ACB,	//0x0830		VoC_lw16i(ACC1_HI,0xffff)
0x60000ACA,	//0x0832		VoC_lw16i(ACC1_LO,0xe000)
0xCAD5E4EA,	//0x0834		VoC_sub32_rr(ACC1,REG67,REG45,DEFAULT)	|	VoC_and32_rr(REG45,ACC1,DEFAULT)
0xFFC0FA6A,	//0x0836		VoC_NOP	|	VoC_shr32_ri(REG45,0xd,DEFAULT)
		//0x0838		VoC_endloop0
0xDDCDDCB4,	//0x0838		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x5DCFDDCE,	//0x083a		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
0x1503F3FB,	//0x083c		VoC_sw16_d(REG3,0x66cc)(lo)	|	VoC_lw16i_short(INC3,0xfffffffe,IN_PARALLEL)
0xE58066CC,	//0x083e		VoC_return	|	VoC_sw16_d(REG3,0x66cc)(hi)
		//0x0840		CII_dct32
0xF019C0EB,	//0x0840		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0xF00840EB,	//0x0842		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0xF00A40AA,	//0x0844		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xF40240AA,	//0x0846		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0x00F00A81,	//0x0848		VoC_lw16i(REG1,0xf0)
0x1809C0CB,	//0x084a		VoC_lw16i_set_inc(REG1,0x66f0,0x2)(lo)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0xDF4166F0,	//0x084c		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x66f0,0x2)(hi)
0x44FF0702,	//0x084e		VoC_add16_rd(REG2,REG0,0x44ff)
0x04001486,	//0x0850		VoC_lw32_d(RL6,0x400)
0xD9D76A03,	//0x0852		VoC_lw32inc_p(RL7,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0xDDCFD9D7,	//0x0854		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG2,DEFAULT)
		//0x0855		VoC_endloop0
0x44FE0789,	//0x0856		VoC_sub16_rd(REG1,REG1,0x44fe)
0xF3F97F07,	//0x0858		VoC_lw16i_short(INC1,0xfffffffe,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0x27AC180A,	//0x085a		VoC_lw16i_set_inc(REG2,0x27ac,0x2)
0x44C41807,	//0x085c		VoC_lw16i_set_inc(REG3,0x44c4,0x1)
0x086D2C05,	//0x085e		VoC_loop_i(0x1,0x2)
0xE909FFC0,	//0x0860		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0xB60B300C,	//0x0862		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC0,REG0,REG1,DEFAULT)
0xDDD548F3,	//0x0864		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96699DD,	//0x0866		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG3,DEFAULT)
0xD1337DE5,	//0x0868		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
		//0x086a		VoC_endloop0
0x0A84DDD4,	//0x086a		VoC_lw16i(REG4,0x6712)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x5D956712,	//0x086c		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_lw16i(REG4,0x6712)(hi)
		//0x086d		VoC_endloop1
0x180AF682,	//0x086e		VoC_lw16i_set_inc(REG2,0x27ce,0x2)(lo)	|	VoC_movreg16(REG2,REG4,IN_PARALLEL)
0x181027CE,	//0x0870		VoC_lw16i_set_inc(REG0,0x27ae,0x4)(lo)	|	VoC_lw16i_set_inc(REG2,0x27ce,0x2)(hi)
0x1FB127AE,	//0x0872		VoC_lw16i_set_inc(REG1,0x6730,0xfffffffc)(lo)	|	VoC_lw16i_set_inc(REG0,0x27ae,0x4)(hi)
0x2C056730,	//0x0874		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x6730,0xfffffffc)(hi)
0xE8890883,	//0x0876		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0xB60B300C,	//0x0878		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC0,REG0,REG1,DEFAULT)
0xDDD548F3,	//0x087a		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96699DD,	//0x087c		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG3,DEFAULT)
0xD1337DE5,	//0x087e		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
		//0x0880		VoC_endloop0
0x0A84DDD4,	//0x0880		VoC_lw16i(REG4,0x66de)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x5D9566DE,	//0x0882		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_lw16i(REG4,0x66de)(hi)
		//0x0883		VoC_endloop1
0x079BF682,	//0x0884		VoC_sub16_rd(REG3,REG3,0x44fc)(lo)	|	VoC_movreg16(REG2,REG4,IN_PARALLEL)
0x180A44FC,	//0x0886		VoC_lw16i_set_inc(REG2,0x27de,0x2)(lo)	|	VoC_sub16_rd(REG3,REG3,0x44fc)(hi)
0x181027DE,	//0x0888		VoC_lw16i_set_inc(REG0,0x27b0,0x4)(lo)	|	VoC_lw16i_set_inc(REG2,0x27de,0x2)(hi)
0x1FB127B0,	//0x088a		VoC_lw16i_set_inc(REG1,0x6732,0xfffffffc)(lo)	|	VoC_lw16i_set_inc(REG0,0x27b0,0x4)(hi)
0xD9956732,	//0x088c		VoC_lw32_p(ACC1,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x6732,0xfffffffc)(hi)
0x089D2C05,	//0x088e		VoC_loop_i(0x1,0x2)
0xE889FFC0,	//0x0890		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xB60B300C,	//0x0892		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC0,REG0,REG1,DEFAULT)
0xDDD548F3,	//0x0894		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96699DD,	//0x0896		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG3,DEFAULT)
0xD1337DE5,	//0x0898		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
		//0x089a		VoC_endloop0
0x0A84DDD4,	//0x089a		VoC_lw16i(REG4,0x66ce)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x5D9566CE,	//0x089c		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_lw16i(REG4,0x66ce)(hi)
		//0x089d		VoC_endloop1
0x1810F682,	//0x089e		VoC_lw16i_set_inc(REG0,0x27d0,0x4)(lo)	|	VoC_movreg16(REG2,REG4,IN_PARALLEL)
0x1FB127D0,	//0x08a0		VoC_lw16i_set_inc(REG1,0x66ec,0xfffffffc)(lo)	|	VoC_lw16i_set_inc(REG0,0x27d0,0x4)(hi)
0x180A66EC,	//0x08a2		VoC_lw16i_set_inc(REG2,0x27ac,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x66ec,0xfffffffc)(hi)
0x2C0527AC,	//0x08a4		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x27ac,0x2)(hi)
0xE84908B4,	//0x08a6		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0xB60B300C,	//0x08a8		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC0,REG0,REG1,DEFAULT)
0xDDD548F3,	//0x08aa		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96699DD,	//0x08ac		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG3,DEFAULT)
0xD1337DE5,	//0x08ae		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
		//0x08b0		VoC_endloop0
0x6044DDD4,	//0x08b0		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDD95F685,	//0x08b2		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
		//0x08b4		VoC_endloop1
0x672A0A82,	//0x08b4		VoC_lw16i(REG2,0x672a)
0x4502079B,	//0x08b6		VoC_sub16_rd(REG3,REG3,0x4502)
0xD9AD60A2,	//0x08b8		VoC_lw32_p(ACC1,REG5,IN_PARALLEL)	|	VoC_movreg16(REG2,REG5,DEFAULT)
0x08CA2C05,	//0x08ba		VoC_loop_i(0x1,0x2)
0xE849FFC0,	//0x08bc		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_NAD
0xB60B300C,	//0x08be		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC0,REG0,REG1,DEFAULT)
0xDDD548F3,	//0x08c0		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96699DD,	//0x08c2		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG3,DEFAULT)
0xD1337DE5,	//0x08c4		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
		//0x08c6		VoC_endloop0
0x6044DDD4,	//0x08c6		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDD95F685,	//0x08c8		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
		//0x08ca		VoC_endloop1
0x67220A82,	//0x08ca		VoC_lw16i(REG2,0x6722)
0x4502079B,	//0x08cc		VoC_sub16_rd(REG3,REG3,0x4502)
0xD9AD60A2,	//0x08ce		VoC_lw32_p(ACC1,REG5,IN_PARALLEL)	|	VoC_movreg16(REG2,REG5,DEFAULT)
0x27D21810,	//0x08d0		VoC_lw16i_set_inc(REG0,0x27d2,0x4)
0x66EE1FB1,	//0x08d2		VoC_lw16i_set_inc(REG1,0x66ee,0xfffffffc)
0x08E42C05,	//0x08d4		VoC_loop_i(0x1,0x2)
0xE849FFC0,	//0x08d6		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_NAD
0xB60B300C,	//0x08d8		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC0,REG0,REG1,DEFAULT)
0xDDD548F3,	//0x08da		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96699DD,	//0x08dc		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG3,DEFAULT)
0xD1337DE5,	//0x08de		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
		//0x08e0		VoC_endloop0
0x6044DDD4,	//0x08e0		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDD95F685,	//0x08e2		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
		//0x08e4		VoC_endloop1
0x671A0A82,	//0x08e4		VoC_lw16i(REG2,0x671a)
0x4502079B,	//0x08e6		VoC_sub16_rd(REG3,REG3,0x4502)
0xD9AD60A2,	//0x08e8		VoC_lw32_p(ACC1,REG5,IN_PARALLEL)	|	VoC_movreg16(REG2,REG5,DEFAULT)
0x08FA2C05,	//0x08ea		VoC_loop_i(0x1,0x2)
0xE849FFC0,	//0x08ec		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_NAD
0xB60B300C,	//0x08ee		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC0,REG0,REG1,DEFAULT)
0xDDD548F3,	//0x08f0		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96699DD,	//0x08f2		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG3,DEFAULT)
0xD1337DE5,	//0x08f4		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
		//0x08f6		VoC_endloop0
0x6044DDD4,	//0x08f6		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDD95F685,	//0x08f8		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
		//0x08fa		VoC_endloop1
0x67120A82,	//0x08fa		VoC_lw16i(REG2,0x6712)
0x27AE1810,	//0x08fc		VoC_lw16i_set_inc(REG0,0x27ae,0x4)
0x67301FB1,	//0x08fe		VoC_lw16i_set_inc(REG1,0x6730,0xfffffffc)
0x180AE064,	//0x0900		VoC_lw16i_set_inc(REG2,0x27d0,0x2)(lo)	|	VoC_movreg16(REG4,REG3,DEFAULT)
0x180B27D0,	//0x0902		VoC_lw16i_set_inc(REG3,0x66d0,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x27d0,0x2)(hi)
0x2C0566D0,	//0x0904		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_set_inc(REG3,0x66d0,0x2)(hi)
0xFFC00917,	//0x0906		VoC_NOP	|	VoC_loop_i(0x1,0x2)(hi)
0xB20C688C,	//0x0908		VoC_add32inc_pp(ACC0,REG0,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x492CB20D,	//0x090a		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_add32inc_pp(ACC1,REG0,REG1,DEFAULT)
0xC8F3CB2B,	//0x090c		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_sub32_rr(REG67,ACC0,ACC1,IN_PARALLEL)
0xF96699E5,	//0x090e		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG4,DEFAULT)
0xD0347DE5,	//0x0910		VoC_mac32_rp(REG6,REG4,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0xB20CDDD4,	//0x0912		VoC_add32inc_pp(ACC0,REG0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0914		VoC_endloop0
0x1810DDDD,	//0x0914		VoC_lw16i_set_inc(REG0,0x27b0,0x4)(lo)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0x1FB127B0,	//0x0916		VoC_lw16i_set_inc(REG1,0x6732,0xfffffffc)(lo)	|	VoC_lw16i_set_inc(REG0,0x27b0,0x4)(hi)
		//0x0917		VoC_endloop1
0x7F0F6732,	//0x0918		VoC_movreg32(RL7,REG23,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x6732,0xfffffffc)(hi)
0xF033F683,	//0x091a		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_movreg16(REG3,REG4,IN_PARALLEL)
0x27AE1810,	//0x091c		VoC_lw16i_set_inc(REG0,0x27ae,0x4)
0x67301FB1,	//0x091e		VoC_lw16i_set_inc(REG1,0x6730,0xfffffffc)
0xF7E25E18,	//0x0920		VoC_movreg16(REG2,RL7_HI,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x09482C05,	//0x0922		VoC_loop_i(0x1,0x2)
0xFFC0FFC0,	//0x0924		VoC_NAD	|	VoC_NOP
0xB60B689F,	//0x0926		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xB60A48F3,	//0x0928		VoC_sub32inc_pp(REG45,REG0,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0x7964C8B2,	//0x092a		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL6,DEFAULT)
0xF96699DC,	//0x092c		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC0,REG7,REG3,IN_PARALLEL)
0xF64F7DE4,	//0x092e		VoC_movreg16(RL7_HI,REG2,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0x995DD133,	//0x0930		VoC_multf32_rp(ACC1,REG5,REG3,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0x7DE5FFC0,	//0x0932		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_NOP
0x079BD123,	//0x0934		VoC_sub16_rd(REG3,REG3,0x42df)(lo)	|	VoC_mac32inc_rp(REG4,REG3,IN_PARALLEL)
0x492C42DF,	//0x0936		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_sub16_rd(REG3,REG3,0x42df)(hi)
0x48F3CB2B,	//0x0938		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_sub32_rr(REG67,ACC0,ACC1,IN_PARALLEL)
0x99DDF7C2,	//0x093a		VoC_multf32_rp(ACC1,REG7,REG3,DEFAULT)	|	VoC_movreg16(REG2,RL7_LO,IN_PARALLEL)
0x7DE5F966,	//0x093c		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xDDD4D133,	//0x093e		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)
0xCB65FDFD,	//0x0940		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_shru32_ri(ACC1,0xffffffff,DEFAULT)
0xF7E2604E,	//0x0942		VoC_movreg16(REG2,RL7_HI,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG2,DEFAULT)
0xDDD5B60B,	//0x0944		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sub32inc_pp(REG67,REG0,REG1,DEFAULT)
		//0x0945		VoC_endloop0
0x27B01810,	//0x0946		VoC_lw16i_set_inc(REG0,0x27b0,0x4)
		//0x0948		VoC_endloop1
0x67321FB1,	//0x0948		VoC_lw16i_set_inc(REG1,0x6732,0xfffffffc)
0xF3C2590A,	//0x094a		VoC_lw16i_short(INC2,0xfffffff0,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x1808E0A2,	//0x094c		VoC_lw16i_set_inc(REG0,0x27d0,0x2)(lo)	|	VoC_movreg16(REG2,REG5,DEFAULT)
0x180927D0,	//0x094e		VoC_lw16i_set_inc(REG1,0x27d2,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x27d0,0x2)(hi)
0x180B27D2,	//0x0950		VoC_lw16i_set_inc(REG3,0x27ae,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x27d2,0x2)(hi)
0xE86427AE,	//0x0952		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x27ae,0x2)(hi)
0xFA649384,	//0x0954		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32inc_rp(ACC0,RL6,REG0,DEFAULT)
0xDDD4FFC0,	//0x0956		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
		//0x0957		VoC_endloop0
0xFBFDD9C5,	//0x0958		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xC9F5974F,	//0x095a		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_sub32inc_rp(RL7,ACC1,REG1,DEFAULT)
0x9384FA65,	//0x095c		VoC_add32inc_rp(ACC0,RL6,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFA64DDD5,	//0x095e		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x5DD4D9C5,	//0x0960		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xCB7FFBFD,	//0x0962		VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0xFA65C9F5,	//0x0964		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)
0x5DD5D9C4,	//0x0966		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x970BFBFC,	//0x0968		VoC_sub32inc_rp(REG67,ACC0,REG1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0xFA64C8F4,	//0x096a		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32_rr(ACC0,REG67,RL6,DEFAULT)
0x5DD4D9C5,	//0x096c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0x974AFBFD,	//0x096e		VoC_sub32inc_rp(REG45,ACC1,REG1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0xCB3FC894,	//0x0970		VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)	|	VoC_add32_rr(ACC0,REG45,REG45,DEFAULT)
0xFA64C9F4,	//0x0972		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32_rr(ACC0,RL7,RL6,DEFAULT)
0xDDD49385,	//0x0974		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add32inc_rp(ACC1,RL6,REG0,DEFAULT)
0xD9C4FA65,	//0x0976		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFBFC5DD5,	//0x0978		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC9F5CB3F,	//0x097a		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)
0xD9C4FA65,	//0x097c		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFBFC5DD5,	//0x097e		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC8F5CB1B,	//0x0980		VoC_add32_rr(ACC1,REG67,RL6,DEFAULT)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0xD9C4FA65,	//0x0982		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFBFC5DD5,	//0x0984		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC894CB12,	//0x0986		VoC_add32_rr(ACC0,REG45,REG45,DEFAULT)	|	VoC_sub32_rr(REG45,ACC0,REG45,DEFAULT)
0xC9F5CB3F,	//0x0988		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)
0xD9C4FA65,	//0x098a		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFBFC5DD5,	//0x098c		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC935970C,	//0x098e		VoC_add32_rr(ACC1,ACC0,RL6,DEFAULT)	|	VoC_sub32inc_rp(ACC0,ACC0,REG1,DEFAULT)
0xFA65DDDC,	//0x0990		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x5DD5D9C4,	//0x0992		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x970CFBFC,	//0x0994		VoC_sub32inc_rp(ACC0,ACC0,REG1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0xDDDCC925,	//0x0996		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add32_rr(ACC1,ACC0,ACC0,DEFAULT)
0xC9F5CB7F,	//0x0998		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0xD9C4FA65,	//0x099a		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFBFC5DD5,	//0x099c		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC925970C,	//0x099e		VoC_add32_rr(ACC1,ACC0,ACC0,DEFAULT)	|	VoC_sub32inc_rp(ACC0,ACC0,REG1,DEFAULT)
0xCB5BDDDC,	//0x09a0		VoC_sub32_rr(REG67,ACC1,REG67,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xFA65C8F5,	//0x09a2		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add32_rr(ACC1,REG67,RL6,DEFAULT)
0x5DD5D9C4,	//0x09a4		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x970CFBFC,	//0x09a6		VoC_sub32inc_rp(ACC0,ACC0,REG1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0xDDDCC925,	//0x09a8		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add32_rr(ACC1,ACC0,ACC0,DEFAULT)
0xC895CB52,	//0x09aa		VoC_add32_rr(ACC1,REG45,REG45,DEFAULT)	|	VoC_sub32_rr(REG45,ACC1,REG45,DEFAULT)
0xC9F5CB7F,	//0x09ac		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0x1808FA65,	//0x09ae		VoC_lw16i_set_inc(REG0,0x66d0,0x2)(lo)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xDDD566D0,	//0x09b0		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x66d0,0x2)(hi)
0x180BDF01,	//0x09b2		VoC_lw16i_set_inc(REG3,0x27ae,0x2)(lo)	|	VoC_pop32(REG23,DEFAULT)
0xF21227AE,	//0x09b4		VoC_lw16i_short(INC2,0x10,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x27ae,0x2)(hi)
0xFA649384,	//0x09b6		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32inc_rp(ACC0,RL6,REG0,DEFAULT)
0x5DD4D9C5,	//0x09b8		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xCB7FFBFD,	//0x09ba		VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0xFA65C9F5,	//0x09bc		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)
0x5DD5D9C4,	//0x09be		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xCB1BFBFC,	//0x09c0		VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0xFA65C8F5,	//0x09c2		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add32_rr(ACC1,REG67,RL6,DEFAULT)
0x5DD5D9C4,	//0x09c4		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xCB12FBFC,	//0x09c6		VoC_sub32_rr(REG45,ACC0,REG45,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0xCB3FC894,	//0x09c8		VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)	|	VoC_add32_rr(ACC0,REG45,REG45,DEFAULT)
0xFA65C9F5,	//0x09ca		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)
0x5DD5D9C4,	//0x09cc		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x951CFBFC,	//0x09ce		VoC_sub32_rp(ACC0,ACC0,REG3,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0x7A65C935,	//0x09d0		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add32_rr(ACC1,ACC0,RL6,DEFAULT)
0xD9C4DDDC,	//0x09d2		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)
0xFBFC5DD5,	//0x09d4		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC925951C,	//0x09d6		VoC_add32_rr(ACC1,ACC0,ACC0,DEFAULT)	|	VoC_sub32_rp(ACC0,ACC0,REG3,DEFAULT)
0xDDDC4B7F,	//0x09d8		VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0xFA65C9F5,	//0x09da		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)
0x5DD5D9C4,	//0x09dc		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x951CFBFC,	//0x09de		VoC_sub32_rp(ACC0,ACC0,REG3,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0x4B5BC925,	//0x09e0		VoC_sub32_rr(REG67,ACC1,REG67,DEFAULT)	|	VoC_add32_rr(ACC1,ACC0,ACC0,DEFAULT)
0xC8F5DDDC,	//0x09e2		VoC_add32_rr(ACC1,REG67,RL6,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)
0xD9C4FA65,	//0x09e4		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFBFC5DD5,	//0x09e6		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC925951C,	//0x09e8		VoC_add32_rr(ACC1,ACC0,ACC0,DEFAULT)	|	VoC_sub32_rp(ACC0,ACC0,REG3,DEFAULT)
0xDDDC4B52,	//0x09ea		VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_sub32_rr(REG45,ACC1,REG45,DEFAULT)
0xCB7FC895,	//0x09ec		VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)	|	VoC_add32_rr(ACC1,REG45,REG45,DEFAULT)
0xFA65C9F5,	//0x09ee		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)
0xDDD59384,	//0x09f0		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_add32inc_rp(ACC0,RL6,REG0,DEFAULT)
0xD9C5FA64,	//0x09f2		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0xC96D5DD4,	//0x09f4		VoC_add32_rr(ACC1,ACC1,ACC1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xC9F5CB7F,	//0x09f6		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0xD9C4FA65,	//0x09f8		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFBFC5DD5,	//0x09fa		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC8F5CB1B,	//0x09fc		VoC_add32_rr(ACC1,REG67,RL6,DEFAULT)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0xD9C4FA65,	//0x09fe		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFBFC5DD5,	//0x0a00		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC895CB12,	//0x0a02		VoC_add32_rr(ACC1,REG45,REG45,DEFAULT)	|	VoC_sub32_rr(REG45,ACC0,REG45,DEFAULT)
0xC9F5CB7F,	//0x0a04		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0x180BFA65,	//0x0a06		VoC_lw16i_set_inc(REG3,0x27ae,0x2)(lo)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xD9C427AE,	//0x0a08		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x27ae,0x2)(hi)
0xFDFC5DD5,	//0x0a0a		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC975971D,	//0x0a0c		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_sub32inc_rp(ACC1,ACC0,REG3,DEFAULT)
0xD9C4FA65,	//0x0a0e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFDFC5DD5,	//0x0a10		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xFDFD971D,	//0x0a12		VoC_shru32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_sub32inc_rp(ACC1,ACC0,REG3,DEFAULT)
0xC9F5CB7F,	//0x0a14		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0xD9C4FA65,	//0x0a16		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFDFC5DD5,	//0x0a18		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xFDFD971D,	//0x0a1a		VoC_shru32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_sub32inc_rp(ACC1,ACC0,REG3,DEFAULT)
0xC8F5CB5B,	//0x0a1c		VoC_add32_rr(ACC1,REG67,RL6,DEFAULT)	|	VoC_sub32_rr(REG67,ACC1,REG67,DEFAULT)
0xD9C4FA65,	//0x0a1e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xFDFC5DD5,	//0x0a20		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xFDFD971D,	//0x0a22		VoC_shru32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_sub32inc_rp(ACC1,ACC0,REG3,DEFAULT)
0xFDFDCB55,	//0x0a24		VoC_shru32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_sub32_rr(ACC1,ACC1,REG45,DEFAULT)
0xC9F5CB7F,	//0x0a26		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0xF0067A65,	//0x0a28		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xc,DEFAULT)
0xF3FD77F3,	//0x0a2a		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0xE580DD95,	//0x0a2c		VoC_return	|	VoC_sw32_p(ACC1,REG2,DEFAULT)
		//0x0a2e		CII_III_sideinfo
0x1402FF47,	//0x0a2e		VoC_lw16_d(REG2,0x47fa)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x700647FA,	//0x0a30		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_lw16_d(REG2,0x47fa)(hi)
0x3517E017,	//0x0a32		VoC_be16_rr(III_sideinfo_100,REG2,REG7)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xF0470A36,	//0x0a34		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_be16_rr(III_sideinfo_100,REG2,REG7)(hi)
		//0x0a36		III_sideinfo_100
0x31C5F103,	//0x0a36		VoC_bnez16_r(III_sideinfo_200,REG5)(lo)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x70A70A3E,	//0x0a38		VoC_lw16i_short(REG7,0x5,DEFAULT)	|	VoC_bnez16_r(III_sideinfo_200,REG5)(hi)
0x401AE093,	//0x0a3a		VoC_be16_rd(III_sideinfo_200,REG2,0x408)(lo)	|	VoC_lw16i_short(REG3,0x9,IN_PARALLEL)
0xF0670408,	//0x0a3c		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_be16_rd(III_sideinfo_200,REG2,0x408)(hi)
		//0x0a3e		III_sideinfo_200
0x47FE1805,	//0x0a3e		VoC_lw16i_set_inc(REG1,0x47fe,0x1)
0xE318E240,	//0x0a40		VoC_rbinc_r(REG4,REG3,DEFAULT)	|	VoC_lbinc_p(REG0)
0x5C94E338,	//0x0a42		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_rbinc_r(REG4,REG7,DEFAULT)
0xDC94E013,	//0x0a44		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x0A5031C5,	//0x0a46		VoC_bnez16_r(III_sideinfo_300,REG5)
0x6684E240,	//0x0a48		VoC_loop_r_short(REG2,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE290E023,	//0x0a4a		VoC_rbinc_i(REG4,0x4,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,IN_PARALLEL)
0xDC94FFC0,	//0x0a4c		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_NOP
		//0x0a4d		VoC_endloop0
0xFFC07FC0,	//0x0a4e		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0a50		III_sideinfo_300
0x48021805,	//0x0a50		VoC_lw16i_set_inc(REG1,0x4802,0x1)
		//0x0a52		III_sideinfo_gr_loop_begin
0x1484DFC3,	//0x0a52		VoC_lw32_d(ACC0,0x4800)(lo)	|	VoC_push16(REG3,DEFAULT)
0x2E114800,	//0x0a54		VoC_loop_r(1,REG2)(lo)	|	VoC_lw32_d(ACC0,0x4800)(hi)
0xE2400AC3,	//0x0a56		VoC_lbinc_p(REG0)	|	VoC_loop_r(1,REG2)(hi)
0xE2B0E240,	//0x0a58		VoC_rbinc_i(REG4,0xc,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE240C1A6,	//0x0a5a		VoC_lbinc_p(REG0)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xDC94E2A4,	//0x0a5c		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_rbinc_i(REG4,0x9,DEFAULT)
0x6083E240,	//0x0a5e		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE2A0DC94,	//0x0a60		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,IN_PARALLEL)
0xDC94F122,	//0x0a62		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x9,DEFAULT)
0x0A6731C5,	//0x0a64		VoC_bnez16_r(III_sideinfo_ch_loop_100,REG5)
0xE310F082,	//0x0a66		VoC_rbinc_r(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
		//0x0a67		III_sideinfo_ch_loop_100
0x01200A82,	//0x0a68		VoC_lw16i(REG2,0x120)
0x0A70349A,	//0x0a6a		VoC_bngt16_rr(III_sideinfo_ch_loop_200,REG3,REG2)
0x0A703347,	//0x0a6c		VoC_bnez32_r(III_sideinfo_ch_loop_200,RL7)
0x02320A8E,	//0x0a6e		VoC_lw16i(RL7_LO,0x232)
		//0x0a70		III_sideinfo_ch_loop_200
0xE240DC94,	//0x0a70		VoC_lbinc_p(REG0)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xDC9F6284,	//0x0a72		VoC_sw16inc_p(RL7_HI,REG1,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x0AAA3184,	//0x0a74		VoC_bez16_r(III_sideinfo_ch_loop_300,REG4)
0xE288E240,	//0x0a76		VoC_rbinc_i(REG4,0x2,DEFAULT)	|	VoC_lbinc_p(REG0)
0x0A7E31C4,	//0x0a78		VoC_bnez16_r(III_sideinfo_ch_loop_1000,REG4)
0x0A7E3347,	//0x0a7a		VoC_bnez32_r(III_sideinfo_ch_loop_1000,RL7)
0x02330A8E,	//0x0a7c		VoC_lw16i(RL7_LO,0x233)
		//0x0a7e		III_sideinfo_ch_loop_1000
0x449CDC94,	//0x0a7e		VoC_bne16_rd(III_sideinfo_ch_loop_1100,REG4,0x44fe)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x31C544FE,	//0x0a80		VoC_bnez16_r(III_sideinfo_ch_loop_1100,REG5)(lo)	|	VoC_bne16_rd(III_sideinfo_ch_loop_1100,REG4,0x44fe)(hi)
0x33470A8A,	//0x0a82		VoC_bnez32_r(III_sideinfo_ch_loop_1100,RL7)(lo)	|	VoC_bnez16_r(III_sideinfo_ch_loop_1100,REG5)(hi)
0xE1030A8A,	//0x0a84		VoC_movreg16(REG3,ACC0_LO,DEFAULT)	|	VoC_bnez32_r(III_sideinfo_ch_loop_1100,RL7)(hi)
0x0A8A3143,	//0x0a86		VoC_bngtz16_r(III_sideinfo_ch_loop_1100,REG3)
0x02340A8E,	//0x0a88		VoC_lw16i(RL7_LO,0x234)
		//0x0a8a		III_sideinfo_ch_loop_1100
0x44FE078A,	//0x0a8a		VoC_sub16_rd(REG2,REG1,0x44fe)
0xF6836284,	//0x0a8c		VoC_movreg16(REG3,REG4,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x0A953144,	//0x0a8e		VoC_bngtz16_r(III_sideinfo_ch_loop_2000,REG4)
0x1684D824,	//0x0a90		VoC_or16_ri(REG4,0x8)(lo)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xFFC00008,	//0x0a92		VoC_NOP	|	VoC_or16_ri(REG4,0x8)(hi)
0xF0E2DC24,	//0x0a94		VoC_lw16i_short(REG2,0x7,DEFAULT)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
		//0x0a95		III_sideinfo_ch_loop_2000
0x44FE441B,	//0x0a96		VoC_bne16_rd(III_sideinfo_ch_loop_2100,REG3,0x44fe)
0xFFC0F102,	//0x0a98		VoC_NOP	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x0a99		III_sideinfo_ch_loop_2100
0xE843E240,	//0x0a9a		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lbinc_p(REG0)
0xF08AE294,	//0x0a9c		VoC_lw16i_short(ACC1_LO,0x4,DEFAULT)	|	VoC_rbinc_i(REG4,0x5,DEFAULT)
		//0x0a9e		VoC_endloop0
0xDC9ADC94,	//0x0a9e		VoC_sw16inc_p(ACC1_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xE863E240,	//0x0aa0		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lbinc_p(REG0)
0xFFC0E28C,	//0x0aa2		VoC_NOP	|	VoC_rbinc_i(REG4,0x3,DEFAULT)
		//0x0aa4		VoC_endloop0
0x0A84DC94,	//0x0aa4		VoC_lw16i(REG4,0x24)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xDC920024,	//0x0aa6		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i(REG4,0x24)(hi)
0xE5CFDC94,	//0x0aa8		VoC_jump(III_sideinfo_ch_loop_300_end)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0aaa		III_sideinfo_ch_loop_300
0xE240DC9F,	//0x0aaa		VoC_lbinc_p(REG0)	|	VoC_sw16inc_p(RL7_HI,REG1,DEFAULT)
0xE863E240,	//0x0aac		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lbinc_p(REG0)
0xFFC0E294,	//0x0aae		VoC_NOP	|	VoC_rbinc_i(REG4,0x5,DEFAULT)
		//0x0ab0		VoC_endloop0
0xE240DC94,	//0x0ab0		VoC_lbinc_p(REG0)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x42DF0709,	//0x0ab2		VoC_add16_rd(REG1,REG1,0x42df)
0xE28CE290,	//0x0ab4		VoC_rbinc_i(REG4,0x3,DEFAULT)	|	VoC_rbinc_i(REG4,0x4,DEFAULT)
0xDC94DC94,	//0x0ab6		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0ab8		III_sideinfo_ch_loop_300_end
0x44F0078A,	//0x0ab8		VoC_sub16_rd(REG2,REG1,0x44f0)
0xD823F044,	//0x0aba		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x0ABF3105,	//0x0abc		VoC_bgtz16_r(III_sideinfo_ch_loop_400,REG5)
0xE320F064,	//0x0abe		VoC_rbinc_r(REG4,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
		//0x0abf		III_sideinfo_ch_loop_400
0xE2846463,	//0x0ac0		VoC_lw16i_short(REG4,0x28,IN_PARALLEL)	|	VoC_or16_rr(REG3,REG4,DEFAULT)
0x5C23C061,	//0x0ac2		VoC_sw16_p(REG3,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
		//0x0ac3		VoC_endloop1
0x1402F728,	//0x0ac4		VoC_lw16_d(REG2,0x47fa)(lo)	|	VoC_movreg16(ACC0_LO,ACC0_HI,IN_PARALLEL)
0xDF8347FA,	//0x0ac6		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16_d(REG2,0x47fa)(hi)
0x486E1805,	//0x0ac8		VoC_lw16i_set_inc(REG1,0x486e,0x1)
0x0408079B,	//0x0aca		VoC_sub16_rd(REG3,REG3,0x408)
0x0A5231C3,	//0x0acc		VoC_bnez16_r(III_sideinfo_gr_loop_begin,REG3)
0x47ED1500,	//0x0ace		VoC_sw16_d(REG0,0x47ed)
0x47EE1586,	//0x0ad0		VoC_sw32_d(RL6,0x47ee)
0x47F0151B,	//0x0ad2		VoC_sw16_d(BITCACHE,0x47f0)
0xDFE9E580,	//0x0ad4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0ad5		CII_mad_layer_III
0xF025F007,	//0x0ad6		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x48DE1507,	//0x0ad8		VoC_sw16_d(REG7,0x48de)
0x47D96C04,	//0x0ada		VoC_bez16_d(NCHANNELS_100,0x47d9)
0xFFC07045,	//0x0adc		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
		//0x0ade		NCHANNELS_100
0x10000A86,	//0x0ade		VoC_lw16i(REG6,0x1000)
0x47FA1505,	//0x0ae0		VoC_sw16_d(REG5,0x47fa)
0x47E02806,	//0x0ae2		VoC_and16_rd(REG6,0x47e0)
0x401DF127,	//0x0ae4		VoC_be16_rd(mad_layer_III_si_len_100,REG5,0x408)(lo)	|	VoC_lw16i_short(REG7,0x9,DEFAULT)
0xF2270408,	//0x0ae6		VoC_lw16i_short(REG7,0x11,DEFAULT)	|	VoC_be16_rd(mad_layer_III_si_len_100,REG5,0x408)(hi)
		//0x0ae8		mad_layer_III_si_len_100
0x0AF031C6,	//0x0ae8		VoC_bnez16_r(mad_layer_III_si_len_500,REG6)
0x402DF227,	//0x0aea		VoC_be16_rd(mad_layer_III_si_len_500,REG5,0x408)(lo)	|	VoC_lw16i_short(REG7,0x11,DEFAULT)
0x0A870408,	//0x0aec		VoC_lw16i(REG7,0x20)(lo)	|	VoC_be16_rd(mad_layer_III_si_len_500,REG5,0x408)(hi)
0xFFC00020,	//0x0aee		VoC_NAD	|	VoC_lw16i(REG7,0x20)(hi)
		//0x0af0		mad_layer_III_si_len_500
0x47ED1402,	//0x0af0		VoC_lw16_d(REG2,0x47ed)
0x78FADFC7,	//0x0af2		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x1406E087,	//0x0af4		VoC_lw16_d(REG6,0x47f0)(lo)	|	VoC_lw16i_short(REG7,0x8,IN_PARALLEL)
0x2B8047F0,	//0x0af6		VoC_jal(CII_div_mode)(lo)	|	VoC_lw16_d(REG6,0x47f0)(hi)
0xC2AA012B,	//0x0af8		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_jal(CII_div_mode)(hi)
0x0B11DF87,	//0x0afa		VoC_sub16_dr(REG1,0x47ec,REG2)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x382947EC,	//0x0afc		VoC_bgt16_rd(mad_layer_III101,REG1,0x42ea)(lo)	|	VoC_sub16_dr(REG1,0x47ec,REG2)(hi)
0x070942EA,	//0x0afe		VoC_add16_rd(REG1,REG1,0x400)(lo)	|	VoC_bgt16_rd(mad_layer_III101,REG1,0x42ea)(hi)
0xFFC00400,	//0x0b00		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x400)(hi)
		//0x0b02		mad_layer_III101
0x0B1034B9,	//0x0b02		VoC_bngt16_rr(mad_layer_III_check_frame,REG7,REG1)
0xE0015FA9,	//0x0b04		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x02310A87,	//0x0b06		VoC_lw16i(REG7,0x231)
0x47F61501,	//0x0b08		VoC_sw16_d(REG1,0x47f6)
0x1507F7E6,	//0x0b0a		VoC_sw16_d(REG7,0x47f8)(lo)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0x150747F8,	//0x0b0c		VoC_sw16_d(REG7,0x48de)(lo)	|	VoC_sw16_d(REG7,0x47f8)(hi)
0xE58048DE,	//0x0b0e		VoC_return	|	VoC_sw16_d(REG7,0x48de)(hi)
		//0x0b10		mad_layer_III_check_frame
0xF4547201,	//0x0b10		VoC_lw16i_short(WRAP0,0xa,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x10,DEFAULT)
0x47E02801,	//0x0b12		VoC_and16_rd(REG1,0x47e0)
0x0B343181,	//0x0b14		VoC_bez16_r(mad_layer_III_check_CRC,REG1)
0x47DE1404,	//0x0b16		VoC_lw16_d(REG4,0x47de)
0x47ED2004,	//0x0b18		VoC_lw16d_set_inc(REG0,0x47ed,0x1)
0x47EE1486,	//0x0b1a		VoC_lw32_d(RL6,0x47ee)
0x47F0141B,	//0x0b1c		VoC_lw16_d(BITCACHE,0x47f0)
0xFFC078EF,	//0x0b1e		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xfffffffd,DEFAULT)
0x06192B80,	//0x0b20		VoC_jal(CII_mad_bit_crc)
0x47DE150E,	//0x0b22		VoC_sw16_d(RL7_LO,0x47de)
0x40BCE1C4,	//0x0b24		VoC_be16_rd(mad_layer_III_check_CRC,REG4,0x47df)(lo)	|	VoC_movreg16(REG4,RL7_LO,DEFAULT)
0x702447DF,	//0x0b26		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_be16_rd(mad_layer_III_check_CRC,REG4,0x47df)(hi)
0x2804EFF7,	//0x0b28		VoC_and16_rd(REG4,0x47e4)(lo)	|	VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)
0x0A8647E4,	//0x0b2a		VoC_lw16i(REG6,0x201)(lo)	|	VoC_and16_rd(REG4,0x47e4)(hi)
0x31C40201,	//0x0b2c		VoC_bnez16_r(mad_layer_III_check_CRC,REG4)(lo)	|	VoC_lw16i(REG6,0x201)(hi)
0x15060B34,	//0x0b2e		VoC_sw16_d(REG6,0x47f8)(lo)	|	VoC_bnez16_r(mad_layer_III_check_CRC,REG4)(hi)
0x150747F8,	//0x0b30		VoC_sw16_d(REG7,0x48de)(lo)	|	VoC_sw16_d(REG6,0x47f8)(hi)
0xFFC048DE,	//0x0b32		VoC_NAD	|	VoC_sw16_d(REG7,0x48de)(hi)
		//0x0b34		mad_layer_III_check_CRC
0x10000A85,	//0x0b34		VoC_lw16i(REG5,0x1000)
0x47E02805,	//0x0b36		VoC_and16_rd(REG5,0x47e0)
0x47ED2004,	//0x0b38		VoC_lw16d_set_inc(REG0,0x47ed,0x1)
0x47EE1486,	//0x0b3a		VoC_lw32_d(RL6,0x47ee)
0x47F0141B,	//0x0b3c		VoC_lw16_d(BITCACHE,0x47f0)
0x0A2E2B80,	//0x0b3e		VoC_jal(CII_III_sideinfo)
0xEFF461C5,	//0x0b40		VoC_lw16i_short(REG4,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0x3185F21C,	//0x0b42		VoC_bez16_r(mad_layer_III_check_sideinfo,REG5)(lo)	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
0x6E060B4B,	//0x0b44		VoC_bnez16_d(mad_layer_III_check_sideinfo,0x48de)(lo)	|	VoC_bez16_r(mad_layer_III_check_sideinfo,REG5)(hi)
0x150548DE,	//0x0b46		VoC_sw16_d(REG5,0x47f8)(lo)	|	VoC_bnez16_d(mad_layer_III_check_sideinfo,0x48de)(hi)
0x150447F8,	//0x0b48		VoC_sw16_d(REG4,0x48de)(lo)	|	VoC_sw16_d(REG5,0x47f8)(hi)
0xDFC648DE,	//0x0b4a		VoC_push16(REG6,DEFAULT)	|	VoC_sw16_d(REG4,0x48de)(hi)
		//0x0b4b		mad_layer_III_check_sideinfo
0x47E01482,	//0x0b4c		VoC_lw32_d(REG45,0x47e0)
0x2885E47C,	//0x0b4e		VoC_or16_rd(REG5,0x47ff)(lo)	|	VoC_or16_rr(REG4,REG7,DEFAULT)
0xF01B47FF,	//0x0b50		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_or16_rd(REG5,0x47ff)(hi)
0x47E01582,	//0x0b52		VoC_sw32_d(REG45,0x47e0)
0x47EC2004,	//0x0b54		VoC_lw16d_set_inc(REG0,0x47ec,0x1)
0xF6047F46,	//0x0b56		VoC_movreg16(REG4,REG0,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x00011604,	//0x0b58		VoC_and16_ri(REG4,0x1)
0xE0077908,	//0x0b5a		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x04074820,	//0x0b5c		VoC_blt16_rd(mad_layer_III_beyond1,REG0,0x407)
0x04070780,	//0x0b5e		VoC_sub16_rd(REG0,REG0,0x407)
		//0x0b60		mad_layer_III_beyond1
0x3184F15C,	//0x0b60		VoC_bez16_r(mad_layer_III_peek_init_even,REG4)(lo)	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
0xE2400B65,	//0x0b62		VoC_lbinc_p(REG0)	|	VoC_bez16_r(mad_layer_III_peek_init_even,REG4)(hi)
0xFFC0E2A0,	//0x0b64		VoC_NOP	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
		//0x0b65		mad_layer_III_peek_init_even
0x6281E240,	//0x0b66		VoC_rbinc_i(REG5,0x10,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE240FF47,	//0x0b68		VoC_lbinc_p(REG0)	|	VoC_lw32z(RL7,IN_PARALLEL)
0xFF456280,	//0x0b6a		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x10,DEFAULT)
0xF44BF4CF,	//0x0b6c		VoC_lw16i_short(ACC1_HI,0xffe2,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0xffe6,DEFAULT)
0x37BDE4D7,	//0x0b6e		VoC_bne32_rr(mad_layer_III_find_main_data,RL7,ACC1)(lo)	|	VoC_and32_rr(RL7,REG45,DEFAULT)
0xF02B0B81,	//0x0b70		VoC_lw16i_short(ACC1_HI,0x1,DEFAULT)	|	VoC_bne32_rr(mad_layer_III_find_main_data,RL7,ACC1)(hi)
0x3345E4D5,	//0x0b72		VoC_bnez32_r(mad_layer_III_find_main_data_100,ACC1)(lo)	|	VoC_and32_rr(ACC1,REG45,DEFAULT)
0xE2400B77,	//0x0b74		VoC_lbinc_p(REG0)	|	VoC_bnez32_r(mad_layer_III_find_main_data_100,ACC1)(hi)
0xFFC0E282,	//0x0b76		VoC_NOP	|	VoC_rbinc_i(REG6,0x10,DEFAULT)
		//0x0b77		mad_layer_III_find_main_data_100
0x7126E240,	//0x0b78		VoC_lw16i_short(REG6,0x9,DEFAULT)	|	VoC_lbinc_p(REG0)
0xF10BFF45,	//0x0b7a		VoC_lw16i_short(ACC1_HI,0x8,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x3282E4EA,	//0x0b7c		VoC_bgtz32_r(mad_layer_III_find_main_data_200,REG45)(lo)	|	VoC_and32_rr(REG45,ACC1,DEFAULT)
0xF1060B80,	//0x0b7e		VoC_lw16i_short(REG6,0x8,DEFAULT)	|	VoC_bgtz32_r(mad_layer_III_find_main_data_200,REG45)(hi)
		//0x0b80		mad_layer_III_find_main_data_200
0xF21CE333,	//0x0b80		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_rbinc_r(REG7,REG6,DEFAULT)
		//0x0b81		mad_layer_III_find_main_data
0x47F01406,	//0x0b82		VoC_lw16_d(REG6,0x47f0)
0xE0875FC7,	//0x0b84		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x012B2B80,	//0x0b86		VoC_jal(CII_div_mode)
0x47ED1404,	//0x0b88		VoC_lw16_d(REG4,0x47ed)
0x432CF8FC,	//0x0b8a		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x0B26DF87,	//0x0b8c		VoC_sub16_dr(REG6,0x47ec,REG4)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0x382647EC,	//0x0b8e		VoC_bgt16_rd(mad_layer_III102,REG6,0x42ea)(lo)	|	VoC_sub16_dr(REG6,0x47ec,REG4)(hi)
0x073642EA,	//0x0b90		VoC_add16_rd(REG6,REG6,0x400)(lo)	|	VoC_bgt16_rd(mad_layer_III102,REG6,0x42ea)(hi)
0xF0040400,	//0x0b92		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x400)(hi)
		//0x0b93		mad_layer_III102
0x47FE0735,	//0x0b94		VoC_add16_rd(REG5,REG6,0x47fe)
0x0B9934BD,	//0x0b96		VoC_bngt16_rr(find_main_data_this_frame_100,REG7,REG5)
0xC3BDF007,	//0x0b98		VoC_sub16_rr(REG5,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0b99		find_main_data_this_frame_100
0x47FE072D,	//0x0b9a		VoC_add16_rd(REG5,REG5,0x47fe)
0x47FE6E16,	//0x0b9c		VoC_bnez16_d(find_main_data_this_frame_500,0x47fe)
0x47F61504,	//0x0b9e		VoC_sw16_d(REG4,0x47f6)
0xE01260A4,	//0x0ba0		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0x47ED2004,	//0x0ba2		VoC_lw16d_set_inc(REG0,0x47ed,0x1)
0x47EE1486,	//0x0ba4		VoC_lw32_d(RL6,0x47ee)
0x47F0141B,	//0x0ba6		VoC_lw16_d(BITCACHE,0x47f0)
0x47FD1502,	//0x0ba8		VoC_sw16_d(REG2,0x47fd)
0x48DC1500,	//0x0baa		VoC_sw16_d(REG0,0x48dc)
0x48DA1586,	//0x0bac		VoC_sw32_d(RL6,0x48da)
0x48DD151B,	//0x0bae		VoC_sw16_d(BITCACHE,0x48dd)
0x0C202B00,	//0x0bb0		VoC_jump_lg(find_main_data_this_frame_500_end)
		//0x0bb2		find_main_data_this_frame_500
0x47FE1403,	//0x0bb2		VoC_lw16_d(REG3,0x47fe)
0x47F63D03,	//0x0bb4		VoC_bngt16_rd(find_main_data_this_frame_550,REG3,0x47f6)
0x02350A83,	//0x0bb6		VoC_lw16i(REG3,0x235)
0x6C05F7E2,	//0x0bb8		VoC_bez16_d(find_main_data_this_frame_500_1,0x48de)(lo)	|	VoC_lw16i_short(REG2,0xffffffff,DEFAULT)
0x2B0048DE,	//0x0bba		VoC_jump_lg(find_main_data_this_frame_500_end)(lo)	|	VoC_bez16_d(find_main_data_this_frame_500_1,0x48de)(hi)
0xFFC00C20,	//0x0bbc		VoC_NAD	|	VoC_jump_lg(find_main_data_this_frame_500_end)(hi)
		//0x0bbe		find_main_data_this_frame_500_1
0x47F81503,	//0x0bbe		VoC_sw16_d(REG3,0x47f8)
0x48DE1502,	//0x0bc0		VoC_sw16_d(REG2,0x48de)
0x0C202B00,	//0x0bc2		VoC_jump_lg(find_main_data_this_frame_500_end)
		//0x0bc4		find_main_data_this_frame_550
0xFF46701B,	//0x0bc4		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x59E61804,	//0x0bc6		VoC_lw16i_set_inc(REG0,0x59e6,0x1)
0xDFC479F8,	//0x0bc8		VoC_push16(REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xffffffff,DEFAULT)
0x48DF0700,	//0x0bca		VoC_add16_rd(REG0,REG0,0x48df)
0x47F60700,	//0x0bcc		VoC_add16_rd(REG0,REG0,0x47f6)
0x0780E003,	//0x0bce		VoC_sub16_rd(REG0,REG0,0x47fe)(lo)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x790847FE,	//0x0bd0		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x47fe)(hi)
0x1604F604,	//0x0bd2		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG4,REG0,IN_PARALLEL)
0x31840001,	//0x0bd4		VoC_bez16_r(mad_layer_III_md_lent_even,REG4)(lo)	|	VoC_and16_ri(REG4,0x1)(hi)
0xE2400BD9,	//0x0bd6		VoC_lbinc_p(REG0)	|	VoC_bez16_r(mad_layer_III_md_lent_even,REG4)(hi)
0xDF84E2A0,	//0x0bd8		VoC_pop16(REG4,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
		//0x0bd9		mad_layer_III_md_lent_even
0x1500F002,	//0x0bda		VoC_sw16_d(REG0,0x48dc)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x158648DC,	//0x0bdc		VoC_sw32_d(RL6,0x48da)(lo)	|	VoC_sw16_d(REG0,0x48dc)(hi)
0x151B48DA,	//0x0bde		VoC_sw16_d(BITCACHE,0x48dd)(lo)	|	VoC_sw32_d(RL6,0x48da)(hi)
0x150248DD,	//0x0be0		VoC_sw16_d(REG2,0x47fd)(lo)	|	VoC_sw16_d(BITCACHE,0x48dd)(hi)
0x382547FD,	//0x0be2		VoC_bgt16_rd(no_find_main_data_this_frame_500_end,REG5,0x47fe)(lo)	|	VoC_sw16_d(REG2,0x47fd)(hi)
0x2B0047FE,	//0x0be4		VoC_jump_lg(find_main_data_this_frame_500_end)(lo)	|	VoC_bgt16_rd(no_find_main_data_this_frame_500_end,REG5,0x47fe)(hi)
0xDF430C20,	//0x0be6		VoC_push32(REG67,DEFAULT)	|	VoC_jump_lg(find_main_data_this_frame_500_end)(hi)
		//0x0be7		no_find_main_data_this_frame_500_end
0x47FE07AC,	//0x0be8		VoC_sub16_rd(REG4,REG5,0x47fe)
0x47F60722,	//0x0bea		VoC_add16_rd(REG2,REG4,0x47f6)
0x2004DF42,	//0x0bec		VoC_lw16d_set_inc(REG0,0x47ed,0x1)(lo)	|	VoC_push32(REG45,DEFAULT)
0x148647ED,	//0x0bee		VoC_lw32_d(RL6,0x47ee)(lo)	|	VoC_lw16d_set_inc(REG0,0x47ed,0x1)(hi)
0x141B47EE,	//0x0bf0		VoC_lw16_d(BITCACHE,0x47f0)(lo)	|	VoC_lw32_d(RL6,0x47ee)(hi)
0x606247F0,	//0x0bf2		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_lw16_d(BITCACHE,0x47f0)(hi)
0x1602F90B,	//0x0bf4		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_shru16_ri(REG3,0x1,IN_PARALLEL)
0xF15C0001,	//0x0bf6		VoC_lw16i_short(WRAP0,0xa,DEFAULT)	|	VoC_and16_ri(REG2,0x1)(hi)
0x04074820,	//0x0bf8		VoC_blt16_rd(mad_layer_III_beyond3,REG0,0x407)
0x04070780,	//0x0bfa		VoC_sub16_rd(REG0,REG0,0x407)
		//0x0bfc		mad_layer_III_beyond3
0x0C083182,	//0x0bfc		VoC_bez16_r(mad_layer_III_copy_500,REG2)
0x1606D836,	//0x0bfe		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16_p(REG6,REG3,DEFAULT)
0xE2A300FF,	//0x0c00		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xE47EF9C7,	//0x0c02		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0x07A4E240,	//0x0c04		VoC_sub16_rd(REG4,REG4,0x408)(lo)	|	VoC_lbinc_p(REG0)
0xDCB60408,	//0x0c06		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x408)(hi)
		//0x0c08		mad_layer_III_copy_500
0x04080726,	//0x0c08		VoC_add16_rd(REG6,REG4,0x408)
0x62A0E240,	//0x0c0a		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x0736F816,	//0x0c0c		VoC_add16_rd(REG6,REG6,0x408)(lo)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0xE2A10408,	//0x0c0e		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x408)(hi)
0xE240E78B,	//0x0c10		VoC_lbinc_p(REG0)	|	VoC_loop_r_short(REG6,DEFAULT)
0xF9C562A2,	//0x0c12		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x646CE2A3,	//0x0c14		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_rbinc_i(REG7,0x8,DEFAULT)
0xE47EF9C7,	//0x0c16		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)
0x62A0E240,	//0x0c18		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x62A1DCB4,	//0x0c1a		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)
		//0x0c1b		VoC_endloop0
0x721CDCB6,	//0x0c1c		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)
0xDF03DF02,	//0x0c1e		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
		//0x0c20		find_main_data_this_frame_500_end
0xDF84C3A6,	//0x0c20		VoC_pop16(REG4,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0xDF42DF43,	//0x0c22		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x48DE6E0B,	//0x0c24		VoC_bnez16_d(decode_main_data_end,0x48de)
0x0D302B80,	//0x0c26		VoC_jal(CII_III_decode)
0x3184F7E7,	//0x0c28		VoC_bez16_r(decode_main_data_end,REG4)(lo)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0x15040C2F,	//0x0c2a		VoC_sw16_d(REG4,0x47f8)(lo)	|	VoC_bez16_r(decode_main_data_end,REG4)(hi)
0x150747F8,	//0x0c2c		VoC_sw16_d(REG7,0x48de)(lo)	|	VoC_sw16_d(REG4,0x47f8)(hi)
0xDF0248DE,	//0x0c2e		VoC_pop32(REG45,DEFAULT)	|	VoC_sw16_d(REG7,0x48de)(hi)
		//0x0c2f		decode_main_data_end
0x48DC1804,	//0x0c30		VoC_lw16i_set_inc(REG0,0x48dc,0x1)
0x47F11805,	//0x0c32		VoC_lw16i_set_inc(REG1,0x47f1,0x1)
0xE882D883,	//0x0c34		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xDC93D883,	//0x0c36		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x0c37		VoC_endloop0
0xF8EBE0A3,	//0x0c38		VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG3,REG5,DEFAULT)
0xDF03C2E3,	//0x0c3a		VoC_pop32(REG67,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
0x47F51503,	//0x0c3c		VoC_sw16_d(REG3,0x47f5)
0x0C60343E,	//0x0c3e		VoC_bgt16_rr(preload_main_data,REG7,REG6)
0x47F61507,	//0x0c40		VoC_sw16_d(REG7,0x47f6)
0x59E61809,	//0x0c42		VoC_lw16i_set_inc(REG1,0x59e6,0x2)
0x47EC0B38,	//0x0c44		VoC_sub16_dr(REG0,0x47ec,REG7)
0x0C4A3100,	//0x0c46		VoC_bgtz16_r(mad_layer_III103,REG0)
0x04000700,	//0x0c48		VoC_add16_rd(REG0,REG0,0x400)
		//0x0c4a		mad_layer_III103
0x1604E004,	//0x0c4a		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0x79080001,	//0x0c4c		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x4820F454,	//0x0c4e		VoC_blt16_rd(mad_layer_III_beyond2,REG0,0x407)(lo)	|	VoC_lw16i_short(WRAP0,0xa,IN_PARALLEL)
0x07800407,	//0x0c50		VoC_sub16_rd(REG0,REG0,0x407)(lo)	|	VoC_blt16_rd(mad_layer_III_beyond2,REG0,0x407)(hi)
0xF8170407,	//0x0c52		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x407)(hi)
		//0x0c53		mad_layer_III_beyond2
0x48DF1504,	//0x0c54		VoC_sw16_d(REG4,0x48df)
0x073FD884,	//0x0c56		VoC_add16_rd(REG7,REG7,0x408)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x67C40408,	//0x0c58		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x408)(hi)
0xD884D885,	//0x0c5a		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
0xD885DDCA,	//0x0c5c		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x0c5d		VoC_endloop0
0x0CD12B00,	//0x0c5e		VoC_jump_lg(preload_main_data_end)
		//0x0c60		preload_main_data
0xF002F21C,	//0x0c60		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
0x47FE4825,	//0x0c62		VoC_blt16_rd(no_preload_main_data_100,REG5,0x47fe)
0x0C8A2B00,	//0x0c64		VoC_jump_lg(preload_main_data_100)
		//0x0c66		no_preload_main_data_100
0x47FE0B2A,	//0x0c66		VoC_sub16_dr(REG2,0x47fe,REG5)
0x34A7C0B4,	//0x0c68		VoC_bngt16_rr(preload_main_data_200,REG4,REG7)(lo)	|	VoC_add16_rr(REG4,REG2,REG6,DEFAULT)
0xC3F20C6C,	//0x0c6a		VoC_sub16_rr(REG2,REG7,REG6,DEFAULT)	|	VoC_bngt16_rr(preload_main_data_200,REG4,REG7)(hi)
		//0x0c6c		preload_main_data_200
0x47F64DA2,	//0x0c6c		VoC_bnlt16_rd(preload_main_data_1aa,REG2,0x47f6)
0x59E6180B,	//0x0c6e		VoC_lw16i_set_inc(REG3,0x59e6,0x2)
0x1404DFC2,	//0x0c70		VoC_lw16_d(REG4,0x48df)(lo)	|	VoC_push16(REG2,DEFAULT)
0x072048DF,	//0x0c72		VoC_add16_rd(REG0,REG4,0x47f6)(lo)	|	VoC_lw16_d(REG4,0x48df)(hi)
0xC21047F6,	//0x0c74		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_add16_rd(REG0,REG4,0x47f6)(hi)
0xF9086004,	//0x0c76		VoC_shru16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0x1604C018,	//0x0c78		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xF8120001,	//0x0c7a		VoC_shr16_ri(REG2,0x2,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x04080712,	//0x0c7c		VoC_add16_rd(REG2,REG2,0x408)
0x48DF1504,	//0x0c7e		VoC_sw16_d(REG4,0x48df)
0x6684D884,	//0x0c80		VoC_loop_r_short(REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD884D885,	//0x0c82		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
0xD885DDDA,	//0x0c84		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x0c85		VoC_endloop0
0xE5C3DF82,	//0x0c86		VoC_jump(preload_main_data_100)	|	VoC_pop16(REG2,DEFAULT)
		//0x0c88		preload_main_data_1aa
0x47F61402,	//0x0c88		VoC_lw16_d(REG2,0x47f6)
		//0x0c8a		preload_main_data_100
0x59E61807,	//0x0c8a		VoC_lw16i_set_inc(REG3,0x59e6,0x1)
0x47F61502,	//0x0c8c		VoC_sw16_d(REG2,0x47f6)
0x071BF9FB,	//0x0c8e		VoC_add16_rd(REG3,REG3,0x48df)(lo)	|	VoC_shru16_ri(REG3,0xffffffff,DEFAULT)
0xC0D348DF,	//0x0c90		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x48df)(hi)
0xF90B6062,	//0x0c92		VoC_shru16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x47EC0B30,	//0x0c94		VoC_sub16_dr(REG0,0x47ec,REG6)
0x42EA3820,	//0x0c96		VoC_bgt16_rd(mad_layer_III104,REG0,0x42ea)
0x04000700,	//0x0c98		VoC_add16_rd(REG0,REG0,0x400)
		//0x0c9a		mad_layer_III104
0x7F46F01B,	//0x0c9a		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x1604F604,	//0x0c9c		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG4,REG0,IN_PARALLEL)
0x79080001,	//0x0c9e		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x4828F454,	//0x0ca0		VoC_blt16_rd(mad_layer_III_beyond4,REG0,0x407)(lo)	|	VoC_lw16i_short(WRAP0,0xa,IN_PARALLEL)
0x07800407,	//0x0ca2		VoC_sub16_rd(REG0,REG0,0x407)(lo)	|	VoC_blt16_rd(mad_layer_III_beyond4,REG0,0x407)(hi)
0xFFC00407,	//0x0ca4		VoC_NAD	|	VoC_sub16_rd(REG0,REG0,0x407)(hi)
		//0x0ca6		mad_layer_III_beyond4
0x0CAA3184,	//0x0ca6		VoC_bez16_r(mad_layer_III_copy_200,REG4)
0xE2A0E240,	//0x0ca8		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x0caa		mad_layer_III_copy_200
0x47F60734,	//0x0caa		VoC_add16_rd(REG4,REG6,0x47f6)
0x1504E240,	//0x0cac		VoC_sw16_d(REG4,0x47f6)(lo)	|	VoC_lbinc_p(REG0)
0x160247F6,	//0x0cae		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_sw16_d(REG4,0x47f6)(hi)
0x31820001,	//0x0cb0		VoC_bez16_r(mad_layer_III_copy_300,REG2)(lo)	|	VoC_and16_ri(REG2,0x1)(hi)
0xD8340CBD,	//0x0cb2		VoC_lw16_p(REG4,REG3,DEFAULT)	|	VoC_bez16_r(mad_layer_III_copy_300,REG2)(hi)
0x00FF1604,	//0x0cb4		VoC_and16_ri(REG4,0xff)
0xF9C5E2A1,	//0x0cb6		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_rbinc_i(REG5,0x8,DEFAULT)
0xE240E46C,	//0x0cb8		VoC_lbinc_p(REG0)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x040807B6,	//0x0cba		VoC_sub16_rd(REG6,REG6,0x408)
0xFFC0DCB4,	//0x0cbc		VoC_NOP	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x0cbd		mad_layer_III_copy_300
0x62A0E240,	//0x0cbe		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x0736F816,	//0x0cc0		VoC_add16_rd(REG6,REG6,0x408)(lo)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0xE2A10408,	//0x0cc2		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x408)(hi)
0xE240E78B,	//0x0cc4		VoC_lbinc_p(REG0)	|	VoC_loop_r_short(REG6,DEFAULT)
0xF9C562A2,	//0x0cc6		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x646CE2A3,	//0x0cc8		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_rbinc_i(REG7,0x8,DEFAULT)
0xE47EF9C7,	//0x0cca		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)
0x62A0E240,	//0x0ccc		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x62A1DCB4,	//0x0cce		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)
		//0x0ccf		VoC_endloop0
0xDFA9DCB6,	//0x0cd0		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)
		//0x0cd1		preload_main_data_end
0xE580F21C,	//0x0cd2		VoC_return	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
		//0x0cd4		CII_III_reorder
0x4502073D,	//0x0cd4		VoC_add16_rd(REG5,REG7,0x4502)
0x668E180A,	//0x0cd6		VoC_lw16i_set_inc(REG2,0x668e,0x2)
0xE0835856,	//0x0cd8		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG5,DEFAULT)
0xE007641E,	//0x0cda		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG3,DEFAULT)
0x0CE33186,	//0x0cdc		VoC_bez16_r(III_reorder_L2,REG6)
0xE0067047,	//0x0cde		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
		//0x0ce0		III_reorder_L1
0x4BBE838E,	//0x0ce0		VoC_blt16_rd(III_reorder_L1,REG6,0x44ee)(lo)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
0xFF4244EE,	//0x0ce2		VoC_lw32z(REG45,DEFAULT)	|	VoC_blt16_rd(III_reorder_L1,REG6,0x44ee)(hi)
		//0x0ce3		III_reorder_L2
0xF6496862,	//0x0ce4		VoC_movreg16(ACC0_HI,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x0ce6		VoC_endloop0
0xE1235DD2,	//0x0ce6		VoC_lw16i_short(REG3,0x12,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0xE122C5DB,	//0x0ce8		VoC_movreg16(REG2,ACC0_HI,DEFAULT)	|	VoC_mult16_rr(REG3,REG7,REG3,DEFAULT)
0xC0185895,	//0x0cea		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x0B1FC018,	//0x0cec		VoC_sub16_dr(REG7,0x406,REG3)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xC1FF0406,	//0x0cee		VoC_add16_rr(REG7,REG7,REG7,DEFAULT)	|	VoC_sub16_dr(REG7,0x406,REG3)(hi)
0xF6EF600E,	//0x0cf0		VoC_movreg16(RL7_HI,REG7,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
0x232C0A88,	//0x0cf2		VoC_lw16i(ACC0_LO,0x232c)
		//0x0cf4		III_reorder_L3
0x04064823,	//0x0cf4		VoC_blt16_rd(no_III_reorder_L4,REG3,0x406)
0x0D212B00,	//0x0cf6		VoC_jump_lg(III_reorder_L4)
		//0x0cf8		no_III_reorder_L4
0x0D0431C5,	//0x0cf8		VoC_bnez16_r(reorder_L3_1,REG5)
0xF6865895,	//0x0cfa		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x0D0031C4,	//0x0cfc		VoC_bnez16_r(III_reorder_Lw1,REG4)
0xE5C5F044,	//0x0cfe		VoC_jump(reorder_L3_1)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x0d00		III_reorder_Lw1
0x441EF004,	//0x0d00		VoC_bne16_rd(reorder_L3_1,REG6,0x44fe)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF08444FE,	//0x0d02		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_bne16_rd(reorder_L3_1,REG6,0x44fe)(hi)
		//0x0d04		reorder_L3_1
0xDE184112,	//0x0d04		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG4,REG2,DEFAULT)
0x040807AD,	//0x0d06		VoC_sub16_rd(REG5,REG5,0x408)
0xD9937F16,	//0x0d08		VoC_lw32_p(REG67,REG2,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0x45040824,	//0x0d0a		VoC_mult16_rd(REG4,REG4,0x4504)
0x44EE0835,	//0x0d0c		VoC_mult16_rd(REG5,REG6,0x44ee)
0xC12CFFC0,	//0x0d0e		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_NOP
0x412CE105,	//0x0d10		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,DEFAULT)
0xC13CE015,	//0x0d12		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0xC17F413C,	//0x0d14		VoC_add16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x45044427,	//0x0d16		VoC_bne16_rd(reorder_L3_2,REG7,0x4504)
0xC1AE7007,	//0x0d18		VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0d1a		reorder_L3_2
0x5D93D9C5,	//0x0d1a		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0x5DA5F722,	//0x0d1c		VoC_sw32_p(ACC1,REG4,DEFAULT)	|	VoC_movreg16(REG2,ACC0_HI,IN_PARALLEL)
0x2B00FF32,	//0x0d1e		VoC_jump_lg(III_reorder_L3)(lo)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0xE1020CF4,	//0x0d20		VoC_movreg16(REG2,ACC0_LO,DEFAULT)	|	VoC_jump_lg(III_reorder_L3)(hi)
		//0x0d21		III_reorder_L4
0xF819FF38,	//0x0d22		VoC_shr16_ri(REG1,0x3,DEFAULT)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0xFFC07050,	//0x0d24		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x0D2E2C05,	//0x0d26		VoC_loop_i(0x1,0x2)
0x0D2D2E08,	//0x0d28		VoC_loop_r(0,REG1)
0xD9D2D9D3,	//0x0d2a		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
0xDDC2DDC3,	//0x0d2c		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x0d2d		VoC_endloop0
		//0x0d2e		VoC_endloop1
0xE580FFC0,	//0x0d2e		VoC_return	|	VoC_NOP
		//0x0d30		CII_III_decode
0xE0075FE9,	//0x0d30		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x47DD1406,	//0x0d32		VoC_lw16_d(REG6,0x47dd)
0x40000A83,	//0x0d34		VoC_lw16i(REG3,0x4000)
0x47E02803,	//0x0d36		VoC_and16_rd(REG3,0x47e0)
0x0D3B3143,	//0x0d38		VoC_bngtz16_r(III_decode_sfreq,REG3)
0xFF1AFBFB,	//0x0d3a		VoC_movreg32(REG45,REG67,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
		//0x0d3b		III_decode_sfreq
0x7027FC3B,	//0x0d3c		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_shru32_ri(REG67,0x7,DEFAULT)
0x1606FC7A,	//0x0d3e		VoC_and16_ri(REG6,0xf)(lo)	|	VoC_shru32_ri(REG45,0xf,IN_PARALLEL)
0x1604000F,	//0x0d40		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_and16_ri(REG6,0xf)(hi)
0xC1A60001,	//0x0d42		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x44FC07B6,	//0x0d44		VoC_sub16_rd(REG6,REG6,0x44fc)
0x0D4A3143,	//0x0d46		VoC_bngtz16_r(III_decode_sfreq_100,REG3)
0x42DF0736,	//0x0d48		VoC_add16_rd(REG6,REG6,0x42df)
		//0x0d4a		III_decode_sfreq_100
0x42DF0836,	//0x0d4a		VoC_mult16_rd(REG6,REG6,0x42df)
0x47AA0A83,	//0x0d4c		VoC_lw16i(REG3,0x47aa)
0x0A85C19B,	//0x0d4e		VoC_lw16i(REG5,0x1000)(lo)	|	VoC_add16_rr(REG3,REG6,REG3,DEFAULT)
0x28051000,	//0x0d50		VoC_and16_rd(REG5,0x47e0)(lo)	|	VoC_lw16i(REG5,0x1000)(hi)
0x310547E0,	//0x0d52		VoC_bgtz16_r(III_decode_ngr,REG5)(lo)	|	VoC_and16_rd(REG5,0x47e0)(hi)
0xF0470D56,	//0x0d54		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_bgtz16_r(III_decode_ngr,REG5)(hi)
		//0x0d56		III_decode_ngr
0x48021805,	//0x0d56		VoC_lw16i_set_inc(REG1,0x4802,0x1)
0x47FC1507,	//0x0d58		VoC_sw16_d(REG7,0x47fc)
0xDFC1F007,	//0x0d5a		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0d5b		III_decode_ngr_loop_begin
0xE0075FC7,	//0x0d5c		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x1806DFC3,	//0x0d5e		VoC_lw16i_set_inc(REG2,0x668c,0x1)(lo)	|	VoC_push16(REG3,DEFAULT)
0x2004668C,	//0x0d60		VoC_lw16d_set_inc(REG0,0x48dc,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x668c,0x1)(hi)
0x148648DC,	//0x0d62		VoC_lw32_d(RL6,0x48da)(lo)	|	VoC_lw16d_set_inc(REG0,0x48dc,0x1)(hi)
0x141B48DA,	//0x0d64		VoC_lw16_d(BITCACHE,0x48dd)(lo)	|	VoC_lw32_d(RL6,0x48da)(hi)
0x6C0348DD,	//0x0d66		VoC_bez16_d(III_decode_nch_loop_begin,0x47fd)(lo)	|	VoC_lw16_d(BITCACHE,0x48dd)(hi)
0xF15C47FD,	//0x0d68		VoC_lw16i_short(WRAP0,0xa,DEFAULT)	|	VoC_bez16_d(III_decode_nch_loop_begin,0x47fd)(hi)
		//0x0d6a		III_decode_nch_loop_begin
0xDFC3DFC7,	//0x0d6a		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x4502070D,	//0x0d6c		VoC_add16_rd(REG5,REG1,0x4502)
0xD9ABD8B4,	//0x0d6e		VoC_lw32_p(REG67,REG5,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x44FE4487,	//0x0d70		VoC_bne16_rd(III_decode_sfbwidth_100,REG7,0x44fe)
0x1606D8B4,	//0x0d72		VoC_and16_ri(REG6,0x8)(lo)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x31460008,	//0x0d74		VoC_bngtz16_r(III_decode_sfbwidth_100,REG6)(lo)	|	VoC_and16_ri(REG6,0x8)(hi)
0xD8B40D78,	//0x0d76		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_bngtz16_r(III_decode_sfbwidth_100,REG6)(hi)
		//0x0d78		III_decode_sfbwidth_100
0xDCA4DF83,	//0x0d78		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x10000A85,	//0x0d7a		VoC_lw16i(REG5,0x1000)
0x2805DF41,	//0x0d7c		VoC_and16_rd(REG5,0x47e0)(lo)	|	VoC_push32(REG23,DEFAULT)
0xDFC147E0,	//0x0d7e		VoC_push16(REG1,DEFAULT)	|	VoC_and16_rd(REG5,0x47e0)(hi)
0xDFDBDFC0,	//0x0d80		VoC_push16(BITCACHE,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x0D8E3145,	//0x0d82		VoC_bngtz16_r(III_decode_III_scalefactors,REG5)
0xD6477005,	//0x0d84		VoC_lw16_sd(REG7,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x0D8A3187,	//0x0d86		VoC_bez16_r(III_decode_III_scalefactors_100,REG7)
0x48B20A85,	//0x0d88		VoC_lw16i(REG5,0x48b2)
		//0x0d8a		III_decode_III_scalefactors_100
0x0F1D2B80,	//0x0d8a		VoC_jal(CII_III_scalefactors_lsf)
0xFFC065D4,	//0x0d8c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_decode_III_scalefactors_end)
		//0x0d8e		III_decode_III_scalefactors
0x48021806,	//0x0d8e		VoC_lw16i_set_inc(REG2,0x4802,0x1)
0x3187D647,	//0x0d90		VoC_bez16_r(III_decode_III_scalefactors_120,REG7)(lo)	|	VoC_lw16_sd(REG7,0x3,DEFAULT)
0x18060D95,	//0x0d92		VoC_lw16i_set_inc(REG2,0x4838,0x1)(lo)	|	VoC_bez16_r(III_decode_III_scalefactors_120,REG7)(hi)
0xF00E4838,	//0x0d94		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4838,0x1)(hi)
		//0x0d95		III_decode_III_scalefactors_120
0x48000A86,	//0x0d96		VoC_lw16i(REG6,0x4800)
0xD66741BE,	//0x0d98		VoC_lw16_sd(REG7,0x5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x0D9E3187,	//0x0d9a		VoC_bez16_r(III_decode_III_scalefactors_110,REG7)
0xFFC0586E,	//0x0d9c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(RL7_LO,REG6,DEFAULT)
		//0x0d9e		III_decode_III_scalefactors_110
0x0ED22B80,	//0x0d9e		VoC_jal(CII_III_scalefactors)
		//0x0da0		III_decode_III_scalefactors_end
0x48DD151B,	//0x0da0		VoC_sw16_d(BITCACHE,0x48dd)
0xDF85DF86,	//0x0da2		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0x3247C22F,	//0x0da4		VoC_bnltz16_r(III_decode_III_scalefactors_part2_length,REG7)(lo)	|	VoC_sub16_rr(REG7,REG0,REG5,DEFAULT)
0x0B2D0DAA,	//0x0da6		VoC_sub16_dr(REG5,0x407,REG5)(lo)	|	VoC_bnltz16_r(III_decode_III_scalefactors_part2_length,REG7)(hi)
0xC1470407,	//0x0da8		VoC_add16_rr(REG7,REG5,REG0,DEFAULT)	|	VoC_sub16_dr(REG5,0x407,REG5)(hi)
		//0x0daa		III_decode_III_scalefactors_part2_length
0x48DD0B36,	//0x0daa		VoC_sub16_dr(REG6,0x48dd,REG6)
0x43F3F8E7,	//0x0dac		VoC_sub16_rr(REG3,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0xfffffffc,DEFAULT)
0x0A86D614,	//0x0dae		VoC_lw16i(REG6,0xcac)(lo)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x14050CAC,	//0x0db0		VoC_lw16_d(REG5,0x668c)(lo)	|	VoC_lw16i(REG6,0xcac)(hi)
0xD622668C,	//0x0db2		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16_d(REG5,0x668c)(hi)
0x0DBC3182,	//0x0db4		VoC_bez16_r(III_decode_III_huffdecode,REG2)
0x0CAC0A86,	//0x0db6		VoC_lw16i(REG6,0xcac)
0x04040736,	//0x0db8		VoC_add16_rd(REG6,REG6,0x404)
0x668D1405,	//0x0dba		VoC_lw16_d(REG5,0x668d)
		//0x0dbc		III_decode_III_huffdecode
0x10CD2B80,	//0x0dbc		VoC_jal(CII_III_huffdecode)
0xF6E45F81,	//0x0dbe		VoC_movreg16(REG4,REG7,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x00360A87,	//0x0dc0		VoC_lw16i(REG7,0x36)
0x5F01C079,	//0x0dc2		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x073FDF87,	//0x0dc4		VoC_add16_rd(REG7,REG7,0x408)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0x31C40408,	//0x0dc6		VoC_bnez16_r(III_decode_L100,REG4)(lo)	|	VoC_add16_rd(REG7,REG7,0x408)(hi)
0x4C270DE0,	//0x0dc8		VoC_bnlt16_rd(no_III_decode_nch_loop_begin,REG7,0x47fa)(lo)	|	VoC_bnez16_r(III_decode_L100,REG4)(hi)
0x2B0047FA,	//0x0dca		VoC_jump_lg(III_decode_nch_loop_begin)(lo)	|	VoC_bnlt16_rd(no_III_decode_nch_loop_begin,REG7,0x47fa)(hi)
0xF21C0D6A,	//0x0dcc		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_jump_lg(III_decode_nch_loop_begin)(hi)
		//0x0dcd		no_III_decode_nch_loop_begin
0x7047F031,	//0x0dce		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x4527D631,	//0x0dd0		VoC_bne16_rd(III_decode_III_no_stereo,REG7,0x47d9)(lo)	|	VoC_lw16_sd(REG1,0x2,IN_PARALLEL)
0x140747D9,	//0x0dd2		VoC_lw16_d(REG7,0x47da)(lo)	|	VoC_bne16_rd(III_decode_III_no_stereo,REG7,0x47d9)(hi)
0x314747DA,	//0x0dd4		VoC_bngtz16_r(III_decode_III_no_stereo,REG7)(lo)	|	VoC_lw16_d(REG7,0x47da)(hi)
0x18040DE5,	//0x0dd6		VoC_lw16i_set_inc(REG0,0xcac,0x1)(lo)	|	VoC_bngtz16_r(III_decode_III_no_stereo,REG7)(hi)
0x20070CAC,	//0x0dd8		VoC_lw16d_set_inc(REG3,0x668c,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xcac,0x1)(hi)
0xFFC0668C,	//0x0dda		VoC_NAD	|	VoC_lw16d_set_inc(REG3,0x668c,0x1)(hi)
0x146C2B80,	//0x0ddc		VoC_jal(CII_III_stereo)
0x0DE53184,	//0x0dde		VoC_bez16_r(III_decode_III_no_stereo,REG4)
		//0x0de0		III_decode_L100
0xDF87DF83,	//0x0de0		VoC_pop16(REG7,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x2B00DF81,	//0x0de2		VoC_jump_lg(III_decode_end)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xF0070ECE,	//0x0de4		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jump_lg(III_decode_end)(hi)
		//0x0de5		III_decode_III_no_stereo
0x180AD631,	//0x0de6		VoC_lw16i_set_inc(REG2,0xcac,0x2)(lo)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x0A840CAC,	//0x0de8		VoC_lw16i(REG4,0x15ac)(lo)	|	VoC_lw16i_set_inc(REG2,0xcac,0x2)(hi)
0x0A8515AC,	//0x0dea		VoC_lw16i(REG5,0x48e6)(lo)	|	VoC_lw16i(REG4,0x15ac)(hi)
0xD62648E6,	//0x0dec		VoC_lw16_sd(REG6,0x1,DEFAULT)	|	VoC_lw16i(REG5,0x48e6)(hi)
		//0x0ded		III_decode_nch_loop2_begin
0x04040836,	//0x0dee		VoC_mult16_rd(REG6,REG6,0x404)
0xC134F033,	//0x0df0		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x4502070D,	//0x0df2		VoC_add16_rd(REG5,REG1,0x4502)
0xDF425FC7,	//0x0df4		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xD9AA73E7,	//0x0df6		VoC_lw32_p(REG45,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1f,DEFAULT)
0x44EE0710,	//0x0df8		VoC_add16_rd(REG0,REG2,0x44ee)
0xDF425FC2,	//0x0dfa		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x44FE4595,	//0x0dfc		VoC_bne16_rd(III_decode_nch_loop2_block_type,REG5,0x44fe)
0xDFC4DFC0,	//0x0dfe		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xF6275630,	//0x0e00		VoC_movreg16(REG7,REG1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xF0085646,	//0x0e02		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x3,DEFAULT)
0x668C2005,	//0x0e04		VoC_lw16d_set_inc(REG1,0x668c,0x1)
0x0E0A3186,	//0x0e06		VoC_bez16_r(III_reorder_ch0,REG6)
0x668D2005,	//0x0e08		VoC_lw16d_set_inc(REG1,0x668d,0x1)
		//0x0e0a		III_reorder_ch0
0x0CD42B80,	//0x0e0a		VoC_jal(CII_III_reorder)
0xF0065F84,	//0x0e0c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0xF0045F80,	//0x0e0e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x00081604,	//0x0e10		VoC_and16_ri(REG4,0x8)
0x0E183144,	//0x0e12		VoC_bngtz16_r(III_decode_nch_loop2_block_type_end,REG4)
0xFFC07027,	//0x0e14		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x0e16		III_decode_nch_loop2_block_type
0x173A2B80,	//0x0e16		VoC_jal(CII_III_aliasreduce)
		//0x0e18		III_decode_nch_loop2_block_type_end
0x1D422B80,	//0x0e18		VoC_jal(Coolsand_MusicSDF)
		//0x0e1a		MP3Decode_SDF
0xF00A5612,	//0x0e1a		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x163E2B80,	//0x0e1c		VoC_jal(Coolsand_III_equalizer)
0xF3FA5612,	//0x0e1e		VoC_lw16i_short(INC2,0xfffffffe,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x02401FBF,	//0x0e20		VoC_lw16i_set_inc(REG3,0x240,0xffffffff)
0x04040712,	//0x0e22		VoC_add16_rd(REG2,REG2,0x404)
0xDE10F247,	//0x0e24		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x12,DEFAULT)
0x0E302C07,	//0x0e26		VoC_loop_i(0x1,0x3)
0x0E2F2D80,	//0x0e28		VoC_loop_i(0x0,0xc0)
0x44EE3C83,	//0x0e2a		VoC_bngt16_rd(III_decode_nch_loop2_sblimit,REG3,0x44ee)
0x3344D9D4,	//0x0e2c		VoC_bnez32_r(III_decode_nch_loop2_sblimit,ACC0)(lo)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0xDE180E32,	//0x0e2e		VoC_inc_p(REG3,DEFAULT)	|	VoC_bnez32_r(III_decode_nch_loop2_sblimit,ACC0)(hi)
		//0x0e2f		VoC_endloop0
		//0x0e30		VoC_endloop1
0xFFC07FC0,	//0x0e30		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0e32		III_decode_nch_loop2_sblimit
0x04060B1E,	//0x0e32		VoC_sub16_dr(REG6,0x406,REG3)
0x012B2B80,	//0x0e34		VoC_jal(CII_div_mode)
0x44FF0B2E,	//0x0e36		VoC_sub16_dr(REG6,0x44ff,REG5)
0x1506D90A,	//0x0e38		VoC_sw16_d(REG6,0x668e)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x60A6668E,	//0x0e3a		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_sw16_d(REG6,0x668e)(hi)
0x1604F6A7,	//0x0e3c		VoC_and16_ri(REG4,0x8)(lo)	|	VoC_movreg16(REG7,REG5,IN_PARALLEL)
0x31440008,	//0x0e3e		VoC_bngtz16_r(III_decode_nch_loop2_block_subbands_100,REG4)(lo)	|	VoC_and16_ri(REG4,0x8)(hi)
0xF0070E42,	//0x0e40		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bngtz16_r(III_decode_nch_loop2_block_subbands_100,REG4)(hi)
		//0x0e42		III_decode_nch_loop2_block_subbands_100
0x5610F005,	//0x0e42		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFFC0F008,	//0x0e44		VoC_NAD	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
		//0x0e46		III_decode_nch_loop2_blocks_begin
0x44FE4825,	//0x0e46		VoC_blt16_rd(III_decode_nch_loop2_blocks_100,REG5,0x44fe)
0xFFC060C7,	//0x0e48		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
		//0x0e4a		III_decode_nch_loop2_blocks_100
0x66901809,	//0x0e4a		VoC_lw16i_set_inc(REG1,0x6690,0x2)
0x5FC5DFC0,	//0x0e4c		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x402FDF43,	//0x0e4e		VoC_be16_rd(III_decode_nch_loop2_short_blocks,REG7,0x44fe)(lo)	|	VoC_push32(REG67,IN_PARALLEL)
0x2B8044FE,	//0x0e50		VoC_jal(CII_III_imdct_l)(lo)	|	VoC_be16_rd(III_decode_nch_loop2_short_blocks,REG7,0x44fe)(hi)
0xE5C31672,	//0x0e52		VoC_jump(III_decode_nch_loop2_blocks_end)	|	VoC_jal(CII_III_imdct_l)(hi)
		//0x0e54		III_decode_nch_loop2_short_blocks
0x16CE2B80,	//0x0e54		VoC_jal(CII_III_imdct_s)
		//0x0e56		III_decode_nch_loop2_blocks_end
0x6690180A,	//0x0e56		VoC_lw16i_set_inc(REG2,0x6690,0x2)
0x66B4180B,	//0x0e58		VoC_lw16i_set_inc(REG3,0x66b4,0x2)
0xD9185617,	//0x0e5a		VoC_lw32_sd(REG01,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0x44EE083E,	//0x0e5c		VoC_mult16_rd(REG6,REG7,0x44ee)
0xC0387051,	//0x0e5e		VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF1004071,	//0x0e60		VoC_lw16i_short(INC0,0x40,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x6A45C038,	//0x0e62		VoC_loop_i_short(0x12,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD9DDD9D4,	//0x0e64		VoC_lw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
0xD9D4910C,	//0x0e66		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add32_rp(ACC0,ACC0,REG1,DEFAULT)
		//0x0e68		VoC_endloop0
0xDDCD5DC4,	//0x0e68		VoC_sw32inc_p(ACC1,REG1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDF035F85,	//0x0e6a		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG5,DEFAULT)
0x0408072D,	//0x0e6c		VoC_add16_rd(REG5,REG5,0x408)
0xF0085F80,	//0x0e6e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x44EE0700,	//0x0e70		VoC_add16_rd(REG0,REG0,0x44ee)
0x668E4C25,	//0x0e72		VoC_bnlt16_rd(no_III_decode_nch_loop2_blocks_begin,REG5,0x668e)
0x0E462B00,	//0x0e74		VoC_jump_lg(III_decode_nch_loop2_blocks_begin)
		//0x0e76		no_III_decode_nch_loop2_blocks_begin
0x60E1D913,	//0x0e76		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x1407F009,	//0x0e78		VoC_lw16_d(REG7,0x668e)(lo)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x083B668E,	//0x0e7a		VoC_mult16_rd(REG3,REG7,0x44ee)(lo)	|	VoC_lw16_d(REG7,0x668e)(hi)
0x0B3D44EE,	//0x0e7c		VoC_sub16_dr(REG5,0x44ff,REG7)(lo)	|	VoC_mult16_rd(REG3,REG7,0x44ee)(hi)
0x405944FF,	//0x0e7e		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_sub16_dr(REG5,0x44ff,REG7)(hi)
0x41BEFF44,	//0x0e80		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xC1BFF100,	//0x0e82		VoC_add16_rr(REG7,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(INC0,0x40,IN_PARALLEL)
0x0E903185,	//0x0e84		VoC_bez16_r(III_decode_nch_loop2_overlap_z,REG5)
0x0E8E2E29,	//0x0e86		VoC_loop_r(1,REG5)
0xD98D60E0,	//0x0e88		VoC_lw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0xDDCCEA42,	//0x0e8a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x12,DEFAULT)
		//0x0e8c		VoC_endloop0
0xD98D5DC5,	//0x0e8c		VoC_lw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
		//0x0e8e		VoC_endloop1
0x44FE073F,	//0x0e8e		VoC_add16_rd(REG7,REG7,0x44fe)
		//0x0e90		III_decode_nch_loop2_overlap_z
0x01000A8D,	//0x0e90		VoC_lw16i(RL6_HI,0x100)
0xF7AC5913,	//0x0e92		VoC_movreg16(RL6_LO,RL6_HI,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0xE04E708F,	//0x0e94		VoC_lw16i_short(RL7_LO,0x4,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x4,DEFAULT)
0x00C20A81,	//0x0e96		VoC_lw16i(REG1,0xc2)
0x0A81C18F,	//0x0e98		VoC_lw16i(REG1,0x42)(lo)	|	VoC_add16_rr(REG7,REG6,REG1,DEFAULT)
0xC18E0042,	//0x0e9a		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x42)(hi)
0xFF417F18,	//0x0e9c		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_movreg32(REG01,REG67,DEFAULT)
0x0EAA2C21,	//0x0e9e		VoC_loop_i(0x1,0x10)
0xC9DB1444,	//0x0ea0		VoC_add32_rr(REG67,RL7,REG67,IN_PARALLEL)	|	VoC_sub32_rp(ACC0,REG23,REG0,DEFAULT)
0x944D6886,	//0x0ea2		VoC_sub32_rp(ACC1,REG23,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC8305D84,	//0x0ea4		VoC_add32_rr(REG01,REG01,RL6,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x9444DD8D,	//0x0ea6		VoC_sub32_rp(ACC0,REG23,REG0,DEFAULT)	|	VoC_sw32_p(ACC1,REG1,DEFAULT)
		//0x0ea8		VoC_endloop0
0xFF18944D,	//0x0ea8		VoC_movreg32(REG01,REG67,DEFAULT)	|	VoC_sub32_rp(ACC1,REG23,REG1,DEFAULT)
		//0x0eaa		VoC_endloop1
0x5F02DD84,	//0x0eaa		VoC_pop32(REG45,DEFAULT)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x5F02DF82,	//0x0eac		VoC_pop32(REG45,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x073FDF87,	//0x0eae		VoC_add16_rd(REG7,REG7,0x408)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0x18060408,	//0x0eb0		VoC_lw16i_set_inc(REG2,0xcac,0x1)(lo)	|	VoC_add16_rd(REG7,REG7,0x408)(hi)
0x07120CAC,	//0x0eb2		VoC_add16_rd(REG2,REG2,0x404)(lo)	|	VoC_lw16i_set_inc(REG2,0xcac,0x1)(hi)
0xD6310404,	//0x0eb4		VoC_lw16_sd(REG1,0x2,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x404)(hi)
0x00360A84,	//0x0eb6		VoC_lw16i(REG4,0x36)
0x0A84C061,	//0x0eb8		VoC_lw16i(REG4,0x1eac)(lo)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x0A851EAC,	//0x0eba		VoC_lw16i(REG5,0x4d66)(lo)	|	VoC_lw16i(REG4,0x1eac)(hi)
0x4C274D66,	//0x0ebc		VoC_bnlt16_rd(no_III_decode_nch_loop2_begin,REG7,0x47fa)(lo)	|	VoC_lw16i(REG5,0x4d66)(hi)
0x2B0047FA,	//0x0ebe		VoC_jump_lg(III_decode_nch_loop2_begin)(lo)	|	VoC_bnlt16_rd(no_III_decode_nch_loop2_begin,REG7,0x47fa)(hi)
0xDF830DED,	//0x0ec0		VoC_pop16(REG3,DEFAULT)	|	VoC_jump_lg(III_decode_nch_loop2_begin)(hi)
		//0x0ec1		no_III_decode_nch_loop2_begin
0xF0075F87,	//0x0ec2		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x0408073F,	//0x0ec4		VoC_add16_rd(REG7,REG7,0x408)
0x1805DF81,	//0x0ec6		VoC_lw16i_set_inc(REG1,0x486e,0x1)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x4C27486E,	//0x0ec8		VoC_bnlt16_rd(no_III_decode_ngr_loop_begin,REG7,0x47fc)(lo)	|	VoC_lw16i_set_inc(REG1,0x486e,0x1)(hi)
0x2B0047FC,	//0x0eca		VoC_jump_lg(III_decode_ngr_loop_begin)(lo)	|	VoC_bnlt16_rd(no_III_decode_ngr_loop_begin,REG7,0x47fc)(hi)
0xF0040D5B,	//0x0ecc		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_jump_lg(III_decode_ngr_loop_begin)(hi)
		//0x0ecd		no_III_decode_ngr_loop_begin
		//0x0ece		III_decode_end
0xFFC0DFA9,	//0x0ece		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0ed0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0ed2		CII_III_scalefactors
0x42DF070C,	//0x0ed2		VoC_add16_rd(REG4,REG1,0x42df)
0x42B0180B,	//0x0ed4		VoC_lw16i_set_inc(REG3,0x42b0,0x2)
0xF8FCD844,	//0x0ed6		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x070CC0E3,	//0x0ed8		VoC_add16_rd(REG4,REG1,0x4502)(lo)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xD99B4502,	//0x0eda		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_add16_rd(REG4,REG1,0x4502)(hi)
0xFF1D59A2,	//0x0edc		VoC_movreg32(ACC1,REG67,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG4,DEFAULT)
0x44E40709,	//0x0ede		VoC_add16_rd(REG1,REG1,0x44e4)
0x44FE4585,	//0x0ee0		VoC_bne16_rd(III_scalefactors_block_type,REG5,0x44fe)
0x1604F223,	//0x0ee2		VoC_and16_ri(REG4,0x8)(lo)	|	VoC_lw16i_short(REG3,0x11,DEFAULT)
0x31C40008,	//0x0ee4		VoC_bnez16_r(III_scalefactors_100,REG4)(lo)	|	VoC_and16_ri(REG4,0x8)(hi)
0xF2430EE8,	//0x0ee6		VoC_lw16i_short(REG3,0x12,DEFAULT)	|	VoC_bnez16_r(III_scalefactors_100,REG4)(hi)
		//0x0ee8		III_scalefactors_100
0xE240FFC0,	//0x0ee8		VoC_lbinc_p(REG0)	|	VoC_NOP
0xE330E6C3,	//0x0eea		VoC_rbinc_r(REG4,REG6,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0xDC94E240,	//0x0eec		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x0eed		VoC_endloop0
0x6A44E240,	//0x0eee		VoC_loop_i_short(0x12,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE338E003,	//0x0ef0		VoC_rbinc_r(REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xDC94E240,	//0x0ef2		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x0ef3		VoC_endloop0
0xDC93E861,	//0x0ef4		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x0ef5		VoC_endloop0
0x0F1C2B00,	//0x0ef6		VoC_jump_lg(III_scalefactors_block_type_end)
		//0x0ef8		III_scalefactors_block_type
0x44E40712,	//0x0ef8		VoC_add16_rd(REG2,REG2,0x44e4)
0xF00A6023,	//0x0efa		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x6A83F053,	//0x0efc		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9D4D9D4,	//0x0efe		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x0f00		VoC_endloop0
0xF033DDDC,	//0x0f00		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xE0667104,	//0x0f02		VoC_lw16i_short(REG6,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x00041FBE,	//0x0f04		VoC_lw16i_set_inc(REG2,0x4,0xffffffff)
0x0F192C09,	//0x0f06		VoC_loop_i(0x1,0x4)
0xF74761C5,	//0x0f08		VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0xF80C6425,	//0x0f0a		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG4,DEFAULT)
0x44FE3822,	//0x0f0c		VoC_bgt16_rd(III_scalefactors_block_type_else_10,REG2,0x44fe)
0xFFC06167,	//0x0f0e		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG7,ACC1_HI,DEFAULT)
		//0x0f10		III_scalefactors_block_type_else_10
0x0F183105,	//0x0f10		VoC_bgtz16_r(III_scalefactors_block_type_else,REG5)
0x6784E240,	//0x0f12		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE339F623,	//0x0f14		VoC_rbinc_r(REG5,REG7,DEFAULT)	|	VoC_movreg16(REG3,REG1,IN_PARALLEL)
0xDCB5E240,	//0x0f16		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x0f17		VoC_endloop0
		//0x0f18		III_scalefactors_block_type_else
0x70A6C071,	//0x0f18		VoC_lw16i_short(REG6,0x5,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
		//0x0f19		VoC_endloop1
0xDC12DE10,	//0x0f1a		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
		//0x0f1c		III_scalefactors_block_type_end
0xDFE9E580,	//0x0f1c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f1d		CII_III_scalefactors_lsf
0x070BF033,	//0x0f1e		VoC_add16_rd(REG3,REG1,0x42df)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x070942DF,	//0x0f20		VoC_add16_rd(REG1,REG1,0x44e4)(lo)	|	VoC_add16_rd(REG3,REG1,0x42df)(hi)
0x602244E4,	//0x0f22		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x44e4)(hi)
0xFF44F00A,	//0x0f24		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xDDD4EA81,	//0x0f26		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x0f27		VoC_endloop0
0x668E1806,	//0x0f28		VoC_lw16i_set_inc(REG2,0x668e,0x1)
0x599BD8B4,	//0x0f2a		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xF103F66E,	//0x0f2c		VoC_lw16i_short(REG3,0x8,DEFAULT)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0x00081606,	//0x0f2e		VoC_and16_ri(REG6,0x8)
0x0F343106,	//0x0f30		VoC_bgtz16_r(III_scalefactors_lsf_100,REG6)
0xFFC07083,	//0x0f32		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
		//0x0f34		III_scalefactors_lsf_100
0x44FE401F,	//0x0f34		VoC_be16_rd(III_scalefactors_lsf_200,REG7,0x44fe)
0xF026F003,	//0x0f36		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
		//0x0f37		III_scalefactors_lsf_200
0x47DA2806,	//0x0f38		VoC_and16_rd(REG6,0x47da)
0x0F3E3146,	//0x0f3a		VoC_bngtz16_r(III_scalefactors_lsf_10000,REG6)
0x0F933105,	//0x0f3c		VoC_bgtz16_r(III_scalefactors_lsf_half,REG5)
		//0x0f3e		III_scalefactors_lsf_10000
0x01900A86,	//0x0f3e		VoC_lw16i(REG6,0x190)
0x0F5834B4,	//0x0f40		VoC_bngt16_rr(III_scalefactors_lsf_1000,REG6,REG4)
0x7926E086,	//0x0f42		VoC_shru16_ri(REG6,0x4,DEFAULT)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0x2B80E057,	//0x0f44		VoC_jal(CII_div_mode)(lo)	|	VoC_lw16i_short(REG7,0x5,IN_PARALLEL)
0xDCA5012B,	//0x0f46		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_jal(CII_div_mode)(hi)
0x5CA6E085,	//0x0f48		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x1605F686,	//0x0f4a		VoC_and16_ri(REG5,0xf)(lo)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0xF815000F,	//0x0f4c		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_and16_ri(REG5,0xf)(hi)
0x00031606,	//0x0f4e		VoC_and16_ri(REG6,0x3)
0x42D00A87,	//0x0f50		VoC_lw16i(REG7,0x42d0)
0xC1DB5CA5,	//0x0f52		VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x2B00DCA6,	//0x0f54		VoC_jump_lg(III_scalefactors_lsf_1500)(lo)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xFFC00F83,	//0x0f56		VoC_NAD	|	VoC_jump_lg(III_scalefactors_lsf_1500)(hi)
		//0x0f58		III_scalefactors_lsf_1000
0x01F40A86,	//0x0f58		VoC_lw16i(REG6,0x1f4)
0x0F7034B4,	//0x0f5a		VoC_bngt16_rr(III_scalefactors_lsf_1100,REG6,REG4)
0x01900A86,	//0x0f5c		VoC_lw16i(REG6,0x190)
0xE086C334,	//0x0f5e		VoC_movreg16(REG6,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)
0xE0577816,	//0x0f60		VoC_lw16i_short(REG7,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x012B2B80,	//0x0f62		VoC_jal(CII_div_mode)
0x00031604,	//0x0f64		VoC_and16_ri(REG4,0x3)
0xE0055CA5,	//0x0f66		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x0A87DCA6,	//0x0f68		VoC_lw16i(REG7,0x42dc)(lo)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x5CA442DC,	//0x0f6a		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16i(REG7,0x42dc)(hi)
0xDCA5C1DB,	//0x0f6c		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)
0xFFC065D5,	//0x0f6e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_scalefactors_lsf_1500)
		//0x0f70		III_scalefactors_lsf_1100
0x01F40A87,	//0x0f70		VoC_lw16i(REG7,0x1f4)
0xF067C33E,	//0x0f72		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_sub16_rr(REG6,REG4,REG7,DEFAULT)
0x2B80F004,	//0x0f74		VoC_jal(CII_div_mode)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xDCA5012B,	//0x0f76		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_jal(CII_div_mode)(hi)
0xDCA6E1C5,	//0x0f78		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0x1686D856,	//0x0f7a		VoC_or16_ri(REG6,0x4)(lo)	|	VoC_lw16_p(REG6,REG5,DEFAULT)
0x0A870004,	//0x0f7c		VoC_lw16i(REG7,0x42e8)(lo)	|	VoC_or16_ri(REG6,0x4)(hi)
0x5CA442E8,	//0x0f7e		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16i(REG7,0x42e8)(hi)
0xDCA4C1DB,	//0x0f80		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)
0xE240DC56,	//0x0f82		VoC_lbinc_p(REG0)	|	VoC_sw16_p(REG6,REG5,DEFAULT)
		//0x0f83		III_scalefactors_lsf_1500
0x668E1806,	//0x0f84		VoC_lw16i_set_inc(REG2,0x668e,0x1)
0x0F902C09,	//0x0f86		VoC_loop_i(0x1,0x4)
0x3187D8B7,	//0x0f88		VoC_bez16_r(III_scalefactors_lsf_1510,REG7)(lo)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0x67C40F90,	//0x0f8a		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_bez16_r(III_scalefactors_lsf_1510,REG7)(hi)
0xE331D8A6,	//0x0f8c		VoC_rbinc_r(REG5,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)
0xDC95E240,	//0x0f8e		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x0f8f		VoC_endloop0
		//0x0f90		III_scalefactors_lsf_1510
		//0x0f90		VoC_endloop1
0x2B00FFC0,	//0x0f90		VoC_jump_lg(III_scalefactors_lsf_end)(lo)	|	VoC_NOP
0xF80C0FF4,	//0x0f92		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_jump_lg(III_scalefactors_lsf_end)(hi)
		//0x0f93		III_scalefactors_lsf_half
0x0A86E0AF,	//0x0f94		VoC_lw16i(REG6,0xb4)(lo)	|	VoC_movreg16(RL7_HI,REG5,DEFAULT)
0x34B400B4,	//0x0f96		VoC_bngt16_rr(III_scalefactors_lsf_1600,REG6,REG4)(lo)	|	VoC_lw16i(REG6,0xb4)(hi)
0xE0860FAA,	//0x0f98		VoC_movreg16(REG6,REG4,DEFAULT)	|	VoC_bngt16_rr(III_scalefactors_lsf_1600,REG6,REG4)(hi)
0xE2477004,	//0x0f9a		VoC_lw16i_short(REG7,0x24,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x012B2B80,	//0x0f9c		VoC_jal(CII_div_mode)
0xF0C7DCA5,	//0x0f9e		VoC_lw16i_short(REG7,0x6,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x012B2B80,	//0x0fa0		VoC_jal(CII_div_mode)
0x42F40A87,	//0x0fa2		VoC_lw16i(REG7,0x42f4)
0xC1DB5CA5,	//0x0fa4		VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xDCA4DCA6,	//0x0fa6		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x0FD22B00,	//0x0fa8		VoC_jump_lg(III_scalefactors_lsf_2000)
		//0x0faa		III_scalefactors_lsf_1600
0x00F40A86,	//0x0faa		VoC_lw16i(REG6,0xf4)
0x0FC434B4,	//0x0fac		VoC_bngt16_rr(III_scalefactors_lsf_1700,REG6,REG4)
0x00B40A86,	//0x0fae		VoC_lw16i(REG6,0xb4)
0x6085C334,	//0x0fb0		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)
0x1605F686,	//0x0fb2		VoC_and16_ri(REG5,0xff)(lo)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x160600FF,	//0x0fb4		VoC_and16_ri(REG6,0xf)(lo)	|	VoC_and16_ri(REG5,0xff)(hi)
0x1604000F,	//0x0fb6		VoC_and16_ri(REG4,0x3)(lo)	|	VoC_and16_ri(REG6,0xf)(hi)
0x79250003,	//0x0fb8		VoC_shru16_ri(REG5,0x4,DEFAULT)	|	VoC_and16_ri(REG4,0x3)(hi)
0x0A87F916,	//0x0fba		VoC_lw16i(REG7,0x4300)(lo)	|	VoC_shru16_ri(REG6,0x2,IN_PARALLEL)
0x5CA54300,	//0x0fbc		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16i(REG7,0x4300)(hi)
0x5CA6E005,	//0x0fbe		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xDCA4C1DB,	//0x0fc0		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)
0xE5CFDCA5,	//0x0fc2		VoC_jump(III_scalefactors_lsf_2000)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x0fc4		III_scalefactors_lsf_1700
0x00F40A86,	//0x0fc4		VoC_lw16i(REG6,0xf4)
0x7067C336,	//0x0fc6		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_sub16_rr(REG6,REG4,REG6,DEFAULT)
0x2B80E004,	//0x0fc8		VoC_jal(CII_div_mode)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xDCA5012B,	//0x0fca		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_jal(CII_div_mode)(hi)
0x430C0A87,	//0x0fcc		VoC_lw16i(REG7,0x430c)
0xC1DB5CA6,	//0x0fce		VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xDCA4DCA4,	//0x0fd0		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x0fd2		III_scalefactors_lsf_2000
0xF00A61E2,	//0x0fd2		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xE961FF44,	//0x0fd4		VoC_loop_i_short(0xb,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0fd6		VoC_endloop0
0x1806DDD4,	//0x0fd6		VoC_lw16i_set_inc(REG2,0x668e,0x1)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xE240668E,	//0x0fd8		VoC_lbinc_p(REG0)	|	VoC_lw16i_set_inc(REG2,0x668e,0x1)(hi)
0xFFC07024,	//0x0fda		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x0FF22C09,	//0x0fdc		VoC_loop_i(0x1,0x4)
0xD8A77026,	//0x0fde		VoC_lw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x42EA0B3D,	//0x0fe0		VoC_sub16_dr(REG5,0x42ea,REG7)
0xD8B57E2E,	//0x0fe2		VoC_lw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0x040807B6,	//0x0fe4		VoC_sub16_rd(REG6,REG6,0x408)
0xF7E3606E,	//0x0fe6		VoC_movreg16(REG3,RL7_HI,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG3,DEFAULT)
0x0FF23185,	//0x0fe8		VoC_bez16_r(III_scalefactors_lsf_2046,REG5)
0xE339E747,	//0x0fea		VoC_rbinc_r(REG5,REG7,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0xDC95E240,	//0x0fec		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lbinc_p(REG0)
0x0FF135AE,	//0x0fee		VoC_bne16_rr(III_scalefactors_lsf_2050,REG5,REG6)
0xDE18DC34,	//0x0ff0		VoC_inc_p(REG3,DEFAULT)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
		//0x0ff1		III_scalefactors_lsf_2050
		//0x0ff1		VoC_endloop0
		//0x0ff2		III_scalefactors_lsf_2046
		//0x0ff2		VoC_endloop1
0xF7C3606F,	//0x0ff2		VoC_movreg16(REG3,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG3,DEFAULT)
		//0x0ff4		III_scalefactors_lsf_end
0xFFC0DFA9,	//0x0ff4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0ff6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0ff7		CII_huff_sub1
0xFF44F005,	//0x0ff8		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x0FFE31C2,	//0x0ffa		VoC_bnez16_r(huff_sub_L1,REG2)
0x104B2B00,	//0x0ffc		VoC_jump_lg(huff_sub_Lend)
		//0x0ffe		huff_sub_L1
0x42F04022,	//0x0ffe		VoC_be16_rd(no_huff_sub_L2,REG2,0x42f0)
0x10252B00,	//0x1000		VoC_jump_lg(huff_sub_L2)
		//0x1002		no_huff_sub_L2
0x66B1073F,	//0x1002		VoC_add16_rd(REG7,REG7,0x66b1)
0xD9175674,	//0x1004		VoC_lw32_sd(RL7,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x6,DEFAULT)
0x101434BC,	//0x1006		VoC_bngt16_rr(huff_sub_L3,REG7,REG4)
0x6282E240,	//0x1008		VoC_rbinc_i(REG6,0x10,DEFAULT)	|	VoC_lbinc_p(REG0)
0x56C3E101,	//0x100a		VoC_lw16_sd(REG3,0xb,DEFAULT)	|	VoC_lw16i_short(REG1,0x10,IN_PARALLEL)
0x7007FD87,	//0x100c		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff0,IN_PARALLEL)
0x651FC2CB,	//0x100e		VoC_or32_rr(RL7,REG67,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG1,IN_PARALLEL)
0xDAC3C10C,	//0x1010		VoC_sw16_sd(REG3,0xb,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG1,IN_PARALLEL)
0xFFC05D17,	//0x1012		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_sd(RL7,0x1,DEFAULT)
		//0x1014		huff_sub_L3
0x04081483,	//0x1014		VoC_lw32_d(REG67,0x408)
0x66B11403,	//0x1016		VoC_lw16_d(REG3,0x66b1)
0xC31C4359,	//0x1018		VoC_sub16_rr(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG5,REG3,DEFAULT)
0xFEE77E8B,	//0x101a		VoC_shru32_rr(RL7,REG4,IN_PARALLEL)	|	VoC_shr32_rr(REG67,REG1,DEFAULT)
0x0408099B,	//0x101c		VoC_sub32_rd(REG67,REG67,0x408)
0x40B4E4FB,	//0x101e		VoC_add16_rr(REG4,REG2,REG6,DEFAULT)	|	VoC_and32_rr(REG67,RL7,DEFAULT)
0xD646DA74,	//0x1020		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_sw16_sd(REG4,0x6,IN_PARALLEL)
0x13592B80,	//0x1022		VoC_jal(CII_III_requantize)
0xE044E5DA,	//0x1024		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_jump(huff_sub_L4)
		//0x1025		huff_sub_L2
0x66900A81,	//0x1026		VoC_lw16i(REG1,0x6690)
0x66B31407,	//0x1028		VoC_lw16_d(REG7,0x66b3)
0x4051C051,	//0x102a		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0x4352E016,	//0x102c		VoC_sub16_rr(REG2,REG5,REG2,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0xFE56F6E3,	//0x102e		VoC_shru16_rr(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0x31C3E433,	//0x1030		VoC_bnez16_r(huff_sub_L5,REG3)(lo)	|	VoC_and16_rr(REG3,REG6,DEFAULT)
0xE477103D,	//0x1032		VoC_or16_rr(REG7,REG6,DEFAULT)	|	VoC_bnez16_r(huff_sub_L5,REG3)(hi)
0x1507D646,	//0x1034		VoC_sw16_d(REG7,0x66b3)(lo)	|	VoC_lw16_sd(REG6,0x3,DEFAULT)
0xDFC166B3,	//0x1036		VoC_push16(REG1,DEFAULT)	|	VoC_sw16_d(REG7,0x66b3)(hi)
0x13592B80,	//0x1038		VoC_jal(CII_III_requantize)
0xFFC0DF81,	//0x103a		VoC_NOP	|	VoC_pop16(REG1,DEFAULT)
0xD98CDD8C,	//0x103c		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x103d		huff_sub_L5
		//0x103e		huff_sub_L4
0xD6727024,	//0x103e		VoC_lw16_sd(REG2,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xC2A65917,	//0x1040		VoC_sub16_rr(REG6,REG2,REG4,IN_PARALLEL)	|	VoC_lw32_sd(RL7,0x1,DEFAULT)
0xC3137005,	//0x1042		VoC_sub16_rr(REG3,REG4,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFEDA5A76,	//0x1044		VoC_shru32_rr(REG45,REG3,IN_PARALLEL)	|	VoC_sw16_sd(REG6,0x6,DEFAULT)
0x3307E4D7,	//0x1046		VoC_bez32_r(huff_sub_Lend,RL7)(lo)	|	VoC_and32_rr(RL7,REG45,DEFAULT)
0x0BA4104B,	//0x1048		VoC_sub32_dr(ACC0,0x42ea,ACC0)(lo)	|	VoC_bez32_r(huff_sub_Lend,RL7)(hi)
0xD62142EA,	//0x104a		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_sub32_dr(ACC0,0x42ea,ACC0)(hi)
		//0x104b		huff_sub_Lend
0xDFA9F051,	//0x104c		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x5909DDCC,	//0x104e		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x5A11E017,	//0x1050		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xE580F662,	//0x1052		VoC_return	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
		//0x1054		CII_huff_sub2
0x7005DFE9,	//0x1054		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x3182FF44,	//0x1056		VoC_bez16_r(huff_sub2_Lend,REG2)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xE044107F,	//0x1058		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_bez16_r(huff_sub2_Lend,REG2)(hi)
0x66900A81,	//0x105a		VoC_lw16i(REG1,0x6690)
0x66B31407,	//0x105c		VoC_lw16_d(REG7,0x66b3)
0x4051C051,	//0x105e		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0x4352E016,	//0x1060		VoC_sub16_rr(REG2,REG5,REG2,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0xFE56F6E3,	//0x1062		VoC_shru16_rr(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0x31C3E433,	//0x1064		VoC_bnez16_r(huff_sub2_L1,REG3)(lo)	|	VoC_and16_rr(REG3,REG6,DEFAULT)
0xE4771071,	//0x1066		VoC_or16_rr(REG7,REG6,DEFAULT)	|	VoC_bnez16_r(huff_sub2_L1,REG3)(hi)
0x1507D646,	//0x1068		VoC_sw16_d(REG7,0x66b3)(lo)	|	VoC_lw16_sd(REG6,0x3,DEFAULT)
0xDFC166B3,	//0x106a		VoC_push16(REG1,DEFAULT)	|	VoC_sw16_d(REG7,0x66b3)(hi)
0x13592B80,	//0x106c		VoC_jal(CII_III_requantize)
0xFFC0DF81,	//0x106e		VoC_NOP	|	VoC_pop16(REG1,DEFAULT)
0xD98CDD8C,	//0x1070		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x1071		huff_sub2_L1
0xD6727024,	//0x1072		VoC_lw16_sd(REG2,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xE0055917,	//0x1074		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw32_sd(RL7,0x1,DEFAULT)
0xC2A24313,	//0x1076		VoC_sub16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG4,REG2,DEFAULT)
0x64D7FE9A,	//0x1078		VoC_and32_rr(RL7,REG45,DEFAULT)	|	VoC_shr32_rr(REG45,REG3,DEFAULT)
0x3307DA72,	//0x107a		VoC_bez32_r(huff_sub2_Lend,RL7)(lo)	|	VoC_sw16_sd(REG2,0x6,IN_PARALLEL)
0x0BA4107F,	//0x107c		VoC_sub32_dr(ACC0,0x42ea,ACC0)(lo)	|	VoC_bez32_r(huff_sub2_Lend,RL7)(hi)
0xD62142EA,	//0x107e		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_sub32_dr(ACC0,0x42ea,ACC0)(hi)
		//0x107f		huff_sub2_Lend
0xDFA9F051,	//0x1080		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xD909DDCC,	//0x1082		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xF6625A11,	//0x1084		VoC_movreg16(REG2,REG3,IN_PARALLEL)	|	VoC_sw16_sd(REG1,0x0,DEFAULT)
0xDFE9E580,	//0x1086		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1087		CII_huff_sub3
0x4539D621,	//0x1088		VoC_bne16_rd(huff_sub3_L1,REG1,0x668e)(lo)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0xD6B2668E,	//0x108a		VoC_lw16_sd(REG2,0xa,DEFAULT)	|	VoC_bne16_rd(huff_sub3_L1,REG1,0x668e)(hi)
0x668E1406,	//0x108c		VoC_lw16_d(REG6,0x668e)
0x83968196,	//0x108e		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
0x1506D653,	//0x1090		VoC_sw16_d(REG6,0x668e)(lo)	|	VoC_lw16_sd(REG3,0x4,DEFAULT)
0xD8B5668E,	//0x1092		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sw16_d(REG6,0x668e)(hi)
0xD646DAB2,	//0x1094		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_sw16_sd(REG2,0xa,DEFAULT)
0x352EDA53,	//0x1096		VoC_be16_rr(huff_sub3_L1,REG5,REG6)(lo)	|	VoC_sw16_sd(REG3,0x4,DEFAULT)
0xDA4510A0,	//0x1098		VoC_sw16_sd(REG5,0x3,DEFAULT)	|	VoC_be16_rr(huff_sub3_L1,REG5,REG6)(hi)
0x7024DFC4,	//0x109a		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x2B80F6A6,	//0x109c		VoC_jal(CII_III_requantize)(lo)	|	VoC_movreg16(REG6,REG5,IN_PARALLEL)
0xDF841359,	//0x109e		VoC_pop16(REG4,DEFAULT)	|	VoC_jal(CII_III_requantize)(hi)
		//0x10a0		huff_sub3_L1
0xFF435911,	//0x10a0		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xE0055621,	//0x10a2		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x10B33183,	//0x10a4		VoC_bez16_r(huff_sub3_L2,REG3)
0x1485D91F,	//0x10a6		VoC_lw32_d(ACC1,0x408)(lo)	|	VoC_lw32_sd(RL7,0x2,DEFAULT)
0x07A40408,	//0x10a8		VoC_sub16_rd(REG4,REG4,0x408)(lo)	|	VoC_lw32_d(ACC1,0x408)(hi)
0xC3630408,	//0x10aa		VoC_sub16_rr(REG3,REG5,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x408)(hi)
0x64FDFE9D,	//0x10ac		VoC_and32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0x3305FF23,	//0x10ae		VoC_bez32_r(huff_sub3_L2,ACC1)(lo)	|	VoC_movreg32(REG67,ACC0,IN_PARALLEL)
0x0B9B10B3,	//0x10b0		VoC_sub32_dr(REG67,0x42ea,REG67)(lo)	|	VoC_bez32_r(huff_sub3_L2,ACC1)(hi)
0xF05142EA,	//0x10b2		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_sub32_dr(REG67,0x42ea,REG67)(hi)
		//0x10b3		huff_sub3_L2
0x1485F005,	//0x10b4		VoC_lw32_d(ACC1,0x408)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x5DCB0408,	//0x10b6		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32_d(ACC1,0x408)(hi)
0x3182FF43,	//0x10b8		VoC_bez16_r(huff_sub3_L3,REG2)(lo)	|	VoC_lw32z(REG67,IN_PARALLEL)
0x07A410C7,	//0x10ba		VoC_sub16_rd(REG4,REG4,0x408)(lo)	|	VoC_bez16_r(huff_sub3_L3,REG2)(hi)
0xC3630408,	//0x10bc		VoC_sub16_rr(REG3,REG5,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x408)(hi)
0xD91F7E9D,	//0x10be		VoC_lw32_sd(RL7,0x2,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xF00964FD,	//0x10c0		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_and32_rr(ACC1,RL7,DEFAULT)
0x3305FF23,	//0x10c2		VoC_bez32_r(huff_sub3_L3,ACC1)(lo)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x0B9B10C7,	//0x10c4		VoC_sub32_dr(REG67,0x42ea,REG67)(lo)	|	VoC_bez32_r(huff_sub3_L3,ACC1)(hi)
0xD90942EA,	//0x10c6		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_sub32_dr(REG67,0x42ea,REG67)(hi)
		//0x10c7		huff_sub3_L3
0x5FA9DDCB,	//0x10c8		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xDA11DD11,	//0x10ca		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_sw32_sd(REG23,0x1,IN_PARALLEL)
0xDFE9E580,	//0x10cc		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x10cd		CII_III_huffdecode
0x0A87B919,	//0x10ce		VoC_lw16i(REG7,0x236)(lo)	|	VoC_sub16_pr(REG1,REG4,REG3,DEFAULT)
0x32410236,	//0x10d0		VoC_bnltz16_r(huffdec_L1,REG1)(lo)	|	VoC_lw16i(REG7,0x236)(hi)
0x2B0010D5,	//0x10d2		VoC_jump_lg(huffdec_Lend)(lo)	|	VoC_bnltz16_r(huffdec_L1,REG1)(hi)
0xDFC112BD,	//0x10d4		VoC_push16(REG1,DEFAULT)	|	VoC_jump_lg(huffdec_Lend)(hi)
		//0x10d5		huffdec_L1
0x5FC4DFC5,	//0x10d6		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xDFC6F484,	//0x10d8		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(WRAP0,0x10,IN_PARALLEL)
0xF0075FC0,	//0x10da		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x12C62B80,	//0x10dc		VoC_jal(CII_III_exponents)
0x47FD6C03,	//0x10de		VoC_bez16_d(huffdec_L1111,0x47fd)
0xD610F15C,	//0x10e0		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
		//0x10e1		huffdec_L1111
0x5FDBDF46,	//0x10e2		VoC_push16(BITCACHE,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0xD665E0F4,	//0x10e4		VoC_lw16_sd(REG5,0x5,DEFAULT)	|	VoC_lw16i_short(REG4,0xf,IN_PARALLEL)
0x34AED616,	//0x10e6		VoC_bngt16_rr(huffdec_L2,REG5,REG6)(lo)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x437310F6,	//0x10e8		VoC_sub16_rr(REG3,REG5,REG6,DEFAULT)	|	VoC_bngt16_rr(huffdec_L2,REG5,REG6)(hi)
0x6065F403,	//0x10ea		VoC_movreg16(REG5,REG3,DEFAULT)	|	VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)
0xC018F823,	//0x10ec		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0x4,IN_PARALLEL)
0x47FD6C06,	//0x10ee		VoC_bez16_d(huffdec_L22,0x47fd)
0x04074820,	//0x10f0		VoC_blt16_rd(huffdec_L22,REG0,0x407)
0x04070780,	//0x10f2		VoC_sub16_rd(REG0,REG0,0x407)
		//0x10f4		huffdec_L22
0xE240E425,	//0x10f4		VoC_lbinc_p(REG0)	|	VoC_and16_rr(REG5,REG4,DEFAULT)
		//0x10f6		huffdec_L2
0x44F63C2D,	//0x10f6		VoC_bngt16_rd(huffdec_L21111,REG5,0x44f6)
0x07ADE282,	//0x10f8		VoC_sub16_rd(REG5,REG5,0x44f6)(lo)	|	VoC_rbinc_i(REG6,0x10,DEFAULT)
0xE32A44F6,	//0x10fa		VoC_rbinc_r(REG6,REG5,DEFAULT)	|	VoC_sub16_rd(REG5,REG5,0x44f6)(hi)
		//0x10fb		huffdec_L21111
0x48DC1500,	//0x10fc		VoC_sw16_d(REG0,0x48dc)
0x48DA1586,	//0x10fe		VoC_sw32_d(RL6,0x48da)
0x48DD151B,	//0x1100		VoC_sw16_d(BITCACHE,0x48dd)
0xDF065620,	//0x1102		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xE1045F83,	//0x1104		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xE1F5607B,	//0x1106		VoC_lw16i_short(REG5,0x1f,IN_PARALLEL)	|	VoC_movreg16(BITCACHE,REG3,DEFAULT)
0x44F63C23,	//0x1108		VoC_bngt16_rd(huffdec_L2a,REG3,0x44f6)
0xFFC042E3,	//0x110a		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
		//0x110c		huffdec_L2a
0x44FC3C23,	//0x110c		VoC_bngt16_rd(huffdec_L2b,REG3,0x44fc)
0x44FC079B,	//0x110e		VoC_sub16_rd(REG3,REG3,0x44fc)
		//0x1110		huffdec_L2b
0x1645C35D,	//0x1110		VoC_and16_ri(REG5,0xfff8)(lo)	|	VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)
0x40EB7FF8,	//0x1112		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_and16_ri(REG5,0xfff8)(hi)
0x5621F007,	//0x1114		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xE240C2E5,	//0x1116		VoC_lbinc_p(REG0)	|	VoC_sub16_rr(REG5,REG3,REG4,IN_PARALLEL)
0xD642632B,	//0x1118		VoC_lw16_sd(REG2,0x3,IN_PARALLEL)	|	VoC_rbinc_r(REG7,REG5,DEFAULT)
0x5655E240,	//0x111a		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_lbinc_p(REG0)
0x6282FF44,	//0x111c		VoC_rbinc_i(REG6,0x10,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xC35DDFC3,	//0x111e		VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0x66B41509,	//0x1120		VoC_sw16_d(ACC0_HI,0x66b4)
0xF0095A65,	//0x1122		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_sw16_sd(REG5,0x5,DEFAULT)
0x03148054,	//0x1124		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rp(REG4,REG1,REG2,DEFAULT)
0x5F43D643,	//0x1126		VoC_push32(REG67,DEFAULT)	|	VoC_lw16_sd(REG3,0x3,IN_PARALLEL)
0x071FDA52,	//0x1128		VoC_add16_rd(REG7,REG3,0x4504)(lo)	|	VoC_sw16_sd(REG2,0x4,IN_PARALLEL)
0x071E4504,	//0x112a		VoC_add16_rd(REG6,REG3,0x44ea)(lo)	|	VoC_add16_rd(REG7,REG3,0x4504)(hi)
0xF04244EA,	//0x112c		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x44ea)(hi)
0x071A88BF,	//0x112e		VoC_add16_rd(REG2,REG3,0x408)(lo)	|	VoC_mult16_rp(REG7,REG2,REG7,DEFAULT)
0x00360408,	//0x1130		VoC_add16_pd(REG6,REG6,0x408)(lo)	|	VoC_add16_rd(REG2,REG3,0x408)(hi)
0xD8220408,	//0x1132		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_add16_pd(REG6,REG6,0x408)(hi)
0x0C6C0A85,	//0x1134		VoC_lw16i(REG5,0xc6c)
0x1504C17B,	//0x1136		VoC_sw16_d(REG4,0x668e)(lo)	|	VoC_add16_rr(REG3,REG5,REG7,DEFAULT)
0xD8B4668E,	//0x1138		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sw16_d(REG4,0x668e)(hi)
0x114031C4,	//0x113a		VoC_bnez16_r(huffdec_L3,REG4)
0x02370A87,	//0x113c		VoC_lw16i(REG7,0x237)
0x12B52B00,	//0x113e		VoC_jump_lg(huffdec_Lpopend2)
		//0x1140		huffdec_L3
0xE0A7D8B5,	//0x1140		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0x00FF1605,	//0x1142		VoC_and16_ri(REG5,0xff)
0x1582F847,	//0x1144		VoC_sw32_d(REG45,0x66b0)(lo)	|	VoC_shr16_ri(REG7,0x8,DEFAULT)
0x0A8366B0,	//0x1146		VoC_lw16i(REG3,0x66b6)(lo)	|	VoC_sw32_d(REG45,0x66b0)(hi)
0x150766B6,	//0x1148		VoC_sw16_d(REG7,0x66b2)(lo)	|	VoC_lw16i(REG3,0x66b6)(hi)
0x58B766B2,	//0x114a		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16_d(REG7,0x66b2)(hi)
0xDFC6E004,	//0x114c		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xDFC7DFC3,	//0x114e		VoC_push16(REG7,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x66B31504,	//0x1150		VoC_sw16_d(REG4,0x66b3)
0xDFC1DFC2,	//0x1152		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
		//0x1154		huffdec_L4
0x0792D622,	//0x1154		VoC_sub16_rd(REG2,REG2,0x408)(lo)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0x32020408,	//0x1156		VoC_bltz16_r(huffdec_L5,REG2)(lo)	|	VoC_sub16_rd(REG2,REG2,0x408)(hi)
0xD666115E,	//0x1158		VoC_lw16_sd(REG6,0x5,DEFAULT)	|	VoC_bltz16_r(huffdec_L5,REG2)(hi)
0xC1BDD6B7,	//0x115a		VoC_add16_rr(REG5,REG6,REG7,DEFAULT)	|	VoC_lw16_sd(REG7,0xa,DEFAULT)
0x11603105,	//0x115c		VoC_bgtz16_r(huffdec_L6,REG5)
		//0x115e		huffdec_L5
0x120B2B00,	//0x115e		VoC_jump_lg(huffdec_LbgEnd)
		//0x1160		huffdec_L6
0xD6A2DA22,	//0x1160		VoC_lw16_sd(REG2,0x9,DEFAULT)	|	VoC_sw16_sd(REG2,0x1,DEFAULT)
0x668E4021,	//0x1162		VoC_be16_rd(no_huffdec_L7,REG1,0x668e)
0x11A52B00,	//0x1164		VoC_jump_lg(huffdec_L7)
		//0x1166		no_huffdec_L7
0x668E1405,	//0x1166		VoC_lw16_d(REG5,0x668e)
0x83558155,	//0x1168		VoC_add16inc_rp(REG5,REG5,REG2,DEFAULT)	|	VoC_add16_rp(REG5,REG5,REG2,DEFAULT)
0x07A4D654,	//0x116a		VoC_sub16_rd(REG4,REG4,0x408)(lo)	|	VoC_lw16_sd(REG4,0x4,DEFAULT)
0x15050408,	//0x116c		VoC_sw16_d(REG5,0x668e)(lo)	|	VoC_sub16_rd(REG4,REG4,0x408)(hi)
0xDAA2668E,	//0x116e		VoC_sw16_sd(REG2,0x9,DEFAULT)	|	VoC_sw16_d(REG5,0x668e)(hi)
0x119A31C4,	//0x1170		VoC_bnez16_r(huffdec_L8,REG4)
0x6E07D695,	//0x1172		VoC_bnez16_d(huffdec_L9,0x66b4)(lo)	|	VoC_lw16_sd(REG5,0x8,DEFAULT)
0xF1A466B4,	//0x1174		VoC_lw16i_short(REG4,0xd,DEFAULT)	|	VoC_bnez16_d(huffdec_L9,0x66b4)(hi)
0xF023C164,	//0x1176		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_add16_rr(REG4,REG5,REG4,DEFAULT)
0xFFC000E4,	//0x1178		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rp(REG4,REG3,REG4,DEFAULT)
		//0x117a		huffdec_L9
0x66B41402,	//0x117a		VoC_lw16_d(REG2,0x66b4)
0x4504072D,	//0x117c		VoC_add16_rd(REG5,REG5,0x4504)
0xC155DE10,	//0x117e		VoC_add16_rr(REG5,REG5,REG2,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0x66B41502,	//0x1180		VoC_sw16_d(REG2,0x66b4)
0x88EDF043,	//0x1182		VoC_mult16_rp(REG5,REG3,REG5,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0C6C0A83,	//0x1184		VoC_lw16i(REG3,0xc6c)
0x1806C0EB,	//0x1186		VoC_lw16i_set_inc(REG2,0x66b0,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0xD8B166B0,	//0x1188		VoC_lw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x66b0,0x1)(hi)
0x119031C1,	//0x118a		VoC_bnez16_r(huffdec_L10,REG1)
0x02370A87,	//0x118c		VoC_lw16i(REG7,0x237)
0x12B02B00,	//0x118e		VoC_jump_lg(huffdec_Lpopend)
		//0x1190		huffdec_L10
0xDCA1D8B9,	//0x1190		VoC_sw16inc_p(REG1,REG2,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG3,DEFAULT)
0x1601E121,	//0x1192		VoC_and16_ri(REG1,0xff)(lo)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0xE12100FF,	//0x1194		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_and16_ri(REG1,0xff)(hi)
0xF8415CA1,	//0x1196		VoC_shr16_ri(REG1,0x8,IN_PARALLEL)	|	VoC_sw16inc_p(REG1,REG2,DEFAULT)
0xDCA1FFC0,	//0x1198		VoC_sw16inc_p(REG1,REG2,DEFAULT)	|	VoC_NOP
		//0x119a		huffdec_L8
0xD642DA54,	//0x119a		VoC_lw16_sd(REG2,0x3,DEFAULT)	|	VoC_sw16_sd(REG4,0x4,DEFAULT)
0x58A5D634,	//0x119c		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0x3525E003,	//0x119e		VoC_be16_rr(huffdec_L11,REG4,REG5)(lo)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xDA3511A4,	//0x11a0		VoC_sw16_sd(REG5,0x2,DEFAULT)	|	VoC_be16_rr(huffdec_L11,REG4,REG5)(hi)
0x66B31503,	//0x11a2		VoC_sw16_d(REG3,0x66b3)
		//0x11a4		huffdec_L11
0xF2A3DA42,	//0x11a4		VoC_lw16i_short(REG3,0x15,DEFAULT)	|	VoC_sw16_sd(REG2,0x3,DEFAULT)
		//0x11a5		huffdec_L7
0x11C1349E,	//0x11a6		VoC_bngt16_rr(huffdec_L12,REG3,REG6)
0xC2F3F3E3,	//0x11a8		VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_lw16i_short(REG3,0x1f,DEFAULT)
0x7FF81643,	//0x11aa		VoC_and16_ri(REG3,0xfff8)
0xC3DF590F,	//0x11ac		VoC_sub16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0x42EA0B1C,	//0x11ae		VoC_sub16_dr(REG4,0x42ea,REG3)
0xFEE7419E,	//0x11b0		VoC_shru32_rr(RL7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0xE240FF42,	//0x11b2		VoC_lbinc_p(REG0)	|	VoC_lw32z(REG45,DEFAULT)
0x44F63823,	//0x11b4		VoC_bgt16_rd(huffdec_L13,REG3,0x44f6)
0xE5C6E318,	//0x11b6		VoC_jump(huffdec_L14)	|	VoC_rbinc_r(REG4,REG3,DEFAULT)
		//0x11b8		huffdec_L13
0x44F6079B,	//0x11b8		VoC_sub16_rd(REG3,REG3,0x44f6)
0xE240E319,	//0x11ba		VoC_lbinc_p(REG0)	|	VoC_rbinc_r(REG5,REG3,DEFAULT)
0xE517E280,	//0x11bc		VoC_or32_rr(RL7,REG45,DEFAULT)	|	VoC_rbinc_i(REG4,0x10,DEFAULT)
		//0x11bd		huffdec_L14
0x5AB7DA66,	//0x11be		VoC_sw16_sd(REG7,0xa,DEFAULT)	|	VoC_sw16_sd(REG6,0x5,DEFAULT)
0xD90FDD0F,	//0x11c0		VoC_lw32_sd(RL7,0x0,DEFAULT)	|	VoC_sw32_sd(RL7,0x0,IN_PARALLEL)
		//0x11c1		huffdec_L12
0x04081484,	//0x11c2		VoC_lw32_d(ACC0,0x408)
0x66B21405,	//0x11c4		VoC_lw16_d(REG5,0x66b2)
0x0B2CC3AB,	//0x11c6		VoC_sub16_dr(REG4,0x42ea,REG5)(lo)	|	VoC_sub16_rr(REG3,REG6,REG5,DEFAULT)
0x7EA442EA,	//0x11c8		VoC_shr32_rr(ACC0,REG4,DEFAULT)	|	VoC_sub16_dr(REG4,0x42ea,REG5)(hi)
0x09A1FEDF,	//0x11ca		VoC_sub32_rd(REG23,ACC0,0x408)(lo)	|	VoC_shru32_rr(RL7,REG3,IN_PARALLEL)
0xE4F90408,	//0x11cc		VoC_and32_rr(REG23,RL7,DEFAULT)	|	VoC_sub32_rd(REG23,ACC0,0x408)(hi)
0x66B00717,	//0x11ce		VoC_add16_rd(REG7,REG2,0x66b0)
		//0x11d0		huffdec_L15
0x5874D90F,	//0x11d0		VoC_lw16_p(REG4,REG7,DEFAULT)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0xE423E013,	//0x11d2		VoC_and16_rr(REG3,REG4,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x11ED31C3,	//0x11d4		VoC_bnez16_r(huffdec_L16,REG3)
0xF68543AE,	//0x11d6		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)
0xF824780D,	//0x11d8		VoC_shr16_ri(REG4,0x4,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0x00071605,	//0x11da		VoC_and16_ri(REG5,0x7)
0x0FFF0A82,	//0x11dc		VoC_lw16i(REG2,0xfff)
0xC3AB6414,	//0x11de		VoC_sub16_rr(REG3,REG6,REG5,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG2,DEFAULT)
0x04081484,	//0x11e0		VoC_lw32_d(ACC0,0x408)
0x42EA0B2A,	//0x11e2		VoC_sub16_dr(REG2,0x42ea,REG5)
0xFEDF7E94,	//0x11e4		VoC_shru32_rr(RL7,REG3,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG2,DEFAULT)
0x040809A1,	//0x11e6		VoC_sub32_rd(REG23,ACC0,0x408)
0xC0A2E4F9,	//0x11e8		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_and32_rr(REG23,RL7,DEFAULT)
0x66B00717,	//0x11ea		VoC_add16_rd(REG7,REG2,0x66b0)
0xE083E5E4,	//0x11ec		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_jump(huffdec_L15)
		//0x11ed		huffdec_L16
0xE0F7780C,	//0x11ee		VoC_lw16i_short(REG7,0xf,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x00071604,	//0x11f0		VoC_and16_ri(REG4,0x7)
0xF66243A6,	//0x11f2		VoC_movreg16(REG2,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x643AF822,	//0x11f4		VoC_and16_rr(REG2,REG7,DEFAULT)	|	VoC_shr16_ri(REG2,0x4,DEFAULT)
0x643BF843,	//0x11f6		VoC_and16_rr(REG3,REG7,DEFAULT)	|	VoC_shr16_ri(REG3,0x8,IN_PARALLEL)
0xF047DA66,	//0x11f8		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_sw16_sd(REG6,0x5,IN_PARALLEL)
0x6C09DF41,	//0x11fa		VoC_bez16_d(huffdec_L20,0x66b1)(lo)	|	VoC_push32(REG23,DEFAULT)
0xFFC066B1,	//0x11fc		VoC_NAD	|	VoC_bez16_d(huffdec_L20,0x66b1)(hi)
0x0FF72B80,	//0x11fe		VoC_jal(CII_huff_sub1)
0x0FF72B80,	//0x1200		VoC_jal(CII_huff_sub1)
0xFFC065C6,	//0x1202		VoC_NAD(IN_PARALLEL)	|	VoC_jump(huffdec_L30)
		//0x1204		huffdec_L20
0x10542B80,	//0x1204		VoC_jal(CII_huff_sub2)
0x10542B80,	//0x1206		VoC_jal(CII_huff_sub2)
		//0x1208		huffdec_L30
0x2B00DF01,	//0x1208		VoC_jump_lg(huffdec_L4)(lo)	|	VoC_pop32(REG23,DEFAULT)
0xD6641154,	//0x120a		VoC_lw16_sd(REG4,0x5,DEFAULT)	|	VoC_jump_lg(huffdec_L4)(hi)
		//0x120b		huffdec_LbgEnd
0xC12ED6B5,	//0x120c		VoC_add16_rr(REG6,REG4,REG5,DEFAULT)	|	VoC_lw16_sd(REG5,0xa,DEFAULT)
0x12143246,	//0x120e		VoC_bnltz16_r(huffdec_L39,REG6)
0x02380A87,	//0x1210		VoC_lw16i(REG7,0x238)
0x12B02B00,	//0x1212		VoC_jump_lg(huffdec_Lpopend)
		//0x1214		huffdec_L39
0xF024D636,	//0x1214		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x13592B80,	//0x1216		VoC_jal(CII_III_requantize)
0xE0445696,	//0x1218		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x8,DEFAULT)
0xD68241A6,	//0x121a		VoC_lw16_sd(REG2,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x04780A85,	//0x121c		VoC_lw16i(REG5,0x478)
0xD865C0AA,	//0x121e		VoC_lw16_p(REG5,REG6,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0x00011605,	//0x1220		VoC_and16_ri(REG5,0x1)
0x40520A86,	//0x1222		VoC_lw16i(REG6,0x4052)
0x12283185,	//0x1224		VoC_bez16_r(TABLE_hufftabA,REG5)
0x42A00A86,	//0x1226		VoC_lw16i(REG6,0x42a0)
		//0x1228		TABLE_hufftabA
0x1502D664,	//0x1228		VoC_sw16_d(REG2,0x66b5)(lo)	|	VoC_lw16_sd(REG4,0x5,DEFAULT)
0xD6B566B5,	//0x122a		VoC_lw16_sd(REG5,0xa,DEFAULT)	|	VoC_sw16_d(REG2,0x66b5)(hi)
0x66B01506,	//0x122c		VoC_sw16_d(REG6,0x66b0)
0xD611412E,	//0x122e		VoC_lw16_sd(REG1,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG5,DEFAULT)
		//0x1230		huffdec_L40
0x66B53831,	//0x1230		VoC_bgt16_rd(huffdec_L41,REG1,0x66b5)
0x12363146,	//0x1232		VoC_bngtz16_r(huffdec_L41,REG6)
0xFFC065C4,	//0x1234		VoC_NAD(IN_PARALLEL)	|	VoC_jump(huffdec_L42)
		//0x1236		huffdec_L41
0x12902B00,	//0x1236		VoC_jump_lg(huffdec_L50)
		//0x1238		huffdec_L42
0x4CACD90F,	//0x1238		VoC_bnlt16_rd(huffdec_L43,REG4,0x44f0)(lo)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0xE24044F0,	//0x123a		VoC_lbinc_p(REG0)	|	VoC_bnlt16_rd(huffdec_L43,REG4,0x44f0)(hi)
0xFF416282,	//0x123c		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x10,DEFAULT)
0xFD8760C2,	//0x123e		VoC_shru32_ri(RL7,0xfffffff0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xE101650F,	//0x1240		VoC_lw16i_short(REG1,0x10,IN_PARALLEL)	|	VoC_or32_rr(RL7,REG23,DEFAULT)
0xC34D410C,	//0x1242		VoC_sub16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xDAB5DD0F,	//0x1244		VoC_sw16_sd(REG5,0xa,DEFAULT)	|	VoC_sw32_sd(RL7,0x0,DEFAULT)
		//0x1246		huffdec_L43
0xFF477F39,	//0x1246		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x450207A5,	//0x1248		VoC_sub16_rd(REG5,REG4,0x4502)
0x7025F1EE,	//0x124a		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0xf,DEFAULT)
0xE4F9FEE9,	//0x124c		VoC_and32_rr(REG23,RL7,DEFAULT)	|	VoC_shru32_rr(REG23,REG5,IN_PARALLEL)
0x66B00712,	//0x124e		VoC_add16_rd(REG2,REG2,0x66b0)
0xD823FFC0,	//0x1250		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_NOP
0xE012641D,	//0x1252		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG3,DEFAULT)
0x126E31C5,	//0x1254		VoC_bnez16_r(huffdec_L44,REG5)
0x450207A4,	//0x1256		VoC_sub16_rd(REG4,REG4,0x4502)
0xF80B6066,	//0x1258		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG3,DEFAULT)
0x00071603,	//0x125a		VoC_and16_ri(REG3,0x7)
0x1606F826,	//0x125c		VoC_and16_ri(REG6,0xfff)(lo)	|	VoC_shr16_ri(REG6,0x4,DEFAULT)
0x07360FFF,	//0x125e		VoC_add16_rd(REG6,REG6,0x66b0)(lo)	|	VoC_and16_ri(REG6,0xfff)(hi)
0x590F66B0,	//0x1260		VoC_lw32_sd(RL7,0x0,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x66b0)(hi)
0x0B1BC31D,	//0x1262		VoC_sub16_dr(REG3,0x42ea,REG3)(lo)	|	VoC_sub16_rr(REG5,REG4,REG3,IN_PARALLEL)
0x7E5A42EA,	//0x1264		VoC_shru16_rr(REG2,REG3,DEFAULT)	|	VoC_sub16_dr(REG3,0x42ea,REG3)(hi)
0x0792FEEF,	//0x1266		VoC_sub16_rd(REG2,REG2,0x408)(lo)	|	VoC_shru32_rr(RL7,REG5,IN_PARALLEL)
0xF0030408,	//0x1268		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x408)(hi)
0xC0B2E4F9,	//0x126a		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_and32_rr(REG23,RL7,DEFAULT)
0xD823FFC0,	//0x126c		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_NOP
		//0x126e		huffdec_L44
0x780DE065,	//0x126e		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_movreg16(REG5,REG3,DEFAULT)
0x1605F661,	//0x1270		VoC_and16_ri(REG5,0x7)(lo)	|	VoC_movreg16(REG1,REG3,IN_PARALLEL)
0x432C0007,	//0x1272		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_and16_ri(REG5,0x7)(hi)
0x7821F666,	//0x1274		VoC_shr16_ri(REG1,0x4,DEFAULT)	|	VoC_movreg16(REG6,REG3,IN_PARALLEL)
0x5A64F662,	//0x1276		VoC_sw16_sd(REG4,0x5,DEFAULT)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
0x7833F82E,	//0x1278		VoC_shr16_ri(REG3,0x6,DEFAULT)	|	VoC_shr16_ri(REG6,0x5,IN_PARALLEL)
0x6429E015,	//0x127a		VoC_and16_rr(REG1,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x642EF83A,	//0x127c		VoC_and16_rr(REG6,REG5,DEFAULT)	|	VoC_shr16_ri(REG2,0x7,IN_PARALLEL)
0x642AF62B,	//0x127e		VoC_and16_rr(REG2,REG5,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG1,IN_PARALLEL)
0xE42BF6CA,	//0x1280		VoC_and16_rr(REG3,REG5,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG6,IN_PARALLEL)
0xDF41DF45,	//0x1282		VoC_push32(REG23,DEFAULT)	|	VoC_push32(ACC1,DEFAULT)
0x10872B80,	//0x1284		VoC_jal(CII_huff_sub3)
0x10872B80,	//0x1286		VoC_jal(CII_huff_sub3)
0xDF055A64,	//0x1288		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_sw16_sd(REG4,0x5,DEFAULT)
0xDF0556B5,	//0x128a		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0xa,DEFAULT)
0xD611412E,	//0x128c		VoC_lw16_sd(REG1,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG5,DEFAULT)
0x12302B00,	//0x128e		VoC_jump_lg(huffdec_L40)
		//0x1290		huffdec_L50
0x3246FF44,	//0x1290		VoC_bnltz16_r(huffdec_L49,REG6)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x07891297,	//0x1292		VoC_sub16_rd(REG1,REG1,0x44fc)(lo)	|	VoC_bnltz16_r(huffdec_L49,REG6)(hi)
0xFFC044FC,	//0x1294		VoC_NOP	|	VoC_sub16_rd(REG1,REG1,0x44fc)(hi)
0xF106DA11,	//0x1296		VoC_lw16i_short(REG6,0x8,DEFAULT)	|	VoC_sw16_sd(REG1,0x0,DEFAULT)
		//0x1297		huffdec_L49
0x0736F044,	//0x1298		VoC_add16_rd(REG6,REG6,0x66b5)(lo)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x705166B5,	//0x129a		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x66b5)(hi)
0x6434C38E,	//0x129c		VoC_and16_rr(REG4,REG6,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG1,IN_PARALLEL)
0x3146F816,	//0x129e		VoC_bngtz16_r(huffdec_L51_1,REG6)(lo)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0xFFC012AA,	//0x12a0		VoC_NAD	|	VoC_bngtz16_r(huffdec_L51_1,REG6)(hi)
		//0x12a2		huffdec_L51_2
0x12AA3146,	//0x12a2		VoC_bngtz16_r(huffdec_L51_1,REG6)
0xDDCCDDCC,	//0x12a4		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x040807B6,	//0x12a6		VoC_sub16_rd(REG6,REG6,0x408)
0xFFC065FA,	//0x12a8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(huffdec_L51_2)
		//0x12aa		huffdec_L51_1
0x12AE3184,	//0x12aa		VoC_bez16_r(huffdec_L51,REG4)
0xFFC05DCC,	//0x12ac		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x12ae		huffdec_L51
0x00000A87,	//0x12ae		VoC_lw16i(REG7,0x0)
		//0x12b0		huffdec_Lpopend
0xDF85DF85,	//0x12b0		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0xDF85DF85,	//0x12b2		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0xDF85DF85,	//0x12b4		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
		//0x12b5		huffdec_Lpopend2
0xDF81DF85,	//0x12b6		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x5F85DF85,	//0x12b8		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x5F85F005,	//0x12ba		VoC_pop16(REG5,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDFA9DF07,	//0x12bc		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL7,IN_PARALLEL)
		//0x12bd		huffdec_Lend
0x48DD1405,	//0x12be		VoC_lw16_d(REG5,0x48dd)
0x48DC1400,	//0x12c0		VoC_lw16_d(REG0,0x48dc)
0x48DA1486,	//0x12c2		VoC_lw32_d(RL6,0x48da)
0xE580E0BB,	//0x12c4		VoC_return	|	VoC_movreg16(BITCACHE,REG5,DEFAULT)
		//0x12c6		CII_III_exponents
0xF00660A2,	//0x12c6		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG5,DEFAULT)
0x44FE0726,	//0x12c8		VoC_add16_rd(REG6,REG4,0x44fe)
0x45020727,	//0x12ca		VoC_add16_rd(REG7,REG4,0x4502)
0x00D20A80,	//0x12cc		VoC_lw16i(REG0,0xd2)
0x59B8B986,	//0x12ce		VoC_lw32_p(REG01,REG7,DEFAULT)	|	VoC_sub16_pr(REG6,REG6,REG0,DEFAULT)
0x6403E023,	//0x12d0		VoC_and16_rr(REG3,REG0,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,IN_PARALLEL)
0x31C3EFE7,	//0x12d2		VoC_bnez16_r(exponents_L1,REG3)(lo)	|	VoC_lw16i_short(REG7,0xfffffffe,IN_PARALLEL)
0xF7E712D6,	//0x12d4		VoC_lw16i_short(REG7,0xffffffff,DEFAULT)	|	VoC_bnez16_r(exponents_L1,REG3)(hi)
		//0x12d6		exponents_L1
0xFF037F1D,	//0x12d6		VoC_movreg32(REG67,REG01,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG67,DEFAULT)
0x44E40723,	//0x12d8		VoC_add16_rd(REG3,REG4,0x44e4)
0x43181805,	//0x12da		VoC_lw16i_set_inc(REG1,0x4318,0x1)
0x66B61804,	//0x12dc		VoC_lw16i_set_inc(REG0,0x66b6,0x1)
0x44FE4027,	//0x12de		VoC_be16_rd(no_exponents_L2,REG7,0x44fe)
0x132F2B00,	//0x12e0		VoC_jump_lg(exponents_L2)
		//0x12e2		no_exponents_L2
0xE0857007,	//0x12e2		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xFF476435,	//0x12e4		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0x13023185,	//0x12e6		VoC_bez16_r(exponents_L3,REG5)
0x00041606,	//0x12e8		VoC_and16_ri(REG6,0x4)
0x12ED3186,	//0x12ea		VoC_bez16_r(exponents_L5,REG6)
0xE0EEE387,	//0x12ec		VoC_movreg16(RL7_LO,REG7,DEFAULT)	|	VoC_not16_r(REG7,DEFAULT)
		//0x12ed		exponents_L5
0x7004F033,	//0x12ee		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xFFC0FF2B,	//0x12f0		VoC_NAD	|	VoC_movreg32(REG67,ACC1,IN_PARALLEL)
		//0x12f2		exponents_L4
0x00230A85,	//0x12f2		VoC_lw16i(REG5,0x23)
0x13023425,	//0x12f4		VoC_bgt16_rr(exponents_L3,REG4,REG5)
0xF7C45895,	//0x12f6		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x035DE425,	//0x12f8		VoC_add16inc_rp(REG5,REG5,REG3,DEFAULT)	|	VoC_and16_rr(REG5,REG4,DEFAULT)
0x7E3DF68E,	//0x12fa		VoC_shr16_rr(REG5,REG7,DEFAULT)	|	VoC_movreg16(RL7_LO,REG4,IN_PARALLEL)
0xC3ADF7E4,	//0x12fc		VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)	|	VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)
0x5C858314,	//0x12fe		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xE5F1F68F,	//0x1300		VoC_jump(exponents_L4)	|	VoC_movreg16(RL7_HI,REG4,IN_PARALLEL)
		//0x1302		exponents_L3
0xFF2B5635,	//0x1302		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x2,DEFAULT)
0xC149F121,	//0x1304		VoC_add16_rr(REG1,REG5,REG1,DEFAULT)	|	VoC_lw16i_short(REG1,0x9,DEFAULT)
0xD894DF41,	//0x1306		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xF8EC5895,	//0x1308		VoC_shr16_ri(REG4,0xfffffffd,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xF8ED43A4,	//0x130a		VoC_shr16_ri(REG5,0xfffffffd,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)
0xD89243AD,	//0x130c		VoC_lw16inc_p(REG2,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
0xFF1478EA,	//0x130e		VoC_movreg32(ACC0,REG45,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)
0xC3965F01,	//0x1310		VoC_sub16_rr(REG6,REG6,REG2,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0xFFC061E5,	//0x1312		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,RL7_HI,DEFAULT)
		//0x1314		exponents_L20
0x023F0A81,	//0x1314		VoC_lw16i(REG1,0x23f)
0x131A34A9,	//0x1316		VoC_bngt16_rr(no_exponents_Lend,REG5,REG1)
0x13452B00,	//0x1318		VoC_jump_lg(exponents_Lend)
		//0x131a		no_exponents_Lend
0xFF2258B1,	//0x131a		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG1,REG3,DEFAULT)
0xF00E7E39,	//0x131c		VoC_lw16i_short(INC2,0x3,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG7,DEFAULT)
0xD8B44309,	//0x131e		VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG4,REG1,DEFAULT)
0x4364FE3C,	//0x1320		VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_shr16_rr(REG4,REG7,DEFAULT)
0xD8B1DC81,	//0x1322		VoC_lw16inc_p(REG1,REG3,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,IN_PARALLEL)
0xDC847E39,	//0x1324		VoC_sw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG7,DEFAULT)
0xE0344389,	//0x1326		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG6,REG1,DEFAULT)
0x8B1461E5,	//0x1328		VoC_mult16inc_rp(REG4,REG4,REG2,IN_PARALLEL)	|	VoC_movreg16(REG5,RL7_HI,DEFAULT)
0xC165DC81,	//0x132a		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0xF00660AF,	//0x132c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG5,DEFAULT)
0xF085E5E6,	//0x132e		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_jump(exponents_L20)
		//0x132f		exponents_L2
0xFF2B6435,	//0x1330		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0x133E3185,	//0x1332		VoC_bez16_r(exponents_L6,REG5)
0x831CD894,	//0x1334		VoC_add16inc_rp(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xFE3C6AC5,	//0x1336		VoC_shr16_rr(REG4,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0x16,DEFAULT)
0xD89543A4,	//0x1338		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)
0x5C84835C,	//0x133a		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG5,REG3,DEFAULT)
		//0x133b		VoC_endloop0
0xE5C8FE3C,	//0x133c		VoC_jump(exponents_Lend)	|	VoC_shr16_rr(REG4,REG7,IN_PARALLEL)
		//0x133e		exponents_L6
0x6AC4D8B4,	//0x133e		VoC_loop_i_short(0x16,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xC3A4FE3C,	//0x1340		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_shr16_rr(REG4,REG7,IN_PARALLEL)
0x5C84D8B4,	//0x1342		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
		//0x1343		VoC_endloop0
0xFFC0FE3C,	//0x1344		VoC_NOP	|	VoC_shr16_rr(REG4,REG7,IN_PARALLEL)
		//0x1345		exponents_Lend
0xFFC06580,	//0x1346		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1348		CII_bitoff
0x00081FBD,	//0x1348		VoC_lw16i_set_inc(REG1,0x8,0xffffffff)
0x134E31C6,	//0x134a		VoC_bnez16_r(bitoff_L1,REG6)
0xFFC065CA,	//0x134c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(bitoff_end)
		//0x134e		bitoff_L1
0x13523106,	//0x134e		VoC_bgtz16_r(bitoff_L2,REG6)
0xFFC065C6,	//0x1350		VoC_NAD(IN_PARALLEL)	|	VoC_jump(bitoff_end)
		//0x1352		bitoff_L2
0xDE08780E,	//0x1352		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xFFC065FA,	//0x1354		VoC_NAD(IN_PARALLEL)	|	VoC_jump(bitoff_L1)
		//0x1356		bitoff_end
0xF0056026,	//0x1356		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG1,DEFAULT)
0xDFE9E580,	//0x1358		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1359		CII_III_requantize
0xE00560C7,	//0x135a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x13603247,	//0x135c		VoC_bnltz16_r(III_requantize_L1,REG7)
0xFFC0437F,	//0x135e		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG5,REG7,DEFAULT)
		//0x1360		III_requantize_L1
0xF48460E3,	//0x1360		VoC_lw16i_short(WRAP0,0x10,IN_PARALLEL)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x1607F813,	//0x1362		VoC_and16_ri(REG7,0x3)(lo)	|	VoC_shr16_ri(REG3,0x2,DEFAULT)
0x32460003,	//0x1364		VoC_bnltz16_r(III_requantize_L2,REG6)(lo)	|	VoC_and16_ri(REG7,0x3)(hi)
0x437F1369,	//0x1366		VoC_sub16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_bnltz16_r(III_requantize_L2,REG6)(hi)
0xE066C35B,	//0x1368		VoC_movreg16(REG6,REG3,DEFAULT)	|	VoC_sub16_rr(REG3,REG5,REG3,IN_PARALLEL)
		//0x1369		III_requantize_L2
0xDF467003,	//0x136a		VoC_push32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xDFC05F43,	//0x136c		VoC_push16(REG0,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x3184FF47,	//0x136e		VoC_bez16_r(rq_compute_L0,REG4)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x443C1376,	//0x1370		VoC_bne16_rd(rq_compute_L1,REG4,0x408)(lo)	|	VoC_bez16_r(rq_compute_L0,REG4)(hi)
0xF0430408,	//0x1372		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_bne16_rd(rq_compute_L1,REG4,0x408)(hi)
0x04000A8F,	//0x1374		VoC_lw16i(RL7_HI,0x400)
		//0x1376		rq_compute_L0
0x14062B00,	//0x1376		VoC_jump_lg(rq_compute_Lend)
		//0x1378		rq_compute_L1
0xFF42608F,	//0x1378		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG4,DEFAULT)
0x40000A8B,	//0x137a		VoC_lw16i(ACC1_HI,0x4000)
0xE00A7F13,	//0x137c		VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x71DAE52B,	//0x137e		VoC_lw16i_short(FORMATX,0xe,DEFAULT)	|	VoC_or32_rr(REG67,ACC1,DEFAULT)
0xEBF1F5F9,	//0x1380		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)
0xFF1E790E,	//0x1382		VoC_movreg32(RL6,REG67,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xCE7ECDFC,	//0x1384		VoC_macX_rr(REG7,REG6,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0xFA0DCE77,	//0x1386		VoC_shr32_ri(ACC1,0x1,DEFAULT)	|	VoC_macX_rr(REG6,REG7,DEFAULT)
0xF908FF20,	//0x1388		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xCE78CDCC,	//0x138a		VoC_macX_rr(REG7,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG1,DEFAULT)
0xFF13CE71,	//0x138c		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_macX_rr(REG6,REG1,DEFAULT)
0x13923627,	//0x138e		VoC_bgt32_rr(rq_compute_L2,ACC0,RL7)
0xFF337F32,	//0x1390		VoC_movreg32(REG67,RL6,IN_PARALLEL)	|	VoC_movreg32(REG45,RL6,DEFAULT)
		//0x1392		rq_compute_L2
		//0x1392		VoC_endloop0
0x7F3BE52B,	//0x1392		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_or32_rr(REG67,ACC1,DEFAULT)
0x33C3E000,	//0x1394		VoC_bnltz32_r(gsm_norm_L1,REG67)(lo)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
0xFF4413A2,	//0x1396		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bnltz32_r(gsm_norm_L1,REG67)(hi)
0x40000AC9,	//0x1398		VoC_lw16i(ACC0_HI,0xc000)
0x13A0361C,	//0x139a		VoC_bgt32_rr(gsm_norm_L2,REG67,ACC0)
0x42EA0A86,	//0x139c		VoC_lw16i(REG6,0x42ea)
0x13C12B00,	//0x139e		VoC_jump_lg(gsm_norm_Lend)
		//0x13a0		gsm_norm_L2
0x42EA0B9B,	//0x13a0		VoC_sub32_dr(REG67,0x42ea,REG67)
		//0x13a2		gsm_norm_L1
0xF7E9FF44,	//0x13a2		VoC_lw16i_short(ACC0_HI,0xffff,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x3304E4DC,	//0x13a4		VoC_bez32_r(gsm_norm_L3,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0xFF4413B3,	//0x13a6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bez32_r(gsm_norm_L3,ACC0)(hi)
0x7F000AC9,	//0x13a8		VoC_lw16i(ACC0_HI,0xff00)
0x3304E4DC,	//0x13aa		VoC_bez32_r(gsm_norm_L4,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0x7AC313B0,	//0x13ac		VoC_shr32_ri(REG67,0x18,DEFAULT)	|	VoC_bez32_r(gsm_norm_L4,ACC0)(hi)
0xE5CFEFF0,	//0x13ae		VoC_jump(gsm_norm_L6)	|	VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)
		//0x13b0		gsm_norm_L4
0xE0707A83,	//0x13b0		VoC_lw16i_short(REG0,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFF44E5CC,	//0x13b2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jump(gsm_norm_L6)
		//0x13b3		gsm_norm_L3
0x7F000AC8,	//0x13b4		VoC_lw16i(ACC0_LO,0xff00)
0x3304E4DC,	//0x13b6		VoC_bez32_r(gsm_norm_L5,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0x7A4313BC,	//0x13b8		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_bez32_r(gsm_norm_L5,ACC0)(hi)
0xE5C3E0F0,	//0x13ba		VoC_jump(gsm_norm_L6)	|	VoC_lw16i_short(REG0,0xf,IN_PARALLEL)
		//0x13bc		gsm_norm_L5
0xFFC072E0,	//0x13bc		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x17,DEFAULT)
		//0x13be		gsm_norm_L6
0x00FF0A81,	//0x13be		VoC_lw16i(REG1,0xff)
0xF002E40E,	//0x13c0		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_and16_rr(REG6,REG1,DEFAULT)
		//0x13c1		gsm_norm_Lend
0x13482B80,	//0x13c2		VoC_jal(CII_bitoff)
0x42B6C186,	//0x13c4		VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG0,DEFAULT)
0x7EB7F90C,	//0x13c6		VoC_shr32_rr(RL7,REG6,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xFF3BF6C3,	//0x13c8		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_movreg16(REG3,REG6,IN_PARALLEL)
0xCDECF90E,	//0x13ca		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x4E75CE7C,	//0x13cc		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xF000E042,	//0x13ce		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,IN_PARALLEL)
0x33C7FF27,	//0x13d0		VoC_bnltz32_r(gsm_norm_L1a,RL7)(lo)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xFF4413DE,	//0x13d2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bnltz32_r(gsm_norm_L1a,RL7)(hi)
0x40000AC9,	//0x13d4		VoC_lw16i(ACC0_HI,0xc000)
0x13DC363C,	//0x13d6		VoC_bgt32_rr(gsm_norm_L2a,RL7,ACC0)
0x42EA0A86,	//0x13d8		VoC_lw16i(REG6,0x42ea)
0x13FE2B00,	//0x13da		VoC_jump_lg(gsm_norm_Lenda)
		//0x13dc		gsm_norm_L2a
0x42EA0BBC,	//0x13dc		VoC_sub32_dr(ACC0,0x42ea,RL7)
		//0x13de		gsm_norm_L1a
0xFF44FF23,	//0x13de		VoC_lw32z(ACC0,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xE4DCF7E9,	//0x13e0		VoC_and32_rr(ACC0,REG67,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0xffff,DEFAULT)
0x13F03304,	//0x13e2		VoC_bez32_r(gsm_norm_L3a,ACC0)
0x0AC9FF44,	//0x13e4		VoC_lw16i(ACC0_HI,0xff00)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xE4DC7F00,	//0x13e6		VoC_and32_rr(ACC0,REG67,DEFAULT)	|	VoC_lw16i(ACC0_HI,0xff00)(hi)
0x13ED3304,	//0x13e8		VoC_bez32_r(gsm_norm_L4a,ACC0)
0xEFF07AC3,	//0x13ea		VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x18,DEFAULT)
0xFA83E5CE,	//0x13ec		VoC_shr32_ri(REG67,0x10,DEFAULT)	|	VoC_jump(gsm_norm_L6a)
		//0x13ed		gsm_norm_L4a
0xE5CBF0E0,	//0x13ee		VoC_jump(gsm_norm_L6a)	|	VoC_lw16i_short(REG0,0x7,DEFAULT)
		//0x13f0		gsm_norm_L3a
0x0AC8FF44,	//0x13f0		VoC_lw16i(ACC0_LO,0xff00)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xE4DC7F00,	//0x13f2		VoC_and32_rr(ACC0,REG67,DEFAULT)	|	VoC_lw16i(ACC0_LO,0xff00)(hi)
0x13F93304,	//0x13f4		VoC_bez32_r(gsm_norm_L5a,ACC0)
0xE0F07A43,	//0x13f6		VoC_lw16i_short(REG0,0xf,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0xF2E0E5C2,	//0x13f8		VoC_lw16i_short(REG0,0x17,DEFAULT)	|	VoC_jump(gsm_norm_L6a)
		//0x13f9		gsm_norm_L5a
		//0x13fa		gsm_norm_L6a
0x00FF0A81,	//0x13fa		VoC_lw16i(REG1,0xff)
0xFFC0640E,	//0x13fc		VoC_NAD(IN_PARALLEL)	|	VoC_and16_rr(REG6,REG1,DEFAULT)
		//0x13fe		gsm_norm_Lenda
0x0405071B,	//0x13fe		VoC_add16_rd(REG3,REG3,0x405)
0x13482B80,	//0x1400		VoC_jal(CII_bitoff)
0xC2B6C186,	//0x1402		VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG0,DEFAULT)
0xC19B7EB7,	//0x1404		VoC_add16_rr(REG3,REG6,REG3,IN_PARALLEL)	|	VoC_shr32_rr(RL7,REG6,DEFAULT)
		//0x1406		rq_compute_Lend
0xE0055F03,	//0x1406		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xE014419E,	//0x1408		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0x141A3246,	//0x140a		VoC_bnltz16_r(III_requantize_L3,REG6)
0x7FE10AC3,	//0x140c		VoC_lw16i(REG3,0xffffffe1)
0x1412349E,	//0x140e		VoC_bngt16_rr(III_requantize_L5,REG3,REG6)
0xE5D5FF47,	//0x1410		VoC_jump(III_requantize_L4)	|	VoC_lw32z(RL7,DEFAULT)
		//0x1412		III_requantize_L5
0xFE9AC133,	//0x1412		VoC_shr32_rr(REG45,REG3,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG6,DEFAULT)
0x0B33C9D7,	//0x1414		VoC_sub16_dr(REG3,0x42ea,REG6)(lo)	|	VoC_add32_rr(RL7,RL7,REG45,DEFAULT)
0xFE9F42EA,	//0x1416		VoC_shr32_rr(RL7,REG3,DEFAULT)	|	VoC_sub16_dr(REG3,0x42ea,REG6)(hi)
0xE5CDC333,	//0x1418		VoC_jump(III_requantize_L4)	|	VoC_sub16_rr(REG3,REG4,REG6,DEFAULT)
		//0x141a		III_requantize_L3
0x341EF0A3,	//0x141a		VoC_bgt16_rr(III_requantize_L6,REG3,REG6)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x0A8F1422,	//0x141c		VoC_lw16i(RL7_HI,0x7fff)(lo)	|	VoC_bgt16_rr(III_requantize_L6,REG3,REG6)(hi)
0xF7EE7FFF,	//0x141e		VoC_lw16i_short(RL7_LO,0xffff,DEFAULT)	|	VoC_lw16i(RL7_HI,0x7fff)(hi)
0xFFC065C6,	//0x1420		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_requantize_L4)
		//0x1422		III_requantize_L6
0x42EA0B33,	//0x1422		VoC_sub16_dr(REG3,0x42ea,REG6)
0xFFC07E9F,	//0x1424		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_rr(RL7,REG3,DEFAULT)
		//0x1426		III_requantize_L4
0x09830A83,	//0x1426		VoC_lw16i(REG3,0x983)
0xEFE577A4,	//0x1428		VoC_lw16i_short(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xfffffffd,DEFAULT)
0x1442353C,	//0x142a		VoC_be16_rr(root_table_end,REG7,REG4)
0x0B500A83,	//0x142c		VoC_lw16i(REG3,0xb50)
0x1442353D,	//0x142e		VoC_be16_rr(root_table_end,REG7,REG5)
0x0D740A83,	//0x1430		VoC_lw16i(REG3,0xd74)
0x04024107,	//0x1432		VoC_be16_rd(root_table_end,REG7,0x402)
0x10000A83,	//0x1434		VoC_lw16i(REG3,0x1000)
0x42EA40A7,	//0x1436		VoC_be16_rd(root_table_end,REG7,0x42ea)
0x13070A83,	//0x1438		VoC_lw16i(REG3,0x1307)
0x04084087,	//0x143a		VoC_be16_rd(root_table_end,REG7,0x408)
0x16A10A83,	//0x143c		VoC_lw16i(REG3,0x16a1)
0x44FE4027,	//0x143e		VoC_be16_rd(root_table_end,REG7,0x44fe)
0x1AE90A83,	//0x1440		VoC_lw16i(REG3,0x1ae9)
		//0x1442		root_table_end
0x701AFF3A,	//0x1442		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x0912F401,	//0x1444		VoC_add32_rd(REG45,REG45,0x400)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xF9640400,	//0x1446		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x400)(hi)
0xF032CD5C,	//0x1448		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG3,DEFAULT)
0xCE63FDE4,	//0x144a		VoC_macX_rr(REG4,REG3,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0x144F31C7,	//0x144c		VoC_bnez16_r(III_requantize_Lend,REG7)
0xDF80FF3C,	//0x144e		VoC_pop16(REG0,DEFAULT)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
		//0x144f		III_requantize_Lend
0xDFA9DF06,	//0x1450		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x47FD6C03,	//0x1452		VoC_bez16_d(III_requantize_exit,0x47fd)
0xE580F15C,	//0x1454		VoC_return	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
		//0x1455		III_requantize_exit
		//0x1456		CII_decode_error
0xF007DFE9,	//0x1456		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0A80F15C,	//0x1458		VoC_lw16i(REG0,0x235)(lo)	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
0x35B00235,	//0x145a		VoC_bne16_rr(no_decode_error_exit,REG6,REG0)(lo)	|	VoC_lw16i(REG0,0x235)(hi)
0xE5CB145E,	//0x145c		VoC_jump(decode_error_exit)	|	VoC_bne16_rr(no_decode_error_exit,REG6,REG0)(hi)
		//0x145e		no_decode_error_exit
0x02010A80,	//0x145e		VoC_lw16i(REG0,0x201)
0x146835B0,	//0x1460		VoC_bne16_rr(decode_error_exit,REG6,REG0)
0xFFC0701C,	//0x1462		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0x03C32B80,	//0x1464		VoC_jal(CII_mad_frame_mute)
0x00200A87,	//0x1466		VoC_lw16i(REG7,0x20)
		//0x1468		decode_error_exit
0xF21CDFA9,	//0x1468		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x146a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x146c		CII_III_stereo
0xF401701A,	//0x146c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0x4502070C,	//0x146e		VoC_add16_rd(REG4,REG1,0x4502)
0x003A0A85,	//0x1470		VoC_lw16i(REG5,0x3a)
0x59A2C069,	//0x1472		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xD98BE082,	//0x1474		VoC_lw32_p(REG67,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,IN_PARALLEL)
0x147C35AF,	//0x1476		VoC_bne16_rr(III_stereo_Lerr,REG5,REG7)
0xE416E414,	//0x1478		VoC_and16_rr(REG6,REG2,DEFAULT)	|	VoC_and16_rr(REG4,REG2,DEFAULT)
0x14803526,	//0x147a		VoC_be16_rr(III_stereo_Lbeg,REG4,REG6)
		//0x147c		III_stereo_Lerr
0x02390A84,	//0x147c		VoC_lw16i(REG4,0x239)
0x163D2B00,	//0x147e		VoC_jump_lg(III_stereo_L52)
		//0x1480		III_stereo_Lbeg
0x5FC3DFC0,	//0x1480		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x180AFF45,	//0x1482		VoC_lw16i_set_inc(REG2,0x668e,0x2)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x1404668E,	//0x1484		VoC_lw16_d(REG4,0x47da)(lo)	|	VoC_lw16i_set_inc(REG2,0x668e,0x2)(hi)
0x608547DA,	//0x1486		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x47da)(hi)
0xFFC0DFC1,	//0x1488		VoC_NAD	|	VoC_push16(REG1,IN_PARALLEL)
0xFF476A62,	//0x148a		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_loop_i_short(0x13,DEFAULT)
		//0x148c		VoC_endloop0
0xF68C5DD2,	//0x148c		VoC_movreg16(RL6_LO,REG4,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0x1604DC24,	//0x148e		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0x31C40001,	//0x1490		VoC_bnez16_r(III_stereo_Le0,REG4)(lo)	|	VoC_and16_ri(REG4,0x1)(hi)
0x2B001496,	//0x1492		VoC_jump_lg(III_stereo_L44)(lo)	|	VoC_bnez16_r(III_stereo_Le0,REG4)(hi)
0xFFC015EA,	//0x1494		VoC_NAD	|	VoC_jump_lg(III_stereo_L44)(hi)
		//0x1496		III_stereo_Le0
0x47E01404,	//0x1496		VoC_lw16_d(REG4,0x47e0)
0x01001684,	//0x1498		VoC_or16_ri(REG4,0x100)
0x04040702,	//0x149a		VoC_add16_rd(REG2,REG0,0x404)
0x47E01504,	//0x149c		VoC_sw16_d(REG4,0x47e0)
0xFF42604A,	//0x149e		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_movreg16(ACC1_LO,REG2,DEFAULT)
0x44FE4027,	//0x14a0		VoC_be16_rd(no_III_stereo_L18,REG7,0x44fe)
0x150E2B00,	//0x14a2		VoC_jump_lg(III_stereo_L18)
		//0x14a4		no_III_stereo_L18
0x66B61587,	//0x14a4		VoC_sw32_d(RL7,0x66b6)
0x66B8150E,	//0x14a6		VoC_sw16_d(RL7_LO,0x66b8)
0xE000700D,	//0x14a8		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x14C13186,	//0x14aa		VoC_bez16_r(III_stereo_L7,REG6)
		//0x14ac		III_stereo_L3
0xDE00D8B6,	//0x14ac		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xC13440B1,	//0x14ae		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG2,REG6,DEFAULT)
0xF6884071,	//0x14b0		VoC_movreg16(ACC0_LO,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xFFC059D2,	//0x14b2		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x14BA2E30,	//0x14b4		VoC_loop_r(0,REG6)
0x14BA3302,	//0x14b6		VoC_bez32_r(III_stereo_L4,REG45)
0xE5C3E00E,	//0x14b8		VoC_jump(III_stereo_L5)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
		//0x14ba		III_stereo_L4
		//0x14ba		VoC_endloop0
0xFFC059D2,	//0x14ba		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x14bc		III_stereo_L5
0xF7046022,	//0x14bc		VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x44EE4AB4,	//0x14be		VoC_blt16_rd(III_stereo_L3,REG4,0x44ee)
0xF001E00F,	//0x14c0		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_movreg16(RL7_HI,REG0,DEFAULT)
		//0x14c1		III_stereo_L7
0x66B60A87,	//0x14c2		VoC_lw16i(REG7,0x66b6)
		//0x14c4		III_stereo_L8
0xDE0058B6,	//0x14c4		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xC1954134,	//0x14c6		VoC_add16_rr(REG5,REG6,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC1756088,	//0x14c8		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0xD9D260AD,	//0x14ca		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,REG5,DEFAULT)
0x14D42E30,	//0x14cc		VoC_loop_r(0,REG6)
0x14D43302,	//0x14ce		VoC_bez32_r(III_stereo_L9,REG45)
0xE00BC1CD,	//0x14d0		VoC_movreg16(ACC1_HI,REG0,DEFAULT)	|	VoC_add16_rr(REG5,REG7,REG1,DEFAULT)
0xE5C2DC50,	//0x14d2		VoC_jump(III_stereo_L10)	|	VoC_sw16_p(REG0,REG5,DEFAULT)
		//0x14d4		III_stereo_L9
		//0x14d4		VoC_endloop0
0xE1A2D9D2,	//0x14d4		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x14d5		III_stereo_L10
0xE026E104,	//0x14d6		VoC_movreg16(REG6,REG1,DEFAULT)	|	VoC_movreg16(REG4,ACC0_LO,DEFAULT)
0x14DC31C1,	//0x14d8		VoC_bnez16_r(III_stereo_Lw1,REG1)
0xE5C5F021,	//0x14da		VoC_jump(III_stereo_Lw2)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
		//0x14dc		III_stereo_Lw1
0x441EF001,	//0x14dc		VoC_bne16_rd(III_stereo_Lw2,REG6,0x408)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xF0410408,	//0x14de		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_bne16_rd(III_stereo_Lw2,REG6,0x408)(hi)
		//0x14e0		III_stereo_Lw2
0x04064A24,	//0x14e0		VoC_blt16_rd(III_stereo_L8,REG4,0x406)
0x3184E164,	//0x14e2		VoC_bez16_r(III_stereo_L12,REG4)(lo)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0xE1EE14E6,	//0x14e4		VoC_movreg16(RL7_LO,RL7_HI,DEFAULT)	|	VoC_bez16_r(III_stereo_L12,REG4)(hi)
		//0x14e6		III_stereo_L12
0xF7C46185,	//0x14e6		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0x7FFE1645,	//0x14e8		VoC_and16_ri(REG5,0xfffe)
0x668E1805,	//0x14ea		VoC_lw16i_set_inc(REG1,0x668e,0x1)
0x14F03144,	//0x14ec		VoC_bngtz16_r(III_stereo_L12_1,REG4)
0xDC95E701,	//0x14ee		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
		//0x14ef		VoC_endloop0
		//0x14f0		III_stereo_L12_1
0x6160F006,	//0x14f0		VoC_movreg16(REG0,ACC1_HI,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1805F7E4,	//0x14f2		VoC_lw16i_set_inc(REG1,0x668e,0x1)(lo)	|	VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)
0xFFC0668E,	//0x14f4		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x668e,0x1)(hi)
		//0x14f6		III_stereo_L13
0x150C3484,	//0x14f6		VoC_bngt16_rr(III_stereo_L17,REG0,REG4)
0xC063C1F2,	//0x14f8		VoC_add16_rr(REG3,REG1,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG7,REG6,DEFAULT)
0x3494D822,	//0x14fa		VoC_bngt16_rr(III_stereo_L16,REG2,REG4)(lo)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xDCB514FE,	//0x14fc		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_bngt16_rr(III_stereo_L16,REG2,REG4)(hi)
		//0x14fe		III_stereo_L16
0x31C6E0C3,	//0x14fe		VoC_bnez16_r(III_stereo_Lw3,REG6)(lo)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0xF0261503,	//0x1500		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_bnez16_r(III_stereo_Lw3,REG6)(hi)
0xF006E5C6,	//0x1502		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jump(III_stereo_Lw4)
		//0x1503		III_stereo_Lw3
0x04084423,	//0x1504		VoC_bne16_rd(III_stereo_Lw4,REG3,0x408)
0xFFC07046,	//0x1506		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
		//0x1508		III_stereo_Lw4
0x04080724,	//0x1508		VoC_add16_rd(REG4,REG4,0x408)
0xFFC065EC,	//0x150a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_stereo_L13)
		//0x150c		III_stereo_L17
0x152F2B00,	//0x150c		VoC_jump_lg(III_stereo_L23)
		//0x150e		III_stereo_L18
0x7007F000,	//0x150e		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xD8B6E004,	//0x1510		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
		//0x1511		III_stereo_L19
0xDE0040B1,	//0x1512		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG2,REG6,DEFAULT)
0xC1344071,	//0x1514		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xD9D26088,	//0x1516		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0x151E2E30,	//0x1518		VoC_loop_r(0,REG6)
0x151E3302,	//0x151a		VoC_bez32_r(III_stereo_L20,REG45)
0xE5C3E007,	//0x151c		VoC_jump(III_stereo_L21)	|	VoC_movreg16(REG7,REG0,DEFAULT)
		//0x151e		III_stereo_L20
		//0x151e		VoC_endloop0
0xFFC059D2,	//0x151e		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x1520		III_stereo_L21
0xF7046022,	//0x1520		VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x04064ABC,	//0x1522		VoC_blt16_rd(III_stereo_L19,REG4,0x406)
0x0A82E185,	//0x1524		VoC_lw16i(REG2,0x668e)(lo)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0x1645668E,	//0x1526		VoC_and16_ri(REG5,0xfffe)(lo)	|	VoC_lw16i(REG2,0x668e)(hi)
0x31477FFE,	//0x1528		VoC_bngtz16_r(III_stereo_L23,REG7)(lo)	|	VoC_and16_ri(REG5,0xfffe)(hi)
0xF032152F,	//0x152a		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_bngtz16_r(III_stereo_L23,REG7)(hi)
0xDCA5E7C1,	//0x152c		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x152d		VoC_endloop0
0xD623F052,	//0x152e		VoC_lw16_sd(REG3,0x1,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
		//0x152f		III_stereo_L23
0x0A84D610,	//0x1530		VoC_lw16i(REG4,0x1000)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x28041000,	//0x1532		VoC_and16_rd(REG4,0x47e0)(lo)	|	VoC_lw16i(REG4,0x1000)(hi)
0x318447E0,	//0x1534		VoC_bez16_r(III_stereo_L35,REG4)(lo)	|	VoC_and16_rd(REG4,0x47e0)(hi)
0x07851599,	//0x1536		VoC_sub16_rd(REG5,REG0,0x408)(lo)	|	VoC_bez16_r(III_stereo_L35,REG4)(hi)
0x0A860408,	//0x1538		VoC_lw16i(REG6,0x439a)(lo)	|	VoC_sub16_rd(REG5,REG0,0x408)(hi)
0x0700439A,	//0x153a		VoC_add16_rd(REG0,REG0,0x44f0)(lo)	|	VoC_lw16i(REG6,0x439a)(hi)
0x180544F0,	//0x153c		VoC_lw16i_set_inc(REG1,0x48b2,0x1)(lo)	|	VoC_add16_rd(REG0,REG0,0x44f0)(hi)
0x180648B2,	//0x153e		VoC_lw16i_set_inc(REG2,0x668e,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x48b2,0x1)(hi)
0xD855668E,	//0x1540		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x668e,0x1)(hi)
0x00011605,	//0x1542		VoC_and16_ri(REG5,0x1)
0x4175F8E5,	//0x1544		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_shr16_ri(REG5,0xfffffffc,DEFAULT)
0xE0ADE004,	//0x1546		VoC_movreg16(RL6_HI,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
		//0x1548		III_stereo_L24
0x04064824,	//0x1548		VoC_blt16_rd(III_stereo_L25,REG4,0x406)
0x15EA2B00,	//0x154a		VoC_jump_lg(III_stereo_L44)
		//0x154c		III_stereo_L25
0xF68C58B6,	//0x154c		VoC_movreg16(RL6_LO,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0x5825E0CA,	//0x154e		VoC_lw16_p(REG5,REG2,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG6,DEFAULT)
0x642CE014,	//0x1550		VoC_and16_rr(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x3184D897,	//0x1552		VoC_bez16_r(III_stereo_La10,REG4)(lo)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x16451592,	//0x1554		VoC_and16_ri(REG5,0xfffe)(lo)	|	VoC_bez16_r(III_stereo_La10,REG4)(hi)
0x31877FFE,	//0x1556		VoC_bez16_r(III_stereo_L26,REG7)(lo)	|	VoC_and16_ri(REG5,0xfffe)(hi)
0xDC25155C,	//0x1558		VoC_sw16_p(REG5,REG2,DEFAULT)	|	VoC_bez16_r(III_stereo_L26,REG7)(hi)
0x15922B00,	//0x155a		VoC_jump_lg(III_stereo_La10)
		//0x155c		III_stereo_L26
0x3146D807,	//0x155c		VoC_bngtz16_r(III_stereo_La10,REG6)(lo)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xDF451592,	//0x155e		VoC_push32(ACC1,DEFAULT)	|	VoC_bngtz16_r(III_stereo_La10,REG6)(hi)
0xF7845F40,	//0x1560		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0xF0097050,	//0x1562		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD6307021,	//0x1564		VoC_lw16_sd(REG0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF6EF43CD,	//0x1566		VoC_movreg16(RL7_HI,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG7,REG1,DEFAULT)
0xF80D640F,	//0x1568		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG1,DEFAULT)
0x4020C020,	//0x156a		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x61A1F6EE,	//0x156c		VoC_movreg16(REG1,RL6_HI,DEFAULT)	|	VoC_movreg16(RL7_LO,REG7,IN_PARALLEL)
0x5983F6C4,	//0x156e		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_movreg16(REG4,REG6,IN_PARALLEL)
0x0701C14D,	//0x1570		VoC_add16_rd(REG1,REG0,0x404)(lo)	|	VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)
0x58550404,	//0x1572		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_add16_rd(REG1,REG0,0x404)(hi)
0x2E20F68A,	//0x1574		VoC_loop_r(0,REG4)(lo)	|	VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)
0xE1E4158C,	//0x1576		VoC_movreg16(REG4,RL7_HI,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0x158A3184,	//0x1578		VoC_bez16_r(III_stereo_La11,REG4)
0x1485DF43,	//0x157a		VoC_lw32_d(ACC1,0x400)(lo)	|	VoC_push32(REG67,DEFAULT)
0xC95B0400,	//0x157c		VoC_add32_rr(REG67,ACC1,REG67,DEFAULT)	|	VoC_lw32_d(ACC1,0x400)(hi)
0xF966CD7C,	//0x157e		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)
0xCE6EFDE4,	//0x1580		VoC_macX_rr(REG5,REG6,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0x61C4FFC0,	//0x1582		VoC_movreg16(REG4,RL7_LO,DEFAULT)	|	VoC_NOP
0x3184DF03,	//0x1584		VoC_bez16_r(III_stereo_La12,REG4)(lo)	|	VoC_pop32(REG67,IN_PARALLEL)
0xDD841589,	//0x1586		VoC_sw32_p(ACC0,REG0,DEFAULT)	|	VoC_bez16_r(III_stereo_La12,REG4)(hi)
0xFF23E5C2,	//0x1588		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_jump(III_stereo_La11)
		//0x1589		III_stereo_La12
		//0x158a		III_stereo_La11
0xDDCBDE00,	//0x158a		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x158c		VoC_endloop0
0xF7E45983,	//0x158c		VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xF0045F00,	//0x158e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xF0055F05,	//0x1590		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_pop32(ACC1,DEFAULT)
		//0x1592		III_stereo_La10
0xDE106184,	//0x1592		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_movreg16(REG4,RL6_LO,DEFAULT)
0x4134E146,	//0x1594		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_movreg16(REG6,ACC1_LO,DEFAULT)
0x2B00DE00,	//0x1596		VoC_jump_lg(III_stereo_L24)(lo)	|	VoC_inc_p(REG0,IN_PARALLEL)
0xF0061548,	//0x1598		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jump_lg(III_stereo_L24)(hi)
		//0x1599		III_stereo_L35
0x668E1805,	//0x159a		VoC_lw16i_set_inc(REG1,0x668e,0x1)
0x44F00700,	//0x159c		VoC_add16_rd(REG0,REG0,0x44f0)
		//0x159e		III_stereo_Lb01
0x04064826,	//0x159e		VoC_blt16_rd(III_stereo_Lb,REG6,0x406)
0x15EA2B00,	//0x15a0		VoC_jump_lg(III_stereo_L44)
		//0x15a2		III_stereo_Lb
0xE01458B5,	//0x15a2		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xF6CF5812,	//0x15a4		VoC_movreg16(RL7_HI,REG6,IN_PARALLEL)	|	VoC_lw16_p(REG2,REG1,DEFAULT)
0xD8876414,	//0x15a6		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG2,DEFAULT)
0x15E43184,	//0x15a8		VoC_bez16_r(III_stereo_Lb10,REG4)
0x42DE4887,	//0x15aa		VoC_blt16_rd(III_stereo_Lb0,REG7,0x42de)
0x7FFE1642,	//0x15ac		VoC_and16_ri(REG2,0xfffe)
0xDC12FFC0,	//0x15ae		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_NOP
0x15E42B00,	//0x15b0		VoC_jump_lg(III_stereo_Lb10)
		//0x15b2		III_stereo_Lb0
0x15E43145,	//0x15b2		VoC_bngtz16_r(III_stereo_Lb10,REG5)
0xDF405FC3,	//0x15b4		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xD64060E3,	//0x15b6		VoC_lw16_sd(REG0,0x3,IN_PARALLEL)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x43920A84,	//0x15b8		VoC_lw16i(REG4,0x4392)
0x4030C030,	//0x15ba		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x6002C11E,	//0x15bc		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG3,IN_PARALLEL)
0x071BC31B,	//0x15be		VoC_add16_rd(REG3,REG3,0x4504)(lo)	|	VoC_sub16_rr(REG3,REG4,REG3,IN_PARALLEL)
0x07014504,	//0x15c0		VoC_add16_rd(REG1,REG0,0x404)(lo)	|	VoC_add16_rd(REG3,REG3,0x4504)(hi)
0x58640404,	//0x15c2		VoC_lw16_p(REG4,REG6,DEFAULT)	|	VoC_add16_rd(REG1,REG0,0x404)(hi)
0x5833F008,	//0x15c4		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xFFC0F009,	//0x15c6		VoC_NAD	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x15E02E28,	//0x15c8		VoC_loop_r(0,REG5)
0x04001484,	//0x15ca		VoC_lw32_d(ACC0,0x400)
0xC92BD9D5,	//0x15cc		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG2,DEFAULT)
0xCD3CF966,	//0x15ce		VoC_multf32_rr(ACC0,REG4,REG7,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xFDE4FFC0,	//0x15d0		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0CE66,	//0x15d2		VoC_NOP	|	VoC_macX_rr(REG4,REG6,DEFAULT)
0xDDC4FFC0,	//0x15d4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_NOP
0x04001484,	//0x15d6		VoC_lw32_d(ACC0,0x400)
0xF966C92B,	//0x15d8		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)
0xFFC0CCFC,	//0x15da		VoC_NOP	|	VoC_multf32_rr(ACC0,REG3,REG7,DEFAULT)
0xCE5EFDE4,	//0x15dc		VoC_macX_rr(REG3,REG6,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xFFC0FFC0,	//0x15de		VoC_NOP	|	VoC_NOP
		//0x15e0		VoC_endloop0
0x5F00DDCC,	//0x15e0		VoC_pop32(REG01,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xF030DF83,	//0x15e2		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(REG3,IN_PARALLEL)
		//0x15e4		III_stereo_Lb10
0xF00561E6,	//0x15e4		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_HI,DEFAULT)
0xDE08C1AE,	//0x15e6		VoC_inc_p(REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x159E2B00,	//0x15e8		VoC_jump_lg(III_stereo_Lb01)
		//0x15ea		III_stereo_L44
0xE0275F81,	//0x15ea		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x47DA1401,	//0x15ec		VoC_lw16_d(REG1,0x47da)
0xE439DF83,	//0x15ee		VoC_and16_rr(REG1,REG7,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x3181DF80,	//0x15f0		VoC_bez16_r(III_stereo_L50,REG1)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x0A87163C,	//0x15f2		VoC_lw16i(REG7,0xb50)(lo)	|	VoC_bez16_r(III_stereo_L50,REG1)(hi)
0x14060B50,	//0x15f4		VoC_lw16_d(REG6,0x47e0)(lo)	|	VoC_lw16i(REG7,0xb50)(hi)
0x168647E0,	//0x15f6		VoC_or16_ri(REG6,0x200)(lo)	|	VoC_lw16_d(REG6,0x47e0)(hi)
0x07010200,	//0x15f8		VoC_add16_rd(REG1,REG0,0x404)(lo)	|	VoC_or16_ri(REG6,0x200)(hi)
0x7F070404,	//0x15fa		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_add16_rd(REG1,REG0,0x404)(hi)
0xFF42F661,	//0x15fc		VoC_lw32z(REG45,DEFAULT)	|	VoC_movreg16(REG1,REG3,IN_PARALLEL)
0x47E01506,	//0x15fe		VoC_sw16_d(REG6,0x47e0)
0x668E1804,	//0x1600		VoC_lw16i_set_inc(REG0,0x668e,0x1)
		//0x1602		III_stereo_L45
0x04064824,	//0x1602		VoC_blt16_rd(III_stereo_L45_1,REG4,0x406)
0x163C2B00,	//0x1604		VoC_jump_lg(III_stereo_L50)
		//0x1606		III_stereo_L45_1
0xF68A58B6,	//0x1606		VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xF68B5885,	//0x1608		VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0x44FE4025,	//0x160a		VoC_be16_rd(III_stereo_L45_2,REG5,0x44fe)
0x16382B00,	//0x160c		VoC_jump_lg(III_stereo_L49)
		//0x160e		III_stereo_L45_2
0x16383146,	//0x160e		VoC_bngtz16_r(III_stereo_L49,REG6)
0xF00B5FC3,	//0x1610		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xFDF9FF29,	//0x1612		VoC_shru32_ri(REG23,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0xDF4049C9,	//0x1614		VoC_push32(REG01,IN_PARALLEL)	|	VoC_add32_rr(REG23,RL7,REG23,DEFAULT)
0xF00A6040,	//0x1616		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0x16342E30,	//0x1618		VoC_loop_r(0,REG6)
0xD99CD996,	//0x161a		VoC_lw32_p(ACC0,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xCBA049A6,	//0x161c		VoC_sub32_rr(REG01,RL6,ACC0,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)
0x04001484,	//0x161e		VoC_lw32_d(ACC0,0x400)
0xF964C932,	//0x1620		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0xFFC0CDEC,	//0x1622		VoC_NOP	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xFDE4FFC0,	//0x1624		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0CE7C,	//0x1626		VoC_NOP	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xDDD4FFC0,	//0x1628		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x04001484,	//0x162a		VoC_lw32_d(ACC0,0x400)
0xF964C902,	//0x162c		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_add32_rr(REG45,ACC0,REG01,DEFAULT)
0xFFC0CDEC,	//0x162e		VoC_NOP	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xCE7CFDE4,	//0x1630		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xFFC0FFC0,	//0x1632		VoC_NOP	|	VoC_NOP
		//0x1634		VoC_endloop0
0xDF83DDDC,	//0x1634		VoC_pop16(REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xDF006164,	//0x1636		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
		//0x1638		III_stereo_L49
0xF0074134,	//0x1638		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x16022B00,	//0x163a		VoC_jump_lg(III_stereo_L45)
		//0x163c		III_stereo_L50
0xE580F004,	//0x163c		VoC_return	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x163d		III_stereo_L52
		//0x163e		Coolsand_III_equalizer
0x403C1484,	//0x163e		VoC_lw32_d(ACC0,0x403c)
0x33470A86,	//0x1640		VoC_lw16i(REG6,0x3347)
0x00480A87,	//0x1642		VoC_lw16i(REG7,0x48)
0x7FC31546,	//0x1644		VoC_sw16_d(REG6,0xffc3)
0x7FC21547,	//0x1646		VoC_sw16_d(REG7,0xffc2)
0x7FC415C4,	//0x1648		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x164a		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x164c		VoC_cfg_lg(0x8,)
0x40087021,	//0x164e		VoC_bltz16_d(Coolsand_III_equalizer_L0,0x4008)
0x668E0A87,	//0x1650		VoC_lw16i(REG7,0x668e)
0x0836F166,	//0x1652		VoC_mult16_rd(REG6,REG6,0x4008)(lo)	|	VoC_lw16i_short(REG6,0xb,DEFAULT)
0x18044008,	//0x1654		VoC_lw16i_set_inc(REG0,0x668e,0x1)(lo)	|	VoC_mult16_rd(REG6,REG6,0x4008)(hi)
0x4030668E,	//0x1656		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x668e,0x1)(hi)
0x1807FF42,	//0x1658		VoC_lw16i_set_inc(REG3,0x6712,0x1)(lo)	|	VoC_lw32z(REG45,IN_PARALLEL)
0x719A6712,	//0x165a		VoC_lw16i_short(FORMATX,0xc,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x6712,0x1)(hi)
0xD8B5F5E9,	//0x165c		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffd,IN_PARALLEL)
0xDE10D884,	//0x165e		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x166E2E29,	//0x1660		VoC_loop_r(1,REG5)
0xE749D8B5,	//0x1662		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0x7BFBD993,	//0x1664		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG67,REG2,DEFAULT)
0xF90EFF44,	//0x1666		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xCE3CCE74,	//0x1668		VoC_mac32_rr(REG7,REG4,DEFAULT)	|	VoC_macX_rr(REG6,REG4,DEFAULT)
0xFFC08104,	//0x166a		VoC_NOP	|	VoC_add16_rp(REG4,REG4,REG0,DEFAULT)
		//0x166c		VoC_endloop0
0x8704DDD4,	//0x166c		VoC_sub16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x166e		VoC_endloop1
0xFFC08104,	//0x166e		VoC_NOP	|	VoC_add16_rp(REG4,REG4,REG0,DEFAULT)
		//0x166f		Coolsand_III_equalizer_L0
0xFFC06580,	//0x1670		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1672		CII_III_imdct_l
0xDF405FE9,	//0x1672		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF401701A,	//0x1674		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0xF6245FC7,	//0x1676		VoC_movreg16(REG4,REG1,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x17762B80,	//0x1678		VoC_jal(CII_imdct36)
0xDF875F00,	//0x167a		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xF6205FA9,	//0x167c		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x43621806,	//0x167e		VoC_lw16i_set_inc(REG2,0x4362,0x1)
0x04001486,	//0x1680		VoC_lw32_d(RL6,0x400)
0x31C7FF47,	//0x1682		VoC_bnez16_r(III_imdct_l_100,REG7)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x938B1694,	//0x1684		VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_bnez16_r(III_imdct_l_100,REG7)(hi)
0xF96699D5,	//0x1686		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG2,DEFAULT)
0xD1327DE5,	//0x1688		VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0x938B6C87,	//0x168a		VoC_add32inc_rp(REG67,RL6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x24,DEFAULT)
0x99D57966,	//0x168c		VoC_multf32_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0x7DE5DDC5,	//0x168e		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x938BD132,	//0x1690		VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
		//0x1691		VoC_endloop0
0x16CD2B00,	//0x1692		VoC_jump_lg(III_imdct_l_end)
		//0x1694		III_imdct_l_100
0x040845A7,	//0x1694		VoC_bne16_rd(III_imdct_l_200,REG7,0x408)
0x2C05F245,	//0x1696		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_short(REG5,0x12,DEFAULT)
0xE02016AB,	//0x1698		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0x99D5938B,	//0x169a		VoC_multf32_rp(ACC1,REG7,REG2,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)
0x7DE5F966,	//0x169c		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xFFC0D132,	//0x169e		VoC_NAD	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
0x938B6748,	//0x16a0		VoC_add32inc_rp(REG67,RL6,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0x99D57966,	//0x16a2		VoC_multf32_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0x7DE5DDC5,	//0x16a4		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x938BD132,	//0x16a6		VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
		//0x16a8		VoC_endloop0
0x1806F0C5,	//0x16a8		VoC_lw16i_set_inc(REG2,0x438c,0x1)(lo)	|	VoC_lw16i_short(REG5,0x6,DEFAULT)
0x0709438C,	//0x16aa		VoC_add16_rd(REG1,REG1,0x44fc)(lo)	|	VoC_lw16i_set_inc(REG2,0x438c,0x1)(hi)
		//0x16ab		VoC_endloop1
0xE8C144FC,	//0x16ac		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x44fc)(hi)
		//0x16ae		VoC_endloop0
0xE5DEDDC7,	//0x16ae		VoC_jump(III_imdct_l_end)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
		//0x16b0		III_imdct_l_200
0x42DF45AF,	//0x16b0		VoC_bne16_rd(III_imdct_l_end,REG7,0x42df)
0xE06568C2,	//0x16b2		VoC_lw16i_short(REG5,0x6,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
		//0x16b4		VoC_endloop0
0x1806DDCF,	//0x16b4		VoC_lw16i_set_inc(REG2,0x4386,0x1)(lo)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0x2C054386,	//0x16b6		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x4386,0x1)(hi)
0xE02016CB,	//0x16b8		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0x99D5938B,	//0x16ba		VoC_multf32_rp(ACC1,REG7,REG2,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)
0x7DE5F966,	//0x16bc		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xFFC0D132,	//0x16be		VoC_NAD	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
0x938B6748,	//0x16c0		VoC_add32inc_rp(REG67,RL6,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0x99D57966,	//0x16c2		VoC_multf32_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0x7DE5DDC5,	//0x16c4		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x938BD132,	//0x16c6		VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
		//0x16c8		VoC_endloop0
0x1806F245,	//0x16c8		VoC_lw16i_set_inc(REG2,0x4374,0x1)(lo)	|	VoC_lw16i_short(REG5,0x12,DEFAULT)
0x07094374,	//0x16ca		VoC_add16_rd(REG1,REG1,0x44fc)(lo)	|	VoC_lw16i_set_inc(REG2,0x4374,0x1)(hi)
		//0x16cb		VoC_endloop1
0xE58044FC,	//0x16cc		VoC_return	|	VoC_add16_rd(REG1,REG1,0x44fc)(hi)
		//0x16cd		III_imdct_l_end
		//0x16ce		CII_III_imdct_s
0x433E1805,	//0x16ce		VoC_lw16i_set_inc(REG1,0x433e,0x1)
0x04001487,	//0x16d0		VoC_lw32_d(RL7,0x400)
0xFF445F40,	//0x16d2		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x27B8180A,	//0x16d4		VoC_lw16i_set_inc(REG2,0x27b8,0x2)
0x27C21FBB,	//0x16d6		VoC_lw16i_set_inc(REG3,0x27c2,0xfffffffe)
0xF4027085,	//0x16d8		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0x27AC0A8C,	//0x16da		VoC_lw16i(RL6_LO,0x27ac)
0x27B60A8D,	//0x16dc		VoC_lw16i(RL6_HI,0x27b6)
0xFFC07019,	//0x16de		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
		//0x16e0		III_imdcdt_loop_100
0x16FA2C07,	//0x16e0		VoC_loop_i(0x1,0x3)
0xFFC07044,	//0x16e2		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x16e4		III_imdcdt_loop_110
0xF90C7F44,	//0x16e4		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x93C368C7,	//0x16e6		VoC_add32inc_rp(REG67,RL7,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xF96699CD,	//0x16e8		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG1,DEFAULT)
0xD1717DE5,	//0x16ea		VoC_macXinc_rp(REG6,REG1,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0xC92C93C3,	//0x16ec		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_add32inc_rp(REG67,RL7,REG0,DEFAULT)
		//0x16ed		VoC_endloop0
0xFF0E7F31,	//0x16ee		VoC_movreg32(RL6,REG23,IN_PARALLEL)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0x16F43184,	//0x16f0		VoC_bez16_r(III_imdcdt_loop_120,REG4)
0x42EA0BA4,	//0x16f2		VoC_sub32_dr(ACC0,0x42ea,ACC0)
		//0x16f4		III_imdcdt_loop_120
0xD90B5DD4,	//0x16f4		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xF6C05DDC,	//0x16f6		VoC_movreg16(REG0,REG6,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x16E431C4,	//0x16f8		VoC_bnez16_r(III_imdcdt_loop_110,REG4)
		//0x16fa		VoC_endloop1
0x7248FFC0,	//0x16fa		VoC_lw16i_short(ACC0_LO,0x12,DEFAULT)	|	VoC_NAD
0xDF03E1E9,	//0x16fc		VoC_pop32(REG67,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0x1e,IN_PARALLEL)
0x44EA0736,	//0x16fe		VoC_add16_rd(REG6,REG6,0x44ea)
0xF6C060E1,	//0x1700		VoC_movreg16(REG0,REG6,IN_PARALLEL)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0xF90D5F43,	//0x1702		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xC9A64861,	//0x1704		VoC_add32_rr(RL6,RL6,ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,ACC0,DEFAULT)
0x16E031C5,	//0x1706		VoC_bnez16_r(III_imdcdt_loop_100,REG5)
0x66901831,	//0x1708		VoC_lw16i_set_inc(REG1,0x6690,0xc)
0x27AC1830,	//0x170a		VoC_lw16i_set_inc(REG0,0x27ac,0xc)
0x43861802,	//0x170c		VoC_lw16i_set_inc(REG2,0x4386,0x0)
0x438C1803,	//0x170e		VoC_lw16i_set_inc(REG3,0x438c,0x0)
0x2C0DFF06,	//0x1710		VoC_loop_i(0x1,0x6)(lo)	|	VoC_movreg32(RL6,REG01,DEFAULT)
0xFF441736,	//0x1712		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x6)(hi)
0x99D593C3,	//0x1714		VoC_multf32_rp(ACC1,REG7,REG2,DEFAULT)	|	VoC_add32inc_rp(REG67,RL7,REG0,DEFAULT)
0x7DE5F966,	//0x1716		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0x93C3D072,	//0x1718		VoC_add32inc_rp(REG67,RL7,REG0,DEFAULT)	|	VoC_macX_rp(REG6,REG2,IN_PARALLEL)
0xDDCDDDCC,	//0x171a		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x99DD7966,	//0x171c		VoC_multf32_rp(ACC1,REG7,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xE84DFFC0,	//0x171e		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_NAD
0x93C27DE5,	//0x1720		VoC_add32inc_rp(REG45,RL7,REG0,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0xFFC09954,	//0x1722		VoC_NOP	|	VoC_multf32_rp(ACC0,REG5,REG2,DEFAULT)
0x7DE4F964,	//0x1724		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG4,0xc,DEFAULT)
0xD062D073,	//0x1726		VoC_macX_rp(REG4,REG2,DEFAULT)	|	VoC_macX_rp(REG6,REG3,IN_PARALLEL)
0xC92C93C3,	//0x1728		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_add32inc_rp(REG67,RL7,REG0,DEFAULT)
0x99DD7966,	//0x172a		VoC_multf32_rp(ACC1,REG7,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
		//0x172c		VoC_endloop0
0xFF445DCC,	//0x172c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xD0737DE5,	//0x172e		VoC_macX_rp(REG6,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0xE0177026,	//0x1730		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xC99E4859,	//0x1732		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,REG67,DEFAULT)
0xC99E5DCD,	//0x1734		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x1736		VoC_endloop1
0xFF305DCC,	//0x1736		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xE580DF00,	//0x1738		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x173a		CII_III_aliasreduce
0xF019F01A,	//0x173a		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0x432E1806,	//0x173c		VoC_lw16i_set_inc(REG2,0x432e,0x1)
0x43361807,	//0x173e		VoC_lw16i_set_inc(REG3,0x4336,0x1)
0x04001487,	//0x1740		VoC_lw32_d(RL7,0x400)
0xDF41F7D1,	//0x1742		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0x1486F050,	//0x1744		VoC_lw32_d(RL6,0x400)(lo)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x07810400,	//0x1746		VoC_sub16_rd(REG1,REG0,0x44fe)(lo)	|	VoC_lw32_d(RL6,0x400)(hi)
0x2E3944FE,	//0x1748		VoC_loop_r(1,REG7)(lo)	|	VoC_sub16_rd(REG1,REG0,0x44fe)(hi)
0xD9871772,	//0x174a		VoC_lw32_p(RL7,REG0,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0x2C10D909,	//0x174c		VoC_loop_i(0x0,0x8)(lo)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0x918B176F,	//0x174e		VoC_add32_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x8)(hi)
0x4ABAFF42,	//0x1750		VoC_sub32_rr(REG45,REG45,RL7,DEFAULT)	|	VoC_lw32z(REG45,DEFAULT)
0x4992F966,	//0x1752		VoC_add32_rr(REG45,RL6,REG45,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,IN_PARALLEL)
0x796499D4,	//0x1754		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_multf32_rp(ACC0,REG7,REG2,IN_PARALLEL)
0xFDE4995D,	//0x1756		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG5,REG3,IN_PARALLEL)
0x7DE5D072,	//0x1758		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_macX_rp(REG6,REG2,DEFAULT)
0x7966C9BB,	//0x175a		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_add32_rr(REG67,RL6,RL7,IN_PARALLEL)
0xFFC0D063,	//0x175c		VoC_NOP	|	VoC_macX_rp(REG4,REG3,IN_PARALLEL)
0x492AD98F,	//0x175e		VoC_add32_rr(REG45,ACC0,ACC1,DEFAULT)	|	VoC_lw32_p(RL7,REG1,DEFAULT)
0xFFC099D4,	//0x1760		VoC_NOP	|	VoC_multf32_rp(ACC0,REG7,REG2,IN_PARALLEL)
0xDDCAFDE4,	//0x1762		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xC9BAD172,	//0x1764		VoC_add32_rr(REG45,RL6,RL7,DEFAULT)	|	VoC_macXinc_rp(REG6,REG2,DEFAULT)
0xF964995D,	//0x1766		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG5,REG3,DEFAULT)
0xD1637DE5,	//0x1768		VoC_macXinc_rp(REG4,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0xFFC0FFC0,	//0x176a		VoC_NOP	|	VoC_NOP
0xFFC0C92C,	//0x176c		VoC_NOP	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xD987DDC4,	//0x176e		VoC_lw32_p(RL7,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x176f		VoC_endloop0
0x44E50700,	//0x1770		VoC_add16_rd(REG0,REG0,0x44e5)
		//0x1772		VoC_endloop1
0x44FE0781,	//0x1772		VoC_sub16_rd(REG1,REG0,0x44fe)
0xE580DF01,	//0x1774		VoC_return	|	VoC_pop32(REG23,DEFAULT)
		//0x1776		CII_imdct36
0xF0045FC0,	//0x1776		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xF0055FC4,	//0x1778		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xF0077032,	//0x177a		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x406E0A81,	//0x177c		VoC_lw16i(REG1,0x406e)
0x04001486,	//0x177e		VoC_lw32_d(RL6,0x400)
0xF605020C,	//0x1780		VoC_movreg16(REG5,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)
0x66D80A82,	//0x1782		VoC_lw16i(REG2,0x66d8)
0x66EA0A83,	//0x1784		VoC_lw16i(REG3,0x66ea)
0xD9A36A47,	//0x1786		VoC_lw32_p(REG67,REG4,IN_PARALLEL)	|	VoC_loop_i_short(0x12,DEFAULT)
0x7966C8F3,	//0x1788		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xDCA7820C,	//0x178a		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG4,REG0,REG1,IN_PARALLEL)
0xD9A3DCB6,	//0x178c		VoC_lw32_p(REG67,REG4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x178d		VoC_endloop0
0x40700A81,	//0x178e		VoC_lw16i(REG1,0x4070)
0x820AE0A0,	//0x1790		VoC_add16inc_rp(REG2,REG0,REG1,DEFAULT)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0xD992820B,	//0x1792		VoC_lw32_p(REG45,REG2,DEFAULT)	|	VoC_add16inc_rp(REG3,REG0,REG1,DEFAULT)
0x020AD99B,	//0x1794		VoC_add16inc_rp(REG2,REG0,REG1,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x020BC8B2,	//0x1796		VoC_add16inc_rp(REG3,REG0,REG1,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL6,IN_PARALLEL)
0x9492C8F3,	//0x1798		VoC_sub32_rp(REG45,REG45,REG2,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)
0x90DBF964,	//0x179a		VoC_add32_rp(REG67,REG67,REG3,DEFAULT)	|	VoC_shru16_ri(REG4,0xc,DEFAULT)
0x66FC0A82,	//0x179c		VoC_lw16i(REG2,0x66fc)
0x67040A83,	//0x179e		VoC_lw16i(REG3,0x6704)
0xDCA57966,	//0x17a0		VoC_sw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xDCB4DCA7,	//0x17a2		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0x820CDCB6,	//0x17a4		VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xD9A4820D,	//0x17a6		VoC_lw32_p(ACC0,REG4,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0x820CD9AD,	//0x17a8		VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)	|	VoC_lw32_p(ACC1,REG5,DEFAULT)
0xD9A7820D,	//0x17aa		VoC_lw32_p(RL7,REG4,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0x820CD9AB,	//0x17ac		VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)	|	VoC_lw32_p(REG67,REG5,DEFAULT)
0x94E3820D,	//0x17ae		VoC_sub32_rp(REG67,REG67,REG4,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0x820C95EF,	//0x17b0		VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)	|	VoC_sub32_rp(RL7,RL7,REG5,DEFAULT)
0x9565820D,	//0x17b2		VoC_sub32_rp(ACC1,ACC1,REG4,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0x820C952C,	//0x17b4		VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)	|	VoC_sub32_rp(ACC0,ACC0,REG5,DEFAULT)
0x9524820D,	//0x17b6		VoC_sub32_rp(ACC0,ACC0,REG4,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0x956D4934,	//0x17b8		VoC_sub32_rp(ACC1,ACC1,REG5,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xC975020C,	//0x17ba		VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)
0x95E7820D,	//0x17bc		VoC_sub32_rp(RL7,RL7,REG4,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0xCB3A14EB,	//0x17be		VoC_sub32_rr(REG45,ACC0,RL7,IN_PARALLEL)	|	VoC_sub32_rp(REG67,REG67,REG5,DEFAULT)
0xDF43F964,	//0x17c0		VoC_push32(REG67,DEFAULT)	|	VoC_shru16_ri(REG4,0xc,DEFAULT)
0x5CB4DCA5,	//0x17c2		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x7966C95B,	//0x17c4		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_add32_rr(REG67,ACC1,REG67,IN_PARALLEL)
0x5CA7FF22,	//0x17c6		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_movreg32(REG45,ACC0,IN_PARALLEL)
0xDCB6F964,	//0x17c8		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_shru16_ri(REG4,0xc,IN_PARALLEL)
0xFF2B5CA5,	//0x17ca		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xF9665CB4,	//0x17cc		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xFF3A5CA7,	//0x17ce		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0xC8B25CB6,	//0x17d0		VoC_add32_rr(REG45,REG45,RL6,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDF037964,	//0x17d2		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xc,DEFAULT)
0xC8F35CA5,	//0x17d4		VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xF9665CB4,	//0x17d6		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x5CB6DCA7,	//0x17d8		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0x0A83E005,	//0x17da		VoC_lw16i(REG3,0x4408)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0A804408,	//0x17dc		VoC_lw16i(REG0,0x66d8)(lo)	|	VoC_lw16i(REG3,0x4408)(hi)
0x0A8166D8,	//0x17de		VoC_lw16i(REG1,0x66ea)(lo)	|	VoC_lw16i(REG0,0x66d8)(hi)
0xFF4566EA,	//0x17e0		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw16i(REG1,0x66ea)(hi)
0x17F82C05,	//0x17e2		VoC_loop_i(0x1,0x2)
0xD8B4E847,	//0x17e4		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0xFFC09B04,	//0x17e6		VoC_NOP	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xD161FDE4,	//0x17e8		VoC_macXinc_rp(REG4,REG1,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xC965FFC0,	//0x17ea		VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_NOP
		//0x17eb		VoC_endloop0
0x17F631C5,	//0x17ec		VoC_bnez16_r(III_imdct36_L1,REG5)
0xE0155F45,	//0x17ee		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_push32(ACC1,DEFAULT)
0x66FC0A80,	//0x17f0		VoC_lw16i(REG0,0x66fc)
0x67040A81,	//0x17f2		VoC_lw16i(REG1,0x6704)
0xFFC065C4,	//0x17f4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_imdct36_L2)
		//0x17f6		III_imdct36_L1
0xE0255F45,	//0x17f6		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_push32(ACC1,DEFAULT)
		//0x17f8		III_imdct36_L2
		//0x17f8		VoC_endloop1
0x4028FFC0,	//0x17f8		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_NOP
0xE889C069,	//0x17fa		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x9B04D8B4,	//0x17fc		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x44E40A82,	//0x17fe		VoC_lw16i(REG2,0x44e4)
0xD161FDE4,	//0x1800		VoC_macXinc_rp(REG4,REG1,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0x66900A87,	//0x1802		VoC_lw16i(REG7,0x6690)
		//0x1804		VoC_endloop0
0xFF444965,	//0x1804		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x41EED8A5,	//0x1806		VoC_add16_rr(REG6,REG7,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x0A80D8A5,	//0x1808		VoC_lw16i(REG0,0x6700)(lo)	|	VoC_lw16inc_p(REG5,REG2,IN_PARALLEL)
0x4B2C6700,	//0x180a		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw16i(REG0,0x6700)(hi)
0xC1EEDDB5,	//0x180c		VoC_add16_rr(REG6,REG7,REG5,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,IN_PARALLEL)
0x67080A81,	//0x180e		VoC_lw16i(REG1,0x6708)
0x6888DDB4,	//0x1810		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0xD8B4FF45,	//0x1812		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xD90F9B04,	//0x1814		VoC_lw32_sd(RL7,0x0,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xD161FDE4,	//0x1816		VoC_macXinc_rp(REG4,REG1,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xC965FFC0,	//0x1818		VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_NOP
		//0x1819		VoC_endloop0
0xD8A54B7D,	//0x181a		VoC_lw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0xD8A541EE,	//0x181c		VoC_lw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG7,REG5,DEFAULT)
0x66FE0A80,	//0x181e		VoC_lw16i(REG0,0x66fe)
0xC1EE5DB5,	//0x1820		VoC_add16_rr(REG6,REG7,REG5,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0x67060A81,	//0x1822		VoC_lw16i(REG1,0x6706)
0x6848DDB5,	//0x1824		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0xD8B4FF45,	//0x1826		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC09B04,	//0x1828		VoC_NOP	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xD161FDE4,	//0x182a		VoC_macXinc_rp(REG4,REG1,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xC965FFC0,	//0x182c		VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_NOP
		//0x182d		VoC_endloop0
0xD8A5497D,	//0x182e		VoC_lw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC1,RL7,DEFAULT)
0xD8A541EE,	//0x1830		VoC_lw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG7,REG5,DEFAULT)
0x66DA0A80,	//0x1832		VoC_lw16i(REG0,0x66da)
0xC1EE5DB5,	//0x1834		VoC_add16_rr(REG6,REG7,REG5,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0x66EC0A81,	//0x1836		VoC_lw16i(REG1,0x66ec)
0x6888DDB5,	//0x1838		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0xD8B4FF45,	//0x183a		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xD9179B04,	//0x183c		VoC_lw32_sd(RL7,0x1,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xD161FDE4,	//0x183e		VoC_macXinc_rp(REG4,REG1,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xC965FFC0,	//0x1840		VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_NOP
		//0x1841		VoC_endloop0
0xE00549EF,	//0x1842		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)
0x186C2C07,	//0x1844		VoC_loop_i(0x1,0x3)
0xFF456988,	//0x1846		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0xc,DEFAULT)
0x9B04D8B4,	//0x1848		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xFDE4FFC0,	//0x184a		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0D161,	//0x184c		VoC_NOP	|	VoC_macXinc_rp(REG4,REG1,DEFAULT)
		//0x184e		VoC_endloop0
0xD8A0C965,	//0x184e		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xD8A0C03E,	//0x1850		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_add16_rr(REG6,REG0,REG7,DEFAULT)
0x31C5C039,	//0x1852		VoC_bnez16_r(III_imdct36_L3,REG5)(lo)	|	VoC_add16_rr(REG1,REG0,REG7,DEFAULT)
0xC97C185C,	//0x1854		VoC_add32_rr(ACC0,ACC1,RL7,DEFAULT)	|	VoC_bnez16_r(III_imdct36_L3,REG5)(hi)
0xDDB4FF45,	//0x1856		VoC_sw32_p(ACC0,REG6,DEFAULT)	|	VoC_lw32z(ACC1,DEFAULT)
0xF025CB64,	//0x1858		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC1,ACC0,DEFAULT)
0xE5CFDD8C,	//0x185a		VoC_jump(III_imdct36_L5)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x185c		III_imdct36_L3
0x04084485,	//0x185c		VoC_bne16_rd(III_imdct36_L4,REG5,0x408)
0xF045C97C,	//0x185e		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_add32_rr(ACC0,ACC1,RL7,DEFAULT)
0xDD8CDDB4,	//0x1860		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0xFFC065C8,	//0x1862		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_imdct36_L5)
		//0x1864		III_imdct36_L4
0x44FE4435,	//0x1864		VoC_bne16_rd(III_imdct36_L5,REG5,0x44fe)
0xFFC0CB7C,	//0x1866		VoC_NOP	|	VoC_sub32_rr(ACC0,ACC1,RL7,DEFAULT)
0xDD8CDDB4,	//0x1868		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x186a		III_imdct36_L5
0x66DE0A80,	//0x186a		VoC_lw16i(REG0,0x66de)
		//0x186c		VoC_endloop1
0x66F00A81,	//0x186c		VoC_lw16i(REG1,0x66f0)
0xE0057F45,	//0x186e		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0x66D80A80,	//0x1870		VoC_lw16i(REG0,0x66d8)
0x66EA0A81,	//0x1872		VoC_lw16i(REG1,0x66ea)
0xD8B4EA51,	//0x1874		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_loop_i_short(0x12,DEFAULT)
0x072D9B04,	//0x1876		VoC_add16_rd(REG5,REG5,0x408)(lo)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xFDE40408,	//0x1878		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x408)(hi)
0xFFC0D161,	//0x187a		VoC_NOP	|	VoC_macXinc_rp(REG4,REG1,DEFAULT)
0x442DC965,	//0x187c		VoC_bne16_rd(III_imdct36_L6,REG5,0x44fe)(lo)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xFF2F44FE,	//0x187e		VoC_movreg32(RL7,ACC1,DEFAULT)	|	VoC_bne16_rd(III_imdct36_L6,REG5,0x44fe)(hi)
0xFFC065C5,	//0x1880		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_imdct36_L7)
		//0x1882		III_imdct36_L6
0x4504441D,	//0x1882		VoC_bne16_rd(III_imdct36_L7,REG5,0x4504)
0xFFC0FF2E,	//0x1884		VoC_NOP	|	VoC_movreg32(RL6,ACC1,DEFAULT)
		//0x1885		III_imdct36_L7
		//0x1885		VoC_endloop0
0xFF4458A5,	//0x1886		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xCB2C417E,	//0x1888		VoC_sub32_rr(ACC0,ACC0,ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG7,DEFAULT)
0xC17DD8A5,	//0x188a		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x5DACDDB5,	//0x188c		VoC_sw32_p(ACC0,REG5,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0xFFC0E005,	//0x188e		VoC_NAD	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x18AF2C05,	//0x1890		VoC_loop_i(0x1,0x2)
0x66DE0A80,	//0x1892		VoC_lw16i(REG0,0x66de)
0x66F00A81,	//0x1894		VoC_lw16i(REG1,0x66f0)
0xE987FF45,	//0x1896		VoC_loop_i_short(0xc,DEFAULT)	|	VoC_lw32z(ACC1,DEFAULT)
0x9B04D8B4,	//0x1898		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xFDE4FFC0,	//0x189a		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0D161,	//0x189c		VoC_NOP	|	VoC_macXinc_rp(REG4,REG1,DEFAULT)
		//0x189e		VoC_endloop0
0xD8A0C965,	//0x189e		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xD8A1403E,	//0x18a0		VoC_lw16inc_p(REG1,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG0,REG7,DEFAULT)
0xC9754079,	//0x18a2		VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x18AD31C5,	//0x18a4		VoC_bnez16_r(III_imdct36_L8,REG5)
0x072DFF44,	//0x18a6		VoC_add16_rd(REG5,REG5,0x408)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xCB2C0408,	//0x18a8		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x408)(hi)
0xDD8CDDB5,	//0x18aa		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0xDDB5E5C3,	//0x18ac		VoC_sw32_p(ACC1,REG6,DEFAULT)	|	VoC_jump(III_imdct36_L9)
		//0x18ad		III_imdct36_L8
0xFFC0DD8D,	//0x18ae		VoC_NOP	|	VoC_sw32_p(ACC1,REG1,DEFAULT)
		//0x18af		III_imdct36_L9
		//0x18af		VoC_endloop1
0x66DA0A80,	//0x18b0		VoC_lw16i(REG0,0x66da)
0x66EC0A81,	//0x18b2		VoC_lw16i(REG1,0x66ec)
0xFF456888,	//0x18b4		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B04D8B4,	//0x18b6		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xFDE4FFC0,	//0x18b8		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0D161,	//0x18ba		VoC_NOP	|	VoC_macXinc_rp(REG4,REG1,DEFAULT)
		//0x18bc		VoC_endloop0
0x497EC965,	//0x18bc		VoC_add32_rr(RL6,ACC1,RL7,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xFFC0E005,	//0x18be		VoC_NAD	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x18EA2C07,	//0x18c0		VoC_loop_i(0x1,0x3)
0x66DE0A80,	//0x18c2		VoC_lw16i(REG0,0x66de)
0x66F00A81,	//0x18c4		VoC_lw16i(REG1,0x66f0)
0xFF456988,	//0x18c6		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0xc,DEFAULT)
0x9B04D8B4,	//0x18c8		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xFDE4FFC0,	//0x18ca		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0D161,	//0x18cc		VoC_NOP	|	VoC_macXinc_rp(REG4,REG1,DEFAULT)
		//0x18ce		VoC_endloop0
0xD8A0C965,	//0x18ce		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xD8A0C03E,	//0x18d0		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_add16_rr(REG6,REG0,REG7,DEFAULT)
0x31C5C039,	//0x18d2		VoC_bnez16_r(III_imdct36_L11,REG5)(lo)	|	VoC_add16_rr(REG1,REG0,REG7,DEFAULT)
0xC97418DC,	//0x18d4		VoC_add32_rr(ACC0,ACC1,RL6,DEFAULT)	|	VoC_bnez16_r(III_imdct36_L11,REG5)(hi)
0xDDB4FF45,	//0x18d6		VoC_sw32_p(ACC0,REG6,DEFAULT)	|	VoC_lw32z(ACC1,DEFAULT)
0xF025CB64,	//0x18d8		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC1,ACC0,DEFAULT)
0xE5CFDD8C,	//0x18da		VoC_jump(III_imdct36_L10)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x18dc		III_imdct36_L11
0x04084485,	//0x18dc		VoC_bne16_rd(III_imdct36_L12,REG5,0x408)
0xF045C974,	//0x18de		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_add32_rr(ACC0,ACC1,RL6,DEFAULT)
0xDD8CDDB4,	//0x18e0		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0xFFC065C8,	//0x18e2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_imdct36_L10)
		//0x18e4		III_imdct36_L12
0x44FE4435,	//0x18e4		VoC_bne16_rd(III_imdct36_L10,REG5,0x44fe)
0xFFC0CB74,	//0x18e6		VoC_NOP	|	VoC_sub32_rr(ACC0,ACC1,RL6,DEFAULT)
0xDD8CDDB4,	//0x18e8		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x18ea		III_imdct36_L10
		//0x18ea		VoC_endloop1
0x0A80FFC0,	//0x18ea		VoC_lw16i(REG0,0x66fc)(lo)	|	VoC_NOP
0x0A8166FC,	//0x18ec		VoC_lw16i(REG1,0x6704)(lo)	|	VoC_lw16i(REG0,0x66fc)(hi)
0xF0056704,	//0x18ee		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16i(REG1,0x6704)(hi)
0x190B2C05,	//0x18f0		VoC_loop_i(0x1,0x2)
0xFF456848,	//0x18f2		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x9B04D8B4,	//0x18f4		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xFDE4FFC0,	//0x18f6		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0D161,	//0x18f8		VoC_NOP	|	VoC_macXinc_rp(REG4,REG1,DEFAULT)
		//0x18fa		VoC_endloop0
0x31C5C965,	//0x18fa		VoC_bnez16_r(III_imdct36_L13,REG5)(lo)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xCB7E1902,	//0x18fc		VoC_sub32_rr(RL6,ACC1,RL7,DEFAULT)	|	VoC_bnez16_r(III_imdct36_L13,REG5)(hi)
0x0408072D,	//0x18fe		VoC_add16_rd(REG5,REG5,0x408)
0xFFC065CB,	//0x1900		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_imdct36_L14)
		//0x1902		III_imdct36_L13
0xC97558A6,	//0x1902		VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xC1BE7F44,	//0x1904		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xD8A44B2C,	//0x1906		VoC_lw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xDDB5C13C,	//0x1908		VoC_sw32_p(ACC1,REG6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xFFC0DDA4,	//0x190a		VoC_NOP	|	VoC_sw32_p(ACC0,REG4,DEFAULT)
		//0x190b		III_imdct36_L14
		//0x190b		VoC_endloop1
0xFFC07005,	//0x190c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x192A2C05,	//0x190e		VoC_loop_i(0x1,0x2)
0xF62E600F,	//0x1910		VoC_movreg16(RL7_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG0,DEFAULT)
0xFF456888,	//0x1912		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B04D8B4,	//0x1914		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xFDE4FFC0,	//0x1916		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0D161,	//0x1918		VoC_NOP	|	VoC_macXinc_rp(REG4,REG1,DEFAULT)
		//0x191a		VoC_endloop0
0x58A0C965,	//0x191a		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x403EC975,	//0x191c		VoC_add16_rr(REG6,REG0,REG7,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)
0x58A0FF44,	//0x191e		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xC03CCB2C,	//0x1920		VoC_add16_rr(REG4,REG0,REG7,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,IN_PARALLEL)
0x192831C5,	//0x1922		VoC_bnez16_r(III_imdct36_L15,REG5)
0x5DA4DDB5,	//0x1924		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0xE5C3E015,	//0x1926		VoC_jump(III_imdct36_L16)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
		//0x1928		III_imdct36_L15
0xDDA5DDB5,	//0x1928		VoC_sw32_p(ACC1,REG4,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
		//0x192a		III_imdct36_L16
		//0x192a		VoC_endloop1
0xF7C161E0,	//0x192a		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,RL7_HI,DEFAULT)
0x66DA0A80,	//0x192c		VoC_lw16i(REG0,0x66da)
0x66EC0A81,	//0x192e		VoC_lw16i(REG1,0x66ec)
0xFF456888,	//0x1930		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B04D8B4,	//0x1932		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xFDE4FFC0,	//0x1934		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0D161,	//0x1936		VoC_NOP	|	VoC_macXinc_rp(REG4,REG1,DEFAULT)
		//0x1938		VoC_endloop0
0xDF06C965,	//0x1938		VoC_pop32(RL6,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x4B76DF06,	//0x193a		VoC_sub32_rr(RL6,ACC1,RL6,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xFFC0E005,	//0x193c		VoC_NAD	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x19682C07,	//0x193e		VoC_loop_i(0x1,0x3)
0xFF456988,	//0x1940		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0xc,DEFAULT)
0x9B04D8B4,	//0x1942		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xFDE4FFC0,	//0x1944		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0D161,	//0x1946		VoC_NOP	|	VoC_macXinc_rp(REG4,REG1,DEFAULT)
		//0x1948		VoC_endloop0
0x58A0C965,	//0x1948		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xC03EC975,	//0x194a		VoC_add16_rr(REG6,REG0,REG7,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)
0xC13CD8A4,	//0x194c		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x195831C5,	//0x194e		VoC_bnez16_r(III_imdct36_L17,REG5)
0xCB2CFF44,	//0x1950		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x0408072D,	//0x1952		VoC_add16_rd(REG5,REG5,0x408)
0xDDA4DDB5,	//0x1954		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0xFFC065D0,	//0x1956		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_imdct36_L19)
		//0x1958		III_imdct36_L17
0x04084495,	//0x1958		VoC_bne16_rd(III_imdct36_L18,REG5,0x408)
0xCB2CFF44,	//0x195a		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x0408072D,	//0x195c		VoC_add16_rd(REG5,REG5,0x408)
0xDDA4DDB5,	//0x195e		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0xFFC065C6,	//0x1960		VoC_NAD(IN_PARALLEL)	|	VoC_jump(III_imdct36_L19)
		//0x1962		III_imdct36_L18
0x44FE4405,	//0x1962		VoC_bne16_rd(III_imdct36_L18,REG5,0x44fe)
0xDDA5DDB5,	//0x1964		VoC_sw32_p(ACC1,REG4,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
		//0x1966		III_imdct36_L19
0x66DE0A80,	//0x1966		VoC_lw16i(REG0,0x66de)
		//0x1968		VoC_endloop1
0x66F00A81,	//0x1968		VoC_lw16i(REG1,0x66f0)
0xDF847051,	//0x196a		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF050DF80,	//0x196c		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xFFC06580,	//0x196e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1970		CII_I_sample
0xE0076322,	//0x1970		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_rbinc_r(REG6,REG4,DEFAULT)
0xFF447025,	//0x1972		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xFE65C364,	//0x1974		VoC_shru16_rr(REG5,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)
0xE563E0A8,	//0x1976		VoC_xor32_rr(REG67,ACC0,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG5,DEFAULT)
0xE4E5FF1D,	//0x1978		VoC_and32_rr(ACC1,ACC0,DEFAULT)	|	VoC_movreg32(ACC1,REG67,DEFAULT)
0x42EA0BAD,	//0x197a		VoC_sub32_dr(ACC1,0x42ea,ACC1)
0xEE45652B,	//0x197c		VoC_lw16i_short(REG5,0xffffffe4,IN_PARALLEL)	|	VoC_or32_rr(REG67,ACC1,DEFAULT)
0x7EEBC365,	//0x197e		VoC_shru32_rr(REG67,REG5,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)
0x0A8BFF45,	//0x1980		VoC_lw16i(ACC1_HI,0x1000)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x0B241000,	//0x1982		VoC_sub16_dr(REG4,0x42ea,REG4)(lo)	|	VoC_lw16i(ACC1_HI,0x1000)(hi)
0xFEA542EA,	//0x1984		VoC_shr32_rr(ACC1,REG4,DEFAULT)	|	VoC_sub16_dr(REG4,0x42ea,REG4)(hi)
0x091BC95B,	//0x1986		VoC_add32_rd(REG67,REG67,0x400)(lo)	|	VoC_add32_rr(REG67,ACC1,REG67,DEFAULT)
0x0A850400,	//0x1988		VoC_lw16i(REG5,0x6484)(lo)	|	VoC_add32_rd(REG67,REG67,0x400)(hi)
0xC1656484,	//0x198a		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x6484)(hi)
0x040807AD,	//0x198c		VoC_sub16_rd(REG5,REG5,0x408)
0x99ECF966,	//0x198e		VoC_multf32_rp(ACC0,REG7,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xFDE4FFC0,	//0x1990		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xE580D035,	//0x1992		VoC_return	|	VoC_mac32_rp(REG6,REG5,DEFAULT)
		//0x1994		CII_mad_layer_I
0x1484DFE9,	//0x1994		VoC_lw32_d(ACC0,0x4028)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A864028,	//0x1996		VoC_lw16i(REG6,0x3215)(lo)	|	VoC_lw32_d(ACC0,0x4028)(hi)
0x0A873215,	//0x1998		VoC_lw16i(REG7,0x138)(lo)	|	VoC_lw16i(REG6,0x3215)(hi)
0x15460138,	//0x199a		VoC_sw16_d(REG6,0xffc3)(lo)	|	VoC_lw16i(REG7,0x138)(hi)
0x15477FC3,	//0x199c		VoC_sw16_d(REG7,0xffc2)(lo)	|	VoC_sw16_d(REG6,0xffc3)(hi)
0x15C47FC2,	//0x199e		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG7,0xffc2)(hi)
0xDE807FC4,	//0x19a0		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794FFC0,	//0x19a2		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x715C0008,	//0x19a4		VoC_lw16i_short(WRAP0,0xa,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0xF01AF401,	//0x19a6		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x6E03F046,	//0x19a8		VoC_bnez16_d(mad_layer_I_101,0x47d9)(lo)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0xF02647D9,	//0x19aa		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_bnez16_d(mad_layer_I_101,0x47d9)(hi)
		//0x19ac		mad_layer_I_101
0x47E01405,	//0x19ac		VoC_lw16_d(REG5,0x47e0)
0x47D81404,	//0x19ae		VoC_lw16_d(REG4,0x47d8)
0x10001605,	//0x19b0		VoC_and16_ri(REG5,0x1000)
0x44FE4084,	//0x19b2		VoC_be16_rd(mad_layer_I_201,REG4,0x44fe)
0x402CF187,	//0x19b4		VoC_be16_rd(mad_layer_I_201,REG4,0x408)(lo)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x31850408,	//0x19b6		VoC_bez16_r(mad_layer_I_201,REG5)(lo)	|	VoC_be16_rd(mad_layer_I_201,REG4,0x408)(hi)
0xF24719BA,	//0x19b8		VoC_lw16i_short(REG7,0x12,DEFAULT)	|	VoC_bez16_r(mad_layer_I_201,REG5)(hi)
		//0x19ba		mad_layer_I_201
0x47E01404,	//0x19ba		VoC_lw16_d(REG4,0x47e0)
0x47FA1583,	//0x19bc		VoC_sw32_d(REG67,0x47fa)
0xE2057047,	//0x19be		VoC_lw16i_short(REG5,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x47D94497,	//0x19c0		VoC_bne16_rd(mad_layer_I_102,REG7,0x47d9)
0x01001684,	//0x19c2		VoC_or16_ri(REG4,0x100)
0x0813F082,	//0x19c4		VoC_mult16_rd(REG3,REG2,0x47da)(lo)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x150447DA,	//0x19c6		VoC_sw16_d(REG4,0x47e0)(lo)	|	VoC_mult16_rd(REG3,REG2,0x47da)(hi)
0xC09D47E0,	//0x19c8		VoC_add16_rr(REG5,REG2,REG3,DEFAULT)	|	VoC_sw16_d(REG4,0x47e0)(hi)
		//0x19ca		mad_layer_I_102
0x00101604,	//0x19ca		VoC_and16_ri(REG4,0x10)
0x19E33184,	//0x19cc		VoC_bez16_r(mad_layer_I_103,REG4)
0x2B80DF43,	//0x19ce		VoC_jal(CII_mad_bit_crc)(lo)	|	VoC_push32(REG67,DEFAULT)
0xDF030619,	//0x19d0		VoC_pop32(REG67,DEFAULT)	|	VoC_jal(CII_mad_bit_crc)(hi)
0x47DE1481,	//0x19d2		VoC_lw32_d(REG23,0x47de)
0x19E33513,	//0x19d4		VoC_be16_rr(mad_layer_I_103,REG2,REG3)
0x47E41402,	//0x19d6		VoC_lw16_d(REG2,0x47e4)
0x00011602,	//0x19d8		VoC_and16_ri(REG2,0x1)
0x19E331C2,	//0x19da		VoC_bnez16_r(mad_layer_I_103,REG2)
0x02010A84,	//0x19dc		VoC_lw16i(REG4,0x201)
0xDFA977E1,	//0x19de		VoC_pop16(RA,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0xffffffff,DEFAULT)
0x47F81504,	//0x19e0		VoC_sw16_d(REG4,0x47f8)
0xF3E3E580,	//0x19e2		VoC_lw16i_short(REG3,0x1f,DEFAULT)	|	VoC_return
		//0x19e3		mad_layer_I_103
0x08FE0A82,	//0x19e4		VoC_lw16i(REG2,0x8fe)
0x04084036,	//0x19e6		VoC_be16_rd(mad_layer_II_a110,REG6,0x408)
0x003F0A83,	//0x19e8		VoC_lw16i(REG3,0x3f)
0x11FE0A82,	//0x19ea		VoC_lw16i(REG2,0x11fe)
		//0x19ec		mad_layer_II_a110
0x668C1901,	//0x19ec		VoC_lw16i_set_inc(REG1,0x668c,0x20)
0x67CE1581,	//0x19ee		VoC_sw32_d(REG23,0x67ce)
0x1A052E29,	//0x19f0		VoC_loop_r(1,REG5)
0xE290E792,	//0x19f2		VoC_rbinc_i(REG4,0x4,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0x42F0448C,	//0x19f4		VoC_bne16_rd(mad_layer_I_105,REG4,0x42f0)
0x02110A84,	//0x19f6		VoC_lw16i(REG4,0x211)
0xDFA977E1,	//0x19f8		VoC_pop16(RA,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0xffffffff,DEFAULT)
0x47F81504,	//0x19fa		VoC_sw16_d(REG4,0x47f8)
0xF002E580,	//0x19fc		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_return
		//0x19fd		mad_layer_I_105
0x1A023184,	//0x19fe		VoC_bez16_r(mad_layer_I_106,REG4)
0x04080722,	//0x1a00		VoC_add16_rd(REG2,REG4,0x408)
		//0x1a02		mad_layer_I_106
0xE240FFC0,	//0x1a02		VoC_lbinc_p(REG0)	|	VoC_NOP
		//0x1a04		VoC_endloop0
0x0789DC92,	//0x1a04		VoC_sub16_rd(REG1,REG1,0x67cf)(lo)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
		//0x1a05		VoC_endloop1
0x070A67CF,	//0x1a06		VoC_add16_rd(REG2,REG1,0x44ff)(lo)	|	VoC_sub16_rd(REG1,REG1,0x67cf)(hi)
0x703144FF,	//0x1a08		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_add16_rd(REG2,REG1,0x44ff)(hi)
0x0B2BF006,	//0x1a0a		VoC_sub16_dr(REG3,0x44ff,REG5)(lo)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x314344FF,	//0x1a0c		VoC_bngtz16_r(mad_layer_I_107,REG3)(lo)	|	VoC_sub16_dr(REG3,0x44ff,REG5)(hi)
0xE6CF1A20,	//0x1a0e		VoC_loop_r_short(REG3,DEFAULT)	|	VoC_bngtz16_r(mad_layer_I_107,REG3)(hi)
0x442CE290,	//0x1a10		VoC_bne16_rd(mad_layer_I_108,REG4,0x42f0)(lo)	|	VoC_rbinc_i(REG4,0x4,DEFAULT)
0x0A8542F0,	//0x1a12		VoC_lw16i(REG5,0x211)(lo)	|	VoC_bne16_rd(mad_layer_I_108,REG4,0x42f0)(hi)
0xF7E10211,	//0x1a14		VoC_lw16i_short(REG1,0xffff,DEFAULT)	|	VoC_lw16i(REG5,0x211)(hi)
		//0x1a16		mad_layer_I_108
0x3184F003,	//0x1a16		VoC_bez16_r(mad_layer_I_109,REG4)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x07231A1B,	//0x1a18		VoC_add16_rd(REG3,REG4,0x408)(lo)	|	VoC_bez16_r(mad_layer_I_109,REG4)(hi)
0xFFC00408,	//0x1a1a		VoC_NOP	|	VoC_add16_rd(REG3,REG4,0x408)(hi)
		//0x1a1b		mad_layer_I_109
0xDC93E240,	//0x1a1c		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x1a1e		VoC_endloop0
0xFFC05CA3,	//0x1a1e		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
		//0x1a20		mad_layer_I_107
0xF6AE60EF,	//0x1a20		VoC_movreg16(RL7_LO,REG5,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG7,DEFAULT)
0x668C1901,	//0x1a22		VoC_lw16i_set_inc(REG1,0x668c,0x20)
0x670C1902,	//0x1a24		VoC_lw16i_set_inc(REG2,0x670c,0x20)
0x67DC1587,	//0x1a26		VoC_sw32_d(RL7,0x67dc)
0x1A412C41,	//0x1a28		VoC_loop_i(0x1,0x20)
0xE793FFC0,	//0x1a2a		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_NAD
0xE0045893,	//0x1a2c		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x1A3C3183,	//0x1a2e		VoC_bez16_r(mad_layer_I_110,REG3)
0x0A83E298,	//0x1a30		VoC_lw16i(REG3,0x3f)(lo)	|	VoC_rbinc_i(REG4,0x6,DEFAULT)
0x35A3003F,	//0x1a32		VoC_bne16_rr(mad_layer_I_110,REG4,REG3)(lo)	|	VoC_lw16i(REG3,0x3f)(hi)
0x0A841A3C,	//0x1a34		VoC_lw16i(REG4,0x221)(lo)	|	VoC_bne16_rr(mad_layer_I_110,REG4,REG3)(hi)
0x77E10221,	//0x1a36		VoC_lw16i_short(REG1,0xffff,DEFAULT)	|	VoC_lw16i(REG4,0x221)(hi)
0x1504DFA9,	//0x1a38		VoC_sw16_d(REG4,0x47f8)(lo)	|	VoC_pop16(RA,IN_PARALLEL)
0xE58047F8,	//0x1a3a		VoC_return	|	VoC_sw16_d(REG4,0x47f8)(hi)
		//0x1a3c		mad_layer_I_110
0xE240FFC0,	//0x1a3c		VoC_lbinc_p(REG0)	|	VoC_NOP
		//0x1a3e		VoC_endloop0
0x0789DCA4,	//0x1a3e		VoC_sub16_rd(REG1,REG1,0x67cf)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0x079267CF,	//0x1a40		VoC_sub16_rd(REG2,REG2,0x67cf)(lo)	|	VoC_sub16_rd(REG1,REG1,0x67cf)(hi)
		//0x1a41		VoC_endloop1
0x180A67CF,	//0x1a42		VoC_lw16i_set_inc(REG2,0x15ac,0x2)(lo)	|	VoC_sub16_rd(REG2,REG2,0x67cf)(hi)
0x180915AC,	//0x1a44		VoC_lw16i_set_inc(REG1,0x1eac,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x15ac,0x2)(hi)
0xFF451EAC,	//0x1a46		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1eac,0x2)(hi)
0x1A4D2C49,	//0x1a48		VoC_loop_i(0x1,0x24)
0xDDD5EC02,	//0x1a4a		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
		//0x1a4c		VoC_endloop0
0xFFC0DDCD,	//0x1a4c		VoC_NOP	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x1a4d		VoC_endloop1
0xE00760CF,	//0x1a4e		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG6,DEFAULT)
		//0x1a50		mad_layer_I_121
0x44EA4827,	//0x1a50		VoC_blt16_rd(no_mad_layer_I_120,REG7,0x44ea)
0x1AB92B00,	//0x1a52		VoC_jump_lg(mad_layer_I_120)
		//0x1a54		no_mad_layer_I_120
0x00400A81,	//0x1a54		VoC_lw16i(REG1,0x40)
0x0A81C5CA,	//0x1a56		VoC_lw16i(REG1,0x15ac)(lo)	|	VoC_mult16_rr(REG2,REG7,REG1,DEFAULT)
0x190315AC,	//0x1a58		VoC_lw16i_set_inc(REG3,0x670c,0x20)(lo)	|	VoC_lw16i(REG1,0x15ac)(hi)
0xC051670C,	//0x1a5a		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x670c,0x20)(hi)
0x64921806,	//0x1a5c		VoC_lw16i_set_inc(REG2,0x6492,0x1)
0x1581DFC7,	//0x1a5e		VoC_sw32_d(REG23,0x67d8)(lo)	|	VoC_push16(REG7,DEFAULT)
0xF00567D8,	//0x1a60		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw32_d(REG23,0x67d8)(hi)
0x668C1902,	//0x1a62		VoC_lw16i_set_inc(REG2,0x668c,0x20)
		//0x1a64		mad_layer_I_123
0x67DC4825,	//0x1a64		VoC_blt16_rd(no_mad_layer_I_122,REG5,0x67dc)
0x1A8C2B00,	//0x1a66		VoC_jump_lg(mad_layer_I_122)
		//0x1a68		no_mad_layer_I_122
0xE795DFC5,	//0x1a68		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xFF4458A4,	//0x1a6a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x1A703184,	//0x1a6c		VoC_bez16_r(mad_layer_I_124,REG4)
0x19702B80,	//0x1a6e		VoC_jal(CII_I_sample)
		//0x1a70		mad_layer_I_124
0x072DD8B5,	//0x1a70		VoC_add16_rd(REG5,REG5,0x67d8)(lo)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xE24067D8,	//0x1a72		VoC_lbinc_p(REG0)	|	VoC_add16_rd(REG5,REG5,0x67d8)(hi)
0x04000923,	//0x1a74		VoC_add32_rd(REG67,ACC0,0x400)
0xF96699ED,	//0x1a76		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG5,DEFAULT)
0xD0357DE5,	//0x1a78		VoC_mac32_rp(REG6,REG5,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0x0A86E240,	//0x1a7a		VoC_lw16i(REG6,0x900)(lo)	|	VoC_lbinc_p(REG0)
0xC0710900,	//0x1a7c		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x900)(hi)
		//0x1a7e		VoC_endloop0
0xE1E6DD8D,	//0x1a7e		VoC_movreg16(REG6,RL7_HI,DEFAULT)	|	VoC_sw32_p(ACC1,REG1,DEFAULT)
0x67CE0789,	//0x1a80		VoC_sub16_rd(REG1,REG1,0x67ce)
0x67CF0792,	//0x1a82		VoC_sub16_rd(REG2,REG2,0x67cf)
0x67CF079B,	//0x1a84		VoC_sub16_rd(REG3,REG3,0x67cf)
0x072DDF85,	//0x1a86		VoC_add16_rd(REG5,REG5,0x408)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x2B000408,	//0x1a88		VoC_jump_lg(mad_layer_I_123)(lo)	|	VoC_add16_rd(REG5,REG5,0x408)(hi)
0xFFC01A64,	//0x1a8a		VoC_NAD	|	VoC_jump_lg(mad_layer_I_123)(hi)
		//0x1a8c		mad_layer_I_122
0x44FF0B2C,	//0x1a8c		VoC_sub16_dr(REG4,0x44ff,REG5)
0x668C1806,	//0x1a8e		VoC_lw16i_set_inc(REG2,0x668c,0x1)
0x1903C0AA,	//0x1a90		VoC_lw16i_set_inc(REG3,0x670c,0x20)(lo)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xC0EB670C,	//0x1a92		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x670c,0x20)(hi)
0x1AB43144,	//0x1a94		VoC_bngtz16_r(mad_layer_I_126,REG4)
0x1AB22E21,	//0x1a96		VoC_loop_r(1,REG4)
0xFF4458A4,	//0x1a98		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x1A9E3184,	//0x1a9a		VoC_bez16_r(mad_layer_I_125,REG4)
0x19702B80,	//0x1a9c		VoC_jal(CII_I_sample)
		//0x1a9e		mad_layer_I_125
0xE78EE1E6,	//0x1a9e		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_movreg16(REG6,RL7_HI,DEFAULT)
0x072DD8B5,	//0x1aa0		VoC_add16_rd(REG5,REG5,0x67d8)(lo)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0x092367D8,	//0x1aa2		VoC_add32_rd(REG67,ACC0,0x400)(lo)	|	VoC_add16_rd(REG5,REG5,0x67d8)(hi)
0x99ED0400,	//0x1aa4		VoC_multf32_rp(ACC1,REG7,REG5,DEFAULT)	|	VoC_add32_rd(REG67,ACC0,0x400)(hi)
0x7DE5F966,	//0x1aa6		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xE240D035,	//0x1aa8		VoC_lbinc_p(REG0)	|	VoC_mac32_rp(REG6,REG5,IN_PARALLEL)
0x0A86E240,	//0x1aaa		VoC_lw16i(REG6,0x900)(lo)	|	VoC_lbinc_p(REG0)
0x5D8D0900,	//0x1aac		VoC_sw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw16i(REG6,0x900)(hi)
		//0x1aad		VoC_endloop0
0xE1E6C071,	//0x1aae		VoC_movreg16(REG6,RL7_HI,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)
0x67CE0789,	//0x1ab0		VoC_sub16_rd(REG1,REG1,0x67ce)
		//0x1ab2		VoC_endloop1
0x67CF079B,	//0x1ab2		VoC_sub16_rd(REG3,REG3,0x67cf)
		//0x1ab4		mad_layer_I_126
0x073FDF87,	//0x1ab4		VoC_add16_rd(REG7,REG7,0x408)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x2B000408,	//0x1ab6		VoC_jump_lg(mad_layer_I_121)(lo)	|	VoC_add16_rd(REG7,REG7,0x408)(hi)
0xDFA91A50,	//0x1ab8		VoC_pop16(RA,DEFAULT)	|	VoC_jump_lg(mad_layer_I_121)(hi)
		//0x1ab9		mad_layer_I_120
0xE001721C,	//0x1aba		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
0x47EE1586,	//0x1abc		VoC_sw32_d(RL6,0x47ee)
0xFFC06580,	//0x1abe		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1ac0		CII_II_samples
0xDF475FE9,	//0x1ac0		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF4758A7,	//0x1ac2		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG2,DEFAULT)
0xE0C5D8A6,	//0x1ac4		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0x1606F945,	//0x1ac6		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shru16_ri(REG5,0x8,DEFAULT)
0xDE1000FF,	//0x1ac8		VoC_inc_p(REG2,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0x180BD8AA,	//0x1aca		VoC_lw16i_set_inc(REG3,0x67d0,0x2)(lo)	|	VoC_lw16inc_p(ACC1_LO,REG2,DEFAULT)
0x318667D0,	//0x1acc		VoC_bez16_r(CII_II_samples101,REG6)(lo)	|	VoC_lw16i_set_inc(REG3,0x67d0,0x2)(hi)
0xDFC61AD8,	//0x1ace		VoC_push16(REG6,DEFAULT)	|	VoC_bez16_r(CII_II_samples101,REG6)(hi)
0xE865E32A,	//0x1ad0		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_rbinc_r(REG6,REG5,DEFAULT)
0x012B2B80,	//0x1ad2		VoC_jal(CII_div_mode)
0xE0A6E0CE,	//0x1ad4		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
		//0x1ad6		VoC_endloop0
0xE5C7DDDF,	//0x1ad6		VoC_jump(CII_II_samples102)	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
		//0x1ad8		CII_II_samples101
0xE864DFC5,	//0x1ad8		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xE0CEE32A,	//0x1ada		VoC_movreg16(RL7_LO,REG6,DEFAULT)	|	VoC_rbinc_r(REG6,REG5,DEFAULT)
0xDDDFE240,	//0x1adc		VoC_sw32inc_p(RL7,REG3,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x1add		VoC_endloop0
		//0x1ade		CII_II_samples102
0x67D0180B,	//0x1ade		VoC_lw16i_set_inc(REG3,0x67d0,0x2)
0x5FA9DF85,	//0x1ae0		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x0B2DDF07,	//0x1ae2		VoC_sub16_dr(REG5,0x408,REG5)(lo)	|	VoC_pop32(RL7,IN_PARALLEL)
0xDF440408,	//0x1ae4		VoC_push32(ACC0,DEFAULT)	|	VoC_sub16_dr(REG5,0x408,REG5)(hi)
0xE87AFFC0,	//0x1ae6		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_NAD
0xE016599C,	//0x1ae8		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG3,DEFAULT)
0xFEEBF007,	//0x1aea		VoC_shru32_rr(REG67,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xE4E3E55C,	//0x1aec		VoC_and32_rr(REG67,ACC0,DEFAULT)	|	VoC_xor32_rr(ACC0,REG67,DEFAULT)
0x42EA0B9B,	//0x1aee		VoC_sub32_dr(REG67,0x42ea,REG67)
0xDFC5E51C,	//0x1af0		VoC_push16(REG5,DEFAULT)	|	VoC_or32_rr(ACC0,REG67,DEFAULT)
0x4505072D,	//0x1af2		VoC_add16_rd(REG5,REG5,0x4505)
0x42EA0B2D,	//0x1af4		VoC_sub16_dr(REG5,0x42ea,REG5)
0x9114FEAC,	//0x1af6		VoC_add32_rp(ACC0,ACC0,REG2,DEFAULT)	|	VoC_shr32_rr(ACC0,REG5,DEFAULT)
0x04000923,	//0x1af8		VoC_add32_rd(REG67,ACC0,0x400)
0xCDECE145,	//0x1afa		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_movreg16(REG5,ACC1_LO,DEFAULT)
0xFDE4F966,	//0x1afc		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xFFC0CE75,	//0x1afe		VoC_NOP	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0xDDDCDF85,	//0x1b00		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
		//0x1b01		VoC_endloop0
0xE580DF04,	//0x1b02		VoC_return	|	VoC_pop32(ACC0,DEFAULT)
		//0x1b04		CII_mad_layer_II
0x1484DFE9,	//0x1b04		VoC_lw32_d(ACC0,0x4028)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A864028,	//0x1b06		VoC_lw16i(REG6,0x3215)(lo)	|	VoC_lw32_d(ACC0,0x4028)(hi)
0x0A873215,	//0x1b08		VoC_lw16i(REG7,0x138)(lo)	|	VoC_lw16i(REG6,0x3215)(hi)
0x15460138,	//0x1b0a		VoC_sw16_d(REG6,0xffc3)(lo)	|	VoC_lw16i(REG7,0x138)(hi)
0x15477FC3,	//0x1b0c		VoC_sw16_d(REG7,0xffc2)(lo)	|	VoC_sw16_d(REG6,0xffc3)(hi)
0x15C47FC2,	//0x1b0e		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG7,0xffc2)(hi)
0xDE807FC4,	//0x1b10		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794FFC0,	//0x1b12		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xF15C0008,	//0x1b14		VoC_lw16i_short(WRAP0,0xa,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0xE2477046,	//0x1b16		VoC_lw16i_short(REG7,0x24,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x47D96E04,	//0x1b18		VoC_bnez16_d(mad_layer_II_101,0x47d9)
0xFFC07026,	//0x1b1a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x1b1c		mad_layer_II_101
0x47E01405,	//0x1b1c		VoC_lw16_d(REG5,0x47e0)
0x47D81404,	//0x1b1e		VoC_lw16_d(REG4,0x47d8)
0x10001605,	//0x1b20		VoC_and16_ri(REG5,0x1000)
0x44FE4084,	//0x1b22		VoC_be16_rd(mad_layer_II_201,REG4,0x44fe)
0x402CF187,	//0x1b24		VoC_be16_rd(mad_layer_II_201,REG4,0x408)(lo)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x31850408,	//0x1b26		VoC_bez16_r(mad_layer_II_201,REG5)(lo)	|	VoC_be16_rd(mad_layer_II_201,REG4,0x408)(hi)
0xF2471B2A,	//0x1b28		VoC_lw16i_short(REG7,0x12,DEFAULT)	|	VoC_bez16_r(mad_layer_II_201,REG5)(hi)
		//0x1b2a		mad_layer_II_201
0x47E01401,	//0x1b2a		VoC_lw16_d(REG1,0x47e0)
0x47FA1583,	//0x1b2c		VoC_sw32_d(REG67,0x47fa)
0x1601F087,	//0x1b2e		VoC_and16_ri(REG1,0x1000)(lo)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0x31C11000,	//0x1b30		VoC_bnez16_r(mad_layer_II_102,REG1)(lo)	|	VoC_and16_ri(REG1,0x1000)(hi)
0x14811B5A,	//0x1b32		VoC_lw32_d(REG23,0x47dc)(lo)	|	VoC_bnez16_r(mad_layer_II_102,REG1)(hi)
0x441E47DC,	//0x1b34		VoC_bne16_rd(mad_layer_II_103,REG6,0x44fe)(lo)	|	VoC_lw32_d(REG23,0x47dc)(hi)
0xF80A44FE,	//0x1b36		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_bne16_rd(mad_layer_II_103,REG6,0x44fe)(hi)
		//0x1b38		mad_layer_II_103
0x44FF4082,	//0x1b38		VoC_be16_rd(mad_layer_II_104_add,REG2,0x44ff)
0x00300A87,	//0x1b3a		VoC_lw16i(REG7,0x30)
0x1B463597,	//0x1b3c		VoC_bne16_rr(mad_layer_II_104,REG2,REG7)
0xFFC07067,	//0x1b3e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
		//0x1b40		mad_layer_II_104_add
0x7D000A81,	//0x1b40		VoC_lw16i(REG1,0x7d00)
0x1B5A3519,	//0x1b42		VoC_be16_rr(mad_layer_II_102,REG3,REG1)
0xE5D5F047,	//0x1b44		VoC_jump(mad_layer_II_102)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
		//0x1b46		mad_layer_II_104
0x0A83F007,	//0x1b46		VoC_lw16i(REG3,0x38)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x35130038,	//0x1b48		VoC_be16_rr(mad_layer_II_102,REG2,REG3)(lo)	|	VoC_lw16i(REG3,0x38)(hi)
0x0A831B5A,	//0x1b4a		VoC_lw16i(REG3,0x40)(lo)	|	VoC_be16_rr(mad_layer_II_102,REG2,REG3)(hi)
0x35130040,	//0x1b4c		VoC_be16_rr(mad_layer_II_102,REG2,REG3)(lo)	|	VoC_lw16i(REG3,0x40)(hi)
0x0A831B5A,	//0x1b4e		VoC_lw16i(REG3,0x50)(lo)	|	VoC_be16_rr(mad_layer_II_102,REG2,REG3)(hi)
0x35130050,	//0x1b50		VoC_be16_rr(mad_layer_II_102,REG2,REG3)(lo)	|	VoC_lw16i(REG3,0x50)(hi)
0x14031B5A,	//0x1b52		VoC_lw16_d(REG3,0x47dd)(lo)	|	VoC_be16_rr(mad_layer_II_102,REG2,REG3)(hi)
0x0AC147DD,	//0x1b54		VoC_lw16i(REG1,0xbb80)(lo)	|	VoC_lw16_d(REG3,0x47dd)(hi)
0x35193B80,	//0x1b56		VoC_be16_rr(mad_layer_II_102,REG3,REG1)(lo)	|	VoC_lw16i(REG1,0xbb80)(hi)
0xF0271B5A,	//0x1b58		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_be16_rr(mad_layer_II_102,REG3,REG1)(hi)
		//0x1b5a		mad_layer_II_102
0x44FF083F,	//0x1b5a		VoC_mult16_rd(REG7,REG7,0x44ff)
0x64D21807,	//0x1b5c		VoC_lw16i_set_inc(REG3,0x64d2,0x1)
0x0719C0FB,	//0x1b5e		VoC_add16_rd(REG1,REG3,0x4503)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xDFC34503,	//0x1b60		VoC_push16(REG3,DEFAULT)	|	VoC_add16_rd(REG1,REG3,0x4503)(hi)
0xE2055817,	//0x1b62		VoC_lw16i_short(REG5,0x20,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
0x47D91401,	//0x1b64		VoC_lw16_d(REG1,0x47d9)
0x44FE44B1,	//0x1b66		VoC_bne16_rd(mad_layer_II_105,REG1,0x44fe)
0x47E01404,	//0x1b68		VoC_lw16_d(REG4,0x47e0)
0x47DA1402,	//0x1b6a		VoC_lw16_d(REG2,0x47da)
0x01001684,	//0x1b6c		VoC_or16_ri(REG4,0x100)
0x0715F8F2,	//0x1b6e		VoC_add16_rd(REG5,REG2,0x4502)(lo)	|	VoC_shr16_ri(REG2,0xfffffffe,DEFAULT)
0x15044502,	//0x1b70		VoC_sw16_d(REG4,0x47e0)(lo)	|	VoC_add16_rd(REG5,REG2,0x4502)(hi)
0xFFC047E0,	//0x1b72		VoC_NAD	|	VoC_sw16_d(REG4,0x47e0)(hi)
		//0x1b74		mad_layer_II_105
0x1B7734AF,	//0x1b74		VoC_bngt16_rr(mad_layer_II_106,REG5,REG7)
0xFF45E0E5,	//0x1b76		VoC_lw32z(ACC1,DEFAULT)	|	VoC_movreg16(REG5,REG7,DEFAULT)
		//0x1b77		mad_layer_II_106
0x668C180A,	//0x1b78		VoC_lw16i_set_inc(REG2,0x668c,0x2)
0xDDD5EC01,	//0x1b7a		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
		//0x1b7b		VoC_endloop0
0x668C1806,	//0x1b7c		VoC_lw16i_set_inc(REG2,0x668c,0x1)
0x66120A84,	//0x1b7e		VoC_lw16i(REG4,0x6612)
0x66AC1805,	//0x1b80		VoC_lw16i_set_inc(REG1,0x66ac,0x1)
0x1504DFC7,	//0x1b82		VoC_sw16_d(REG4,0x67cc)(lo)	|	VoC_push16(REG7,DEFAULT)
0xE75067CC,	//0x1b84		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_sw16_d(REG4,0x67cc)(hi)
0xF8FFD8B7,	//0x1b86		VoC_shr16_ri(REG7,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0x67CC073F,	//0x1b88		VoC_add16_rd(REG7,REG7,0x67cc)
0xD874E240,	//0x1b8a		VoC_lw16_p(REG4,REG7,DEFAULT)	|	VoC_lbinc_p(REG0)
0xFFC0E320,	//0x1b8c		VoC_NOP	|	VoC_rbinc_r(REG4,REG4,DEFAULT)
0x4036DCA4,	//0x1b8e		VoC_be16_rd(mad_layer_II_107,REG6,0x408)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xD8740408,	//0x1b90		VoC_lw16_p(REG4,REG7,DEFAULT)	|	VoC_be16_rd(mad_layer_II_107,REG6,0x408)(hi)
0xFFC0E320,	//0x1b92		VoC_NOP	|	VoC_rbinc_r(REG4,REG4,DEFAULT)
0xFFC0DC94,	//0x1b94		VoC_NOP	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1b95		mad_layer_II_107
		//0x1b95		VoC_endloop0
0xC32CD614,	//0x1b96		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0x1BA73144,	//0x1b98		VoC_bngtz16_r(mad_layer_II_108,REG4)
0x44FF0711,	//0x1b9a		VoC_add16_rd(REG1,REG2,0x44ff)
0xD8B7E70A,	//0x1b9c		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x073FF8FF,	//0x1b9e		VoC_add16_rd(REG7,REG7,0x67cc)(lo)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xE24067CC,	//0x1ba0		VoC_lbinc_p(REG0)	|	VoC_add16_rd(REG7,REG7,0x67cc)(hi)
0xE320D874,	//0x1ba2		VoC_rbinc_r(REG4,REG4,DEFAULT)	|	VoC_lw16_p(REG4,REG7,DEFAULT)
0xDCA4FFC0,	//0x1ba4		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_NOP
		//0x1ba6		VoC_endloop0
0xDF87DC94,	//0x1ba6		VoC_pop16(REG7,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1ba7		mad_layer_II_108
0x0A82F3E3,	//0x1ba8		VoC_lw16i(REG2,0x5d)(lo)	|	VoC_lw16i_short(REG3,0x1f,DEFAULT)
0x403E005D,	//0x1baa		VoC_be16_rd(mad_layer_II_110,REG6,0x408)(lo)	|	VoC_lw16i(REG2,0x5d)(hi)
0x0A830408,	//0x1bac		VoC_lw16i(REG3,0x3f)(lo)	|	VoC_be16_rd(mad_layer_II_110,REG6,0x408)(hi)
0x0A82003F,	//0x1bae		VoC_lw16i(REG2,0xbd)(lo)	|	VoC_lw16i(REG3,0x3f)(hi)
0xFFC000BD,	//0x1bb0		VoC_NAD	|	VoC_lw16i(REG2,0xbd)(hi)
		//0x1bb2		mad_layer_II_110
0x668C1901,	//0x1bb2		VoC_lw16i_set_inc(REG1,0x668c,0x20)
0x67CE1581,	//0x1bb4		VoC_sw32_d(REG23,0x67ce)
0x66CC1902,	//0x1bb6		VoC_lw16i_set_inc(REG2,0x66cc,0x20)
0x1BC52E39,	//0x1bb8		VoC_loop_r(1,REG7)
0xD894E78A,	//0x1bba		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0x1BC23184,	//0x1bbc		VoC_bez16_r(mad_layer_II_109,REG4)
0xFFC0E288,	//0x1bbe		VoC_NOP	|	VoC_rbinc_i(REG4,0x2,DEFAULT)
0xFFC05C24,	//0x1bc0		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
		//0x1bc2		mad_layer_II_109
0x44FF0712,	//0x1bc2		VoC_add16_rd(REG2,REG2,0x44ff)
		//0x1bc4		VoC_endloop0
0x4259E240,	//0x1bc4		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x1bc5		VoC_endloop1
0x1401C29A,	//0x1bc6		VoC_lw16_d(REG1,0x47e0)(lo)	|	VoC_sub16_rr(REG2,REG2,REG3,IN_PARALLEL)
0x160147E0,	//0x1bc8		VoC_and16_ri(REG1,0x10)(lo)	|	VoC_lw16_d(REG1,0x47e0)(hi)
0x31810010,	//0x1bca		VoC_bez16_r(mad_layer_II_111,REG1)(lo)	|	VoC_and16_ri(REG1,0x10)(hi)
0x5F431BEA,	//0x1bcc		VoC_push32(REG67,DEFAULT)	|	VoC_bez16_r(mad_layer_II_111,REG1)(hi)
0x5F46DFC5,	//0x1bce		VoC_push32(RL6,DEFAULT)	|	VoC_push16(REG5,IN_PARALLEL)
0xDFDBDFC0,	//0x1bd0		VoC_push16(BITCACHE,DEFAULT)	|	VoC_push16(REG0,IN_PARALLEL)
0x06192B80,	//0x1bd2		VoC_jal(CII_mad_bit_crc)
0x47DE1481,	//0x1bd4		VoC_lw32_d(REG23,0x47de)
0x5F06DF9B,	//0x1bd6		VoC_pop32(RL6,DEFAULT)	|	VoC_pop16(BITCACHE,DEFAULT)
0x5F03DF80,	//0x1bd8		VoC_pop32(REG67,DEFAULT)	|	VoC_pop16(REG0,IN_PARALLEL)
0x3513DF85,	//0x1bda		VoC_be16_rr(mad_layer_II_111,REG2,REG3)(lo)	|	VoC_pop16(REG5,IN_PARALLEL)
0x14021BEA,	//0x1bdc		VoC_lw16_d(REG2,0x47e4)(lo)	|	VoC_be16_rr(mad_layer_II_111,REG2,REG3)(hi)
0x160247E4,	//0x1bde		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_lw16_d(REG2,0x47e4)(hi)
0x31820001,	//0x1be0		VoC_bez16_r(mad_layer_II_111,REG2)(lo)	|	VoC_and16_ri(REG2,0x1)(hi)
0x0A841BEA,	//0x1be2		VoC_lw16i(REG4,0x201)(lo)	|	VoC_bez16_r(mad_layer_II_111,REG2)(hi)
0xF7E10201,	//0x1be4		VoC_lw16i_short(REG1,0xffffffff,DEFAULT)	|	VoC_lw16i(REG4,0x201)(hi)
0x47F81504,	//0x1be6		VoC_sw16_d(REG4,0x47f8)
0x1D3C2B00,	//0x1be8		VoC_jump_lg(mad_layer_II_end)
		//0x1bea		mad_layer_II_111
0x670C1807,	//0x1bea		VoC_lw16i_set_inc(REG3,0x670c,0x1)
0x64921806,	//0x1bec		VoC_lw16i_set_inc(REG2,0x6492,0x1)
0x668C1901,	//0x1bee		VoC_lw16i_set_inc(REG1,0x668c,0x20)
0x67D81581,	//0x1bf0		VoC_sw32_d(REG23,0x67d8)
0xF6AE60EF,	//0x1bf2		VoC_movreg16(RL7_LO,REG5,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG7,DEFAULT)
0x66CC1902,	//0x1bf4		VoC_lw16i_set_inc(REG2,0x66cc,0x20)
0x67DC1587,	//0x1bf6		VoC_sw32_d(RL7,0x67dc)
0x2E39E0CE,	//0x1bf8		VoC_loop_r(1,REG7)(lo)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
0xE7BD1C3D,	//0x1bfa		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0xD894E240,	//0x1bfc		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lbinc_p(REG0)
0x1C303184,	//0x1bfe		VoC_bez16_r(mad_layer_II_112,REG4)
0xE089E298,	//0x1c00		VoC_movreg16(ACC0_HI,REG4,DEFAULT)	|	VoC_rbinc_i(REG4,0x6,DEFAULT)
0xD8A7DCB4,	//0x1c02		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x44FE4437,	//0x1c04		VoC_bne16_rd(mad_layer_II_113,REG7,0x44fe)
0xF6885CB4,	//0x1c06		VoC_movreg16(ACC0_LO,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xE5D3DCB4,	//0x1c08		VoC_jump(mad_layer_II_114)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1c0a		mad_layer_II_113
0x1C0F31C7,	//0x1c0a		VoC_bnez16_r(mad_layer_II_115,REG7)
0xE088E298,	//0x1c0c		VoC_movreg16(ACC0_LO,REG4,DEFAULT)	|	VoC_rbinc_i(REG4,0x6,DEFAULT)
0xFFC0DCB4,	//0x1c0e		VoC_NOP	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1c0f		mad_layer_II_115
0xE298E240,	//0x1c10		VoC_rbinc_i(REG4,0x6,DEFAULT)	|	VoC_lbinc_p(REG0)
0x04084427,	//0x1c12		VoC_bne16_rd(mad_layer_II_116,REG7,0x408)
0xF7285CB9,	//0x1c14		VoC_movreg16(ACC0_LO,ACC0_HI,IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
		//0x1c16		mad_layer_II_116
0x42DF4427,	//0x1c16		VoC_bne16_rd(mad_layer_II_117,REG7,0x42df)
0xF7285CB4,	//0x1c18		VoC_movreg16(ACC0_LO,ACC0_HI,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1c1a		mad_layer_II_117
0xFFC05CB4,	//0x1c1a		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1c1c		mad_layer_II_114
0x003F0A86,	//0x1c1c		VoC_lw16i(REG6,0x3f)
0x1C283526,	//0x1c1e		VoC_be16_rr(mad_layer_II_118,REG4,REG6)
0xFF23E0C4,	//0x1c20		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x1C283534,	//0x1c22		VoC_be16_rr(mad_layer_II_118,REG6,REG4)
0x1C28353C,	//0x1c24		VoC_be16_rr(mad_layer_II_118,REG7,REG4)
0xFFC065CD,	//0x1c26		VoC_NAD(IN_PARALLEL)	|	VoC_jump(mad_layer_II_212)
		//0x1c28		mad_layer_II_118
0x02210A84,	//0x1c28		VoC_lw16i(REG4,0x221)
0x1504F7E1,	//0x1c2a		VoC_sw16_d(REG4,0x47f8)(lo)	|	VoC_lw16i_short(REG1,0xffffffff,DEFAULT)
0x2B0047F8,	//0x1c2c		VoC_jump_lg(mad_layer_II_end)(lo)	|	VoC_sw16_d(REG4,0x47f8)(hi)
0xFFC01D3C,	//0x1c2e		VoC_NAD	|	VoC_jump_lg(mad_layer_II_end)(hi)
		//0x1c30		mad_layer_II_112
0x42DF071B,	//0x1c30		VoC_add16_rd(REG3,REG3,0x42df)
0xFFC0DE10,	//0x1c32		VoC_NOP	|	VoC_inc_p(REG2,DEFAULT)
		//0x1c33		mad_layer_II_212
0x0A86E240,	//0x1c34		VoC_lw16i(REG6,0x5d)(lo)	|	VoC_lbinc_p(REG0)
0xC0F3005D,	//0x1c36		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x5d)(hi)
		//0x1c38		VoC_endloop0
0x0789FF3B,	//0x1c38		VoC_sub16_rd(REG1,REG1,0x67cf)(lo)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x079267CF,	//0x1c3a		VoC_sub16_rd(REG2,REG2,0x67cf)(lo)	|	VoC_sub16_rd(REG1,REG1,0x67cf)(hi)
0x079B67CF,	//0x1c3c		VoC_sub16_rd(REG3,REG3,0x67ce)(lo)	|	VoC_sub16_rd(REG2,REG2,0x67cf)(hi)
		//0x1c3d		VoC_endloop1
0x180A67CE,	//0x1c3e		VoC_lw16i_set_inc(REG2,0x15ac,0x2)(lo)	|	VoC_sub16_rd(REG3,REG3,0x67ce)(hi)
0x180915AC,	//0x1c40		VoC_lw16i_set_inc(REG1,0x1eac,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x15ac,0x2)(hi)
0xFF451EAC,	//0x1c42		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1eac,0x2)(hi)
0x1C492C49,	//0x1c44		VoC_loop_i(0x1,0x24)
0xDDD5EC02,	//0x1c46		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
		//0x1c48		VoC_endloop0
0xFFC0DDCD,	//0x1c48		VoC_NOP	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x1c49		VoC_endloop1
0xF401701A,	//0x1c4a		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0xF6A87007,	//0x1c4c		VoC_movreg16(ACC0_LO,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1c4e		mad_layer_II_121
0x44EA4827,	//0x1c4e		VoC_blt16_rd(no_mad_layer_II_120,REG7,0x44ea)
0x1D3B2B00,	//0x1c50		VoC_jump_lg(mad_layer_II_120)
		//0x1c52		no_mad_layer_II_120
0xF005DFC7,	//0x1c52		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x1901D623,	//0x1c54		VoC_lw16i_set_inc(REG1,0x668c,0x20)(lo)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0xFFC0668C,	//0x1c56		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x668c,0x20)(hi)
		//0x1c58		mad_layer_II_123
0x67DC4825,	//0x1c58		VoC_blt16_rd(no_mad_layer_II_122,REG5,0x67dc)
0x1CCA2B00,	//0x1c5a		VoC_jump_lg(mad_layer_II_122)
		//0x1c5c		no_mad_layer_II_122
0xF8FCD8B4,	//0x1c5c		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x67CC0724,	//0x1c5e		VoC_add16_rd(REG4,REG4,0x67cc)
0xD9A2DFC5,	//0x1c60		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x42F0082C,	//0x1c62		VoC_mult16_rd(REG4,REG5,0x42f0)
0xFFC0D627,	//0x1c64		VoC_NOP	|	VoC_lw16_sd(REG7,0x1,DEFAULT)
0xD625DFC4,	//0x1c66		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x00C00A84,	//0x1c68		VoC_lw16i(REG4,0xc0)
0xF817C5E4,	//0x1c6a		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_mult16_rr(REG4,REG7,REG4,DEFAULT)
0xC12CC12C,	//0x1c6c		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x42DF082D,	//0x1c6e		VoC_mult16_rd(REG5,REG5,0x42df)
0xC17FFFC0,	//0x1c70		VoC_add16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_NOP
0x67D9073F,	//0x1c72		VoC_add16_rd(REG7,REG7,0x67d9)
0x15AC0A82,	//0x1c74		VoC_lw16i(REG2,0x15ac)
0x072DD875,	//0x1c76		VoC_add16_rd(REG5,REG5,0x67d8)(lo)	|	VoC_lw16_p(REG5,REG7,DEFAULT)
0xC11467D8,	//0x1c78		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x67d8)(hi)
0x1507D855,	//0x1c7a		VoC_sw16_d(REG7,0x67d6)(lo)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x158267D6,	//0x1c7c		VoC_sw32_d(REG45,0x67da)(lo)	|	VoC_sw16_d(REG7,0x67d6)(hi)
0xE1C667DA,	//0x1c7e		VoC_movreg16(REG6,RL7_LO,DEFAULT)	|	VoC_sw32_d(REG45,0x67da)(hi)
0x1CBF2E31,	//0x1c80		VoC_loop_r(1,REG6)
0xD895D614,	//0x1c82		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0x0A87C12C,	//0x1c84		VoC_lw16i(REG7,0x642a)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xC13C642A,	//0x1c86		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i(REG7,0x642a)(hi)
0x040807A4,	//0x1c88		VoC_sub16_rd(REG4,REG4,0x408)
0xD844E240,	//0x1c8a		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lbinc_p(REG0)
0x1CAA3185,	//0x1c8c		VoC_bez16_r(mad_layer_II_124,REG5)
0x66221806,	//0x1c8e		VoC_lw16i_set_inc(REG2,0x6622,0x1)
0x45040824,	//0x1c90		VoC_mult16_rd(REG4,REG4,0x4504)
0xC0A2DFC3,	//0x1c92		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x1AC02B80,	//0x1c94		VoC_jal(CII_II_samples)
0x67DA2202,	//0x1c96		VoC_lw16d_set_inc(REG2,0x67da,0x40)
0x67D0180B,	//0x1c98		VoC_lw16i_set_inc(REG3,0x67d0,0x2)
0x67DB1405,	//0x1c9a		VoC_lw16_d(REG5,0x67db)
0x04001485,	//0x1c9c		VoC_lw32_d(ACC1,0x400)
0x935BE868,	//0x1c9e		VoC_add32inc_rp(REG67,ACC1,REG3,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xF966CD7C,	//0x1ca0		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)
0xCE6EFDE4,	//0x1ca2		VoC_macX_rr(REG5,REG6,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xFFC0FFC0,	//0x1ca4		VoC_NOP	|	VoC_NOP
		//0x1ca6		VoC_endloop0
0x5F83DDD4,	//0x1ca6		VoC_pop16(REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xE5C7F007,	//0x1ca8		VoC_jump(mad_layer_II_125)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
		//0x1caa		mad_layer_II_124
0x00C00A87,	//0x1caa		VoC_lw16i(REG7,0xc0)
0x67DA2202,	//0x1cac		VoC_lw16d_set_inc(REG2,0x67da,0x40)
0xFFC040BA,	//0x1cae		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
		//0x1cb0		mad_layer_II_125
0x08400A87,	//0x1cb0		VoC_lw16i(REG7,0x840)
0x0A87C0BA,	//0x1cb2		VoC_lw16i(REG7,0x60)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x073F0060,	//0x1cb4		VoC_add16_rd(REG7,REG7,0x67d6)(lo)	|	VoC_lw16i(REG7,0x60)(hi)
0xFFC067D6,	//0x1cb6		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0x67d6)(hi)
0x073FD877,	//0x1cb8		VoC_add16_rd(REG7,REG7,0x67d8)(lo)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xFFC067D8,	//0x1cba		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0x67d8)(hi)
0x1502D877,	//0x1cbc		VoC_sw16_d(REG2,0x67da)(lo)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x150767DA,	//0x1cbe		VoC_sw16_d(REG7,0x67db)(lo)	|	VoC_sw16_d(REG2,0x67da)(hi)
		//0x1cbf		VoC_endloop1
0x078967DB,	//0x1cc0		VoC_sub16_rd(REG1,REG1,0x67cf)(lo)	|	VoC_sw16_d(REG7,0x67db)(hi)
0xDF8467CF,	//0x1cc2		VoC_pop16(REG4,DEFAULT)	|	VoC_sub16_rd(REG1,REG1,0x67cf)(hi)
0x072DDF85,	//0x1cc4		VoC_add16_rd(REG5,REG5,0x408)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x2B000408,	//0x1cc6		VoC_jump_lg(mad_layer_II_123)(lo)	|	VoC_add16_rd(REG5,REG5,0x408)(hi)
0xFFC01C58,	//0x1cc8		VoC_NAD	|	VoC_jump_lg(mad_layer_II_123)(hi)
		//0x1cca		mad_layer_II_122
0x668C1805,	//0x1cca		VoC_lw16i_set_inc(REG1,0x668c,0x1)
0xFFC04069,	//0x1ccc		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
		//0x1cce		mad_layer_II_129
0x67DD4825,	//0x1cce		VoC_blt16_rd(no_mad_layer_II_126,REG5,0x67dd)
0x1D362B00,	//0x1cd0		VoC_jump_lg(mad_layer_II_126)
		//0x1cd2		no_mad_layer_II_126
0xF8FCD8B4,	//0x1cd2		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x67CC0724,	//0x1cd4		VoC_add16_rd(REG4,REG4,0x67cc)
0xD9A2DFC5,	//0x1cd6		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x42F0082C,	//0x1cd8		VoC_mult16_rd(REG4,REG5,0x42f0)
0xFFC0D627,	//0x1cda		VoC_NOP	|	VoC_lw16_sd(REG7,0x1,DEFAULT)
0x0A84DFC4,	//0x1cdc		VoC_lw16i(REG4,0xc0)(lo)	|	VoC_push16(REG4,DEFAULT)
0xC5E400C0,	//0x1cde		VoC_mult16_rr(REG4,REG7,REG4,DEFAULT)	|	VoC_lw16i(REG4,0xc0)(hi)
0xC12CD625,	//0x1ce0		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0x082DC12C,	//0x1ce2		VoC_mult16_rd(REG5,REG5,0x42df)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xF81742DF,	//0x1ce4		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_mult16_rd(REG5,REG5,0x42df)(hi)
0x073FC17F,	//0x1ce6		VoC_add16_rd(REG7,REG7,0x67d9)(lo)	|	VoC_add16_rr(REG7,REG5,REG7,DEFAULT)
0x0A8267D9,	//0x1ce8		VoC_lw16i(REG2,0x15ac)(lo)	|	VoC_add16_rd(REG7,REG7,0x67d9)(hi)
0xD87515AC,	//0x1cea		VoC_lw16_p(REG5,REG7,DEFAULT)	|	VoC_lw16i(REG2,0x15ac)(hi)
0x67D8072D,	//0x1cec		VoC_add16_rd(REG5,REG5,0x67d8)
0xD855C114,	//0x1cee		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x67D61507,	//0x1cf0		VoC_sw16_d(REG7,0x67d6)
0x67DA1582,	//0x1cf2		VoC_sw32_d(REG45,0x67da)
0xD895D614,	//0x1cf4		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0x0A87C12C,	//0x1cf6		VoC_lw16i(REG7,0x642a)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xC13C642A,	//0x1cf8		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i(REG7,0x642a)(hi)
0x040807A4,	//0x1cfa		VoC_sub16_rd(REG4,REG4,0x408)
0xD844E240,	//0x1cfc		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lbinc_p(REG0)
0x1D303185,	//0x1cfe		VoC_bez16_r(mad_layer_II_128,REG5)
0x66221806,	//0x1d00		VoC_lw16i_set_inc(REG2,0x6622,0x1)
0x45040824,	//0x1d02		VoC_mult16_rd(REG4,REG4,0x4504)
0xC0A2DFC3,	//0x1d04		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x1AC02B80,	//0x1d06		VoC_jal(CII_II_samples)
0xFFC061C6,	//0x1d08		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0x1D2C2E31,	//0x1d0a		VoC_loop_r(1,REG6)
0x67DA2202,	//0x1d0c		VoC_lw16d_set_inc(REG2,0x67da,0x40)
0x67D0180B,	//0x1d0e		VoC_lw16i_set_inc(REG3,0x67d0,0x2)
0x67DB1405,	//0x1d10		VoC_lw16_d(REG5,0x67db)
0x04001485,	//0x1d12		VoC_lw32_d(ACC1,0x400)
0x935BE868,	//0x1d14		VoC_add32inc_rp(REG67,ACC1,REG3,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xF966CD7C,	//0x1d16		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)
0xCE6EFDE4,	//0x1d18		VoC_macX_rr(REG5,REG6,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xFFC0FFC0,	//0x1d1a		VoC_NOP	|	VoC_NOP
		//0x1d1c		VoC_endloop0
0x0A87DDD4,	//0x1d1c		VoC_lw16i(REG7,0x840)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xC0BA0840,	//0x1d1e		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_lw16i(REG7,0x840)(hi)
0x00600A87,	//0x1d20		VoC_lw16i(REG7,0x60)
0x67D6073F,	//0x1d22		VoC_add16_rd(REG7,REG7,0x67d6)
0xD877FFC0,	//0x1d24		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_NOP
0x67D8073F,	//0x1d26		VoC_add16_rd(REG7,REG7,0x67d8)
0xD877FFC0,	//0x1d28		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_NOP
0x67DA1502,	//0x1d2a		VoC_sw16_d(REG2,0x67da)
		//0x1d2c		VoC_endloop1
0x67DB1507,	//0x1d2c		VoC_sw16_d(REG7,0x67db)
0xF0075F83,	//0x1d2e		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
		//0x1d30		mad_layer_II_128
0xDF85DF84,	//0x1d30		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x0408072D,	//0x1d32		VoC_add16_rd(REG5,REG5,0x408)
0x1CCE2B00,	//0x1d34		VoC_jump_lg(mad_layer_II_129)
		//0x1d36		mad_layer_II_126
0x073FDF87,	//0x1d36		VoC_add16_rd(REG7,REG7,0x408)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x2B000408,	//0x1d38		VoC_jump_lg(mad_layer_II_121)(lo)	|	VoC_add16_rd(REG7,REG7,0x408)(hi)
0xF0011C4E,	//0x1d3a		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_jump_lg(mad_layer_II_121)(hi)
		//0x1d3b		mad_layer_II_120
		//0x1d3c		mad_layer_II_end
0xDFA9DF83,	//0x1d3c		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x47EE1586,	//0x1d3e		VoC_sw32_d(RL6,0x47ee)
0xE580F21C,	//0x1d40		VoC_return	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
		//0x1d42		Coolsand_MusicSDF
0x40221484,	//0x1d42		VoC_lw32_d(ACC0,0x4022)
0x33470A86,	//0x1d44		VoC_lw16i(REG6,0x3347)
0x00200A87,	//0x1d46		VoC_lw16i(REG7,0x20)
0x7FC31546,	//0x1d48		VoC_sw16_d(REG6,0xffc3)
0x7FC21547,	//0x1d4a		VoC_sw16_d(REG7,0xffc2)
0x7FC415C4,	//0x1d4c		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x1d4e		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x1d50		VoC_cfg_lg(0x8,)
0x66CD6C34,	//0x1d52		VoC_bez16_d(Coolsand_MusicSDF_L0,0x66cd)
0xF00A5612,	//0x1d54		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x668E1804,	//0x1d56		VoC_lw16i_set_inc(REG0,0x668e,0x1)
0x66AE1805,	//0x1d58		VoC_lw16i_set_inc(REG1,0x66ae,0x1)
0xF5D9715A,	//0x1d5a		VoC_lw16i_short(FORMAT32,0xfffffffb,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xa,DEFAULT)
0xD883E84A,	//0x1d5c		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0x7BFBD993,	//0x1d5e		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG67,REG2,DEFAULT)
0xF90EFF44,	//0x1d60		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xCE3BCE73,	//0x1d62		VoC_mac32_rr(REG7,REG3,DEFAULT)	|	VoC_macX_rr(REG6,REG3,DEFAULT)
0xF025F044,	//0x1d64		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x1d66		VoC_endloop0
0x1582DDD4,	//0x1d66		VoC_sw32_d(REG45,0x66ce)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x2C3B66CE,	//0x1d68		VoC_loop_i(0x1,0x1d)(lo)	|	VoC_sw32_d(REG45,0x66ce)(hi)
0xD8931D85,	//0x1d6a		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x1d)(hi)
0x66CE1482,	//0x1d6c		VoC_lw32_d(REG45,0x66ce)
0x351CF006,	//0x1d6e		VoC_be16_rr(CS_MP3_LABLE1001,REG3,REG4)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x79FC1D74,	//0x1d70		VoC_shru16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_be16_rr(CS_MP3_LABLE1001,REG3,REG4)(hi)
0xC17DE017,	//0x1d72		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
		//0x1d74		CS_MP3_LABLE1001
0x1582D884,	//0x1d74		VoC_sw32_d(REG45,0x66ce)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xB82766CE,	//0x1d76		VoC_sub16_pr(REG7,REG0,REG4,DEFAULT)	|	VoC_sw32_d(REG45,0x66ce)(hi)
0x66CBFE2F,	//0x1d78		VoC_loop_r_short(REG3,DEFAULT)	|	VoC_shr16_rr(REG7,REG5,DEFAULT)
0xC0F3F683,	//0x1d7a		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_movreg16(REG3,REG4,IN_PARALLEL)
0x7BFAD992,	//0x1d7c		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0xF90CFF44,	//0x1d7e		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xCE2BCE63,	//0x1d80		VoC_mac32_rr(REG5,REG3,DEFAULT)	|	VoC_macX_rr(REG4,REG3,DEFAULT)
0xFFC0C1BE,	//0x1d82		VoC_NOP	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
		//0x1d84		VoC_endloop0
0xFFC0DDD4,	//0x1d84		VoC_NOP	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x1d85		VoC_endloop1
		//0x1d86		Coolsand_MusicSDF_L0
0xE580FFC0,	//0x1d86		VoC_return	|	VoC_NOP
		//0x1d88		Coolsand_NonClipDigitalGain_MP3
0xE0155FE9,	//0x1d88		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF075FC2,	//0x1d8a		VoC_movreg32(RL7,REG01,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x40151406,	//0x1d8c		VoC_lw16_d(REG6,0x4015)
0x47FB1407,	//0x1d8e		VoC_lw16_d(REG7,0x47fb)
0xDFC078FF,	//0x1d90		VoC_push16(REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xFE2FC3AD,	//0x1d92		VoC_shr16_rr(REG7,REG5,DEFAULT)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
0x1507DF44,	//0x1d94		VoC_sw16_d(REG7,0x668c)(lo)	|	VoC_push32(ACC0,DEFAULT)
0x1804668C,	//0x1d96		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_sw16_d(REG7,0x668c)(hi)
0x18060000,	//0x1d98		VoC_lw16i_set_inc(REG2,0x5d6a,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0x407B5D6A,	//0x1d9a		VoC_add16_rr(REG3,REG1,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x5d6a,0x1)(hi)
0x7031F007,	//0x1d9c		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x6E08D8A4,	//0x1d9e		VoC_bnez16_d(NonClipDigitalGain_MP3_L0,0x48e3)(lo)	|	VoC_lw16inc_p(REG4,REG2,IN_PARALLEL)
0xDE0048E3,	//0x1da0		VoC_inc_p(REG0,DEFAULT)	|	VoC_bnez16_d(NonClipDigitalGain_MP3_L0,0x48e3)(hi)
		//0x1da1		NonClipDigitalGain_MP3_L10
0xD8A4DC94,	//0x1da2		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x1DA13438,	//0x1da4		VoC_bgt16_rr(NonClipDigitalGain_MP3_L10,REG7,REG0)
0xF809E5D8,	//0x1da6		VoC_shr16_ri(REG1,0x1,DEFAULT)	|	VoC_jump(NonClipDigitalGain_MP3_L1)
		//0x1da7		NonClipDigitalGain_MP3_L0
0x1541F817,	//0x1da8		VoC_sw16_d(REG1,0xffc3)(lo)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0x15477FC3,	//0x1daa		VoC_sw16_d(REG7,0xffc2)(lo)	|	VoC_sw16_d(REG1,0xffc3)(hi)
0x15C47FC2,	//0x1dac		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG7,0xffc2)(hi)
0xF8F97FC4,	//0x1dae		VoC_shr16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1806F8FF,	//0x1db0		VoC_lw16i_set_inc(REG2,0x61ea,0x1)(lo)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xC07961EA,	//0x1db2		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x61ea,0x1)(hi)
0xDE00D8A4,	//0x1db4		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x1db5		NonClipDigitalGain_MP3_L12
0xD8A4DC94,	//0x1db6		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x1DB53438,	//0x1db8		VoC_bgt16_rr(NonClipDigitalGain_MP3_L12,REG7,REG0)
0xFFC0DE80,	//0x1dba		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x1dbc		VoC_cfg_lg(0x8,)
		//0x1dbe		NonClipDigitalGain_MP3_L1
0x1805DF80,	//0x1dbe		VoC_lw16i_set_inc(REG1,0x0,0x1)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xE0D00000,	//0x1dc0		VoC_movreg16(INC0,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x0,0x1)(hi)
0xD885F8FF,	//0x1dc2		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
		//0x1dc3		Coolsand_NonClipDigitalGain_begin
0xDCB5DE08,	//0x1dc4		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
0x1DC33439,	//0x1dc6		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_begin,REG7,REG1)
0xF7E17F43,	//0x1dc8		VoC_movreg16(REG1,RL7_HI,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x668C1405,	//0x1dca		VoC_lw16_d(REG5,0x668c)
0xF8FD7024,	//0x1dcc		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xC3657031,	//0x1dce		VoC_sub16_rr(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x1EAC1804,	//0x1dd0		VoC_lw16i_set_inc(REG0,0x1eac,0x1)
		//0x1dd2		Coolsand_NonClipDigitalGain_L0
0xD813D892,	//0x1dd2		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0x1DE03202,	//0x1dd4		VoC_bltz16_r(Coolsand_NonClipDigitalGain_L1,REG2)
0x1DE03243,	//0x1dd6		VoC_bnltz16_r(Coolsand_NonClipDigitalGain_L1,REG3)
0xC1E75C86,	//0x1dd8		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x668C1402,	//0x1dda		VoC_lw16_d(REG2,0x668c)
0x1DED3496,	//0x1ddc		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L3,REG2,REG6)
0xFFC065CC,	//0x1dde		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_NonClipDigitalGain_L2)
		//0x1de0		Coolsand_NonClipDigitalGain_L1
0x1DEA3102,	//0x1de0		VoC_bgtz16_r(Coolsand_NonClipDigitalGain_L2,REG2)
0x1DEA3143,	//0x1de2		VoC_bngtz16_r(Coolsand_NonClipDigitalGain_L2,REG3)
0xC1E75C86,	//0x1de4		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x668C1402,	//0x1de6		VoC_lw16_d(REG2,0x668c)
0x1DED3496,	//0x1de8		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L3,REG2,REG6)
		//0x1dea		Coolsand_NonClipDigitalGain_L2
0x342EC1A6,	//0x1dea		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L0,REG5,REG6)(lo)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF0421DD2,	//0x1dec		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L0,REG5,REG6)(hi)
		//0x1ded		Coolsand_NonClipDigitalGain_L3
0x1E303417,	//0x1dee		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_End,REG2,REG7)
0x7031F030,	//0x1df0		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x7F38E013,	//0x1df2		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x1806C3DF,	//0x1df4		VoC_lw16i_set_inc(REG2,0x1eac,0x1)(lo)	|	VoC_sub16_rr(REG7,REG7,REG3,IN_PARALLEL)
0x40181EAC,	//0x1df6		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x1eac,0x1)(hi)
0xFF06C059,	//0x1df8		VoC_movreg32(RL6,REG01,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
		//0x1dfa		Coolsand_NonClipDigitalGain_L12
0xE01058A3,	//0x1dfa		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG2,DEFAULT)
0xC3C7389C,	//0x1dfc		VoC_sub16_rr(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_sub16_pr(REG4,REG2,REG3,DEFAULT)
0x6023C059,	//0x1dfe		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x7000DFC7,	//0x1e00		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_push16(REG7,IN_PARALLEL)
0xD895FF43,	//0x1e02		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw32z(REG67,IN_PARALLEL)
		//0x1e03		Coolsand_NonClipDigitalGain_L11
0x1E083245,	//0x1e04		VoC_bnltz16_r(Coolsand_NonClipDigitalGain_L5,REG5)
0xFFC043AD,	//0x1e06		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x1e08		Coolsand_NonClipDigitalGain_L5
0x1E0B34AF,	//0x1e08		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L6,REG5,REG7)
0xDE00E0A7,	//0x1e0a		VoC_inc_p(REG0,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x1e0b		Coolsand_NonClipDigitalGain_L6
0x1E033420,	//0x1e0c		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L11,REG4,REG0)
0x3D1FE061,	//0x1e0e		VoC_bngt16_rd(Coolsand_NonClipDigitalGain_L7,REG7,0x404f)(lo)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x7025404F,	//0x1e10		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bngt16_rd(Coolsand_NonClipDigitalGain_L7,REG7,0x404f)(hi)
0x7698FF44,	//0x1e12		VoC_lw16i_short(FORMAT16,0xfffffff4,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x0A89FA83,	//0x1e14		VoC_lw16i(ACC0_HI,0x7fff)(lo)	|	VoC_shr32_ri(REG67,0x10,IN_PARALLEL)
0x7A647FFF,	//0x1e16		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_lw16i(ACC0_HI,0x7fff)(hi)
0xFFC0E003,	//0x1e18		VoC_NAD	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x1E202DFE,	//0x1e1a		VoC_loop_i(0x0,0xff)
0xC0EB4B1C,	//0x1e1c		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)
0x1E25361C,	//0x1e1e		VoC_bgt32_rr(Coolsand_NonClipDigitalGain_L8,REG67,ACC0)
		//0x1e20		VoC_endloop0
0xE5C4FFC0,	//0x1e20		VoC_jump(Coolsand_NonClipDigitalGain_L8)	|	VoC_NAD
		//0x1e22		Coolsand_NonClipDigitalGain_L7
0x1403F698,	//0x1e22		VoC_lw16_d(REG3,0x404e)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffff4,DEFAULT)
0xF000404E,	//0x1e24		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16_d(REG3,0x404e)(hi)
		//0x1e25		Coolsand_NonClipDigitalGain_L8
		//0x1e26		Coolsand_NonClipDigitalGain_L9
0xFFC08CCF,	//0x1e26		VoC_NOP	|	VoC_multf16_rp(REG7,REG3,REG1,DEFAULT)
0xDC97DE00,	//0x1e28		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x1E263420,	//0x1e2a		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L9,REG4,REG0)
0xDF877F30,	//0x1e2c		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x1DFA3107,	//0x1e2e		VoC_bgtz16_r(Coolsand_NonClipDigitalGain_L12,REG7)
		//0x1e30		Coolsand_NonClipDigitalGain_End
0x1407FF38,	//0x1e30		VoC_lw16_d(REG7,0x668c)(lo)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0x5F82668C,	//0x1e32		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16_d(REG7,0x668c)(hi)
0x407BDF02,	//0x1e34		VoC_add16_rr(REG3,REG1,REG7,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x1805F007,	//0x1e36		VoC_lw16i_set_inc(REG1,0x5d6a,0x1)(lo)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x18045D6A,	//0x1e38		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x5d6a,0x1)(hi)
0xD8B60000,	//0x1e3a		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
		//0x1e3c		CS_sbc_encode
0x48E36E08,	//0x1e3c		VoC_bnez16_d(NonClipDigitalGain_MP3_L2,0x48e3)
		//0x1e3e		NonClipDigitalGain_MP3_L11
0xDC96DE00,	//0x1e3e		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x3438D8B6,	//0x1e40		VoC_bgt16_rr(NonClipDigitalGain_MP3_L11,REG7,REG0)(lo)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xE5DA1E3E,	//0x1e42		VoC_jump(NonClipDigitalGain_MP3_L3)	|	VoC_bgt16_rr(NonClipDigitalGain_MP3_L11,REG7,REG0)(hi)
		//0x1e44		NonClipDigitalGain_MP3_L2
0xF817780B,	//0x1e44		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0x40001685,	//0x1e46		VoC_or16_ri(REG5,0x4000)
0x7FC31543,	//0x1e48		VoC_sw16_d(REG3,0xffc3)
0x7FC21547,	//0x1e4a		VoC_sw16_d(REG7,0xffc2)
0x7FC415C2,	//0x1e4c		VoC_sw32_d(REG45,0xffc4)
0xF8FF78FB,	//0x1e4e		VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0x1805C0FB,	//0x1e50		VoC_lw16i_set_inc(REG1,0x61ea,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xD8B661EA,	//0x1e52		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x61ea,0x1)(hi)
		//0x1e54		NonClipDigitalGain_MP3_L13
0xDC96DE00,	//0x1e54		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x3438D8B6,	//0x1e56		VoC_bgt16_rr(NonClipDigitalGain_MP3_L13,REG7,REG0)(lo)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xDE801E54,	//0x1e58		VoC_cfg(0x0)	|	VoC_bgt16_rr(NonClipDigitalGain_MP3_L13,REG7,REG0)(hi)
0x1794FFC0,	//0x1e5a		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xFF380008,	//0x1e5c		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
		//0x1e5d		NonClipDigitalGain_MP3_L3
0x40151406,	//0x1e5e		VoC_lw16_d(REG6,0x4015)
0x00001807,	//0x1e60		VoC_lw16i_set_inc(REG3,0x0,0x1)
0xF6D078FF,	//0x1e62		VoC_movreg16(INC0,REG6,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xD895DFA9,	//0x1e64		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
		//0x1e65		Coolsand_NonClipDigitalGain_L10
0xDC85DE18,	//0x1e66		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0x1E65343B,	//0x1e68		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L10,REG7,REG3)
0xFFC0E580,	//0x1e6a		VoC_NAD	|	VoC_return
