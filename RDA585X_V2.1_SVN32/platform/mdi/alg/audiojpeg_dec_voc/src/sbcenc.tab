		//0x1e28		VoC_code_section_2
		//0x1e28		Coolsand_PCM2SBC_ENCODER
0x1405DFE9,	//0x1e28		VoC_lw16_d(REG5,0x400e)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A84400E,	//0x1e2a		VoC_lw16i(REG4,0x400)(lo)	|	VoC_lw16_d(REG5,0x400e)(hi)
0x15050400,	//0x1e2c		VoC_sw16_d(REG5,0x4015)(lo)	|	VoC_lw16i(REG4,0x400)(hi)
0xF0434015,	//0x1e2e		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_sw16_d(REG5,0x4015)(hi)
0x1406F007,	//0x1e30		VoC_lw16_d(REG6,0x400f)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x1504400F,	//0x1e32		VoC_sw16_d(REG4,0x4016)(lo)	|	VoC_lw16_d(REG6,0x400f)(hi)
0x15834016,	//0x1e34		VoC_sw32_d(REG67,0x4018)(lo)	|	VoC_sw16_d(REG4,0x4016)(hi)
0x2B804018,	//0x1e36		VoC_jal(CS_sbc_encode)(lo)	|	VoC_sw32_d(REG67,0x4018)(hi)
0xDFA91E3C,	//0x1e38		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_sbc_encode)(hi)
0xE580FFC0,	//0x1e3a		VoC_return	|	VoC_NOP
		//0x1e3c		CS_sbc_encode
0xFF455FE9,	//0x1e3c		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x701CF000,	//0x1e3e		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x701EF405,	//0x1e40		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,IN_PARALLEL)
0x1540F407,	//0x1e42		VoC_sw16_d(REG0,0xffc1)(lo)	|	VoC_lw16i_short(WRAP3,0x0,IN_PARALLEL)
0x0A967FC1,	//0x1e44		VoC_lw16i(STATUS,0x3f)(lo)	|	VoC_sw16_d(REG0,0xffc1)(hi)
0xFFC0003F,	//0x1e46		VoC_NAD	|	VoC_lw16i(STATUS,0x3f)(hi)
0x25882B80,	//0x1e48		VoC_jal(CS_SBC_DMAIN_ConstAndGloabls)
0x40016E06,	//0x1e4a		VoC_bnez16_d(LABLE_SBC_RESET_BEGIN,0x4001)
0x40206E04,	//0x1e4c		VoC_bnez16_d(LABLE_SBC_RESET_BEGIN,0x4020)
0x1ECA2B00,	//0x1e4e		VoC_jump_lg(CS_SBC_reset)
		//0x1e50		LABLE_SBC_RESET_BEGIN
0xE0237004,	//0x1e50		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x400A441C,	//0x1e52		VoC_bne16_rd(LABLE_SBC_INIT_CHANNEL,REG4,0x400a)
0xFF44F023,	//0x1e54		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x1e55		LABLE_SBC_INIT_CHANNEL
0x1EEC0A84,	//0x1e56		VoC_lw16i(REG4,0x1eec)
0x65FD1508,	//0x1e58		VoC_sw16_d(ACC0_LO,0x65fd)
0x66021808,	//0x1e5a		VoC_lw16i_set_inc(REG0,0x6602,0x2)
0x1E5E2D08,	//0x1e5c		VoC_loop_i(0x0,0x84)
		//0x1e5e		VoC_endloop0
0x1808DDC4,	//0x1e5e		VoC_lw16i_set_inc(REG0,0x637a,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x1504637A,	//0x1e60		VoC_sw16_d(REG4,0x6372)(lo)	|	VoC_lw16i_set_inc(REG0,0x637a,0x2)(hi)
0xFFC06372,	//0x1e62		VoC_NAD	|	VoC_sw16_d(REG4,0x6372)(hi)
0x1E6C2C80,	//0x1e64		VoC_loop_i(0x0,0x40)
0xE4865DC4,	//0x1e66		VoC_lw16i_short(REG6,0x48,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xE0055DC4,	//0x1e68		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC4DDC4,	//0x1e6a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x1e6c		VoC_endloop0
0x1506DDC4,	//0x1e6c		VoC_sw16_d(REG6,0x6378)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x15066378,	//0x1e6e		VoC_sw16_d(REG6,0x6379)(lo)	|	VoC_sw16_d(REG6,0x6378)(hi)
0x15056379,	//0x1e70		VoC_sw16_d(REG5,0x6377)(lo)	|	VoC_sw16_d(REG6,0x6379)(hi)
0xF1A66377,	//0x1e72		VoC_lw16i_short(REG6,0xd,DEFAULT)	|	VoC_sw16_d(REG5,0x6377)(hi)
0xE0957024,	//0x1e74		VoC_lw16i_short(REG5,0x9,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x40004116,	//0x1e76		VoC_be16_rd(LABLE_SBC_MODE,REG6,0x4000)
0x400044B4,	//0x1e78		VoC_bne16_rd(LABLE_ACC_MODE,REG4,0x4000)
0x40161407,	//0x1e7a		VoC_lw16_d(REG7,0x4016)
0x0A84F90F,	//0x1e7c		VoC_lw16i(REG4,0xcac)(lo)	|	VoC_shru16_ri(REG7,0x1,DEFAULT)
0xC1E60CAC,	//0x1e7e		VoC_add16_rr(REG6,REG7,REG4,DEFAULT)	|	VoC_lw16i(REG4,0xcac)(hi)
0x63741504,	//0x1e80		VoC_sw16_d(REG4,0x6374)
0x63751506,	//0x1e82		VoC_sw16_d(REG6,0x6375)
0xFFC065D4,	//0x1e84		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABLE_SAMPLERATE_DECIDE)
		//0x1e86		LABLE_ACC_MODE
0x400044AD,	//0x1e86		VoC_bne16_rd(LABLE_INVALID_MODE,REG5,0x4000)
		//0x1e88		LABLE_SBC_MODE
0x40161407,	//0x1e88		VoC_lw16_d(REG7,0x4016)
0x0A84F90F,	//0x1e8a		VoC_lw16i(REG4,0xcac)(lo)	|	VoC_shru16_ri(REG7,0x1,DEFAULT)
0xC1E60CAC,	//0x1e8c		VoC_add16_rr(REG6,REG7,REG4,DEFAULT)	|	VoC_lw16i(REG4,0xcac)(hi)
0x63741504,	//0x1e8e		VoC_sw16_d(REG4,0x6374)
0x63751506,	//0x1e90		VoC_sw16_d(REG6,0x6375)
0xF065E5C6,	//0x1e92		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_jump(LABLE_SAMPLERATE_DECIDE)
		//0x1e93		LABLE_INVALID_MODE
0x1505DFA9,	//0x1e94		VoC_sw16_d(REG5,0x401d)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE580401D,	//0x1e96		VoC_return	|	VoC_sw16_d(REG5,0x401d)(hi)
		//0x1e98		LABLE_SAMPLERATE_DECIDE
0x7D000A85,	//0x1e98		VoC_lw16i(REG5,0x7d00)
0x40184115,	//0x1e9a		VoC_be16_rd(LABLE_SBC_RESAMPLE_END,REG5,0x4018)
0x2C440AC5,	//0x1e9c		VoC_lw16i(REG5,0xac44)
0x401840B5,	//0x1e9e		VoC_be16_rd(LABLE_SBC_RESAMPLE_END,REG5,0x4018)
0x3B800AC5,	//0x1ea0		VoC_lw16i(REG5,0xbb80)
0x40184095,	//0x1ea2		VoC_be16_rd(LABLE_SBC_RESAMPLE_END,REG5,0x4018)
0x25C72B80,	//0x1ea4		VoC_jal(CS_resample_Init)
0xF065E5D0,	//0x1ea6		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_jump(LABLE_SBC_WITHOUTRESAMPLE_END)
0x1505DFA9,	//0x1ea8		VoC_sw16_d(REG5,0x401d)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE580401D,	//0x1eaa		VoC_return	|	VoC_sw16_d(REG5,0x401d)(hi)
		//0x1eac		LABLE_SBC_RESAMPLE_END
0x40211505,	//0x1eac		VoC_sw16_d(REG5,0x4021)
0x66020A85,	//0x1eae		VoC_lw16i(REG5,0x6602)
0x00800A84,	//0x1eb0		VoC_lw16i(REG4,0x80)
0x65FC1505,	//0x1eb2		VoC_sw16_d(REG5,0x65fc)
0x65FB1504,	//0x1eb4		VoC_sw16_d(REG4,0x65fb)
		//0x1eb6		LABLE_SBC_WITHOUTRESAMPLE_END
0x00800A84,	//0x1eb6		VoC_lw16i(REG4,0x80)
0x488DF025,	//0x1eb8		VoC_blt16_rd(LABLE_SBC_BITPOOL_CHECK,REG5,0x400a)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x4CBC400A,	//0x1eba		VoC_bnlt16_rd(LABLE_SBC_BITPOOL_CORRECT,REG4,0x400c)(lo)	|	VoC_blt16_rd(LABLE_SBC_BITPOOL_CHECK,REG5,0x400a)(hi)
0xF045400C,	//0x1ebc		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_bnlt16_rd(LABLE_SBC_BITPOOL_CORRECT,REG4,0x400c)(hi)
0x1505DFA9,	//0x1ebe		VoC_sw16_d(REG5,0x401d)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE580401D,	//0x1ec0		VoC_return	|	VoC_sw16_d(REG5,0x401d)(hi)
		//0x1ec2		LABLE_SBC_BITPOOL_CHECK
0x4C3CF9FC,	//0x1ec2		VoC_bnlt16_rd(LABLE_SBC_BITPOOL_CORRECT,REG4,0x400c)(lo)	|	VoC_shru16_ri(REG4,0xffffffff,DEFAULT)
0xF045400C,	//0x1ec4		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_bnlt16_rd(LABLE_SBC_BITPOOL_CORRECT,REG4,0x400c)(hi)
0x1505DFA9,	//0x1ec6		VoC_sw16_d(REG5,0x401d)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE580401D,	//0x1ec8		VoC_return	|	VoC_sw16_d(REG5,0x401d)(hi)
		//0x1eca		LABLE_SBC_BITPOOL_CORRECT
		//0x1eca		CS_SBC_reset
0x2C440AC5,	//0x1eca		VoC_lw16i(REG5,0xac44)
0x40214425,	//0x1ecc		VoC_bne16_rd(LABLE_SBC_SAMPLERATE_INDEX_32000,REG5,0x4021)
0xE5D3F045,	//0x1ece		VoC_jump(LABLE_SBC_SAMPLERATE_INDEX_END)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
		//0x1ed0		LABLE_SBC_SAMPLERATE_INDEX_32000
0x7D000A85,	//0x1ed0		VoC_lw16i(REG5,0x7d00)
0x40214425,	//0x1ed2		VoC_bne16_rd(LABLE_SBC_SAMPLERATE_INDEX_48000,REG5,0x4021)
0xE5CDF025,	//0x1ed4		VoC_jump(LABLE_SBC_SAMPLERATE_INDEX_END)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x1ed6		LABLE_SBC_SAMPLERATE_INDEX_48000
0x3B800AC5,	//0x1ed6		VoC_lw16i(REG5,0xbb80)
0x40214425,	//0x1ed8		VoC_bne16_rd(LABLE_SBC_SAMPLERATE_INDEX_ERROR,REG5,0x4021)
0xE5C7F065,	//0x1eda		VoC_jump(LABLE_SBC_SAMPLERATE_INDEX_END)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
		//0x1edc		LABLE_SBC_SAMPLERATE_INDEX_ERROR
0xDFA9F025,	//0x1edc		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x401D1505,	//0x1ede		VoC_sw16_d(REG5,0x401d)
0xFFC06580,	//0x1ee0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1ee2		LABLE_SBC_SAMPLERATE_INDEX_END
0xFF447044,	//0x1ee2		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x400D1505,	//0x1ee4		VoC_sw16_d(REG5,0x400d)
0x401E1584,	//0x1ee6		VoC_sw32_d(ACC0,0x401e)
0x40201508,	//0x1ee8		VoC_sw16_d(ACC0_LO,0x4020)
0x63771508,	//0x1eea		VoC_sw16_d(ACC0_LO,0x6377)
0x65FD6C08,	//0x1eec		VoC_bez16_d(LABLE_NOTUSE_RESAMPLE,0x65fd)
0x266E2B80,	//0x1eee		VoC_jal(CS_ResampleAudio_SBCEnc)
0xDFA9E5C6,	//0x1ef0		VoC_pop16(RA,DEFAULT)	|	VoC_jump(LABLE_NOTUSE_RESAMPLE_END)
0xE580FFC0,	//0x1ef2		VoC_return	|	VoC_NOP
		//0x1ef4		LABLE_NOTUSE_RESAMPLE
0x1F022B80,	//0x1ef4		VoC_jal(CS_SBC_Encode)
		//0x1ef6		LABLE_NOTUSE_RESAMPLE_END
0x63771404,	//0x1ef6		VoC_lw16_d(REG4,0x6377)
0xF91C7005,	//0x1ef8		VoC_shru16_ri(REG4,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x1582FFC0,	//0x1efa		VoC_sw32_d(REG45,0x401e)(lo)	|	VoC_NOP
0x2B80401E,	//0x1efc		VoC_jal(CS_SBC_DMAOUT_Gloabls)(lo)	|	VoC_sw32_d(REG45,0x401e)(hi)
0xDFA925B4,	//0x1efe		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_SBC_DMAOUT_Gloabls)(hi)
0xE580FFC0,	//0x1f00		VoC_return	|	VoC_NOP
		//0x1f02		CS_SBC_Encode
0xE0255FE9,	//0x1f02		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x63742008,	//0x1f04		VoC_lw16d_set_inc(REG0,0x6374,0x2)
0x65FC2009,	//0x1f06		VoC_lw16d_set_inc(REG1,0x65fc,0x2)
0x65FB1404,	//0x1f08		VoC_lw16_d(REG4,0x65fb)
		//0x1f0a		LABLE_SBC_INTERLOOP_BEGIN
0x4015458D,	//0x1f0a		VoC_bne16_rd(LABLE_COPYDATA_ACCORDING_CHANNEL,REG5,0x4015)
0x2E20F90C,	//0x1f0c		VoC_loop_r(0,REG4)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xD9C41F12,	//0x1f0e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0xDDCCD9C4,	//0x1f10		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1f12		VoC_endloop0
0xDFC0DDCC,	//0x1f12		VoC_push16(REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x66021808,	//0x1f14		VoC_lw16i_set_inc(REG0,0x6602,0x2)
0x22D61805,	//0x1f16		VoC_lw16i_set_inc(REG1,0x22d6,0x1)
0x23561806,	//0x1f18		VoC_lw16i_set_inc(REG2,0x2356,0x1)
0x1F212C80,	//0x1f1a		VoC_loop_i(0x0,0x40)
0xD9C5D9C4,	//0x1f1c		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDCA9DC98,	//0x1f1e		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
0xDCABDC9A,	//0x1f20		VoC_sw16inc_p(ACC1_HI,REG2,DEFAULT)	|	VoC_sw16inc_p(ACC1_LO,REG1,DEFAULT)
		//0x1f21		VoC_endloop0
0xF914E5D8,	//0x1f22		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_jump(LABLE_COPYDATA_ACCORDING_CHANNEL_END)
		//0x1f23		LABLE_COPYDATA_ACCORDING_CHANNEL
0x1F292E20,	//0x1f24		VoC_loop_r(0,REG4)
0xD9C4D9C4,	//0x1f26		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDCCDDCC,	//0x1f28		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x1f29		VoC_endloop0
0x1808DFC0,	//0x1f2a		VoC_lw16i_set_inc(REG0,0x6602,0x2)(lo)	|	VoC_push16(REG0,DEFAULT)
0x18096602,	//0x1f2c		VoC_lw16i_set_inc(REG1,0x22d6,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x6602,0x2)(hi)
0x180A22D6,	//0x1f2e		VoC_lw16i_set_inc(REG2,0x2356,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x22d6,0x2)(hi)
0x2C402356,	//0x1f30		VoC_loop_i(0x0,0x20)(lo)	|	VoC_lw16i_set_inc(REG2,0x2356,0x2)(hi)
0xD9C41F38,	//0x1f32		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x20)(hi)
0xDDCCD9C5,	//0x1f34		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xDDD4DDCD,	//0x1f36		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x1f38		VoC_endloop0
0xFFC05DD5,	//0x1f38		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x1f3a		LABLE_COPYDATA_ACCORDING_CHANNEL_END
0x637A1FBC,	//0x1f3a		VoC_lw16i_set_inc(REG0,0x637a,0xffffffff)
0x22D61809,	//0x1f3c		VoC_lw16i_set_inc(REG1,0x22d6,0x2)
0x1CEC1806,	//0x1f3e		VoC_lw16i_set_inc(REG2,0x1cec,0x1)
0x63781404,	//0x1f40		VoC_lw16_d(REG4,0x6378)
0x1F802B80,	//0x1f42		VoC_jal(CS_sbc_analyze_audio)
0x63781504,	//0x1f44		VoC_sw16_d(REG4,0x6378)
0x64BA1FBC,	//0x1f46		VoC_lw16i_set_inc(REG0,0x64ba,0xffffffff)
0x23561809,	//0x1f48		VoC_lw16i_set_inc(REG1,0x2356,0x2)
0x1CFC1806,	//0x1f4a		VoC_lw16i_set_inc(REG2,0x1cfc,0x1)
0x63791404,	//0x1f4c		VoC_lw16_d(REG4,0x6379)
0x1F802B80,	//0x1f4e		VoC_jal(CS_sbc_analyze_audio)
0x63791504,	//0x1f50		VoC_sw16_d(REG4,0x6379)
0x21722B80,	//0x1f52		VoC_jal(CS_SBC_PackFrame)
0xF0085F80,	//0x1f54		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x63750B04,	//0x1f56		VoC_sub16_dr(REG4,0x6375,REG0)
0x441DF045,	//0x1f58		VoC_bne16_rd(LABLE_SBC_COMPARE_CH,REG5,0x4015)(lo)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xF90C4015,	//0x1f5a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_bne16_rd(LABLE_SBC_COMPARE_CH,REG5,0x4015)(hi)
		//0x1f5c		LABLE_SBC_COMPARE_CH
0x00800A81,	//0x1f5c		VoC_lw16i(REG1,0x80)
0x1F6A340C,	//0x1f5e		VoC_bgt16_rr(LABLE_SBC_BEGIN_ADDR,REG1,REG4)
0x0A81E024,	//0x1f60		VoC_lw16i(REG1,0x6602)(lo)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0x15046602,	//0x1f62		VoC_sw16_d(REG4,0x65fb)(lo)	|	VoC_lw16i(REG1,0x6602)(hi)
0x150165FB,	//0x1f64		VoC_sw16_d(REG1,0x65fc)(lo)	|	VoC_sw16_d(REG4,0x65fb)(hi)
0x2B0065FC,	//0x1f66		VoC_jump_lg(LABLE_SBC_INTERLOOP_BEGIN)(lo)	|	VoC_sw16_d(REG1,0x65fc)(hi)
0xFFC01F0A,	//0x1f68		VoC_NAD	|	VoC_jump_lg(LABLE_SBC_INTERLOOP_BEGIN)(hi)
		//0x1f6a		LABLE_SBC_BEGIN_ADDR
0x1F7C3184,	//0x1f6a		VoC_bez16_r(LABLE_SBC_NON_COPY,REG4)
0x65FB1504,	//0x1f6c		VoC_sw16_d(REG4,0x65fb)
0x1809F90C,	//0x1f6e		VoC_lw16i_set_inc(REG1,0x6602,0x2)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x401D6602,	//0x1f70		VoC_be16_rd(LABLE_SBC_COMPARE_CH2,REG5,0x4015)(lo)	|	VoC_lw16i_set_inc(REG1,0x6602,0x2)(hi)
0xF90C4015,	//0x1f72		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_be16_rd(LABLE_SBC_COMPARE_CH2,REG5,0x4015)(hi)
		//0x1f74		LABLE_SBC_COMPARE_CH2
0x1F792E20,	//0x1f74		VoC_loop_r(0,REG4)
0xD9C4D9C4,	//0x1f76		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDCCDDCC,	//0x1f78		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x1f79		VoC_endloop0
0x65FC1501,	//0x1f7a		VoC_sw16_d(REG1,0x65fc)
		//0x1f7c		LABLE_SBC_NON_COPY
0xFFC0DFA9,	//0x1f7c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1f7e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1f80		CS_sbc_analyze_audio
0xE5075FE9,	//0x1f80		VoC_lw16i_short(REG7,0x50,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xDFC070E6,	//0x1f82		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0x5FC4DFC1,	//0x1f84		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xFFC0DF43,	//0x1f86		VoC_NAD	|	VoC_push32(REG67,IN_PARALLEL)
0x1FB02C21,	//0x1f88		VoC_loop_i(0x1,0x10)
0xD90B5630,	//0x1f8a		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xE0855614,	//0x1f8c		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xC32C4020,	//0x1f8e		VoC_sub16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x1F943244,	//0x1f90		VoC_bnltz16_r(LABLE_RESET_POSITION,REG4)
0x00480A84,	//0x1f92		VoC_lw16i(REG4,0x48)
		//0x1f94		LABLE_RESET_POSITION
0xC0305621,	//0x1f94		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0xC03B5A14,	//0x1f96		VoC_add16_rr(REG3,REG0,REG7,IN_PARALLEL)	|	VoC_sw16_sd(REG4,0x0,DEFAULT)
0xF3FF59CA,	//0x1f98		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xDC84D9CB,	//0x1f9a		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xDC85DCB4,	//0x1f9c		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xDC86DCB5,	//0x1f9e		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xDC87DCB6,	//0x1fa0		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB7D9CA,	//0x1fa2		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xDC84D9CB,	//0x1fa4		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xDC85DCB4,	//0x1fa6		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xDC86DCB5,	//0x1fa8		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xDC07DCB6,	//0x1faa		VoC_sw16_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDA215C37,	//0x1fac		VoC_sw16_sd(REG1,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
0x1FB82B80,	//0x1fae		VoC_jal(CS_sbc_analyze_eight)
		//0x1fb0		VoC_endloop1
0x5F84FFC0,	//0x1fb0		VoC_pop16(REG4,DEFAULT)	|	VoC_NAD
0xDF81DF03,	//0x1fb2		VoC_pop16(REG1,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0xDFA9DF80,	//0x1fb4		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xE580FFC0,	//0x1fb6		VoC_return	|	VoC_NOP
		//0x1fb8		CS_sbc_analyze_eight
0x1C541805,	//0x1fb8		VoC_lw16i_set_inc(REG1,0x1c54,0x1)
0x1C9A180B,	//0x1fba		VoC_lw16i_set_inc(REG3,0x1c9a,0x2)
0xDFC27019,	//0x1fbc		VoC_push16(REG2,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x23D6180A,	//0x1fbe		VoC_lw16i_set_inc(REG2,0x23d6,0x2)
0x821D021C,	//0x1fc0		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x821F021E,	//0x1fc2		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)
0xD40D9C64,	//0x1fc4		VoC_mac32inc_pp(REG1,REG5,DEFAULT)	|	VoC_multf32_pp(ACC0,REG1,REG4,DEFAULT)
0xD48FD30E,	//0x1fc6		VoC_msu32inc_pp(REG1,REG7,DEFAULT)	|	VoC_mac32_pp(REG1,REG6,DEFAULT)
0x821D021C,	//0x1fc8		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x821F021E,	//0x1fca		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)
0xD40DD30C,	//0x1fcc		VoC_mac32inc_pp(REG1,REG5,DEFAULT)	|	VoC_mac32_pp(REG1,REG4,DEFAULT)
0xD48FD30E,	//0x1fce		VoC_msu32inc_pp(REG1,REG7,DEFAULT)	|	VoC_mac32_pp(REG1,REG6,DEFAULT)
0x821D021C,	//0x1fd0		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x821F021E,	//0x1fd2		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)
0x9E6CD40C,	//0x1fd4		VoC_multf32inc_pp(ACC0,REG1,REG5,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG4,DEFAULT)
0xFF26540E,	//0x1fd6		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG6,DEFAULT)
0xFA7E540F,	//0x1fd8		VoC_shr32_ri(RL6,0xf,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG7,DEFAULT)
0x821D021C,	//0x1fda		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x021EDDD6,	//0x1fdc		VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0xD40C821F,	//0x1fde		VoC_mac32inc_pp(REG1,REG4,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)
0xD40ED40D,	//0x1fe0		VoC_mac32inc_pp(REG1,REG6,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG5,DEFAULT)
0x021CD40F,	//0x1fe2		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG7,DEFAULT)
0x021E821D,	//0x1fe4		VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0xD40C821F,	//0x1fe6		VoC_mac32inc_pp(REG1,REG4,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)
0xD40ED40D,	//0x1fe8		VoC_mac32inc_pp(REG1,REG6,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG5,DEFAULT)
0x821D021C,	//0x1fea		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0xFA7C1E7C,	//0x1fec		VoC_shr32_ri(ACC0,0xf,IN_PARALLEL)	|	VoC_multf32inc_pp(ACC0,REG1,REG7,DEFAULT)
0x821F021E,	//0x1fee		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)
0xD40CDDD4,	//0x1ff0		VoC_mac32inc_pp(REG1,REG4,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD40ED40D,	//0x1ff2		VoC_mac32inc_pp(REG1,REG6,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG5,DEFAULT)
0x021CD40F,	//0x1ff4		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG7,DEFAULT)
0x021E821D,	//0x1ff6		VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0xD40C821F,	//0x1ff8		VoC_mac32inc_pp(REG1,REG4,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)
0xD40ED40D,	//0x1ffa		VoC_mac32inc_pp(REG1,REG6,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG5,DEFAULT)
0x021CD40F,	//0x1ffc		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG7,DEFAULT)
0x021E821D,	//0x1ffe		VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0xD40C821F,	//0x2000		VoC_mac32inc_pp(REG1,REG4,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)
0x540E9E6C,	//0x2002		VoC_mac32inc_pp(REG1,REG6,DEFAULT)	|	VoC_multf32inc_pp(ACC0,REG1,REG5,DEFAULT)
0x540FFF26,	//0x2004		VoC_mac32inc_pp(REG1,REG7,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x021CFA7E,	//0x2006		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_shr32_ri(RL6,0xf,IN_PARALLEL)
0x021E821D,	//0x2008		VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0xDDD6821F,	//0x200a		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)
0xD40DD40C,	//0x200c		VoC_mac32inc_pp(REG1,REG5,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG4,DEFAULT)
0xD40FD40E,	//0x200e		VoC_mac32inc_pp(REG1,REG7,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG6,DEFAULT)
0x821D021C,	//0x2010		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x821F021E,	//0x2012		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)
0xD40DD40C,	//0x2014		VoC_mac32inc_pp(REG1,REG5,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG4,DEFAULT)
0x021CD40E,	//0x2016		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG6,DEFAULT)
0x1E7C821D,	//0x2018		VoC_multf32inc_pp(ACC0,REG1,REG7,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0x021EFA7C,	//0x201a		VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,IN_PARALLEL)
0xDDD4821F,	//0x201c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)
0xD40DD40C,	//0x201e		VoC_mac32inc_pp(REG1,REG5,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG4,DEFAULT)
0xD40FD40E,	//0x2020		VoC_mac32inc_pp(REG1,REG7,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG6,DEFAULT)
0x821D021C,	//0x2022		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x821F021E,	//0x2024		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)
0xFF261E64,	//0x2026		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_multf32inc_pp(ACC0,REG1,REG4,DEFAULT)
0xFA7E540D,	//0x2028		VoC_shr32_ri(RL6,0xf,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG5,DEFAULT)
0xD40FD40E,	//0x202a		VoC_mac32inc_pp(REG1,REG7,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG6,DEFAULT)
0x021CDDD6,	//0x202c		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0x021E821D,	//0x202e		VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0xD40C821F,	//0x2030		VoC_mac32inc_pp(REG1,REG4,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)
0xD48ED48D,	//0x2032		VoC_msu32inc_pp(REG1,REG6,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG5,DEFAULT)
0x021CD48F,	//0x2034		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG7,DEFAULT)
0x021E821D,	//0x2036		VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0xD48C821F,	//0x2038		VoC_msu32inc_pp(REG1,REG4,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)
0x9E74D48D,	//0x203a		VoC_multf32inc_pp(ACC0,REG1,REG6,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG5,DEFAULT)
0xFF26540F,	//0x203c		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG7,DEFAULT)
0x821D021C,	//0x203e		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x821F021E,	//0x2040		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)
0xFA7E540C,	//0x2042		VoC_shr32_ri(RL6,0xf,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG4,DEFAULT)
0xD40ED40D,	//0x2044		VoC_mac32inc_pp(REG1,REG6,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG5,DEFAULT)
0xDDD6D48F,	//0x2046		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG7,DEFAULT)
0x821D021C,	//0x2048		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x821F021E,	//0x204a		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)
0xD48DD48C,	//0x204c		VoC_msu32inc_pp(REG1,REG5,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG4,DEFAULT)
0xD48FD48E,	//0x204e		VoC_msu32inc_pp(REG1,REG7,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG6,DEFAULT)
0x821D021C,	//0x2050		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x821F021E,	//0x2052		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)
0xFF261E64,	//0x2054		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_multf32inc_pp(ACC0,REG1,REG4,DEFAULT)
0xFA7E540D,	//0x2056		VoC_shr32_ri(RL6,0xf,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG5,DEFAULT)
0xD40FD40E,	//0x2058		VoC_mac32inc_pp(REG1,REG7,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG6,DEFAULT)
0x021CDDD6,	//0x205a		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0x021E821D,	//0x205c		VoC_add16inc_rp(REG6,REG0,REG3,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0xD40C821F,	//0x205e		VoC_mac32inc_pp(REG1,REG4,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)
0x021CD48D,	//0x2060		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG5,DEFAULT)
0xD48E821D,	//0x2062		VoC_msu32inc_pp(REG1,REG6,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0xD48CD48F,	//0x2064		VoC_msu32inc_pp(REG1,REG4,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG7,DEFAULT)
0x1804D48D,	//0x2066		VoC_lw16i_set_inc(REG0,0x23d6,0x1)(lo)	|	VoC_msu32inc_pp(REG1,REG5,DEFAULT)
0x180923D6,	//0x2068		VoC_lw16i_set_inc(REG1,0x670e,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x23d6,0x1)(hi)
0xFA7C670E,	//0x206a		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x670e,0x2)(hi)
0x1CE4180B,	//0x206c		VoC_lw16i_set_inc(REG3,0x1ce4,0x2)
0x1806DDD4,	//0x206e		VoC_lw16i_set_inc(REG2,0x1bac,0x1)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x021C1BAC,	//0x2070		VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x1bac,0x1)(hi)
0x7619821D,	//0x2072		VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)
0x59A3F5FA,	//0x2074		VoC_lw32_p(REG67,REG4,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xffffffff,IN_PARALLEL)
0x1604D844,	//0x2076		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_lw16_p(REG4,REG4,IN_PARALLEL)
0x790E0001,	//0x2078		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x507299D4,	//0x207a		VoC_macX_rp(REG6,REG2,DEFAULT)	|	VoC_multf32_rp(ACC0,REG7,REG2,IN_PARALLEL)
0xF0078B16,	//0x207c		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_mult16inc_rp(REG6,REG4,REG2,IN_PARALLEL)
0xD9AB48E6,	//0x207e		VoC_lw32_p(REG67,REG5,IN_PARALLEL)	|	VoC_add32_rr(RL6,REG67,ACC0,DEFAULT)
0x99D4790E,	//0x2080		VoC_multf32_rp(ACC0,REG7,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xD855D072,	//0x2082		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_macX_rp(REG6,REG2,DEFAULT)
0x00011605,	//0x2084		VoC_and16_ri(REG5,0x1)
0xE0070B56,	//0x2086		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_mult16inc_rp(REG6,REG5,REG2,DEFAULT)
0x821D021C,	//0x2088		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0xC8E65DCE,	//0x208a		VoC_add32_rr(RL6,REG67,ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
0xD85559AF,	//0x208c		VoC_lw16_p(REG5,REG5,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG5,DEFAULT)
0xD84459A3,	//0x208e		VoC_lw16_p(REG4,REG4,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG4,DEFAULT)
0x00011604,	//0x2090		VoC_and16_ri(REG4,0x1)
0x00011605,	//0x2092		VoC_and16_ri(REG5,0x1)
0xFF3A7F17,	//0x2094		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xF90C5DCE,	//0x2096		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
0xF90E1954,	//0x2098		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG5,REG2,DEFAULT)
0x99D55062,	//0x209a		VoC_multf32_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_macX_rp(REG4,REG2,DEFAULT)
0x6021DFC2,	//0x209c		VoC_movreg16(REG1,REG1,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x503AD172,	//0x209e		VoC_mac32_rp(REG7,REG2,DEFAULT)	|	VoC_macXinc_rp(REG6,REG2,IN_PARALLEL)
0x5072D0AA,	//0x20a0		VoC_macX_rp(REG6,REG2,DEFAULT)	|	VoC_msu32_rp(REG5,REG2,IN_PARALLEL)
0x7F3AD0E2,	//0x20a2		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_msuX_rp(REG4,REG2,IN_PARALLEL)
0xF01ADF86,	//0x20a4		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_pop16(REG6,IN_PARALLEL)
0xD066506E,	//0x20a6		VoC_macX_rp(REG4,REG6,IN_PARALLEL)	|	VoC_macX_rp(REG5,REG6,DEFAULT)
0xD1EA5062,	//0x20a8		VoC_msuXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_macX_rp(REG4,REG2,DEFAULT)
0x821D021C,	//0x20aa		VoC_add16inc_rp(REG5,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG0,REG3,DEFAULT)
0x821F0218,	//0x20ac		VoC_add16inc_rp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG0,REG0,REG3,DEFAULT)
0xF6E359A3,	//0x20ae		VoC_movreg16(REG3,REG7,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG4,DEFAULT)
0xF7FADFC2,	//0x20b0		VoC_lw16i_short(FORMATX,0xffffffff,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xF90E19D4,	//0x20b2		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)
0xDDCC7007,	//0x20b4		VoC_sw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xD846D072,	//0x20b6		VoC_lw16_p(REG6,REG4,DEFAULT)	|	VoC_macX_rp(REG6,REG2,DEFAULT)
0x00011606,	//0x20b8		VoC_and16_ri(REG6,0x1)
0xDFC68B96,	//0x20ba		VoC_push16(REG6,DEFAULT)	|	VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD9AB491C,	//0x20bc		VoC_lw32_p(REG67,REG5,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xF90E503A,	//0x20be		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG2,DEFAULT)
0xD856D072,	//0x20c0		VoC_lw16_p(REG6,REG5,DEFAULT)	|	VoC_macX_rp(REG6,REG2,DEFAULT)
0x00011606,	//0x20c2		VoC_and16_ri(REG6,0x1)
0x8B967007,	//0x20c4		VoC_mult16inc_rp(REG6,REG6,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x491CDFC6,	//0x20c6		VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x503AD983,	//0x20c8		VoC_mac32_rp(REG7,REG2,DEFAULT)	|	VoC_lw32_p(REG67,REG0,IN_PARALLEL)
0xD072F90E,	//0x20ca		VoC_macX_rp(REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x1606D806,	//0x20cc		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x0B960001,	//0x20ce		VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_and16_ri(REG6,0x1)(hi)
0xDFC6E007,	//0x20d0		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xD99B491C,	//0x20d2		VoC_lw32_p(REG67,REG3,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xF90E503A,	//0x20d4		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG2,DEFAULT)
0xD836D072,	//0x20d6		VoC_lw16_p(REG6,REG3,DEFAULT)	|	VoC_macX_rp(REG6,REG2,DEFAULT)
0x00011606,	//0x20d8		VoC_and16_ri(REG6,0x1)
0xE0070B96,	//0x20da		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)
0x491EDFC6,	//0x20dc		VoC_add32_rr(RL6,ACC0,REG67,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x5DCDD652,	//0x20de		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw16_sd(REG2,0x4,IN_PARALLEL)
0x19D4D9AB,	//0x20e0		VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)	|	VoC_lw32_p(REG67,REG5,IN_PARALLEL)
0xD072F90E,	//0x20e2		VoC_macX_rp(REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x7007D636,	//0x20e4		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0xDDCE8B96,	//0x20e6		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_mult16inc_rp(REG6,REG6,REG2,IN_PARALLEL)
0xD983491C,	//0x20e8		VoC_lw32_p(REG67,REG0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xF90E50BA,	//0x20ea		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG2,DEFAULT)
0xD626D0F2,	//0x20ec		VoC_lw16_sd(REG6,0x1,DEFAULT)	|	VoC_msuX_rp(REG6,REG2,DEFAULT)
0xF0078B96,	//0x20ee		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD99B4B1C,	//0x20f0		VoC_lw32_p(REG67,REG3,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)
0xF90E50BA,	//0x20f2		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG2,DEFAULT)
0xD616D0F2,	//0x20f4		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_msuX_rp(REG6,REG2,DEFAULT)
0xF0078B96,	//0x20f6		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD9A34B1C,	//0x20f8		VoC_lw32_p(REG67,REG4,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)
0xF90E50BA,	//0x20fa		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG2,DEFAULT)
0xD646D0F2,	//0x20fc		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_msuX_rp(REG6,REG2,DEFAULT)
0xE0070996,	//0x20fe		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_mult16_rp(REG6,REG6,REG2,DEFAULT)
0x599BD652,	//0x2100		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw16_sd(REG2,0x4,DEFAULT)
0x19D4CB1E,	//0x2102		VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)	|	VoC_sub32_rr(RL6,ACC0,REG67,IN_PARALLEL)
0xD072F90E,	//0x2104		VoC_macX_rp(REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x0B96D616,	//0x2106		VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xDDCEE007,	//0x2108		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xD9A3491C,	//0x210a		VoC_lw32_p(REG67,REG4,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xF90E50BA,	//0x210c		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG2,DEFAULT)
0xD646D0F2,	//0x210e		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_msuX_rp(REG6,REG2,DEFAULT)
0xF0078B96,	//0x2110		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD9ABCB1C,	//0x2112		VoC_lw32_p(REG67,REG5,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)
0xF90E503A,	//0x2114		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG2,DEFAULT)
0xD636D072,	//0x2116		VoC_lw16_sd(REG6,0x2,DEFAULT)	|	VoC_macX_rp(REG6,REG2,DEFAULT)
0xF0078B96,	//0x2118		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD983491C,	//0x211a		VoC_lw32_p(REG67,REG0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xF90E503A,	//0x211c		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG2,DEFAULT)
0xD626D072,	//0x211e		VoC_lw16_sd(REG6,0x1,DEFAULT)	|	VoC_macX_rp(REG6,REG2,DEFAULT)
0xD6528996,	//0x2120		VoC_lw16_sd(REG2,0x4,DEFAULT)	|	VoC_mult16_rp(REG6,REG6,REG2,DEFAULT)
0x491EF007,	//0x2122		VoC_add32_rr(RL6,ACC0,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x19D4D983,	//0x2124		VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)	|	VoC_lw32_p(REG67,REG0,IN_PARALLEL)
0xD072F90E,	//0x2126		VoC_macX_rp(REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x8B96D626,	//0x2128		VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,DEFAULT)
0xDDCE7007,	//0x212a		VoC_sw32inc_p(RL6,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xD99B491C,	//0x212c		VoC_lw32_p(REG67,REG3,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xF90E50BA,	//0x212e		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG2,DEFAULT)
0xDF86D0F2,	//0x2130		VoC_pop16(REG6,DEFAULT)	|	VoC_msuX_rp(REG6,REG2,DEFAULT)
0xE0070B96,	//0x2132		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)
0x4B1CDF8C,	//0x2134		VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)	|	VoC_pop16(RL6_LO,DEFAULT)
0x50BAD9A3,	//0x2136		VoC_msu32_rp(REG7,REG2,DEFAULT)	|	VoC_lw32_p(REG67,REG4,IN_PARALLEL)
0xD0F2F90E,	//0x2138		VoC_msuX_rp(REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x8B96D626,	//0x213a		VoC_mult16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,DEFAULT)
0x4B1CF007,	//0x213c		VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x503AD9AB,	//0x213e		VoC_mac32_rp(REG7,REG2,DEFAULT)	|	VoC_lw32_p(REG67,REG5,IN_PARALLEL)
0xD072F90E,	//0x2140		VoC_macX_rp(REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x7019DF86,	//0x2142		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xD032F402,	//0x2144		VoC_mac32_rp(REG6,REG2,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0x5F85DF85,	//0x2146		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x5F82E0E4,	//0x2148		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_short(REG4,0xe,IN_PARALLEL)
0x5D8CC261,	//0x214a		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xD9CEF00A,	//0x214c		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xBE77118E,	//0x214e		VoC_sub32inc_pr(RL7,REG1,RL6,IN_PARALLEL)	|	VoC_add32_rp(RL6,RL6,REG1,DEFAULT)
0x978B118A,	//0x2150		VoC_sub32inc_rp(REG67,RL6,REG1,IN_PARALLEL)	|	VoC_add32_rp(REG45,RL6,REG1,DEFAULT)
0x97CF11CE,	//0x2152		VoC_sub32inc_rp(RL7,RL7,REG1,IN_PARALLEL)	|	VoC_add32_rp(RL6,RL7,REG1,DEFAULT)
0x968D108A,	//0x2154		VoC_sub32inc_rp(ACC1,REG45,REG1,IN_PARALLEL)	|	VoC_add32_rp(REG45,REG45,REG1,DEFAULT)
0x918CFA7A,	//0x2156		VoC_add32_rp(ACC0,RL6,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0x978E7A7C,	//0x2158		VoC_sub32inc_rp(RL6,RL6,REG1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFA7E5DD2,	//0x215a		VoC_shr32_ri(RL6,0xf,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0xFA7D5DD4,	//0x215c		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x97CF11CA,	//0x215e		VoC_sub32inc_rp(RL7,RL7,REG1,IN_PARALLEL)	|	VoC_add32_rp(REG45,RL7,REG1,DEFAULT)
0x90CC7A7A,	//0x2160		VoC_add32_rp(ACC0,REG67,REG1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0x94CB7A7C,	//0x2162		VoC_sub32_rp(REG67,REG67,REG1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xDDD27A7B,	//0x2164		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xf,DEFAULT)
0xDDD47A7F,	//0x2166		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0xf,DEFAULT)
0xF3FC5DD3,	//0x2168		VoC_lw16i_short(INC0,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
0xE1065DD7,	//0x216a		VoC_lw16i_short(REG6,0x10,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0xF0065DD6,	//0x216c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0xC0B25DD5,	//0x216e		VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xFFC06580,	//0x2170		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x2172		CS_SBC_PackFrame
0xE1047F44,	//0x2172		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x678E1808,	//0x2174		VoC_lw16i_set_inc(REG0,0x678e,0x2)
0x400D1404,	//0x2176		VoC_lw16_d(REG4,0x400d)
0x63761504,	//0x2178		VoC_sw16_d(REG4,0x6376)
0xF9D45DC4,	//0x217a		VoC_shru16_ri(REG4,0xfffffffa,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xE0355DC4,	//0x217c		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xE0175DC4,	//0x217e		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xF9E55DC4,	//0x2180		VoC_shru16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC4647D,	//0x2182		VoC_sw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG7,DEFAULT)
0x1406DDC4,	//0x2184		VoC_lw16_d(REG6,0x400a)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x1407400A,	//0x2186		VoC_lw16_d(REG7,0x400b)(lo)	|	VoC_lw16_d(REG6,0x400a)(hi)
0x6465400B,	//0x2188		VoC_or16_rr(REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG7,0x400b)(hi)
0x6475F9F6,	//0x218a		VoC_or16_rr(REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffffe,IN_PARALLEL)
0x647DF9FF,	//0x218c		VoC_or16_rr(REG5,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xffffffff,IN_PARALLEL)
0x0A84DFE9,	//0x218e		VoC_lw16i(REG4,0x9c)(lo)	|	VoC_push16(RA,IN_PARALLEL)
0x1406009C,	//0x2190		VoC_lw16_d(REG6,0x400c)(lo)	|	VoC_lw16i(REG4,0x9c)(hi)
0x1505400C,	//0x2192		VoC_sw16_d(REG5,0x678e)(lo)	|	VoC_lw16_d(REG6,0x400c)(hi)
0x1506678E,	//0x2194		VoC_sw16_d(REG6,0x678f)(lo)	|	VoC_sw16_d(REG5,0x678e)(hi)
0x1407678F,	//0x2196		VoC_lw16_d(REG7,0x6377)(lo)	|	VoC_sw16_d(REG6,0x678f)(hi)
0x791F6377,	//0x2198		VoC_shru16_ri(REG7,0x3,DEFAULT)	|	VoC_lw16_d(REG7,0x6377)(hi)
0x6439E011,	//0x219a		VoC_and16_rr(REG1,REG7,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0x073BF90F,	//0x219c		VoC_add16_rd(REG3,REG7,0x6372)(lo)	|	VoC_shru16_ri(REG7,0x1,IN_PARALLEL)
0x31816372,	//0x219e		VoC_bez16_r(LABLE_DATA012_START_LO,REG1)(lo)	|	VoC_add16_rd(REG3,REG7,0x6372)(hi)
0x583721B0,	//0x21a0		VoC_lw16_p(REG7,REG3,DEFAULT)	|	VoC_bez16_r(LABLE_DATA012_START_LO,REG1)(hi)
0x1607F9C4,	//0x21a2		VoC_and16_ri(REG7,0xff)(lo)	|	VoC_shru16_ri(REG4,0xfffffff8,IN_PARALLEL)
0x647C00FF,	//0x21a4		VoC_or16_rr(REG4,REG7,DEFAULT)	|	VoC_and16_ri(REG7,0xff)(hi)
0x7002F007,	//0x21a6		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x6475F9C6,	//0x21a8		VoC_or16_rr(REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0xfffffff8,IN_PARALLEL)
0x0A87DCB4,	//0x21aa		VoC_lw16i(REG7,0x20)(lo)	|	VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)
0xDCB50020,	//0x21ac		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16i(REG7,0x20)(hi)
0xFFC065CA,	//0x21ae		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABLE_DATA012_START_END)
		//0x21b0		LABLE_DATA012_START_LO
0xF00779C5,	//0x21b0		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xF6C5646C,	//0x21b2		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xE2077022,	//0x21b4		VoC_lw16i_short(REG7,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xDC35DCB4,	//0x21b6		VoC_sw16_p(REG5,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x21b8		LABLE_DATA012_START_END
0x6377073F,	//0x21b8		VoC_add16_rd(REG7,REG7,0x6377)
0x1507DF41,	//0x21ba		VoC_sw16_d(REG7,0x6377)(lo)	|	VoC_push32(REG23,DEFAULT)
0x19006377,	//0x21bc		VoC_lw16i_set_inc(REG0,0x1cec,0x20)(lo)	|	VoC_sw16_d(REG7,0x6377)(hi)
0x18091CEC,	//0x21be		VoC_lw16i_set_inc(REG1,0x22d6,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1cec,0x20)(hi)
0x181322D6,	//0x21c0		VoC_lw16i_set_inc(REG3,0x674e,0x4)(lo)	|	VoC_lw16i_set_inc(REG1,0x22d6,0x2)(hi)
0xFFC0674E,	//0x21c2		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x674e,0x4)(hi)
0x21DC2C11,	//0x21c4		VoC_loop_i(0x1,0x8)
0xE0247005,	//0x21c6		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xDFC07002,	//0x21c8		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xD9C46A0E,	//0x21ca		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0xFF257AFC,	//0x21cc		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1f,DEFAULT)
0xF0066565,	//0x21ce		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_xor32_rr(ACC1,ACC0,DEFAULT)
0x36A2CB64,	//0x21d0		VoC_bngt32_rr(LABLE_SBC_END_WHILE,ACC0,REG45)(lo)	|	VoC_sub32_rr(ACC0,ACC1,ACC0,DEFAULT)
0xFFC021D8,	//0x21d2		VoC_NAD	|	VoC_bngt32_rr(LABLE_SBC_END_WHILE,ACC0,REG45)(hi)
		//0x21d4		LABLE_SBC_WHILE_BEGIN
0xFDFA5E10,	//0x21d4		VoC_shru32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x21D43622,	//0x21d6		VoC_bgt32_rr(LABLE_SBC_WHILE_BEGIN,ACC0,REG45)
		//0x21d8		LABLE_SBC_END_WHILE
		//0x21d8		VoC_endloop0
0xE02659C4,	//0x21d8		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDDA5F80,	//0x21da		VoC_sw32inc_p(REG45,REG3,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
		//0x21dc		VoC_endloop1
0xC0305C92,	//0x21dc		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0x1CFC1900,	//0x21de		VoC_lw16i_set_inc(REG0,0x1cfc,0x20)
0x22D71809,	//0x21e0		VoC_lw16i_set_inc(REG1,0x22d7,0x2)
0x67501813,	//0x21e2		VoC_lw16i_set_inc(REG3,0x6750,0x4)
0x21FA2C11,	//0x21e4		VoC_loop_i(0x1,0x8)
0xE0247005,	//0x21e6		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xDFC07002,	//0x21e8		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xD9C46A0C,	//0x21ea		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0xFF257AFC,	//0x21ec		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1f,DEFAULT)
0xCB64E565,	//0x21ee		VoC_sub32_rr(ACC0,ACC1,ACC0,DEFAULT)	|	VoC_xor32_rr(ACC1,ACC0,DEFAULT)
0x21F636A2,	//0x21f0		VoC_bngt32_rr(LABLE_SBC_END_WHILE_CH2,ACC0,REG45)
		//0x21f2		LABLE_SBC_WHILE_BEGIN_CH2
0xFDFA5E10,	//0x21f2		VoC_shru32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x21F23622,	//0x21f4		VoC_bgt32_rr(LABLE_SBC_WHILE_BEGIN_CH2,ACC0,REG45)
		//0x21f6		LABLE_SBC_END_WHILE_CH2
		//0x21f6		VoC_endloop0
0xE02659C4,	//0x21f6		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDDA5F80,	//0x21f8		VoC_sw32inc_p(REG45,REG3,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
		//0x21fa		VoC_endloop1
0xC0305C92,	//0x21fa		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0xE0347005,	//0x21fc		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x400A4024,	//0x21fe		VoC_be16_rd(LABLE_DEAL_JOINT_STEREO,REG4,0x400a)
0x22862B00,	//0x2200		VoC_jump_lg(LABLE_DEAL_JOINT_STEREO_END)
		//0x2202		LABLE_DEAL_JOINT_STEREO
0x670E1808,	//0x2202		VoC_lw16i_set_inc(REG0,0x670e,0x2)
0x1CEC1881,	//0x2204		VoC_lw16i_set_inc(REG1,0x1cec,0x10)
0x67991505,	//0x2206		VoC_sw16_d(REG5,0x6799)
0x225C2C0F,	//0x2208		VoC_loop_i(0x1,0x7)
0xE02A700B,	//0x220a		VoC_lw16i_short(ACC1_LO,0x2,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
0xDFC55F40,	//0x220c		VoC_push16(REG5,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x7002FF2C,	//0x220e		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
0xFFC0E003,	//0x2210		VoC_NAD	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xD9CE6A1E,	//0x2212		VoC_lw32inc_p(RL6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x978F118E,	//0x2214		VoC_sub32inc_rp(RL7,RL6,REG1,IN_PARALLEL)	|	VoC_add32_rp(RL6,RL6,REG1,DEFAULT)
0xFA0F7A0E,	//0x2216		VoC_shr32_ri(RL7,0x1,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0xFF327AFE,	//0x2218		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x1f,DEFAULT)
0xDDC66572,	//0x221a		VoC_sw32inc_p(RL6,REG0,IN_PARALLEL)	|	VoC_xor32_rr(REG45,RL6,DEFAULT)
0xFF3A4AB6,	//0x221c		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_sub32_rr(RL6,REG45,RL6,DEFAULT)
0xFAFA5DC7,	//0x221e		VoC_shr32_ri(REG45,0x1f,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xF0066557,	//0x2220		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_xor32_rr(RL7,REG45,DEFAULT)
0xF0074BD7,	//0x2222		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_sub32_rr(RL7,RL7,REG45,DEFAULT)
0x222A36B5,	//0x2224		VoC_bngt32_rr(LABLE_SBC_STEREO_SECOND_SCALE,RL6,ACC1)
		//0x2226		LABLE_SBC_STEREO_SCALE_0
0xFDFD5E10,	//0x2226		VoC_shru32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x22263635,	//0x2228		VoC_bgt32_rr(LABLE_SBC_STEREO_SCALE_0,RL6,ACC1)
		//0x222a		LABLE_SBC_STEREO_SECOND_SCALE
0x223036BC,	//0x222a		VoC_bngt32_rr(LABLE_SBC_STEREO_SCALE_2,RL7,ACC0)
		//0x222c		LABLE_SBC_STEREO_SCALE_1
0xFDFC5E18,	//0x222c		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x222C363C,	//0x222e		VoC_bgt32_rr(LABLE_SBC_STEREO_SCALE_1,RL7,ACC0)
		//0x2230		LABLE_SBC_STEREO_SCALE_2
		//0x2230		VoC_endloop0
0x5617D9CE,	//0x2230		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0x78FFC966,	//0x2232		VoC_shr16_ri(REG7,0xffffffff,DEFAULT)	|	VoC_add32_rr(RL6,ACC1,ACC0,IN_PARALLEL)
0x0A84E026,	//0x2234		VoC_lw16i(REG4,0x674e)(lo)	|	VoC_lw16i_short(REG6,0x2,IN_PARALLEL)
0x0A85674E,	//0x2236		VoC_lw16i(REG5,0x22d6)(lo)	|	VoC_lw16i(REG4,0x674e)(hi)
0x78FF22D6,	//0x2238		VoC_shr16_ri(REG7,0xffffffff,DEFAULT)	|	VoC_lw16i(REG5,0x22d6)(hi)
0x413CC17D,	//0x223a		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xC136D617,	//0x223c		VoC_add16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_lw16_sd(REG7,0x0,IN_PARALLEL)
0x91F7D9A7,	//0x223e		VoC_add32_rp(RL7,RL7,REG6,DEFAULT)	|	VoC_lw32_p(RL7,REG4,DEFAULT)
0x225836BE,	//0x2240		VoC_bngt32_rr(LABLE_SBC_WETHER_JOINT_SUBBAND,RL7,RL6)
0xE0145DA5,	//0x2242		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG4,DEFAULT)
0xDDA95DB4,	//0x2244		VoC_sw32_p(REG23,REG5,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0xC23FF000,	//0x2246		VoC_sub16_rr(REG7,REG0,REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xD9087E7C,	//0x2248		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_shru16_rr(REG4,REG7,DEFAULT)
0x67992884,	//0x224a		VoC_or16_rd(REG4,0x6799)
0xD9C66909,	//0x224c		VoC_lw32inc_p(RL6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x59C6D9C7,	//0x224e		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0x59C7DDCE,	//0x2250		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG1,IN_PARALLEL)
0x5DCEDDCF,	//0x2252		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,IN_PARALLEL)
0xDDCFD9C6,	//0x2254		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG0,IN_PARALLEL)
		//0x2255		VoC_endloop0
0x67991504,	//0x2256		VoC_sw16_d(REG4,0x6799)
		//0x2258		LABLE_SBC_WETHER_JOINT_SUBBAND
0xDF855F00,	//0x2258		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xE0247027,	//0x225a		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x225c		VoC_endloop1
0xC17D4061,	//0x225c		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x63771406,	//0x225e		VoC_lw16_d(REG6,0x6377)
0xF81E7021,	//0x2260		VoC_shr16_ri(REG6,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF80E6431,	//0x2262		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG1,REG6,DEFAULT)
0x63720736,	//0x2264		VoC_add16_rd(REG6,REG6,0x6372)
0x67991405,	//0x2266		VoC_lw16_d(REG5,0x6799)
0x7FF81846,	//0x2268		VoC_lw16i_set_inc(REG2,0xfffffff8,0x1)
0xE0135867,	//0x226a		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG6,DEFAULT)
0xE00468E8,	//0x226c		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0xDE10641D,	//0x226e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG3,DEFAULT)
0xDFC57E55,	//0x2270		VoC_push16(REG5,IN_PARALLEL)	|	VoC_shru16_rr(REG5,REG2,DEFAULT)
0xDF85646C,	//0x2272		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
		//0x2274		VoC_endloop0
0xE080780D,	//0x2274		VoC_lw16i_short(REG0,0x8,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0x67901504,	//0x2276		VoC_sw16_d(REG4,0x6790)
0x227E3181,	//0x2278		VoC_bez16_r(LABLE_SBC_DATA4_LO,REG1)
0x00FF1607,	//0x227a		VoC_and16_ri(REG7,0xff)
0xE47CF9C4,	//0x227c		VoC_or16_rr(REG4,REG7,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)
		//0x227e		LABLE_SBC_DATA4_LO
0x63770707,	//0x227e		VoC_add16_rd(REG7,REG0,0x6377)
0x63760706,	//0x2280		VoC_add16_rd(REG6,REG0,0x6376)
0x1583DC64,	//0x2282		VoC_sw32_d(REG67,0x6376)(lo)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
0xFFC06376,	//0x2284		VoC_NAD	|	VoC_sw32_d(REG67,0x6376)(hi)
		//0x2286		LABLE_DEAL_JOINT_STEREO_END
0x63761483,	//0x2286		VoC_lw32_d(REG67,0x6376)
0x22D61809,	//0x2288		VoC_lw16i_set_inc(REG1,0x22d6,0x2)
0x1EEC1806,	//0x228a		VoC_lw16i_set_inc(REG2,0x1eec,0x1)
0x678E1807,	//0x228c		VoC_lw16i_set_inc(REG3,0x678e,0x1)
0xF91F791E,	//0x228e		VoC_shru16_ri(REG7,0x3,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x3,DEFAULT)
0xF90F60E4,	//0x2290		VoC_shru16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x00011604,	//0x2292		VoC_and16_ri(REG4,0x1)
0x22D03184,	//0x2294		VoC_bez16_r(LABLE_SBC_DATA_GENERATE_LO,REG4)
0xC0F340BA,	//0x2296		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xF1E0F044,	//0x2298		VoC_lw16i_short(REG0,0xf,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x22CC2E21,	//0x229a		VoC_loop_r(1,REG4)
0x22C42C04,	//0x229c		VoC_loop_i(0x0,0x2)
0xD8355824,	//0x229e		VoC_lw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xD8967944,	//0x22a0		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x8,DEFAULT)
0xF9E579E4,	//0x22a2		VoC_shru16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffc,DEFAULT)
0xD8976406,	//0x22a4		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG0,DEFAULT)
0x6475E474,	//0x22a6		VoC_or16_rr(REG5,REG6,DEFAULT)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0x6407F9E4,	//0x22a8		VoC_and16_rr(REG7,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffffc,IN_PARALLEL)
0x647CF9E5,	//0x22aa		VoC_or16_rr(REG4,REG7,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffc,IN_PARALLEL)
0x647DD896,	//0x22ac		VoC_or16_rr(REG5,REG7,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
0x6406F9C4,	//0x22ae		VoC_and16_rr(REG6,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffff8,IN_PARALLEL)
0xDCB5D825,	//0x22b0		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16_p(REG5,REG2,IN_PARALLEL)
0x00FF1605,	//0x22b2		VoC_and16_ri(REG5,0xff)
0xD897646C,	//0x22b4		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xD8246407,	//0x22b6		VoC_lw16_p(REG4,REG2,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG0,DEFAULT)
0xF9C45CA4,	//0x22b8		VoC_shru16_ri(REG4,0xfffffff8,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xD8357924,	//0x22ba		VoC_lw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x4,DEFAULT)
0xF9E56474,	//0x22bc		VoC_shru16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xF9E46475,	//0x22be		VoC_shru16_ri(REG4,0xfffffffc,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG6,DEFAULT)
0xF9E5647C,	//0x22c0		VoC_shru16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG7,DEFAULT)
0xDC24E47D,	//0x22c2		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_or16_rr(REG5,REG7,DEFAULT)
		//0x22c4		VoC_endloop0
0xE2055CB5,	//0x22c4		VoC_lw16i_short(REG5,0x20,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x63761483,	//0x22c6		VoC_lw32_d(REG67,0x6376)
0xC1EF41AE,	//0x22c8		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x22D71809,	//0x22ca		VoC_lw16i_set_inc(REG1,0x22d7,0x2)
		//0x22cc		VoC_endloop1
0x63761583,	//0x22cc		VoC_sw32_d(REG67,0x6376)
0x230C2B00,	//0x22ce		VoC_jump_lg(LABLE_SBC_DATA_GENERATE_END)
		//0x22d0		LABLE_SBC_DATA_GENERATE_LO
0xC0F340BA,	//0x22d0		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xF1E0F044,	//0x22d2		VoC_lw16i_short(REG0,0xf,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x0A8EFF47,	//0x22d4		VoC_lw16i(RL7_LO,0xff)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xFFC000FF,	//0x22d6		VoC_NAD	|	VoC_lw16i(RL7_LO,0xff)(hi)
0x230A2E21,	//0x22d8		VoC_loop_r(1,REG4)
0x23032C04,	//0x22da		VoC_loop_i(0x0,0x2)
0xD8355824,	//0x22dc		VoC_lw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0x00FF1604,	//0x22de		VoC_and16_ri(REG4,0xff)
0xD89679E4,	//0x22e0		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffc,DEFAULT)
0xF9E56406,	//0x22e2		VoC_shru16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG0,DEFAULT)
0xD8976474,	//0x22e4		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xF9E46475,	//0x22e6		VoC_shru16_ri(REG4,0xfffffffc,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG6,DEFAULT)
0xF9E56407,	//0x22e8		VoC_shru16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG0,DEFAULT)
0xD896647C,	//0x22ea		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG7,DEFAULT)
0xF688647D,	//0x22ec		VoC_movreg16(ACC0_LO,REG4,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG7,DEFAULT)
0xD8976406,	//0x22ee		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG0,DEFAULT)
0xDCB55824,	//0x22f0		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xD8357944,	//0x22f2		VoC_lw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x8,DEFAULT)
0xF9E46407,	//0x22f4		VoC_shru16_ri(REG4,0xfffffffc,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG0,DEFAULT)
0xF9E56474,	//0x22f6		VoC_shru16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xF9E46475,	//0x22f8		VoC_shru16_ri(REG4,0xfffffffc,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG6,DEFAULT)
0xF9E5647C,	//0x22fa		VoC_shru16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG7,DEFAULT)
0xF9C4647D,	//0x22fc		VoC_shru16_ri(REG4,0xfffffff8,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG7,DEFAULT)
0x6522E4FC,	//0x22fe		VoC_or32_rr(REG45,ACC0,DEFAULT)	|	VoC_and32_rr(ACC0,RL7,DEFAULT)
0x0A85DCB5,	//0x2300		VoC_lw16i(REG5,0x20)(lo)	|	VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)
0xDCA40020,	//0x2302		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16i(REG5,0x20)(hi)
		//0x2303		VoC_endloop0
0x63761483,	//0x2304		VoC_lw32_d(REG67,0x6376)
0xC1EF41AE,	//0x2306		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x22D71809,	//0x2308		VoC_lw16i_set_inc(REG1,0x22d7,0x2)
		//0x230a		VoC_endloop1
0x63761583,	//0x230a		VoC_sw32_d(REG67,0x6376)
		//0x230c		LABLE_SBC_DATA_GENERATE_END
0x241E2B80,	//0x230c		VoC_jal(CS_SBC_crc8)
0x3180DF00,	//0x230e		VoC_bez16_r(LABLE_SBC_DATA3_LO,REG0)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x58142317,	//0x2310		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_bez16_r(LABLE_SBC_DATA3_LO,REG0)(hi)
0x1604F9C5,	//0x2312		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)
0xE46500FF,	//0x2314		VoC_or16_rr(REG5,REG4,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xD814E5C6,	//0x2316		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_jump(LABLE_SBC_DATA3_END)
		//0x2317		LABLE_SBC_DATA3_LO
0x7F001644,	//0x2318		VoC_and16_ri(REG4,0xff00)
0xFFC0E465,	//0x231a		VoC_NOP	|	VoC_or16_rr(REG5,REG4,DEFAULT)
		//0x231c		LABLE_SBC_DATA3_END
0xFFC05C15,	//0x231c		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG5,REG1,DEFAULT)
0x244C2B80,	//0x231e		VoC_jal(CS_SBC_Calculate_Bits)
0x22E61808,	//0x2320		VoC_lw16i_set_inc(REG0,0x22e6,0x2)
0x676E1809,	//0x2322		VoC_lw16i_set_inc(REG1,0x676e,0x2)
0xE0097028,	//0x2324		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
0xFF2559C2,	//0x2326		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xFF26690A,	//0x2328		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xFEAD7EA4,	//0x232a		VoC_shr32_rr(ACC1,REG5,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xCB754B34,	//0x232c		VoC_sub32_rr(ACC1,ACC1,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xD9C27F34,	//0x232e		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0xFF355DCC,	//0x2330		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x2332		VoC_endloop0
0xFF47DDCD,	//0x2332		VoC_lw32z(RL7,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0x00000ACE,	//0x2334		VoC_lw16i(RL7_LO,0x8000)
0x1CEC1809,	//0x2336		VoC_lw16i_set_inc(REG1,0x1cec,0x2)
0x23F02C21,	//0x2338		VoC_loop_i(0x1,0x10)
0x22E6180A,	//0x233a		VoC_lw16i_set_inc(REG2,0x22e6,0x2)
0x676E1813,	//0x233c		VoC_lw16i_set_inc(REG3,0x676e,0x4)
0x22D61808,	//0x233e		VoC_lw16i_set_inc(REG0,0x22d6,0x2)
0xFFC059DC,	//0x2340		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x23922C10,	//0x2342		VoC_loop_i(0x0,0x8)
0x23483284,	//0x2344		VoC_bgtz32_r(LABLE_SBC_LEVEL_IF_BEGIN,ACC0)
0x23902B00,	//0x2346		VoC_jump_lg(LABLE_LEVEL_WHILE_END)
		//0x2348		LABLE_SBC_LEVEL_IF_BEGIN
0xE1F47205,	//0x2348		VoC_lw16i_short(REG4,0x1f,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0xB82D3824,	//0x234a		VoC_sub16_pr(REG5,REG0,REG5,IN_PARALLEL)	|	VoC_sub16_pr(REG4,REG0,REG4,DEFAULT)
0xF6BA6099,	//0x234c		VoC_movreg16(FORMATX,REG5,IN_PARALLEL)	|	VoC_movreg16(FORMAT32,REG4,DEFAULT)
0xFF23598A,	//0x234e		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0xF90C4E2F,	//0x2350		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG7,DEFAULT)
0xF90E4E67,	//0x2352		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG4,REG7,DEFAULT)
0xE0174E75,	//0x2354		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG6,REG5,DEFAULT)
0x60F9B83F,	//0x2356		VoC_movreg16(FORMAT32,REG7,DEFAULT)	|	VoC_sub16_pr(REG7,REG0,REG7,DEFAULT)
0x4E26EF07,	//0x2358		VoC_mac32_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0xfffffff0,IN_PARALLEL)
0x140685D7,	//0x235a		VoC_lw16_d(REG6,0x6377)(lo)	|	VoC_sub16_rp(REG7,REG7,REG2,IN_PARALLEL)
0x58246377,	//0x235c		VoC_lw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16_d(REG6,0x6377)(hi)
0x7EFCFC0C,	//0x235e		VoC_shru32_rr(ACC0,REG7,DEFAULT)	|	VoC_shru32_ri(ACC0,0x1,IN_PARALLEL)
0x3184E015,	//0x2360		VoC_bez16_r(LABLE_LEVEL_WHILE_END,REG4)(lo)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0xFFC02390,	//0x2362		VoC_NAD	|	VoC_bez16_r(LABLE_LEVEL_WHILE_END,REG4)(hi)
		//0x2364		LABLE_FOR_BITS
0xFF25791E,	//0x2364		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x3,DEFAULT)
0xF90E6435,	//0x2366		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0x63720737,	//0x2368		VoC_add16_rd(REG7,REG6,0x6372)
0x23783185,	//0x236a		VoC_bez16_r(LABLE_DATA_LO,REG5)
0xD8755876,	//0x236c		VoC_lw16_p(REG5,REG7,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG7,DEFAULT)
0xF9C57946,	//0x236e		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0xF94579FE,	//0x2370		VoC_shru16_ri(REG5,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0x3305E4FD,	//0x2372		VoC_bez32_r(LABLE_DATA_END,ACC1)(lo)	|	VoC_and32_rr(ACC1,RL7,DEFAULT)
0x16862384,	//0x2374		VoC_or16_ri(REG6,0x1)(lo)	|	VoC_bez32_r(LABLE_DATA_END,ACC1)(hi)
0xE5CD0001,	//0x2376		VoC_jump(LABLE_DATA_END)	|	VoC_or16_ri(REG6,0x1)(hi)
		//0x2378		LABLE_DATA_LO
0xD8755876,	//0x2378		VoC_lw16_p(REG5,REG7,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG7,DEFAULT)
0x00FF1605,	//0x237a		VoC_and16_ri(REG5,0xff)
0xF9FD7946,	//0x237c		VoC_shru16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0x3305E4FD,	//0x237e		VoC_bez32_r(LABLE_DATA_END,ACC1)(lo)	|	VoC_and32_rr(ACC1,RL7,DEFAULT)
0x16852384,	//0x2380		VoC_or16_ri(REG5,0x1)(lo)	|	VoC_bez32_r(LABLE_DATA_END,ACC1)(hi)
0xFFC00001,	//0x2382		VoC_NAD	|	VoC_or16_ri(REG5,0x1)(hi)
		//0x2384		LABLE_DATA_END
0xFDFC79C6,	//0x2384		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffff8,DEFAULT)
0xE015646E,	//0x2386		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG5,DEFAULT)
0x6377072E,	//0x2388		VoC_add16_rd(REG6,REG5,0x6377)
0xC12C5C76,	//0x238a		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG7,DEFAULT)
0x63771506,	//0x238c		VoC_sw16_d(REG6,0x6377)
0x23643204,	//0x238e		VoC_bltz16_r(LABLE_FOR_BITS,REG4)
		//0x2390		LABLE_LEVEL_WHILE_END
0xDE085E00,	//0x2390		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x2392		VoC_endloop0
0xDE1059DC,	//0x2392		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x401CF044,	//0x2394		VoC_be16_rd(LABLE_GENERATE_DATA_FINAL_BEGIN,REG4,0x4015)(lo)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0xFFC04015,	//0x2396		VoC_NAD	|	VoC_be16_rd(LABLE_GENERATE_DATA_FINAL_BEGIN,REG4,0x4015)(hi)
		//0x2398		LABLE_GENERATE_DATA_FINAL_BEGIN
0x22E7180A,	//0x2398		VoC_lw16i_set_inc(REG2,0x22e7,0x2)
0x67701813,	//0x239a		VoC_lw16i_set_inc(REG3,0x6770,0x4)
0x22D71808,	//0x239c		VoC_lw16i_set_inc(REG0,0x22d7,0x2)
0xFFC059DC,	//0x239e		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x23EE2C10,	//0x23a0		VoC_loop_i(0x0,0x8)
0x23EC32C4,	//0x23a2		VoC_bngtz32_r(LABLE_LEVEL_WHILE_END_CH1,ACC0)
0xE1F47205,	//0x23a4		VoC_lw16i_short(REG4,0x1f,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0xB825382C,	//0x23a6		VoC_sub16_pr(REG5,REG0,REG4,IN_PARALLEL)	|	VoC_sub16_pr(REG4,REG0,REG5,DEFAULT)
0xF69A60B9,	//0x23a8		VoC_movreg16(FORMATX,REG4,IN_PARALLEL)	|	VoC_movreg16(FORMAT32,REG5,DEFAULT)
0xFF23598A,	//0x23aa		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0xF90E790C,	//0x23ac		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x4E67CE2F,	//0x23ae		VoC_macX_rr(REG4,REG7,DEFAULT)	|	VoC_mac32_rr(REG5,REG7,DEFAULT)
0x4E75E017,	//0x23b0		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x60F9B83F,	//0x23b2		VoC_movreg16(FORMAT32,REG7,DEFAULT)	|	VoC_sub16_pr(REG7,REG0,REG7,IN_PARALLEL)
0x4E26EF07,	//0x23b4		VoC_mac32_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0xfffffff0,IN_PARALLEL)
0x140685D7,	//0x23b6		VoC_lw16_d(REG6,0x6377)(lo)	|	VoC_sub16_rp(REG7,REG7,REG2,IN_PARALLEL)
0x58246377,	//0x23b8		VoC_lw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16_d(REG6,0x6377)(hi)
0x7EFCFC0C,	//0x23ba		VoC_shru32_rr(ACC0,REG7,DEFAULT)	|	VoC_shru32_ri(ACC0,0x1,IN_PARALLEL)
0x3184E015,	//0x23bc		VoC_bez16_r(LABLE_LEVEL_WHILE_END_CH1,REG4)(lo)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0xFFC023EC,	//0x23be		VoC_NAD	|	VoC_bez16_r(LABLE_LEVEL_WHILE_END_CH1,REG4)(hi)
		//0x23c0		LABLE_FOR_BITS_CH1
0xFF25791E,	//0x23c0		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x3,DEFAULT)
0xF90E6435,	//0x23c2		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0x63720737,	//0x23c4		VoC_add16_rd(REG7,REG6,0x6372)
0x23D43185,	//0x23c6		VoC_bez16_r(LABLE_DATA_LO_CH1,REG5)
0xD8755876,	//0x23c8		VoC_lw16_p(REG5,REG7,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG7,DEFAULT)
0xF9C57946,	//0x23ca		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0xF94579FE,	//0x23cc		VoC_shru16_ri(REG5,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0x3305E4FD,	//0x23ce		VoC_bez32_r(LABLE_DATA_END_CH1,ACC1)(lo)	|	VoC_and32_rr(ACC1,RL7,DEFAULT)
0x168623E0,	//0x23d0		VoC_or16_ri(REG6,0x1)(lo)	|	VoC_bez32_r(LABLE_DATA_END_CH1,ACC1)(hi)
0xE5CD0001,	//0x23d2		VoC_jump(LABLE_DATA_END_CH1)	|	VoC_or16_ri(REG6,0x1)(hi)
		//0x23d4		LABLE_DATA_LO_CH1
0xD8755876,	//0x23d4		VoC_lw16_p(REG5,REG7,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG7,DEFAULT)
0x00FF1605,	//0x23d6		VoC_and16_ri(REG5,0xff)
0xF9FD7946,	//0x23d8		VoC_shru16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0x3305E4FD,	//0x23da		VoC_bez32_r(LABLE_DATA_END_CH1,ACC1)(lo)	|	VoC_and32_rr(ACC1,RL7,DEFAULT)
0x168523E0,	//0x23dc		VoC_or16_ri(REG5,0x1)(lo)	|	VoC_bez32_r(LABLE_DATA_END_CH1,ACC1)(hi)
0xFFC00001,	//0x23de		VoC_NAD	|	VoC_or16_ri(REG5,0x1)(hi)
		//0x23e0		LABLE_DATA_END_CH1
0xFDFC79C6,	//0x23e0		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffff8,DEFAULT)
0xE015646E,	//0x23e2		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG5,DEFAULT)
0x6377072E,	//0x23e4		VoC_add16_rd(REG6,REG5,0x6377)
0xC12C5C76,	//0x23e6		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG7,DEFAULT)
0x63771506,	//0x23e8		VoC_sw16_d(REG6,0x6377)
0x23C03204,	//0x23ea		VoC_bltz16_r(LABLE_FOR_BITS_CH1,REG4)
		//0x23ec		LABLE_LEVEL_WHILE_END_CH1
0xDE085E00,	//0x23ec		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x23ee		VoC_endloop0
0xDE1059DC,	//0x23ee		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
		//0x23f0		VoC_endloop1
0xE07570E7,	//0x23f0		VoC_lw16i_short(REG5,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x7,DEFAULT)
0xF81E6435,	//0x23f2		VoC_shr16_ri(REG6,0x3,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0x24123185,	//0x23f4		VoC_bez16_r(LABLE_SBC_RETURN_LEN,REG5)
0xC35BF103,	//0x23f6		VoC_sub16_rr(REG3,REG5,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x6437F027,	//0x23f8		VoC_and16_rr(REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x0736F90E,	//0x23fa		VoC_add16_rd(REG6,REG6,0x6372)(lo)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x31876372,	//0x23fc		VoC_bez16_r(LABLE_SBC_ZERO,REG7)(lo)	|	VoC_add16_rd(REG6,REG6,0x6372)(hi)
0x58642408,	//0x23fe		VoC_lw16_p(REG4,REG6,DEFAULT)	|	VoC_bez16_r(LABLE_SBC_ZERO,REG7)(hi)
0x7945D865,	//0x2400		VoC_shru16_ri(REG5,0x8,DEFAULT)	|	VoC_lw16_p(REG5,REG6,IN_PARALLEL)
0x7E5DF9C4,	//0x2402		VoC_shru16_rr(REG5,REG3,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffff8,IN_PARALLEL)
0xF9C5FE44,	//0x2404		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_shru16_rr(REG4,ACC0_LO,IN_PARALLEL)
0xFFC065C9,	//0x2406		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABLE_SBC_PRODUCED_8)
		//0x2408		LABLE_SBC_ZERO
0xD8655864,	//0x2408		VoC_lw16_p(REG5,REG6,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG6,DEFAULT)
0x00FF1604,	//0x240a		VoC_and16_ri(REG4,0xff)
0x7F001645,	//0x240c		VoC_and16_ri(REG5,0xff00)
0xE465FE5C,	//0x240e		VoC_or16_rr(REG5,REG4,DEFAULT)	|	VoC_shru16_rr(REG4,REG3,DEFAULT)
		//0x240f		LABLE_SBC_PRODUCED_8
0xDC65F0E7,	//0x2410		VoC_sw16_p(REG5,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x7,DEFAULT)
		//0x2412		LABLE_SBC_RETURN_LEN
0x6377073F,	//0x2412		VoC_add16_rd(REG7,REG7,0x6377)
0xE006791F,	//0x2414		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0x3,DEFAULT)
0xDFA979EF,	//0x2416		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffffd,DEFAULT)
0x401D1506,	//0x2418		VoC_sw16_d(REG6,0x401d)
0x63771507,	//0x241a		VoC_sw16_d(REG7,0x6377)
0xFFC06580,	//0x241c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x241e		CS_SBC_crc8
0x63761404,	//0x241e		VoC_lw16_d(REG4,0x6376)
0x678E1804,	//0x2420		VoC_lw16i_set_inc(REG0,0x678e,0x1)
0x1BB40A81,	//0x2422		VoC_lw16i(REG1,0x1bb4)
0xE0F5781C,	//0x2424		VoC_lw16i_short(REG5,0xf,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x3,DEFAULT)
0xD884670D,	//0x2426		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xE01664A5,	//0x2428		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_xor16_rr(REG5,REG4,DEFAULT)
0xF90D642E,	//0x242a		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG5,DEFAULT)
0xD884406D,	//0x242c		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG1,REG5,DEFAULT)
0x1CA307B6,	//0x242e		VoC_sub16_rd(REG6,REG6,0x1ca3)
0xD85579EE,	//0x2430		VoC_lw16_p(REG5,REG5,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffffd,DEFAULT)
0xF945FE75,	//0x2432		VoC_shru16_ri(REG5,0x8,DEFAULT)	|	VoC_shru16_rr(REG5,REG6,DEFAULT)
		//0x2433		VoC_endloop0
0x63761400,	//0x2434		VoC_lw16_d(REG0,0x6376)
0x00071600,	//0x2436		VoC_and16_ri(REG0,0x7)
0x244A3180,	//0x2438		VoC_bez16_r(LABLE_CRC8_ZERO,REG0)
0xF6A0660F,	//0x243a		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0xF8FC64A5,	//0x243c		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_xor16_rr(REG5,REG4,DEFAULT)
0x00801605,	//0x243e		VoC_and16_ri(REG5,0x80)
0x007F1600,	//0x2440		VoC_and16_ri(REG0,0x7f)
0xF8F8783D,	//0x2442		VoC_shr16_ri(REG0,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x7,DEFAULT)
0x24483185,	//0x2444		VoC_bez16_r(LABLE_BIT_ZERO,REG5)
0x001D0A85,	//0x2446		VoC_lw16i(REG5,0x1d)
		//0x2448		LABLE_BIT_ZERO
0xE005E4A8,	//0x2448		VoC_movreg16(REG5,REG0,DEFAULT)	|	VoC_xor16_rr(REG0,REG5,DEFAULT)
		//0x2449		VoC_endloop0
		//0x244a		LABLE_CRC8_ZERO
0xFFC06580,	//0x244a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x244c		CS_SBC_Calculate_Bits
0xE0157004,	//0x244c		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x400A4034,	//0x244e		VoC_be16_rd(LABLE_Caculatebit_MONO_DUAL,REG4,0x400a)
0x400A4025,	//0x2450		VoC_be16_rd(LABLE_Caculatebit_MONO_DUAL,REG5,0x400a)
0x24F02B00,	//0x2452		VoC_jump_lg(LABLE_Caculatebit_STEREO)
		//0x2454		LABLE_Caculatebit_MONO_DUAL
0xF005F044,	//0x2454		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x24ED2E21,	//0x2456		VoC_loop_r(1,REG4)
0x22F61808,	//0x2458		VoC_lw16i_set_inc(REG0,0x22f6,0x2)
0x22D61809,	//0x245a		VoC_lw16i_set_inc(REG1,0x22d6,0x2)
0x4028DFC5,	//0x245c		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x7006C069,	//0x245e		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x449CE014,	//0x2460		VoC_bne16_rd(LABLE_Calculate_Bits_Else1,REG4,0x400b)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x6906400B,	//0x2462		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_bne16_rd(LABLE_Calculate_Bits_Else1,REG4,0x400b)(hi)
0xD894E005,	//0x2464		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x246934A5,	//0x2466		VoC_bngt16_rr(LABLE_MAX_BITNEED,REG4,REG5)
0xDC84E085,	//0x2468		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x2469		LABLE_MAX_BITNEED
		//0x2469		VoC_endloop0
0xFFC065D8,	//0x246a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABLE_Calculate_Bits_Else1_END)
		//0x246c		LABLE_Calculate_Bits_Else1
0x400D1404,	//0x246c		VoC_lw16_d(REG4,0x400d)
0xE00579EC,	//0x246e		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)
0x1C341806,	//0x2470		VoC_lw16i_set_inc(REG2,0x1c34,0x1)
0xC0A2690E,	//0x2472		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xEFB45896,	//0x2474		VoC_lw16i_short(REG4,0xfffffffb,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x247C3186,	//0x2476		VoC_bez16_r(LABLE_Calculate_Bits_Else2_END,REG6)
0x31448594,	//0x2478		VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END,REG4)(lo)	|	VoC_sub16_rp(REG4,REG6,REG2,DEFAULT)
0xF80C247C,	//0x247a		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END,REG4)(hi)
		//0x247c		LABLE_Calculate_Bits_Else2_END
0x248034A5,	//0x247c		VoC_bngt16_rr(LABLE_Calculate_Bits_Else3_END,REG4,REG5)
0xFFC06085,	//0x247e		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x2480		LABLE_Calculate_Bits_Else3_END
		//0x2480		VoC_endloop0
0xDE105C84,	//0x2480		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x2482		LABLE_Calculate_Bits_Else1_END
0xF3FE7F43,	//0x2482		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x1CA3072A,	//0x2484		VoC_add16_rd(REG2,REG5,0x1ca3)
		//0x2486		LABLE_Caculate_Bits_Do
0x22F61808,	//0x2486		VoC_lw16i_set_inc(REG0,0x22f6,0x2)
0xDE105614,	//0x2488		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xC1BE4020,	//0x248a		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x1CA30714,	//0x248c		VoC_add16_rd(REG4,REG2,0x1ca3)
0x1C9C0715,	//0x248e		VoC_add16_rd(REG5,REG2,0x1c9c)
0xFFC0D883,	//0x2490		VoC_NAD	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE007690E,	//0x2492		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x249C349C,	//0x2494		VoC_bngt16_rr(LABLE_Calculate_Bits_Else4,REG3,REG4)
0x249C34AB,	//0x2496		VoC_bngt16_rr(LABLE_Calculate_Bits_Else4,REG5,REG3)
0x1CA3073F,	//0x2498		VoC_add16_rd(REG7,REG7,0x1ca3)
0xFFC065C6,	//0x249a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABLE_Calculate_Bits_Else4_END)
		//0x249c		LABLE_Calculate_Bits_Else4
0x24A0359C,	//0x249c		VoC_bne16_rr(LABLE_Calculate_Bits_Else4_END,REG3,REG4)
0x1CE8073F,	//0x249e		VoC_add16_rd(REG7,REG7,0x1ce8)
		//0x24a0		LABLE_Calculate_Bits_Else4_END
		//0x24a0		VoC_endloop0
0xC1BBD883,	//0x24a0		VoC_add16_rr(REG3,REG6,REG7,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0x400C4A23,	//0x24a2		VoC_blt16_rd(LABLE_Caculate_Bits_Do,REG3,0x400c)
0x400C4423,	//0x24a4		VoC_bne16_rd(LABLE_Caculate_Bits_ELSE5_END,REG3,0x400c)
0xDE1041BE,	//0x24a6		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
		//0x24a8		LABLE_Caculate_Bits_ELSE5_END
0x22F61808,	//0x24a8		VoC_lw16i_set_inc(REG0,0x22f6,0x2)
0x22E61809,	//0x24aa		VoC_lw16i_set_inc(REG1,0x22e6,0x2)
0x4061D614,	//0x24ac		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0x0715C020,	//0x24ae		VoC_add16_rd(REG5,REG2,0x1ce8)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)
0xFFC01CE8,	//0x24b0		VoC_NAD	|	VoC_add16_rd(REG5,REG2,0x1ce8)(hi)
0xDF40690C,	//0x24b2		VoC_push32(REG01,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xE0075884,	//0x24b4		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x24BA342C,	//0x24b6		VoC_bgt16_rr(LABLE_Caculate_Bits_ELSE6_END,REG5,REG4)
0xFFC042A7,	//0x24b8		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG2,REG4,DEFAULT)
		//0x24ba		LABLE_Caculate_Bits_ELSE6_END
0x1A154C27,	//0x24ba		VoC_bnlt16_rd(LABLE_Caculate_Bits_ELSE7_END,REG7,0x1a15)
0xFFC0F607,	//0x24bc		VoC_NOP	|	VoC_lw16i_short(REG7,0xfffffff0,DEFAULT)
		//0x24be		LABLE_Caculate_Bits_ELSE7_END
		//0x24be		VoC_endloop0
0x77C5DC97,	//0x24be		VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xFFC0EF03,	//0x24c0		VoC_NAD	|	VoC_lw16i_short(REG3,0xfffffff0,IN_PARALLEL)
0xD9086916,	//0x24c2		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x400C4D36,	//0x24c4		VoC_bnlt16_rd(LABLE_Caculate_Bits_out,REG6,0x400c)
0xE0175814,	//0x24c6		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG1,DEFAULT)
0x24CF3425,	//0x24c8		VoC_bgt16_rr(LABLE_Caculate_Bits_ELSE8,REG4,REG5)
0x24CF34A3,	//0x24ca		VoC_bngt16_rr(LABLE_Caculate_Bits_ELSE8,REG4,REG3)
0xC1BE433C,	//0x24cc		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG7,DEFAULT)
0xB817E5CA,	//0x24ce		VoC_sub16_pr(REG7,REG0,REG2,DEFAULT)	|	VoC_jump(LABLE_Caculate_Bits_ELSE8_END)
		//0x24cf		LABLE_Caculate_Bits_ELSE8
0x1CA34487,	//0x24d0		VoC_bne16_rd(LABLE_Caculate_Bits_ELSE8_END,REG7,0x1ca3)
0x400C0B37,	//0x24d2		VoC_sub16_dr(REG7,0x400c,REG6)
0x1CA33C27,	//0x24d4		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE8_END,REG7,0x1ca3)
0xC3AEE0A4,	//0x24d6		VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x24d8		LABLE_Caculate_Bits_ELSE8_END
		//0x24d8		VoC_endloop0
0xDE005C94,	//0x24d8		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x24da		LABLE_Caculate_Bits_out
0x6023DF00,	//0x24da		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xFFC0F007,	//0x24dc		VoC_NAD	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xD894690C,	//0x24de		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x400C4CA6,	//0x24e0		VoC_bnlt16_rd(LABLE_Caculate_Bits_out_2,REG6,0x400c)
0x1A153C84,	//0x24e2		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE9_END,REG4,0x1a15)
0x1CA307A4,	//0x24e4		VoC_sub16_rd(REG4,REG4,0x1ca3)
0x1CA30736,	//0x24e6		VoC_add16_rd(REG6,REG6,0x1ca3)
0xFFC05C34,	//0x24e8		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
		//0x24ea		LABLE_Caculate_Bits_ELSE9_END
		//0x24ea		VoC_endloop0
0xDE185894,	//0x24ea		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x24ec		LABLE_Caculate_Bits_out_2
0x072DDF85,	//0x24ec		VoC_add16_rd(REG5,REG5,0x1ca3)(lo)	|	VoC_pop16(REG5,DEFAULT)
		//0x24ed		VoC_endloop1
0xE5801CA3,	//0x24ee		VoC_return	|	VoC_add16_rd(REG5,REG5,0x1ca3)(hi)
		//0x24f0		LABLE_Caculatebit_STEREO
0x22F61804,	//0x24f0		VoC_lw16i_set_inc(REG0,0x22f6,0x1)
0x22D61805,	//0x24f2		VoC_lw16i_set_inc(REG1,0x22d6,0x1)
0xE0147006,	//0x24f4		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x400B44A4,	//0x24f6		VoC_bne16_rd(LABLE_Calculate_Bits_Else1_STEREO,REG4,0x400b)
0xE0056A06,	//0x24f8		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x34A5D894,	//0x24fa		VoC_bngt16_rr(LABLE_MAX_BITNEED_STEREO,REG4,REG5)(lo)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xE08524FE,	//0x24fc		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_bngt16_rr(LABLE_MAX_BITNEED_STEREO,REG4,REG5)(hi)
		//0x24fe		LABLE_MAX_BITNEED_STEREO
		//0x24fe		VoC_endloop0
0x2B00DC84,	//0x24fe		VoC_jump_lg(LABLE_Calculate_Bits_Else1_END_STEREO)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xFFC02524,	//0x2500		VoC_NAD	|	VoC_jump_lg(LABLE_Calculate_Bits_Else1_END_STEREO)(hi)
		//0x2502		LABLE_Calculate_Bits_Else1_STEREO
0x400D1404,	//0x2502		VoC_lw16_d(REG4,0x400d)
0xE00579EC,	//0x2504		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)
0x1C341806,	//0x2506		VoC_lw16i_set_inc(REG2,0x1c34,0x1)
0xC0A2691A,	//0x2508		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xEFB45896,	//0x250a		VoC_lw16i_short(REG4,0xfffffffb,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x25123186,	//0x250c		VoC_bez16_r(LABLE_Calculate_Bits_Else2_END_STEREO,REG6)
0x31448594,	//0x250e		VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END_STEREO,REG4)(lo)	|	VoC_sub16_rp(REG4,REG6,REG2,DEFAULT)
0xF80C2512,	//0x2510		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END_STEREO,REG4)(hi)
		//0x2512		LABLE_Calculate_Bits_Else2_END_STEREO
0x251534A5,	//0x2512		VoC_bngt16_rr(LABLE_Calculate_Bits_Else3_END_STEREO,REG4,REG5)
0xDC84E085,	//0x2514		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x2515		LABLE_Calculate_Bits_Else3_END_STEREO
0xEFB45896,	//0x2516		VoC_lw16i_short(REG4,0xfffffffb,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x251E3186,	//0x2518		VoC_bez16_r(LABLE_Calculate_Bits_Else2_END_STEREO_ch1,REG6)
0x31448594,	//0x251a		VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END_STEREO_ch1,REG4)(lo)	|	VoC_sub16_rp(REG4,REG6,REG2,DEFAULT)
0xF80C251E,	//0x251c		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END_STEREO_ch1,REG4)(hi)
		//0x251e		LABLE_Calculate_Bits_Else2_END_STEREO_ch1
0x252234A5,	//0x251e		VoC_bngt16_rr(LABLE_Calculate_Bits_Else3_END_STEREO_ch1,REG4,REG5)
0xFFC06085,	//0x2520		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x2522		LABLE_Calculate_Bits_Else3_END_STEREO_ch1
		//0x2522		VoC_endloop0
0xDE105C84,	//0x2522		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x2524		LABLE_Calculate_Bits_Else1_END_STEREO
0xF3FE7F43,	//0x2524		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x1CA3072A,	//0x2526		VoC_add16_rd(REG2,REG5,0x1ca3)
		//0x2528		LABLE_Caculate_Bits_Do_STEREO
0x22F61804,	//0x2528		VoC_lw16i_set_inc(REG0,0x22f6,0x1)
0xC1BE5E10,	//0x252a		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x1CA30714,	//0x252c		VoC_add16_rd(REG4,REG2,0x1ca3)
0x1C9C0715,	//0x252e		VoC_add16_rd(REG5,REG2,0x1c9c)
0xFFC0D883,	//0x2530		VoC_NAD	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE0076A0E,	//0x2532		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x253C349C,	//0x2534		VoC_bngt16_rr(LABLE_Calculate_Bits_Else4_STEREO,REG3,REG4)
0x253C34AB,	//0x2536		VoC_bngt16_rr(LABLE_Calculate_Bits_Else4_STEREO,REG5,REG3)
0x1CA3073F,	//0x2538		VoC_add16_rd(REG7,REG7,0x1ca3)
0xFFC065C6,	//0x253a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABLE_Calculate_Bits_Else4_END_STEREO)
		//0x253c		LABLE_Calculate_Bits_Else4_STEREO
0x2540359C,	//0x253c		VoC_bne16_rr(LABLE_Calculate_Bits_Else4_END_STEREO,REG3,REG4)
0x1CE8073F,	//0x253e		VoC_add16_rd(REG7,REG7,0x1ce8)
		//0x2540		LABLE_Calculate_Bits_Else4_END_STEREO
		//0x2540		VoC_endloop0
0xC1BBD883,	//0x2540		VoC_add16_rr(REG3,REG6,REG7,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0x400C4A33,	//0x2542		VoC_blt16_rd(LABLE_Caculate_Bits_Do_STEREO,REG3,0x400c)
0x400C4423,	//0x2544		VoC_bne16_rd(LABLE_Caculate_Bits_ELSE5_END_STEREO,REG3,0x400c)
0xDE1041BE,	//0x2546		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
		//0x2548		LABLE_Caculate_Bits_ELSE5_END_STEREO
0x22F61804,	//0x2548		VoC_lw16i_set_inc(REG0,0x22f6,0x1)
0x22E61805,	//0x254a		VoC_lw16i_set_inc(REG1,0x22e6,0x1)
0x1CE80715,	//0x254c		VoC_add16_rd(REG5,REG2,0x1ce8)
0xDF406A0C,	//0x254e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0xE0075884,	//0x2550		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x2556342C,	//0x2552		VoC_bgt16_rr(LABLE_Caculate_Bits_ELSE6_END_STEREO,REG5,REG4)
0xFFC042A7,	//0x2554		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG2,REG4,DEFAULT)
		//0x2556		LABLE_Caculate_Bits_ELSE6_END_STEREO
0x1A154C27,	//0x2556		VoC_bnlt16_rd(LABLE_Caculate_Bits_ELSE7_END_STEREO,REG7,0x1a15)
0xFFC0F607,	//0x2558		VoC_NOP	|	VoC_lw16i_short(REG7,0xfffffff0,DEFAULT)
		//0x255a		LABLE_Caculate_Bits_ELSE7_END_STEREO
		//0x255a		VoC_endloop0
0xF7C5DC97,	//0x255a		VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xD9086A16,	//0x255c		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x400C4D36,	//0x255e		VoC_bnlt16_rd(LABLE_Caculate_Bits_out_STEREO,REG6,0x400c)
0xE0175814,	//0x2560		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG1,DEFAULT)
0x25693425,	//0x2562		VoC_bgt16_rr(LABLE_Caculate_Bits_ELSE8_STEREO,REG4,REG5)
0x1A153C2C,	//0x2564		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE8_STEREO,REG4,0x1a15)
0xC1BE433C,	//0x2566		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG7,DEFAULT)
0xB817E5CA,	//0x2568		VoC_sub16_pr(REG7,REG0,REG2,DEFAULT)	|	VoC_jump(LABLE_Caculate_Bits_ELSE8_END_STEREO)
		//0x2569		LABLE_Caculate_Bits_ELSE8_STEREO
0x1CA34487,	//0x256a		VoC_bne16_rd(LABLE_Caculate_Bits_ELSE8_END_STEREO,REG7,0x1ca3)
0x400C0B37,	//0x256c		VoC_sub16_dr(REG7,0x400c,REG6)
0x1CA33C27,	//0x256e		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE8_END_STEREO,REG7,0x1ca3)
0xC3AEE0A4,	//0x2570		VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x2572		LABLE_Caculate_Bits_ELSE8_END_STEREO
		//0x2572		VoC_endloop0
0xDE005C94,	//0x2572		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x2574		LABLE_Caculate_Bits_out_STEREO
0x6023DF00,	//0x2574		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xFFC0F007,	//0x2576		VoC_NAD	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xD8946A0C,	//0x2578		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x400C4CA6,	//0x257a		VoC_bnlt16_rd(LABLE_Caculate_Bits_out_STEREO_2,REG6,0x400c)
0x1A153C84,	//0x257c		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE9_END_STEREO,REG4,0x1a15)
0x1CA307A4,	//0x257e		VoC_sub16_rd(REG4,REG4,0x1ca3)
0x1CA30736,	//0x2580		VoC_add16_rd(REG6,REG6,0x1ca3)
0xFFC05C34,	//0x2582		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
		//0x2584		LABLE_Caculate_Bits_ELSE9_END_STEREO
		//0x2584		VoC_endloop0
0xDE185894,	//0x2584		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x2586		LABLE_Caculate_Bits_out_STEREO_2
0xE580FFC0,	//0x2586		VoC_return	|	VoC_NOP
		//0x2588		CS_SBC_DMAIN_ConstAndGloabls
0x03A00A84,	//0x2588		VoC_lw16i(REG4,0x3a0)
0x0AD60A85,	//0x258a		VoC_lw16i(REG5,0xad6)
0x40101484,	//0x258c		VoC_lw32_d(ACC0,0x4010)
0x7FC215C2,	//0x258e		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x2590		VoC_sw32_d(ACC0,0xffc4)
0xE00579F4,	//0x2592		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffe,DEFAULT)
0x0A84C914,	//0x2594		VoC_lw16i(REG4,0x304)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x0A850304,	//0x2596		VoC_lw16i(REG5,0x2eb5)(lo)	|	VoC_lw16i(REG4,0x304)(hi)
0xDE802EB5,	//0x2598		VoC_cfg(0x0)	|	VoC_lw16i(REG5,0x2eb5)(hi)
0x1794FFC0,	//0x259a		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x15C20008,	//0x259c		VoC_sw32_d(REG45,0xffc2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15C47FC2,	//0x259e		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw32_d(REG45,0xffc2)(hi)
0x0A847FC4,	//0x25a0		VoC_lw16i(REG4,0x1d4)(lo)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x0A8501D4,	//0x25a2		VoC_lw16i(REG5,0x31b9)(lo)	|	VoC_lw16i(REG4,0x1d4)(hi)
0x148431B9,	//0x25a4		VoC_lw32_d(ACC0,0x4012)(lo)	|	VoC_lw16i(REG5,0x31b9)(hi)
0xDE804012,	//0x25a6		VoC_cfg(0x0)	|	VoC_lw32_d(ACC0,0x4012)(hi)
0x1794FFC0,	//0x25a8		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x15C20008,	//0x25aa		VoC_sw32_d(REG45,0xffc2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15C47FC2,	//0x25ac		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw32_d(REG45,0xffc2)(hi)
0xDE807FC4,	//0x25ae		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794FFC0,	//0x25b0		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xE5800008,	//0x25b2		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x25b4		CS_SBC_DMAOUT_Gloabls
0x01D40A84,	//0x25b4		VoC_lw16i(REG4,0x1d4)
0x31B90A85,	//0x25b6		VoC_lw16i(REG5,0x31b9)
0x40121484,	//0x25b8		VoC_lw32_d(ACC0,0x4012)
0x0A8BF00A,	//0x25ba		VoC_lw16i(ACC1_HI,0x4000)(lo)	|	VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)
0xC92C4000,	//0x25bc		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw16i(ACC1_HI,0x4000)(hi)
0x7FC215C2,	//0x25be		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x25c0		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x25c2		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x25c4		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x25c6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x25c7		CS_resample_Init
0xF087F025,	//0x25c8		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x00420A86,	//0x25ca		VoC_lw16i(REG6,0x42)
0x00200A83,	//0x25cc		VoC_lw16i(REG3,0x20)
0x0A88FF44,	//0x25ce		VoC_lw16i(ACC0_LO,0x1f40)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x5C3C1F40,	//0x25d0		VoC_bne32_rd(LABLE_RESAMPLE_11025,ACC0,0x4018)(lo)	|	VoC_lw16i(ACC0_LO,0x1f40)(hi)
0x0A884018,	//0x25d2		VoC_lw16i(ACC0_LO,0x7d00)(lo)	|	VoC_bne32_rd(LABLE_RESAMPLE_11025,ACC0,0x4018)(hi)
0x2B007D00,	//0x25d4		VoC_jump_lg(LABLE_SBC_RESAMPLE_RATE_DECIDE)(lo)	|	VoC_lw16i(ACC0_LO,0x7d00)(hi)
0xFFC02606,	//0x25d6		VoC_NAD	|	VoC_jump_lg(LABLE_SBC_RESAMPLE_RATE_DECIDE)(hi)
		//0x25d8		LABLE_RESAMPLE_11025
0x2B110A88,	//0x25d8		VoC_lw16i(ACC0_LO,0x2b11)
0x40185C34,	//0x25da		VoC_bne32_rd(LABLE_RESAMPLE_12000,ACC0,0x4018)
0x2C440AC8,	//0x25dc		VoC_lw16i(ACC0_LO,0xac44)
0x26062B00,	//0x25de		VoC_jump_lg(LABLE_SBC_RESAMPLE_RATE_DECIDE)
		//0x25e0		LABLE_RESAMPLE_12000
0x2EE00A88,	//0x25e0		VoC_lw16i(ACC0_LO,0x2ee0)
0x40185C34,	//0x25e2		VoC_bne32_rd(LABLE_RESAMPLE_16000,ACC0,0x4018)
0x3B800AC8,	//0x25e4		VoC_lw16i(ACC0_LO,0xbb80)
0x26062B00,	//0x25e6		VoC_jump_lg(LABLE_SBC_RESAMPLE_RATE_DECIDE)
		//0x25e8		LABLE_RESAMPLE_16000
0x0A86F047,	//0x25e8		VoC_lw16i(REG6,0x62)(lo)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x0A830062,	//0x25ea		VoC_lw16i(REG3,0x40)(lo)	|	VoC_lw16i(REG6,0x62)(hi)
0x0A880040,	//0x25ec		VoC_lw16i(ACC0_LO,0x3e80)(lo)	|	VoC_lw16i(REG3,0x40)(hi)
0x5C2C3E80,	//0x25ee		VoC_bne32_rd(LABLE_RESAMPLE_22050,ACC0,0x4018)(lo)	|	VoC_lw16i(ACC0_LO,0x3e80)(hi)
0x0A884018,	//0x25f0		VoC_lw16i(ACC0_LO,0x7d00)(lo)	|	VoC_bne32_rd(LABLE_RESAMPLE_22050,ACC0,0x4018)(hi)
0xE5D37D00,	//0x25f2		VoC_jump(LABLE_SBC_RESAMPLE_RATE_DECIDE)	|	VoC_lw16i(ACC0_LO,0x7d00)(hi)
		//0x25f4		LABLE_RESAMPLE_22050
0x56220A88,	//0x25f4		VoC_lw16i(ACC0_LO,0x5622)
0x40185C34,	//0x25f6		VoC_bne32_rd(LABLE_RESAMPLE_24000,ACC0,0x4018)
0x2C440AC8,	//0x25f8		VoC_lw16i(ACC0_LO,0xac44)
0xFFC065CC,	//0x25fa		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABLE_SBC_RESAMPLE_RATE_DECIDE)
		//0x25fc		LABLE_RESAMPLE_24000
0x5DC00A88,	//0x25fc		VoC_lw16i(ACC0_LO,0x5dc0)
0x5C2CF025,	//0x25fe		VoC_bne32_rd(LABLE_RESAMPLE_ERROR_VALUE,ACC0,0x4018)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x0AC84018,	//0x2600		VoC_lw16i(ACC0_LO,0xbb80)(lo)	|	VoC_bne32_rd(LABLE_RESAMPLE_ERROR_VALUE,ACC0,0x4018)(hi)
0xE5C33B80,	//0x2602		VoC_jump(LABLE_SBC_RESAMPLE_RATE_DECIDE)	|	VoC_lw16i(ACC0_LO,0xbb80)(hi)
		//0x2604		LABLE_RESAMPLE_ERROR_VALUE
0x401D1505,	//0x2604		VoC_sw16_d(REG5,0x401d)
		//0x2606		LABLE_SBC_RESAMPLE_RATE_DECIDE
0x40211508,	//0x2606		VoC_sw16_d(ACC0_LO,0x4021)
0x65FD1505,	//0x2608		VoC_sw16_d(REG5,0x65fd)
0xC3A4F224,	//0x260a		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x11,DEFAULT)
0x670B1506,	//0x260c		VoC_sw16_d(REG6,0x670b)
0x670A1503,	//0x260e		VoC_sw16_d(REG3,0x670a)
0x65FA1504,	//0x2610		VoC_sw16_d(REG4,0x65fa)
0x65FB1504,	//0x2612		VoC_sw16_d(REG4,0x65fb)
0x7FFF0A86,	//0x2614		VoC_lw16i(REG6,0x7fff)
0x018D2B80,	//0x2616		VoC_jal(CII_div_mode)
0xF005E0A4,	//0x2618		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0x1B360912,	//0x261a		VoC_add32_rd(REG45,REG45,0x1b36)
0x1582DFA9,	//0x261c		VoC_sw32_d(REG45,0x670c)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE580670C,	//0x261e		VoC_return	|	VoC_sw32_d(REG45,0x670c)(hi)
		//0x2620		CS_SrcUp
0x15AC0A8C,	//0x2620		VoC_lw16i(RL6_LO,0x15ac)
0x5D6A0A8D,	//0x2622		VoC_lw16i(RL6_HI,0x5d6a)
0xFF22DFC0,	//0x2624		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
		//0x2626		CS_SrcUp_loop_start
0x7F13FF45,	//0x2626		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_lw32z(ACC1,DEFAULT)
0x7A7ADF42,	//0x2628		VoC_shr32_ri(REG45,0xf,DEFAULT)	|	VoC_push32(REG45,IN_PARALLEL)
0xD610FF31,	//0x262a		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_movreg32(REG23,RL6,IN_PARALLEL)
0x600EC020,	//0x262c		VoC_movreg16(RL7_LO,REG0,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x2983F3FC,	//0x262e		VoC_and32_rd(REG67,0x636a)(lo)	|	VoC_lw16i_short(INC0,0xffffffff,IN_PARALLEL)
0x0A87636A,	//0x2630		VoC_lw16i(REG7,0x1bac)(lo)	|	VoC_and32_rd(REG67,0x636a)(hi)
0x2C041BAC,	//0x2632		VoC_loop_i(0x0,0x2)(lo)	|	VoC_lw16i(REG7,0x1bac)(hi)
0xE0C4265B,	//0x2634		VoC_movreg16(REG4,REG6,DEFAULT)	|	VoC_loop_i(0x0,0x2)(hi)
0x783CE0C5,	//0x2636		VoC_shr16_ri(REG4,0x7,DEFAULT)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xC851F83D,	//0x2638		VoC_add32_rr(REG23,REG23,REG45,DEFAULT)	|	VoC_shr16_ri(REG5,0x7,IN_PARALLEL)
0x007F1606,	//0x263a		VoC_and16_ri(REG6,0x7f)
0xFFC0199A,	//0x263c		VoC_NAD(IN_PARALLEL)	|	VoC_multf32_rp(REG45,REG6,REG3,DEFAULT)
		//0x263e		FilterUp_start
0x20000A88,	//0x263e		VoC_lw16i(ACC0_LO,0x2000)
0xE0090114,	//0x2640		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_add16_rp(REG4,REG4,REG2,DEFAULT)
0x0909D160,	//0x2642		VoC_add32_rd(REG23,REG23,0x636c)(lo)	|	VoC_macXinc_rp(REG4,REG0,DEFAULT)
0xFA74636C,	//0x2644		VoC_shr32_ri(ACC0,0xe,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x636c)(hi)
0xC965199A,	//0x2646		VoC_add32_rr(ACC1,ACC1,ACC0,IN_PARALLEL)	|	VoC_multf32_rp(REG45,REG6,REG3,DEFAULT)
0x263E343A,	//0x2648		VoC_bgt16_rr(FilterUp_start,REG7,REG2)
0x2A83D90B,	//0x264a		VoC_xor32_rd(REG67,0x636a)(lo)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x091B636A,	//0x264c		VoC_add32_rd(REG67,REG67,0x1b36)(lo)	|	VoC_xor32_rd(REG67,0x636a)(hi)
0x29831B36,	//0x264e		VoC_and32_rd(REG67,0x636a)(lo)	|	VoC_add32_rd(REG67,REG67,0x1b36)(hi)
0xE1C0636A,	//0x2650		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_and32_rd(REG67,0x636a)(hi)
0x0A87F030,	//0x2652		VoC_lw16i(REG7,0x1bab)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDE001BAB,	//0x2654		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16i(REG7,0x1bab)(hi)
0x636C0931,	//0x2656		VoC_add32_rd(REG23,RL6,0x636c)
0x265B3186,	//0x2658		VoC_bez16_r(FilterUp_PH,REG6)
0xFFC0FF31,	//0x265a		VoC_NOP	|	VoC_movreg32(REG23,RL6,DEFAULT)
		//0x265b		FilterUp_PH
		//0x265b		VoC_endloop0
0xFA15FF44,	//0x265c		VoC_shr32_ri(ACC1,0x2,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xE1E6E147,	//0x265e		VoC_movreg16(REG6,RL7_HI,DEFAULT)	|	VoC_movreg16(REG7,ACC1_LO,DEFAULT)
0x10000A88,	//0x2660		VoC_lw16i(ACC0_LO,0x1000)
0xDF02CE77,	//0x2662		VoC_pop32(REG45,DEFAULT)	|	VoC_macX_rr(REG6,REG7,DEFAULT)
0x0912FBEC,	//0x2664		VoC_add32_rd(REG45,REG45,0x670c)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)
0xDC99670C,	//0x2666		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x670c)(hi)
0x22D46422,	//0x2668		VoC_bnlt32_rd(CS_SrcUp_loop_end,REG45,0x22d4)
0x26262B00,	//0x266a		VoC_jump_lg(CS_SrcUp_loop_start)
		//0x266c		CS_SrcUp_loop_end
0xE580DF80,	//0x266c		VoC_return	|	VoC_pop16(REG0,DEFAULT)
		//0x266e		CS_ResampleAudio_SBCEnc
0x2004DFE9,	//0x266e		VoC_lw16d_set_inc(REG0,0x6374,0x1)(lo)	|	VoC_push16(RA,DEFAULT)
0xF0306374,	//0x2670		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16d_set_inc(REG0,0x6374,0x1)(hi)
		//0x2671		LABLE_RESAMPLE_LOOP_BEGIN
0x65FB1407,	//0x2672		VoC_lw16_d(REG7,0x65fb)
0x0B3DF026,	//0x2674		VoC_sub16_dr(REG5,0x670b,REG7)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x1805670B,	//0x2676		VoC_lw16i_set_inc(REG1,0x6602,0x1)(lo)	|	VoC_sub16_dr(REG5,0x670b,REG7)(hi)
0xC0696602,	//0x2678		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x6602,0x1)(hi)
0x66861806,	//0x267a		VoC_lw16i_set_inc(REG2,0x6686,0x1)
0x448EC0AA,	//0x267c		VoC_bne16_rd(LABLE_RESAMPLE_CH2,REG6,0x4015)(lo)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0x2E384015,	//0x267e		VoC_loop_r(0,REG7)(lo)	|	VoC_bne16_rd(LABLE_RESAMPLE_CH2,REG6,0x4015)(hi)
0xD8882684,	//0x2680		VoC_lw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_loop_r(0,REG7)(hi)
0xDC98FFC0,	//0x2682		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_NOP
		//0x2684		VoC_endloop0
0xE5C8DCA8,	//0x2684		VoC_jump(LABLE_RESAMPLE_START)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
		//0x2686		LABLE_RESAMPLE_CH2
0x2E38F050,	//0x2686		VoC_loop_r(0,REG7)(lo)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD9C4268C,	//0x2688		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_r(0,REG7)(hi)
0xDC98FFC0,	//0x268a		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_NOP
		//0x268c		VoC_endloop0
0xF019DCA9,	//0x268c		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
		//0x268d		LABLE_RESAMPLE_START
0xDFC0F109,	//0x268e		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0x8,DEFAULT)
0x00000AC8,	//0x2690		VoC_lw16i(ACC0_LO,0x8000)
0x670A1405,	//0x2692		VoC_lw16_d(REG5,0x670a)
0x0A87F8FD,	//0x2694		VoC_lw16i(REG7,0x4000)(lo)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0xCDED4000,	//0x2696		VoC_multf32_rr(ACC1,REG7,REG5,DEFAULT)	|	VoC_lw16i(REG7,0x4000)(hi)
0x30B70A8F,	//0x2698		VoC_lw16i(RL7_HI,0x30b7)
0xF0F9C965,	//0x269a		VoC_lw16i_short(FORMAT32,0x7,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xDF44F01A,	//0x269c		VoC_push32(ACC0,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0x22D41585,	//0x269e		VoC_sw32_d(ACC1,0x22d4)
0x22D61805,	//0x26a0		VoC_lw16i_set_inc(REG1,0x22d6,0x1)
0x66021FBC,	//0x26a2		VoC_lw16i_set_inc(REG0,0x6602,0xffffffff)
0x26202B80,	//0x26a4		VoC_jal(CS_SrcUp)
0xF026DF04,	//0x26a6		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_pop32(ACC0,DEFAULT)
0x23561805,	//0x26a8		VoC_lw16i_set_inc(REG1,0x2356,0x1)
0x66861FBC,	//0x26aa		VoC_lw16i_set_inc(REG0,0x6686,0xffffffff)
0x26202B80,	//0x26ac		VoC_jal(CS_SrcUp)
0x66021804,	//0x26ae		VoC_lw16i_set_inc(REG0,0x6602,0x1)
0x66861805,	//0x26b0		VoC_lw16i_set_inc(REG1,0x6686,0x1)
0x00220A84,	//0x26b2		VoC_lw16i(REG4,0x22)
0x670B0B24,	//0x26b4		VoC_sub16_dr(REG4,0x670b,REG4)
0x1504E085,	//0x26b6		VoC_sw16_d(REG4,0x65fb)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0xC81165FB,	//0x26b8		VoC_add32_rr(REG23,REG01,REG45,DEFAULT)	|	VoC_sw16_d(REG4,0x65fb)(hi)
0xF033F032,	//0x26ba		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xD8A4EC44,	//0x26bc		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_i_short(0x22,DEFAULT)
0xDC84D8B5,	//0x26be		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
		//0x26c0		VoC_endloop0
0x1FBCDC95,	//0x26c0		VoC_lw16i_set_inc(REG0,0x637a,0xffffffff)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x1809637A,	//0x26c2		VoC_lw16i_set_inc(REG1,0x22d6,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x637a,0xffffffff)(hi)
0x180622D6,	//0x26c4		VoC_lw16i_set_inc(REG2,0x1cec,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x22d6,0x2)(hi)
0x14041CEC,	//0x26c6		VoC_lw16_d(REG4,0x6378)(lo)	|	VoC_lw16i_set_inc(REG2,0x1cec,0x1)(hi)
0xFFC06378,	//0x26c8		VoC_NAD	|	VoC_lw16_d(REG4,0x6378)(hi)
0x1F802B80,	//0x26ca		VoC_jal(CS_sbc_analyze_audio)
0x63781504,	//0x26cc		VoC_sw16_d(REG4,0x6378)
0x64BA1FBC,	//0x26ce		VoC_lw16i_set_inc(REG0,0x64ba,0xffffffff)
0x23561809,	//0x26d0		VoC_lw16i_set_inc(REG1,0x2356,0x2)
0x1CFC1806,	//0x26d2		VoC_lw16i_set_inc(REG2,0x1cfc,0x1)
0x63791404,	//0x26d4		VoC_lw16_d(REG4,0x6379)
0x1F802B80,	//0x26d6		VoC_jal(CS_sbc_analyze_audio)
0x63791504,	//0x26d8		VoC_sw16_d(REG4,0x6379)
0x21722B80,	//0x26da		VoC_jal(CS_SBC_PackFrame)
0xE0155F80,	//0x26dc		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x63750B04,	//0x26de		VoC_sub16_dr(REG4,0x6375,REG0)
0x40154025,	//0x26e0		VoC_be16_rd(LABLE_RESAMPLE_LEN_CH,REG5,0x4015)
0xFFC0790C,	//0x26e2		VoC_NAD(IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
		//0x26e4		LABLE_RESAMPLE_LEN_CH
0x65FB4824,	//0x26e4		VoC_blt16_rd(LABLE_RESAMPLE_FRAME_END,REG4,0x65fb)
0x26712B00,	//0x26e6		VoC_jump_lg(LABLE_RESAMPLE_LOOP_BEGIN)
		//0x26e8		LABLE_RESAMPLE_FRAME_END
0x1805F030,	//0x26e8		VoC_lw16i_set_inc(REG1,0x6624,0x1)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x18066624,	//0x26ea		VoC_lw16i_set_inc(REG2,0x66a8,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x6624,0x1)(hi)
0x318466A8,	//0x26ec		VoC_bez16_r(LABLE_RESAMPLE_MEMCPY2,REG4)(lo)	|	VoC_lw16i_set_inc(REG2,0x66a8,0x1)(hi)
0x448D2702,	//0x26ee		VoC_bne16_rd(LABLE_RESAMPLE_MEMCPY1,REG5,0x4015)(lo)	|	VoC_bez16_r(LABLE_RESAMPLE_MEMCPY2,REG4)(hi)
0x2E204015,	//0x26f0		VoC_loop_r(0,REG4)(lo)	|	VoC_bne16_rd(LABLE_RESAMPLE_MEMCPY1,REG5,0x4015)(hi)
0xD88526F6,	//0x26f2		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0xDC95FFC0,	//0x26f4		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_NOP
		//0x26f6		VoC_endloop0
0xE5CBDCA5,	//0x26f6		VoC_jump(LABLE_RESAMPLE_MEMCPY2)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x26f8		LABLE_RESAMPLE_MEMCPY1
0xF031F050,	//0x26f8		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD9C4F032,	//0x26fa		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x27002E20,	//0x26fc		VoC_loop_r(0,REG4)
0xD9C4DC98,	//0x26fe		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
		//0x2700		VoC_endloop0
0xFFC05CA9,	//0x2700		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
		//0x2702		LABLE_RESAMPLE_MEMCPY2
0x65FB0B24,	//0x2702		VoC_sub16_dr(REG4,0x65fb,REG4)
0x1504DFA9,	//0x2704		VoC_sw16_d(REG4,0x65fb)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE58065FB,	//0x2706		VoC_return	|	VoC_sw16_d(REG4,0x65fb)(hi)
