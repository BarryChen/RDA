		//0x0230		VoC_code_section_1
		//0x0230		CII_RMVBMbDec
0xF01CDFE9,	//0x0230		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF01EF01D,	//0x0232		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0x0A83F01F,	//0x0234		VoC_lw16i(REG3,0xc7a)(lo)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x0A840C7A,	//0x0236		VoC_lw16i(REG4,0x1cc)(lo)	|	VoC_lw16i(REG3,0xc7a)(hi)
0x148601CC,	//0x0238		VoC_lw32_d(RL6,0xcb6)(lo)	|	VoC_lw16i(REG4,0x1cc)(hi)
0x15430CB6,	//0x023a		VoC_sw16_d(REG3,0xffc3)(lo)	|	VoC_lw32_d(RL6,0xcb6)(hi)
0x15447FC3,	//0x023c		VoC_sw16_d(REG4,0xffc2)(lo)	|	VoC_sw16_d(REG3,0xffc3)(hi)
0x15C67FC2,	//0x023e		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG4,0xffc2)(hi)
0xDE807FC4,	//0x0240		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x0242		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xFFC00008,	//0x0244		VoC_NAD	|	VoC_cfg_lg(0x8,)(hi)
		//0x0246		RMVB_Decode_START
0x0CAE1403,	//0x0246		VoC_lw16_d(REG3,0xcae)
0x5D6A079B,	//0x0248		VoC_sub16_rd(REG3,REG3,0x5d6a)
0x01090A84,	//0x024a		VoC_lw16i(REG4,0x109)
0x0CAE1503,	//0x024c		VoC_sw16_d(REG3,0xcae)
0x065C0A83,	//0x024e		VoC_lw16i(REG3,0x65c)
0x0CB41486,	//0x0250		VoC_lw32_d(RL6,0xcb4)
0x7FC31543,	//0x0252		VoC_sw16_d(REG3,0xffc3)
0x7FC21544,	//0x0254		VoC_sw16_d(REG4,0xffc2)
0x7FC415C6,	//0x0256		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x0258		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x025a		VoC_cfg_lg(0x8,)
0x0CB21402,	//0x025c		VoC_lw16_d(REG2,0xcb2)
0xFBF1F003,	//0x025e		VoC_shr32_ri(REG23,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x0CE40A84,	//0x0260		VoC_lw16i(REG4,0xce4)
0x0E740A85,	//0x0262		VoC_lw16i(REG5,0xe74)
0x1C8E1581,	//0x0264		VoC_sw32_d(REG23,0x1c8e)
0x1C881504,	//0x0266		VoC_sw16_d(REG4,0x1c88)
0x1C891505,	//0x0268		VoC_sw16_d(REG5,0x1c89)
0x0CBF1402,	//0x026a		VoC_lw16_d(REG2,0xcbf)
0x0CB81400,	//0x026c		VoC_lw16_d(REG0,0xcb8)
0x0CC31401,	//0x026e		VoC_lw16_d(REG1,0xcc3)
0x031E31C2,	//0x0270		VoC_bnez16_r(RMVB_Decode_106,REG2)
0xFFC0E448,	//0x0272		VoC_NOP	|	VoC_or16_rr(REG0,REG1,DEFAULT)
0x1C901500,	//0x0274		VoC_sw16_d(REG0,0x1c90)
0x028E3180,	//0x0276		VoC_bez16_r(RMVB_Decode_100,REG0)
0x1C881400,	//0x0278		VoC_lw16_d(REG0,0x1c88)
0x5D7F0700,	//0x027a		VoC_add16_rd(REG0,REG0,0x5d7f)
0x0CC51404,	//0x027c		VoC_lw16_d(REG4,0xcc5)
0x0CC61405,	//0x027e		VoC_lw16_d(REG5,0xcc6)
0x5DBE0A81,	//0x0280		VoC_lw16i(REG1,0x5dbe)
0x04242B80,	//0x0282		VoC_jal(CII_RMVB_DEQUANT_INTRA16)
0x028E3187,	//0x0284		VoC_bez16_r(RMVB_Decode_100,REG7)
0x5DBE0A80,	//0x0286		VoC_lw16i(REG0,0x5dbe)
0x1C881401,	//0x0288		VoC_lw16_d(REG1,0x1c88)
0x5D7F0709,	//0x028a		VoC_add16_rd(REG1,REG1,0x5d7f)
0x04582B80,	//0x028c		VoC_jal(CII_RMVB_Intra16x16IT)
		//0x028e		RMVB_Decode_100
0x1C881400,	//0x028e		VoC_lw16_d(REG0,0x1c88)
0x5D7F0701,	//0x0290		VoC_add16_rd(REG1,REG0,0x5d7f)
0xE0077026,	//0x0292		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x02E22C21,	//0x0294		VoC_loop_i(0x1,0x10)
0xDF435FC0,	//0x0296		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x0CE22983,	//0x0298		VoC_and32_rd(REG67,0xce2)
0x3303DFC1,	//0x029a		VoC_bez32_r(RMVB_Decode_102,REG67)(lo)	|	VoC_push16(REG1,DEFAULT)
0x180502CC,	//0x029c		VoC_lw16i_set_inc(REG1,0x5dbe,0x1)(lo)	|	VoC_bez32_r(RMVB_Decode_102,REG67)(hi)
0x14045DBE,	//0x029e		VoC_lw16_d(REG4,0xcc4)(lo)	|	VoC_lw16i_set_inc(REG1,0x5dbe,0x1)(hi)
0x14050CC4,	//0x02a0		VoC_lw16_d(REG5,0xcc4)(lo)	|	VoC_lw16_d(REG4,0xcc4)(hi)
0xFFC00CC4,	//0x02a2		VoC_NAD	|	VoC_lw16_d(REG5,0xcc4)(hi)
0x03FC2B80,	//0x02a4		VoC_jal(CII_RMVB_DEQUANT)
0x1C906C08,	//0x02a6		VoC_bez16_d(RMVB_Decode_101,0x1c90)
0x0A80D611,	//0x02a8		VoC_lw16i(REG0,0x5dbe)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xD8155DBE,	//0x02aa		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_lw16i(REG0,0x5dbe)(hi)
0xDC05FFC0,	//0x02ac		VoC_sw16_p(REG5,REG0,DEFAULT)	|	VoC_NOP
		//0x02ae		RMVB_Decode_101
0x02B83184,	//0x02ae		VoC_bez16_r(RMVB_Decode_1010,REG4)
0x5DBE0A80,	//0x02b0		VoC_lw16i(REG0,0x5dbe)
0xFFC05621,	//0x02b2		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x04442B80,	//0x02b4		VoC_jal(CII_RMVB_4x4IT)
0x02DC2B00,	//0x02b6		VoC_jump_lg(RMVB_Decode_103)
		//0x02b8		RMVB_Decode_1010
0x5DBE0A80,	//0x02b8		VoC_lw16i(REG0,0x5dbe)
0xF5D05621,	//0x02ba		VoC_lw16i_short(FORMAT16,0xfffffffa,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x00500A96,	//0x02bc		VoC_lw16i(STATUS,0x50)
0x00A90A82,	//0x02be		VoC_lw16i(REG2,0xa9)
0xD90B8C82,	//0x02c0		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_multf16_rp(REG2,REG2,REG0,DEFAULT)
0x2983E3C3,	//0x02c2		VoC_and32_rd(REG67,0xce2)(lo)	|	VoC_not32_r(REG67,DEFAULT)
0xDC120CE2,	//0x02c4		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_and32_rd(REG67,0xce2)(hi)
0x0CE21583,	//0x02c6		VoC_sw32_d(REG67,0xce2)
0x00100A96,	//0x02c8		VoC_lw16i(STATUS,0x10)
0xFFC065D2,	//0x02ca		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RMVB_Decode_103)
		//0x02cc		RMVB_Decode_102
0x1C906C10,	//0x02cc		VoC_bez16_d(RMVB_Decode_103,0x1c90)
0x5621D610,	//0x02ce		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x0A96F5D0,	//0x02d0		VoC_lw16i(STATUS,0x50)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffffa,IN_PARALLEL)
0x0A820050,	//0x02d2		VoC_lw16i(REG2,0xa9)(lo)	|	VoC_lw16i(STATUS,0x50)(hi)
0x8C8200A9,	//0x02d4		VoC_multf16_rp(REG2,REG2,REG0,DEFAULT)	|	VoC_lw16i(REG2,0xa9)(hi)
0xFFC0FFC0,	//0x02d6		VoC_NOP	|	VoC_NOP
0x0A96DC12,	//0x02d8		VoC_lw16i(STATUS,0x10)(lo)	|	VoC_sw16_p(REG2,REG1,DEFAULT)
0xFFC00010,	//0x02da		VoC_NAD	|	VoC_lw16i(STATUS,0x10)(hi)
		//0x02dc		RMVB_Decode_103
0xDF815F03,	//0x02dc		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xFBFB5F80,	//0x02de		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x5D790700,	//0x02e0		VoC_add16_rd(REG0,REG0,0x5d79)
		//0x02e2		VoC_endloop1
0x5D6A0709,	//0x02e2		VoC_add16_rd(REG1,REG1,0x5d6a)
0x1C881400,	//0x02e4		VoC_lw16_d(REG0,0x1c88)
0x5D7E0700,	//0x02e6		VoC_add16_rd(REG0,REG0,0x5d7e)
0xE0177006,	//0x02e8		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x03172C11,	//0x02ea		VoC_loop_i(0x1,0x8)
0x2983DF43,	//0x02ec		VoC_and32_rd(REG67,0xce2)(lo)	|	VoC_push32(REG67,DEFAULT)
0xDFC00CE2,	//0x02ee		VoC_push16(REG0,DEFAULT)	|	VoC_and32_rd(REG67,0xce2)(hi)
0x03143303,	//0x02f0		VoC_bez32_r(RMVB_Decode_105,REG67)
0x5DBE1805,	//0x02f2		VoC_lw16i_set_inc(REG1,0x5dbe,0x1)
0x0CC71404,	//0x02f4		VoC_lw16_d(REG4,0xcc7)
0x0CC81405,	//0x02f6		VoC_lw16_d(REG5,0xcc8)
0x03FC2B80,	//0x02f8		VoC_jal(CII_RMVB_DEQUANT)
0x03023184,	//0x02fa		VoC_bez16_r(RMVB_Decode_104,REG4)
0x5DBE0A80,	//0x02fc		VoC_lw16i(REG0,0x5dbe)
0x2B80D611,	//0x02fe		VoC_jal(CII_RMVB_4x4IT)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xE5D30444,	//0x0300		VoC_jump(RMVB_Decode_105)	|	VoC_jal(CII_RMVB_4x4IT)(hi)
		//0x0302		RMVB_Decode_104
0x5DBE0A80,	//0x0302		VoC_lw16i(REG0,0x5dbe)
0xF5D05611,	//0x0304		VoC_lw16i_short(FORMAT16,0xfffffffa,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x00500A96,	//0x0306		VoC_lw16i(STATUS,0x50)
0x00A90A82,	//0x0308		VoC_lw16i(REG2,0xa9)
0xD90B8C82,	//0x030a		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_multf16_rp(REG2,REG2,REG0,DEFAULT)
0x2983E3C3,	//0x030c		VoC_and32_rd(REG67,0xce2)(lo)	|	VoC_not32_r(REG67,DEFAULT)
0xDC120CE2,	//0x030e		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_and32_rd(REG67,0xce2)(hi)
0x0CE21583,	//0x0310		VoC_sw32_d(REG67,0xce2)
0x00100A96,	//0x0312		VoC_lw16i(STATUS,0x10)
		//0x0314		RMVB_Decode_105
0xDF035F80,	//0x0314		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x0700FBFB,	//0x0316		VoC_add16_rd(REG0,REG0,0x5d79)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
		//0x0317		VoC_endloop1
0xFFC05D79,	//0x0318		VoC_NOP	|	VoC_add16_rd(REG0,REG0,0x5d79)(hi)
0x04E82B80,	//0x031a		VoC_jal(CII_RMVB_MBMC)
0x03442B00,	//0x031c		VoC_jump_lg(RMVB_Decode_107)
		//0x031e		RMVB_Decode_106
0x0CB21401,	//0x031e		VoC_lw16_d(REG1,0xcb2)
0xE0447202,	//0x0320		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xF811C251,	//0x0322		VoC_shr16_ri(REG1,0x2,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)
0x2EF70A83,	//0x0324		VoC_lw16i(REG3,0x2ef7)
0x0E941486,	//0x0326		VoC_lw32_d(RL6,0xe94)
0x5D862A06,	//0x0328		VoC_or32_rd(RL6,0x5d86)
0x03EC2B80,	//0x032a		VoC_jal(CII_RMVB_DMA_2D_CFG0)
0x0CB21401,	//0x032c		VoC_lw16_d(REG1,0xcb2)
0x7102F809,	//0x032e		VoC_lw16i_short(REG2,0x8,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0xC251F80C,	//0x0330		VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,IN_PARALLEL)
0x0A83F811,	//0x0332		VoC_lw16i(REG3,0x2f77)(lo)	|	VoC_shr16_ri(REG1,0x2,DEFAULT)
0x14862F77,	//0x0334		VoC_lw32_d(RL6,0xe9c)(lo)	|	VoC_lw16i(REG3,0x2f77)(hi)
0x2A060E9C,	//0x0336		VoC_or32_rd(RL6,0x5d86)(lo)	|	VoC_lw32_d(RL6,0xe9c)(hi)
0xFFC05D86,	//0x0338		VoC_NAD	|	VoC_or32_rd(RL6,0x5d86)(hi)
0x03EC2B80,	//0x033a		VoC_jal(CII_RMVB_DMA_2D_CFG0)
0x5D7C071B,	//0x033c		VoC_add16_rd(REG3,REG3,0x5d7c)
0x0EA41486,	//0x033e		VoC_lw32_d(RL6,0xea4)
0x5D862A06,	//0x0340		VoC_or32_rd(RL6,0x5d86)
0x03EC2B80,	//0x0342		VoC_jal(CII_RMVB_DMA_2D_CFG0)
		//0x0344		RMVB_Decode_107
0x19640A80,	//0x0344		VoC_lw16i(REG0,0x1964)
0x1AF40A81,	//0x0346		VoC_lw16i(REG1,0x1af4)
0x1BBC0A82,	//0x0348		VoC_lw16i(REG2,0x1bbc)
0x0CBD1403,	//0x034a		VoC_lw16_d(REG3,0xcbd)
0x5D6A071B,	//0x034c		VoC_add16_rd(REG3,REG3,0x5d6a)
0xE01478E3,	//0x034e		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffc,DEFAULT)
0xF80B4018,	//0x0350		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xC0594220,	//0x0352		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)
0xC09A4261,	//0x0354		VoC_add16_rr(REG2,REG2,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)
0xD80042A2,	//0x0356		VoC_lw16_p(REG0,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)
0xD822D811,	//0x0358		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x1C841500,	//0x035a		VoC_sw16_d(REG0,0x1c84)
0x1C851501,	//0x035c		VoC_sw16_d(REG1,0x1c85)
0x1C861502,	//0x035e		VoC_sw16_d(REG2,0x1c86)
0x19640A80,	//0x0360		VoC_lw16i(REG0,0x1964)
0x1AF40A81,	//0x0362		VoC_lw16i(REG1,0x1af4)
0x1BBC0A82,	//0x0364		VoC_lw16i(REG2,0x1bbc)
0x0CBD1403,	//0x0366		VoC_lw16_d(REG3,0xcbd)
0xF00878E3,	//0x0368		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffc,DEFAULT)
0xF80B4018,	//0x036a		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xC09A4059,	//0x036c		VoC_add16_rr(REG2,REG2,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x5EDE180B,	//0x036e		VoC_lw16i_set_inc(REG3,0x5ede,0x2)
0xF00A7051,	//0x0370		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xE902D9DA,	//0x0372		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xDDC2D9DA,	//0x0374		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x0375		VoC_endloop0
0x5F26180B,	//0x0376		VoC_lw16i_set_inc(REG3,0x5f26,0x2)
0x5F661808,	//0x0378		VoC_lw16i_set_inc(REG0,0x5f66,0x2)
0xE882D9DA,	//0x037a		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xDDCAD9DA,	//0x037c		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x037d		VoC_endloop0
0xE882D9C2,	//0x037e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xDDD2D9C2,	//0x0380		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x0381		VoC_endloop0
0x5DFD1880,	//0x0382		VoC_lw16i_set_inc(REG0,0x5dfd,0x10)
0x190C1805,	//0x0384		VoC_lw16i_set_inc(REG1,0x190c,0x1)
0xEA02D884,	//0x0386		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDC94D884,	//0x0388		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x0389		VoC_endloop0
0x5EF51820,	//0x038a		VoC_lw16i_set_inc(REG0,0x5ef5,0x8)
0x19341805,	//0x038c		VoC_lw16i_set_inc(REG1,0x1934,0x1)
0xE902D884,	//0x038e		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDC94D884,	//0x0390		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x0391		VoC_endloop0
0x5F351820,	//0x0392		VoC_lw16i_set_inc(REG0,0x5f35,0x8)
0x19541805,	//0x0394		VoC_lw16i_set_inc(REG1,0x1954,0x1)
0xE902D884,	//0x0396		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDC94D884,	//0x0398		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x0399		VoC_endloop0
0x0CB36E04,	//0x039a		VoC_bnez16_d(RMVB_Decode_108,0xcb3)
0x16882B80,	//0x039c		VoC_jal(CII_RMVB_DeblockFilter)
		//0x039e		RMVB_Decode_108
0x0CB21401,	//0x039e		VoC_lw16_d(REG1,0xcb2)
0xE0447202,	//0x03a0		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xF811C251,	//0x03a2		VoC_shr16_ri(REG1,0x2,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)
0x2EF70A83,	//0x03a4		VoC_lw16i(REG3,0x2ef7)
0x0EC41486,	//0x03a6		VoC_lw32_d(RL6,0xec4)
0x5D882A06,	//0x03a8		VoC_or32_rd(RL6,0x5d88)
0x03EC2B80,	//0x03aa		VoC_jal(CII_RMVB_DMA_2D_CFG0)
0x0CB21401,	//0x03ac		VoC_lw16_d(REG1,0xcb2)
0x7102F809,	//0x03ae		VoC_lw16i_short(REG2,0x8,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0xC251F80C,	//0x03b0		VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,IN_PARALLEL)
0x0A83F811,	//0x03b2		VoC_lw16i(REG3,0x2f77)(lo)	|	VoC_shr16_ri(REG1,0x2,DEFAULT)
0x14862F77,	//0x03b4		VoC_lw32_d(RL6,0xec6)(lo)	|	VoC_lw16i(REG3,0x2f77)(hi)
0x2A060EC6,	//0x03b6		VoC_or32_rd(RL6,0x5d88)(lo)	|	VoC_lw32_d(RL6,0xec6)(hi)
0xFFC05D88,	//0x03b8		VoC_NAD	|	VoC_or32_rd(RL6,0x5d88)(hi)
0x03EC2B80,	//0x03ba		VoC_jal(CII_RMVB_DMA_2D_CFG0)
0x5D7C071B,	//0x03bc		VoC_add16_rd(REG3,REG3,0x5d7c)
0x0EC81486,	//0x03be		VoC_lw32_d(RL6,0xec8)
0x5D882A06,	//0x03c0		VoC_or32_rd(RL6,0x5d88)
0x03EC2B80,	//0x03c2		VoC_jal(CII_RMVB_DMA_2D_CFG0)
0x6C0DFFC0,	//0x03c4		VoC_bez16_d(RMVB_Decode_111,0xcae)(lo)	|	VoC_NOP
0x0A840CAE,	//0x03c6		VoC_lw16i(REG4,0x424)(lo)	|	VoC_bez16_d(RMVB_Decode_111,0xcae)(hi)
0xF0050424,	//0x03c8		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16i(REG4,0x424)(hi)
0x0CB40912,	//0x03ca		VoC_add32_rd(REG45,REG45,0xcb4)
0x1582FFC0,	//0x03cc		VoC_sw32_d(REG45,0xcb4)(lo)	|	VoC_NOP
0x2B000CB4,	//0x03ce		VoC_jump_lg(RMVB_Decode_START)(lo)	|	VoC_sw32_d(REG45,0xcb4)(hi)
0xFFC00246,	//0x03d0		VoC_NAD	|	VoC_jump_lg(RMVB_Decode_START)(hi)
		//0x03d2		RMVB_Decode_111
0x0C7A0A83,	//0x03d2		VoC_lw16i(REG3,0xc7a)
0x01CC0A84,	//0x03d4		VoC_lw16i(REG4,0x1cc)
0x0CB61486,	//0x03d6		VoC_lw32_d(RL6,0xcb6)
0xE0077026,	//0x03d8		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xE51EFB13,	//0x03da		VoC_or32_rr(RL6,REG67,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffe2,DEFAULT)
0x7FC31543,	//0x03dc		VoC_sw16_d(REG3,0xffc3)
0x7FC21544,	//0x03de		VoC_sw16_d(REG4,0xffc2)
0x7FC415C6,	//0x03e0		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x03e2		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x03e4		VoC_cfg_lg(0x8,)
0xDFA9F000,	//0x03e6		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x0CAD1500,	//0x03e8		VoC_sw16_d(REG0,0xcad)
0xFFC06580,	//0x03ea		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x03ec		CII_RMVB_DMA_2D_CFG0
0x7FC81541,	//0x03ec		VoC_sw16_d(REG1,0xffc8)
0x7FC91542,	//0x03ee		VoC_sw16_d(REG2,0xffc9)
0x7FC31543,	//0x03f0		VoC_sw16_d(REG3,0xffc3)
0x7FC21544,	//0x03f2		VoC_sw16_d(REG4,0xffc2)
0x7FC415C6,	//0x03f4		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x03f6		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x03f8		VoC_cfg_lg(0x8,)
0xFFC06580,	//0x03fa		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x03fc		CII_RMVB_DEQUANT
0xF5A07030,	//0x03fc		VoC_lw16i_short(FORMAT16,0xfffffff4,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x00500A96,	//0x03fe		VoC_lw16i(STATUS,0x50)
0xE0040F02,	//0x0400		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_multf16inc_rp(REG2,REG4,REG0,DEFAULT)
0x645CD883,	//0x0402		VoC_or16_rr(REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xD886C75B,	//0x0404		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_multf16_rr(REG3,REG5,REG3,IN_PARALLEL)
0xC7766474,	//0x0406		VoC_multf16_rr(REG6,REG5,REG6,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0x647CD887,	//0x0408		VoC_or16_rr(REG4,REG7,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0xE86FC77F,	//0x040a		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_multf16_rr(REG7,REG5,REG7,IN_PARALLEL)
0xDC925882,	//0x040c		VoC_sw16inc_p(REG2,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xC7526454,	//0x040e		VoC_multf16_rr(REG2,REG5,REG2,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG2,DEFAULT)
0xDC935883,	//0x0410		VoC_sw16inc_p(REG3,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xC75B645C,	//0x0412		VoC_multf16_rr(REG3,REG5,REG3,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG3,DEFAULT)
0xDC965886,	//0x0414		VoC_sw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xC7766474,	//0x0416		VoC_multf16_rr(REG6,REG5,REG6,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xDC975887,	//0x0418		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
		//0x041a		VoC_endloop0
0xC77F647C,	//0x041a		VoC_multf16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG7,DEFAULT)
0xDC93DC92,	//0x041c		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0xDC97DC96,	//0x041e		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x00100A96,	//0x0420		VoC_lw16i(STATUS,0x10)
0xFFC06580,	//0x0422		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0424		CII_RMVB_DEQUANT_INTRA16
0x5D8E1807,	//0x0424		VoC_lw16i_set_inc(REG3,0x5d8e,0x1)
0x00500A96,	//0x0426		VoC_lw16i(STATUS,0x50)
0xF5A05FC5,	//0x0428		VoC_lw16i_short(FORMAT16,0xfffffff4,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xD8B27007,	//0x042a		VoC_lw16inc_p(REG2,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xC0564015,	//0x042c		VoC_add16_rr(REG6,REG1,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG0,REG2,DEFAULT)
0xE867FFC0,	//0x042e		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_NAD
0xD8520D2D,	//0x0430		VoC_lw16_p(REG2,REG5,IN_PARALLEL)	|	VoC_multf16_rp(REG5,REG4,REG5,DEFAULT)
0xD8B26457,	//0x0432		VoC_lw16inc_p(REG2,REG3,IN_PARALLEL)	|	VoC_or16_rr(REG7,REG2,DEFAULT)
0xC0564015,	//0x0434		VoC_add16_rr(REG6,REG1,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG0,REG2,DEFAULT)
		//0x0436		VoC_endloop0
0xDF84DCE5,	//0x0436		VoC_pop16(REG4,DEFAULT)	|	VoC_sw16inc_p(REG5,REG6,DEFAULT)
0xE9A7FFC0,	//0x0438		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_NAD
0xD8520D2D,	//0x043a		VoC_lw16_p(REG2,REG5,IN_PARALLEL)	|	VoC_multf16_rp(REG5,REG4,REG5,DEFAULT)
0xD8B26457,	//0x043c		VoC_lw16inc_p(REG2,REG3,IN_PARALLEL)	|	VoC_or16_rr(REG7,REG2,DEFAULT)
0xC0564015,	//0x043e		VoC_add16_rr(REG6,REG1,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG0,REG2,DEFAULT)
		//0x0440		VoC_endloop0
0x0A96DCE5,	//0x0440		VoC_lw16i(STATUS,0x10)(lo)	|	VoC_sw16inc_p(REG5,REG6,DEFAULT)
0xE5800010,	//0x0442		VoC_return	|	VoC_lw16i(STATUS,0x10)(hi)
		//0x0444		CII_RMVB_4x4IT
0xDFC1DFE9,	//0x0444		VoC_push16(REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x17CA0A81,	//0x0446		VoC_lw16i(REG1,0x17ca)
0x046C2B80,	//0x0448		VoC_jal(CII_RMVB_4x4IT_HOR)
0x17CA0A80,	//0x044a		VoC_lw16i(REG0,0x17ca)
0x5DCE0A81,	//0x044c		VoC_lw16i(REG1,0x5dce)
0x048E2B80,	//0x044e		VoC_jal(CII_RMVB_4x4IT_VER)
0x5DCE0A80,	//0x0450		VoC_lw16i(REG0,0x5dce)
0x2B80DF81,	//0x0452		VoC_jal(CII_RMVB_NonIntra_postIT)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xDFA904D4,	//0x0454		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_NonIntra_postIT)(hi)
0xE580FFC0,	//0x0456		VoC_return	|	VoC_NOP
		//0x0458		CII_RMVB_Intra16x16IT
0xDFC1DFE9,	//0x0458		VoC_push16(REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x17CA0A81,	//0x045a		VoC_lw16i(REG1,0x17ca)
0x046C2B80,	//0x045c		VoC_jal(CII_RMVB_4x4IT_HOR)
0x17CA0A80,	//0x045e		VoC_lw16i(REG0,0x17ca)
0x5DCE0A81,	//0x0460		VoC_lw16i(REG1,0x5dce)
0x048E2B80,	//0x0462		VoC_jal(CII_RMVB_4x4IT_VER)
0x5DCE0A80,	//0x0464		VoC_lw16i(REG0,0x5dce)
0x2B80DF81,	//0x0466		VoC_jal(CII_RMVB_Intra_postIT)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xDFA904BF,	//0x0468		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_Intra_postIT)(hi)
0xE580FFC0,	//0x046a		VoC_return	|	VoC_NOP
		//0x046c		CII_RMVB_4x4IT_HOR
0xF0097030,	//0x046c		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF4017018,	//0x046e		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0x0,DEFAULT)
0xE0D45882,	//0x0470		VoC_lw16i_short(REG4,0xd,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xE1155883,	//0x0472		VoC_lw16i_short(REG5,0x11,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0x0086F0E7,	//0x0474		VoC_add16_rp(REG6,REG2,REG0,DEFAULT)	|	VoC_lw16i_short(REG7,0x7,DEFAULT)
0xFFC08682,	//0x0476		VoC_NAD	|	VoC_sub16inc_rp(REG2,REG2,REG0,IN_PARALLEL)
0x048B2C08,	//0x0478		VoC_loop_i(0x0,0x4)
0xCCEC4DA6,	//0x047a		VoC_multf32_rr(ACC0,REG3,REG5,IN_PARALLEL)	|	VoC_multf32_rr(RL6,REG6,REG4,DEFAULT)
0xCCFD4CA7,	//0x047c		VoC_multf32_rr(ACC1,REG3,REG7,IN_PARALLEL)	|	VoC_multf32_rr(RL7,REG2,REG4,DEFAULT)
0xD1A85038,	//0x047e		VoC_msu32inc_rp(REG5,REG0,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG0,DEFAULT)
0x49A6D882,	//0x0480		VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0x49EFCBA4,	//0x0482		VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(ACC0,RL6,ACC0,IN_PARALLEL)
0x5DCECBED,	//0x0484		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0x5DCFD883,	//0x0486		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)
0x5DCD8086,	//0x0488		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_add16_rp(REG6,REG2,REG0,IN_PARALLEL)
0xDDCC8682,	//0x048a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sub16inc_rp(REG2,REG2,REG0,IN_PARALLEL)
		//0x048b		VoC_endloop0
0xFFC06580,	//0x048c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x048e		CII_RMVB_4x4IT_VER
0xF0217110,	//0x048e		VoC_lw16i_short(INC1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x8,DEFAULT)
0xF4017018,	//0x0490		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0x0,DEFAULT)
0xD9C7D9C1,	//0x0492		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x96411042,	//0x0494		VoC_sub32inc_rp(REG23,REG23,REG0,IN_PARALLEL)	|	VoC_add32_rp(REG45,REG23,REG0,DEFAULT)
0x04BC2C08,	//0x0496		VoC_loop_i(0x0,0x4)
0xFF0D7F14,	//0x0498		VoC_movreg32(ACC1,REG23,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xFBF57BF4,	//0x049a		VoC_shr32_ri(ACC1,0xfffffffe,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0xC86948A2,	//0x049c		VoC_add32_rr(REG23,REG23,ACC1,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xFBFD7BFC,	//0x049e		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xC86A48A4,	//0x04a0		VoC_add32_rr(REG45,REG23,ACC1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,REG45,ACC0,DEFAULT)
0xFBEF7F3E,	//0x04a2		VoC_shr32_ri(RL7,0xfffffffd,IN_PARALLEL)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0xFBFF4BF5,	//0x04a4		VoC_shr32_ri(RL7,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,RL7,RL6,DEFAULT)
0xD9C149BF,	//0x04a6		VoC_lw32inc_p(REG23,REG0,IN_PARALLEL)	|	VoC_add32_rr(RL7,RL6,RL7,DEFAULT)
0xFBE97F0E,	//0x04a8		VoC_shr32_ri(REG23,0xfffffffd,IN_PARALLEL)	|	VoC_movreg32(RL6,REG23,DEFAULT)
0xFBF94A73,	//0x04aa		VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(REG67,REG23,RL6,DEFAULT)
0xC9DF4871,	//0x04ac		VoC_add32_rr(RL7,RL7,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,RL6,DEFAULT)
0xE1E34B4E,	//0x04ae		VoC_lw16i_short(REG3,0x1e,IN_PARALLEL)	|	VoC_sub32_rr(RL6,ACC1,REG23,DEFAULT)
0xCB3D493C,	//0x04b0		VoC_sub32_rr(ACC1,ACC0,RL7,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xC8B74218,	//0x04b2		VoC_add32_rr(RL7,REG45,RL6,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0xDDCC4AB6,	//0x04b4		VoC_sw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_sub32_rr(RL6,REG45,RL6,DEFAULT)
0xD9C35DCF,	//0x04b6		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0xD9C75DCE,	//0x04b8		VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
0x90C25DCD,	//0x04ba		VoC_add32_rp(REG45,REG67,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x04bc		VoC_endloop0
0xC25916C1,	//0x04bc		VoC_sub16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_sub32inc_rp(REG23,REG67,REG0,DEFAULT)
0xF050E580,	//0x04be		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_return
		//0x04bf		CII_RMVB_Intra_postIT
0xD9C6F031,	//0x04c0		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xFFC0D9C7,	//0x04c2		VoC_NAD	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFF31690C,	//0x04c4		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xFF3A7BF9,	//0x04c6		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xffffffff,DEFAULT)
0xFBFA4871,	//0x04c8		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,RL6,DEFAULT)
0xC8BA7A59,	//0x04ca		VoC_add32_rr(REG45,REG45,RL7,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xb,DEFAULT)
0xD9C67A5A,	//0x04cc		VoC_lw32inc_p(RL6,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0xD9C75C92,	//0x04ce		VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
		//0x04d0		VoC_endloop0
0xFF315C94,	//0x04d0		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xFFC06580,	//0x04d2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x04d4		CII_RMVB_NonIntra_postIT
0xF0057050,	//0x04d4		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x02000A82,	//0x04d6		VoC_lw16i(REG2,0x200)
0xE00359C2,	//0x04d8		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xC85259C3,	//0x04da		VoC_add32_rr(REG45,REG23,REG45,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xE907FFC0,	//0x04dc		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0xC85B7A52,	//0x04de		VoC_add32_rr(REG67,REG23,REG67,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xa,DEFAULT)
0xD9C27A53,	//0x04e0		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xa,DEFAULT)
0xD9C35C94,	//0x04e2		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x04e4		VoC_endloop0
0xC8525C96,	//0x04e4		VoC_add32_rr(REG45,REG23,REG45,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xFFC06580,	//0x04e6		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x04e8		CII_RMVB_MBMC
0x0CB91401,	//0x04e8		VoC_lw16_d(REG1,0xcb9)
0x1C891402,	//0x04ea		VoC_lw16_d(REG2,0x1c89)
0x0CB81403,	//0x04ec		VoC_lw16_d(REG3,0xcb8)
0xDFE9D822,	//0x04ee		VoC_push16(RA,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x08C03181,	//0x04f0		VoC_bez16_r(RMVB_MBMC_101,REG1)
0x06443183,	//0x04f2		VoC_bez16_r(RMVB_MBMC_102,REG3)
0x0CBA1400,	//0x04f4		VoC_lw16_d(REG0,0xcba)
0x0CBB1401,	//0x04f6		VoC_lw16_d(REG1,0xcbb)
0x05163180,	//0x04f8		VoC_bez16_r(RMVB_MBMC_INTRA16_DATA_100,REG0)
0x057E31C1,	//0x04fa		VoC_bnez16_r(RMVB_MBMC_INTRA16_DATA_102,REG1)
0x190C1808,	//0x04fc		VoC_lw16i_set_inc(REG0,0x190c,0x2)
0x18F41809,	//0x04fe		VoC_lw16i_set_inc(REG1,0x18f4,0x2)
0xD9C26903,	//0x0500		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xDDCAD9C2,	//0x0502		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x0503		VoC_endloop0
0x19341808,	//0x0504		VoC_lw16i_set_inc(REG0,0x1934,0x2)
0x19241809,	//0x0506		VoC_lw16i_set_inc(REG1,0x1924,0x2)
0xD9C26883,	//0x0508		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDCAD9C2,	//0x050a		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x050b		VoC_endloop0
0x19541808,	//0x050c		VoC_lw16i_set_inc(REG0,0x1954,0x2)
0x19441809,	//0x050e		VoC_lw16i_set_inc(REG1,0x1944,0x2)
0xD9C26883,	//0x0510		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDCAD9C2,	//0x0512		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x0513		VoC_endloop0
0x05982B00,	//0x0514		VoC_jump_lg(RMVB_MBMC_INTRA16_DATA_103)
		//0x0516		RMVB_MBMC_INTRA16_DATA_100
0x05563181,	//0x0516		VoC_bez16_r(RMVB_MBMC_INTRA16_DATA_101,REG1)
0x19640A80,	//0x0518		VoC_lw16i(REG0,0x1964)
0x0CBD1403,	//0x051a		VoC_lw16_d(REG3,0xcbd)
0xF00878E3,	//0x051c		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffc,DEFAULT)
0x1809C018,	//0x051e		VoC_lw16i_set_inc(REG1,0x190c,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x180B190C,	//0x0520		VoC_lw16i_set_inc(REG3,0x18f4,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x190c,0x2)(hi)
0xD9C218F4,	//0x0522		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x18f4,0x2)(hi)
0xE886D9C3,	//0x0524		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xDDDADDCA,	//0x0526		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDDCBD9C2,	//0x0528		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9C3DDDB,	//0x052a		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x052b		VoC_endloop0
0x1AF40A80,	//0x052c		VoC_lw16i(REG0,0x1af4)
0x0CBD1403,	//0x052e		VoC_lw16_d(REG3,0xcbd)
0xF00878EB,	//0x0530		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)
0x1809C018,	//0x0532		VoC_lw16i_set_inc(REG1,0x1934,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x180B1934,	//0x0534		VoC_lw16i_set_inc(REG3,0x1924,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1934,0x2)(hi)
0xD9C21924,	//0x0536		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1924,0x2)(hi)
0xE846D9C3,	//0x0538		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xDDDADDCA,	//0x053a		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDDCBD9C2,	//0x053c		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9C3DDDB,	//0x053e		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x053f		VoC_endloop0
0x1BBC0A80,	//0x0540		VoC_lw16i(REG0,0x1bbc)
0x0CBD1403,	//0x0542		VoC_lw16_d(REG3,0xcbd)
0xF00878EB,	//0x0544		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)
0x1809C018,	//0x0546		VoC_lw16i_set_inc(REG1,0x1954,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x180B1954,	//0x0548		VoC_lw16i_set_inc(REG3,0x1944,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1954,0x2)(hi)
0xD9C21944,	//0x054a		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1944,0x2)(hi)
0xE846D9C3,	//0x054c		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xDDDADDCA,	//0x054e		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDDCBD9C2,	//0x0550		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9C3DDDB,	//0x0552		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x0553		VoC_endloop0
0x05982B00,	//0x0554		VoC_jump_lg(RMVB_MBMC_INTRA16_DATA_103)
		//0x0556		RMVB_MBMC_INTRA16_DATA_101
0x19640A80,	//0x0556		VoC_lw16i(REG0,0x1964)
0x0CBD1403,	//0x0558		VoC_lw16_d(REG3,0xcbd)
0xF00878E3,	//0x055a		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffc,DEFAULT)
0x180BC018,	//0x055c		VoC_lw16i_set_inc(REG3,0x18f4,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x690318F4,	//0x055e		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x18f4,0x2)(hi)
0xD9C2D9C2,	//0x0560		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)
		//0x0562		VoC_endloop0
0x0A80DDDA,	//0x0562		VoC_lw16i(REG0,0x1af4)(lo)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0x14031AF4,	//0x0564		VoC_lw16_d(REG3,0xcbd)(lo)	|	VoC_lw16i(REG0,0x1af4)(hi)
0x78EB0CBD,	//0x0566		VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)	|	VoC_lw16_d(REG3,0xcbd)(hi)
0xC018F008,	//0x0568		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x1924180B,	//0x056a		VoC_lw16i_set_inc(REG3,0x1924,0x2)
0xD9C26883,	//0x056c		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDDAD9C2,	//0x056e		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x056f		VoC_endloop0
0x1BBC0A80,	//0x0570		VoC_lw16i(REG0,0x1bbc)
0x0CBD1403,	//0x0572		VoC_lw16_d(REG3,0xcbd)
0xF00878EB,	//0x0574		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)
0x180BC018,	//0x0576		VoC_lw16i_set_inc(REG3,0x1944,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x68831944,	//0x0578		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1944,0x2)(hi)
0xD9C2D9C2,	//0x057a		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)
		//0x057c		VoC_endloop0
0xE5DBDDDA,	//0x057c		VoC_jump(RMVB_MBMC_INTRA16_DATA_103)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x057e		RMVB_MBMC_INTRA16_DATA_102
0x00800A86,	//0x057e		VoC_lw16i(REG6,0x80)
0x00800A87,	//0x0580		VoC_lw16i(REG7,0x80)
0x18F41808,	//0x0582		VoC_lw16i_set_inc(REG0,0x18f4,0x2)
0x190C1809,	//0x0584		VoC_lw16i_set_inc(REG1,0x190c,0x2)
0xDDC3E902,	//0x0586		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x0588		VoC_endloop0
0x1808DDCB,	//0x0588		VoC_lw16i_set_inc(REG0,0x1924,0x2)(lo)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x18091924,	//0x058a		VoC_lw16i_set_inc(REG1,0x1934,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1924,0x2)(hi)
0xE8821934,	//0x058c		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1934,0x2)(hi)
0xDDCBDDC3,	//0x058e		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x058f		VoC_endloop0
0x19441808,	//0x0590		VoC_lw16i_set_inc(REG0,0x1944,0x2)
0x19541809,	//0x0592		VoC_lw16i_set_inc(REG1,0x1954,0x2)
0xDDC3E882,	//0x0594		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0596		VoC_endloop0
0xFFC05DCB,	//0x0596		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
		//0x0598		RMVB_MBMC_INTRA16_DATA_103
0x05C431C2,	//0x0598		VoC_bnez16_r(RMVB_IntraPred_16x16_CaCu_100,REG2)
0x190C1804,	//0x059a		VoC_lw16i_set_inc(REG0,0x190c,0x1)
0x18F41805,	//0x059c		VoC_lw16i_set_inc(REG1,0x18f4,0x1)
0x5DEE180A,	//0x059e		VoC_lw16i_set_inc(REG2,0x5dee,0x2)
0xE0045883,	//0x05a0		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE9E382CB,	//0x05a2		VoC_loop_i_short(0xf,DEFAULT)	|	VoC_add16inc_rp(REG3,REG3,REG1,DEFAULT)
0xC11C5883,	//0x05a4		VoC_add16_rr(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x05a6		VoC_endloop0
0x411C82CB,	//0x05a6		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_add16inc_rp(REG3,REG3,REG1,DEFAULT)
0xC12CE105,	//0x05a8		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x10,IN_PARALLEL)
0xE085F82C,	//0x05aa		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x5,DEFAULT)
0xDDD2EC04,	//0x05ac		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
0xDDD2DDD2,	//0x05ae		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x05b0		VoC_endloop0
0x1804DDD2,	//0x05b0		VoC_lw16i_set_inc(REG0,0x1934,0x1)(lo)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0x18051934,	//0x05b2		VoC_lw16i_set_inc(REG1,0x1924,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x1934,0x1)(hi)
0x180A1924,	//0x05b4		VoC_lw16i_set_inc(REG2,0x5eee,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1924,0x1)(hi)
0xFFC05EEE,	//0x05b6		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x5eee,0x2)(hi)
0x0DF42B80,	//0x05b8		VoC_jal(CII_RMVB_CIntraPred_16x16_MODE0)
0x19541804,	//0x05ba		VoC_lw16i_set_inc(REG0,0x1954,0x1)
0x19441805,	//0x05bc		VoC_lw16i_set_inc(REG1,0x1944,0x1)
0x5F2E180A,	//0x05be		VoC_lw16i_set_inc(REG2,0x5f2e,0x2)
0x0DF42B80,	//0x05c0		VoC_jal(CII_RMVB_CIntraPred_16x16_MODE0)
0x063E2B00,	//0x05c2		VoC_jump_lg(RMVB_IntraPred_16x16_CaCu_103)
		//0x05c4		RMVB_IntraPred_16x16_CaCu_100
0xFFC0F021,	//0x05c4		VoC_NOP	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x05F63591,	//0x05c6		VoC_bne16_rr(RMVB_IntraPred_16x16_CaCu_101,REG2,REG1)
0x18F41809,	//0x05c8		VoC_lw16i_set_inc(REG1,0x18f4,0x2)
0x5DEE1883,	//0x05ca		VoC_lw16i_set_inc(REG3,0x5dee,0x10)
0x0A86D9CA,	//0x05cc		VoC_lw16i(REG6,0xfe)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x2C1100FE,	//0x05ce		VoC_loop_i(0x1,0x8)(lo)	|	VoC_lw16i(REG6,0xfe)(hi)
0xE88405D6,	//0x05d0		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0xDDDADDDA,	//0x05d2		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xDDDADDDA,	//0x05d4		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x05d5		VoC_endloop0
		//0x05d6		VoC_endloop1
0xC2F359CA,	//0x05d6		VoC_sub16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x19241809,	//0x05d8		VoC_lw16i_set_inc(REG1,0x1924,0x2)
0x5EEE1823,	//0x05da		VoC_lw16i_set_inc(REG3,0x5eee,0x8)
0x0A86D9CA,	//0x05dc		VoC_lw16i(REG6,0x3e)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x2C09003E,	//0x05de		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16i(REG6,0x3e)(hi)
0xE88205E4,	//0x05e0		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0xDDDADDDA,	//0x05e2		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x05e3		VoC_endloop0
		//0x05e4		VoC_endloop1
0xC2F359CA,	//0x05e4		VoC_sub16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x19441809,	//0x05e6		VoC_lw16i_set_inc(REG1,0x1944,0x2)
0x5F2E1823,	//0x05e8		VoC_lw16i_set_inc(REG3,0x5f2e,0x8)
0x0A86D9CA,	//0x05ea		VoC_lw16i(REG6,0x3e)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x2C09003E,	//0x05ec		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16i(REG6,0x3e)(hi)
0xE88205F2,	//0x05ee		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0xDDDADDDA,	//0x05f0		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x05f1		VoC_endloop0
		//0x05f2		VoC_endloop1
0xC2F359CA,	//0x05f2		VoC_sub16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x063E2B00,	//0x05f4		VoC_jump_lg(RMVB_IntraPred_16x16_CaCu_103)
		//0x05f6		RMVB_IntraPred_16x16_CaCu_101
0xFFC0F041,	//0x05f6		VoC_NOP	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x06263591,	//0x05f8		VoC_bne16_rr(RMVB_IntraPred_16x16_CaCu_102,REG2,REG1)
0x190C1804,	//0x05fa		VoC_lw16i_set_inc(REG0,0x190c,0x1)
0x5DEE180B,	//0x05fc		VoC_lw16i_set_inc(REG3,0x5dee,0x2)
0xE085D884,	//0x05fe		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x06062C21,	//0x0600		VoC_loop_i(0x1,0x10)
0xDDDAE882,	//0x0602		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0604		VoC_endloop0
0xD884DDDA,	//0x0604		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x0606		VoC_endloop1
0x1804E085,	//0x0606		VoC_lw16i_set_inc(REG0,0x1934,0x1)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x180B1934,	//0x0608		VoC_lw16i_set_inc(REG3,0x5eee,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1934,0x1)(hi)
0xD8845EEE,	//0x060a		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x5eee,0x2)(hi)
0x2C11E085,	//0x060c		VoC_loop_i(0x1,0x8)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0xDDDA0615,	//0x060e		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0x5DDADDDA,	//0x0610		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0x5DDAD884,	//0x0612		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0xFFC0F685,	//0x0614		VoC_NOP	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
		//0x0615		VoC_endloop1
0x19541804,	//0x0616		VoC_lw16i_set_inc(REG0,0x1954,0x1)
0x5F2E180B,	//0x0618		VoC_lw16i_set_inc(REG3,0x5f2e,0x2)
0xE085D884,	//0x061a		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x06242C11,	//0x061c		VoC_loop_i(0x1,0x8)
0xDDDADDDA,	//0x061e		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xD8845DDA,	//0x0620		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xF6855DDA,	//0x0622		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x0624		VoC_endloop1
0xE5D9FFC0,	//0x0624		VoC_jump(RMVB_IntraPred_16x16_CaCu_103)	|	VoC_NOP
		//0x0626		RMVB_IntraPred_16x16_CaCu_102
0x190C1804,	//0x0626		VoC_lw16i_set_inc(REG0,0x190c,0x1)
0x18F41805,	//0x0628		VoC_lw16i_set_inc(REG1,0x18f4,0x1)
0x5DEE1807,	//0x062a		VoC_lw16i_set_inc(REG3,0x5dee,0x1)
0x0E042B80,	//0x062c		VoC_jal(CII_RMVB_IntraPred_16x16_PLANAR)
0x19341804,	//0x062e		VoC_lw16i_set_inc(REG0,0x1934,0x1)
0x19241805,	//0x0630		VoC_lw16i_set_inc(REG1,0x1924,0x1)
0x5EEE180A,	//0x0632		VoC_lw16i_set_inc(REG2,0x5eee,0x2)
0x0DF42B80,	//0x0634		VoC_jal(CII_RMVB_CIntraPred_16x16_MODE0)
0x19541804,	//0x0636		VoC_lw16i_set_inc(REG0,0x1954,0x1)
0x19441805,	//0x0638		VoC_lw16i_set_inc(REG1,0x1944,0x1)
0x5F2E180A,	//0x063a		VoC_lw16i_set_inc(REG2,0x5f2e,0x2)
0x0DF42B80,	//0x063c		VoC_jal(CII_RMVB_CIntraPred_16x16_MODE0)
		//0x063e		RMVB_IntraPred_16x16_CaCu_103
0x0EC02B80,	//0x063e		VoC_jal(CII_RMVB_RECON_16x16)
0xDFA9FFC0,	//0x0640		VoC_pop16(RA,DEFAULT)	|	VoC_NOP
0xE580FFC0,	//0x0642		VoC_return	|	VoC_NOP
		//0x0644		RMVB_MBMC_102
0x0CBA1400,	//0x0644		VoC_lw16_d(REG0,0xcba)
0x0CBB1401,	//0x0646		VoC_lw16_d(REG1,0xcbb)
0x06803180,	//0x0648		VoC_bez16_r(RMVB_MBMC_INTRA4_DATA_100,REG0)
0x072A31C1,	//0x064a		VoC_bnez16_r(RMVB_MBMC_INTRA4_DATA_102,REG1)
0x00800A87,	//0x064c		VoC_lw16i(REG7,0x80)
0x190C1808,	//0x064e		VoC_lw16i_set_inc(REG0,0x190c,0x2)
0x18F41809,	//0x0650		VoC_lw16i_set_inc(REG1,0x18f4,0x2)
0x1C841507,	//0x0652		VoC_sw16_d(REG7,0x1c84)
0x1C851507,	//0x0654		VoC_sw16_d(REG7,0x1c85)
0x1C861507,	//0x0656		VoC_sw16_d(REG7,0x1c86)
0xD9C368E3,	//0x0658		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0xDDCBD9C3,	//0x065a		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x065b		VoC_endloop0
0xF6E65DCB,	//0x065c		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xDDCBDDCB,	//0x065e		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xDDC3DDC3,	//0x0660		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x19341808,	//0x0662		VoC_lw16i_set_inc(REG0,0x1934,0x2)
0x19241809,	//0x0664		VoC_lw16i_set_inc(REG1,0x1924,0x2)
0xD9C36863,	//0x0666		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDDCBD9C3,	//0x0668		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x0669		VoC_endloop0
0xF6E65DCB,	//0x066a		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xDDCBDDCB,	//0x066c		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xDDC3DDC3,	//0x066e		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x19541808,	//0x0670		VoC_lw16i_set_inc(REG0,0x1954,0x2)
0x19441809,	//0x0672		VoC_lw16i_set_inc(REG1,0x1944,0x2)
0xD9C36863,	//0x0674		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDDCBD9C3,	//0x0676		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x0677		VoC_endloop0
0xF6E65DCB,	//0x0678		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xDDCBDDCB,	//0x067a		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xDDC3DDC3,	//0x067c		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x074A2B00,	//0x067e		VoC_jump_lg(RMVB_MBMC_INTRA4_DATA_103)
		//0x0680		RMVB_MBMC_INTRA4_DATA_100
0x06CA3181,	//0x0680		VoC_bez16_r(RMVB_MBMC_INTRA4_DATA_101,REG1)
0x00800A87,	//0x0682		VoC_lw16i(REG7,0x80)
0x19640A80,	//0x0684		VoC_lw16i(REG0,0x1964)
0x0CBD1403,	//0x0686		VoC_lw16_d(REG3,0xcbd)
0x1C841507,	//0x0688		VoC_sw16_d(REG7,0x1c84)
0x1C851507,	//0x068a		VoC_sw16_d(REG7,0x1c85)
0x1C861507,	//0x068c		VoC_sw16_d(REG7,0x1c86)
0xF00878E3,	//0x068e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffc,DEFAULT)
0x1809C018,	//0x0690		VoC_lw16i_set_inc(REG1,0x190c,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x180B190C,	//0x0692		VoC_lw16i_set_inc(REG3,0x18f4,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x190c,0x2)(hi)
0xD9C218F4,	//0x0694		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x18f4,0x2)(hi)
0xE8A6D9C3,	//0x0696		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xDDDADDCA,	//0x0698		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDDCBD9C2,	//0x069a		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9C3DDDB,	//0x069c		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x069d		VoC_endloop0
0x1AF40A80,	//0x069e		VoC_lw16i(REG0,0x1af4)
0x0CBD1403,	//0x06a0		VoC_lw16_d(REG3,0xcbd)
0xF00878EB,	//0x06a2		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)
0x1809C018,	//0x06a4		VoC_lw16i_set_inc(REG1,0x1934,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x180B1934,	//0x06a6		VoC_lw16i_set_inc(REG3,0x1924,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1934,0x2)(hi)
0xD9C21924,	//0x06a8		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1924,0x2)(hi)
0xE866D9C3,	//0x06aa		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xDDDADDCA,	//0x06ac		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDDCBD9C2,	//0x06ae		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9C3DDDB,	//0x06b0		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x06b1		VoC_endloop0
0x1BBC0A80,	//0x06b2		VoC_lw16i(REG0,0x1bbc)
0x0CBD1403,	//0x06b4		VoC_lw16_d(REG3,0xcbd)
0xF00878EB,	//0x06b6		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)
0x1809C018,	//0x06b8		VoC_lw16i_set_inc(REG1,0x1954,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x180B1954,	//0x06ba		VoC_lw16i_set_inc(REG3,0x1944,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1954,0x2)(hi)
0xD9C21944,	//0x06bc		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1944,0x2)(hi)
0xE866D9C3,	//0x06be		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xDDDADDCA,	//0x06c0		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDDCBD9C2,	//0x06c2		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9C3DDDB,	//0x06c4		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x06c5		VoC_endloop0
0x2B00FFC0,	//0x06c6		VoC_jump_lg(RMVB_MBMC_INTRA4_DATA_1011)(lo)	|	VoC_NOP
0xFFC006FA,	//0x06c8		VoC_NAD	|	VoC_jump_lg(RMVB_MBMC_INTRA4_DATA_1011)(hi)
		//0x06ca		RMVB_MBMC_INTRA4_DATA_101
0x19640A80,	//0x06ca		VoC_lw16i(REG0,0x1964)
0x0CBD1403,	//0x06cc		VoC_lw16_d(REG3,0xcbd)
0xF00878E3,	//0x06ce		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffc,DEFAULT)
0x180BC018,	//0x06d0		VoC_lw16i_set_inc(REG3,0x18f4,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xD9C218F4,	//0x06d2		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x18f4,0x2)(hi)
0xE8A4D9C3,	//0x06d4		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD9C2DDDA,	//0x06d6		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xD9C3DDDB,	//0x06d8		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x06d9		VoC_endloop0
0x1AF40A80,	//0x06da		VoC_lw16i(REG0,0x1af4)
0x0CBD1403,	//0x06dc		VoC_lw16_d(REG3,0xcbd)
0xF00878EB,	//0x06de		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)
0x180BC018,	//0x06e0		VoC_lw16i_set_inc(REG3,0x1924,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xD9C21924,	//0x06e2		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1924,0x2)(hi)
0xE864D9C3,	//0x06e4		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD9C2DDDA,	//0x06e6		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xD9C3DDDB,	//0x06e8		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x06e9		VoC_endloop0
0x1BBC0A80,	//0x06ea		VoC_lw16i(REG0,0x1bbc)
0x0CBD1403,	//0x06ec		VoC_lw16_d(REG3,0xcbd)
0xF00878EB,	//0x06ee		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)
0x180BC018,	//0x06f0		VoC_lw16i_set_inc(REG3,0x1944,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xD9C21944,	//0x06f2		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1944,0x2)(hi)
0xE864D9C3,	//0x06f4		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD9C2DDDA,	//0x06f6		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xD9C3DDDB,	//0x06f8		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x06f9		VoC_endloop0
		//0x06fa		RMVB_MBMC_INTRA4_DATA_1011
0x191B1804,	//0x06fa		VoC_lw16i_set_inc(REG0,0x191b,0x1)
0x193B1805,	//0x06fc		VoC_lw16i_set_inc(REG1,0x193b,0x1)
0x195B1807,	//0x06fe		VoC_lw16i_set_inc(REG3,0x195b,0x1)
0xD895D884,	//0x0700		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDC84D8B6,	//0x0702		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xDC84DC84,	//0x0704		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xDC95DC84,	//0x0706		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xDC95DC95,	//0x0708		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x1404DC95,	//0x070a		VoC_lw16_d(REG4,0xcbc)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDCB60CBC,	//0x070c		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16_d(REG4,0xcbc)(hi)
0xDCB6DCB6,	//0x070e		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x3184DCB6,	//0x0710		VoC_bez16_r(RMVB_MBMC_INTRA4_DATA_103,REG4)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x1804074A,	//0x0712		VoC_lw16i_set_inc(REG0,0x1903,0x1)(lo)	|	VoC_bez16_r(RMVB_MBMC_INTRA4_DATA_103,REG4)(hi)
0x18051903,	//0x0714		VoC_lw16i_set_inc(REG1,0x192b,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x1903,0x1)(hi)
0x1807192B,	//0x0716		VoC_lw16i_set_inc(REG3,0x194b,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x192b,0x1)(hi)
0xD884194B,	//0x0718		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x194b,0x1)(hi)
0xD8B6D895,	//0x071a		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xDC84DC84,	//0x071c		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xDC84DC84,	//0x071e		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xDC95DC95,	//0x0720		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDC95DC95,	//0x0722		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDCB6DCB6,	//0x0724		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB6DCB6,	//0x0726		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x074A2B00,	//0x0728		VoC_jump_lg(RMVB_MBMC_INTRA4_DATA_103)
		//0x072a		RMVB_MBMC_INTRA4_DATA_102
0x00800A86,	//0x072a		VoC_lw16i(REG6,0x80)
0x00800A87,	//0x072c		VoC_lw16i(REG7,0x80)
0x18F41808,	//0x072e		VoC_lw16i_set_inc(REG0,0x18f4,0x2)
0x190C1809,	//0x0730		VoC_lw16i_set_inc(REG1,0x190c,0x2)
0x1C841507,	//0x0732		VoC_sw16_d(REG7,0x1c84)
0x1C851507,	//0x0734		VoC_sw16_d(REG7,0x1c85)
0x1C861507,	//0x0736		VoC_sw16_d(REG7,0x1c86)
0xDDC3E942,	//0x0738		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x073a		VoC_endloop0
0x1808DDCB,	//0x073a		VoC_lw16i_set_inc(REG0,0x1924,0x2)(lo)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x18091924,	//0x073c		VoC_lw16i_set_inc(REG1,0x1934,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1924,0x2)(hi)
0xE8C21934,	//0x073e		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1934,0x2)(hi)
0xDDCBDDC3,	//0x0740		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x0741		VoC_endloop0
0x19441808,	//0x0742		VoC_lw16i_set_inc(REG0,0x1944,0x2)
0x19541809,	//0x0744		VoC_lw16i_set_inc(REG1,0x1954,0x2)
0xDDC3E8C2,	//0x0746		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0x6,DEFAULT)
		//0x0748		VoC_endloop0
0xFFC05DCB,	//0x0748		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
		//0x074a		RMVB_MBMC_INTRA4_DATA_103
0xE1137202,	//0x074a		VoC_lw16i_short(REG3,0x11,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xE1357244,	//0x074c		VoC_lw16i_short(REG5,0x13,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x12,DEFAULT)
0x1CAC1502,	//0x074e		VoC_sw16_d(REG2,0x1cac)
0x1CAD1503,	//0x0750		VoC_sw16_d(REG3,0x1cad)
0x1CAE1504,	//0x0752		VoC_sw16_d(REG4,0x1cae)
0x1CAF1505,	//0x0754		VoC_sw16_d(REG5,0x1caf)
0x00200A82,	//0x0756		VoC_lw16i(REG2,0x20)
0x00210A83,	//0x0758		VoC_lw16i(REG3,0x21)
0x00220A84,	//0x075a		VoC_lw16i(REG4,0x22)
0x00230A85,	//0x075c		VoC_lw16i(REG5,0x23)
0x1CB01502,	//0x075e		VoC_sw16_d(REG2,0x1cb0)
0x1CB11503,	//0x0760		VoC_sw16_d(REG3,0x1cb1)
0x1CB21504,	//0x0762		VoC_sw16_d(REG4,0x1cb2)
0x1CB31505,	//0x0764		VoC_sw16_d(REG5,0x1cb3)
0x00300A82,	//0x0766		VoC_lw16i(REG2,0x30)
0x00310A83,	//0x0768		VoC_lw16i(REG3,0x31)
0x00320A84,	//0x076a		VoC_lw16i(REG4,0x32)
0x00330A85,	//0x076c		VoC_lw16i(REG5,0x33)
0x1CB41502,	//0x076e		VoC_sw16_d(REG2,0x1cb4)
0x1CB51503,	//0x0770		VoC_sw16_d(REG3,0x1cb5)
0x1CB61504,	//0x0772		VoC_sw16_d(REG4,0x1cb6)
0x1CB71505,	//0x0774		VoC_sw16_d(REG5,0x1cb7)
0x18F40A81,	//0x0776		VoC_lw16i(REG1,0x18f4)
0x5D6C070A,	//0x0778		VoC_add16_rd(REG2,REG1,0x5d6c)
0x5D6D0713,	//0x077a		VoC_add16_rd(REG3,REG2,0x5d6d)
0x5D6D071C,	//0x077c		VoC_add16_rd(REG4,REG3,0x5d6d)
0x623E0A81,	//0x077e		VoC_lw16i(REG1,0x623e)
0xF0055822,	//0x0780		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xD844D833,	//0x0782		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xDC93DC92,	//0x0784		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0x0A81DC94,	//0x0786		VoC_lw16i(REG1,0x190c)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x070A190C,	//0x0788		VoC_add16_rd(REG2,REG1,0x5d6c)(lo)	|	VoC_lw16i(REG1,0x190c)(hi)
0x07135D6C,	//0x078a		VoC_add16_rd(REG3,REG2,0x5d6d)(lo)	|	VoC_add16_rd(REG2,REG1,0x5d6c)(hi)
0x071C5D6D,	//0x078c		VoC_add16_rd(REG4,REG3,0x5d6d)(lo)	|	VoC_add16_rd(REG3,REG2,0x5d6d)(hi)
0x0A815D6D,	//0x078e		VoC_lw16i(REG1,0x6241)(lo)	|	VoC_add16_rd(REG4,REG3,0x5d6d)(hi)
0x58226241,	//0x0790		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_lw16i(REG1,0x6241)(hi)
0xD833F005,	//0x0792		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDC92D844,	//0x0794		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xDC94DC93,	//0x0796		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0x18F40A85,	//0x0798		VoC_lw16i(REG5,0x18f4)
0x190C0A86,	//0x079a		VoC_lw16i(REG6,0x190c)
0x62461505,	//0x079c		VoC_sw16_d(REG5,0x6246)
0x62471506,	//0x079e		VoC_sw16_d(REG6,0x6247)
0xE0457084,	//0x07a0		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x0CE21483,	//0x07a2		VoC_lw32_d(REG67,0xce2)
0x0CBA1402,	//0x07a4		VoC_lw16_d(REG2,0xcba)
0x0CBB1403,	//0x07a6		VoC_lw16_d(REG3,0xcbb)
0x17EA1502,	//0x07a8		VoC_sw16_d(REG2,0x17ea)
0x17EB1503,	//0x07aa		VoC_sw16_d(REG3,0x17eb)
0x1C841403,	//0x07ac		VoC_lw16_d(REG3,0x1c84)
0x190C0A80,	//0x07ae		VoC_lw16i(REG0,0x190c)
0x1C891401,	//0x07b0		VoC_lw16_d(REG1,0x1c89)
0x62441503,	//0x07b2		VoC_sw16_d(REG3,0x6244)
0x623E0A82,	//0x07b4		VoC_lw16i(REG2,0x623e)
0x62410A83,	//0x07b6		VoC_lw16i(REG3,0x6241)
		//0x07b8		RMVB_IntraPred_4x4_CaCu_100
0x5F43DF42,	//0x07b8		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x5F41DFC1,	//0x07ba		VoC_push32(REG23,DEFAULT)	|	VoC_push16(REG1,IN_PARALLEL)
0x1401D812,	//0x07bc		VoC_lw16_d(REG1,0x6246)(lo)	|	VoC_lw16_p(REG2,REG1,IN_PARALLEL)
0xF0836246,	//0x07be		VoC_lw16i_short(REG3,0x4,DEFAULT)	|	VoC_lw16_d(REG1,0x6246)(hi)
0xC2ED42E4,	//0x07c0		VoC_sub16_rr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)
0xF8F578D4,	//0x07c2		VoC_shr16_ri(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffa,DEFAULT)
0xF8F5412F,	//0x07c4		VoC_shr16_ri(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG4,REG5,DEFAULT)
0x0A84C12E,	//0x07c6		VoC_lw16i(REG4,0x5dee)(lo)	|	VoC_add16_rr(REG6,REG4,REG5,DEFAULT)
0x14055DEE,	//0x07c8		VoC_lw16_d(REG5,0x1c88)(lo)	|	VoC_lw16i(REG4,0x5dee)(hi)
0x41E71C88,	//0x07ca		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16_d(REG5,0x1c88)(hi)
0x7187C1AE,	//0x07cc		VoC_lw16i_short(REG7,0xc,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)
0xDF43F6E3,	//0x07ce		VoC_push32(REG67,DEFAULT)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0x0FC72B80,	//0x07d0		VoC_jal(CII_RMVB_IntraPred_4x4_FUNC)
0xD913DF00,	//0x07d2		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0x5D802983,	//0x07d4		VoC_and32_rd(REG67,0x5d80)
0xF0057030,	//0x07d6		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07E03303,	//0x07d8		VoC_bez32_r(RMVB_IntraPred_4x4_CaCu_101,REG67)
0xFFC07184,	//0x07da		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xc,DEFAULT)
0x0F662B80,	//0x07dc		VoC_jal(CII_RMVB_RECON_4x4_ADD)
0x080A2B00,	//0x07de		VoC_jump_lg(RMVB_IntraPred_4x4_CaCu_102)
		//0x07e0		RMVB_IntraPred_4x4_CaCu_101
0xFFC0D804,	//0x07e0		VoC_NOP	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0x07EA3184,	//0x07e2		VoC_bez16_r(RMVB_IntraPred_4x4_CaCu_1010,REG4)
0xFFC07184,	//0x07e4		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xc,DEFAULT)
0x0F962B80,	//0x07e6		VoC_jal(CII_RMVB_RECON_4x4_DC)
0x080A2B00,	//0x07e8		VoC_jump_lg(RMVB_IntraPred_4x4_CaCu_102)
		//0x07ea		RMVB_IntraPred_4x4_CaCu_1010
0x17EC1806,	//0x07ea		VoC_lw16i_set_inc(REG2,0x17ec,0x1)
0x62461400,	//0x07ec		VoC_lw16_d(REG0,0x6246)
0x5D6C070B,	//0x07ee		VoC_add16_rd(REG3,REG1,0x5d6c)
0x5D79071C,	//0x07f0		VoC_add16_rd(REG4,REG3,0x5d79)
0x5D790725,	//0x07f2		VoC_add16_rd(REG5,REG4,0x5d79)
0x5D760729,	//0x07f4		VoC_add16_rd(REG1,REG5,0x5d76)
0xD844D833,	//0x07f6		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xDCA35855,	//0x07f8		VoC_sw16inc_p(REG3,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xDCA45896,	//0x07fa		VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xDCA55893,	//0x07fc		VoC_sw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0xDC865894,	//0x07fe		VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xDC835897,	//0x0800		VoC_sw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xDC87DC84,	//0x0802		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xF6015CA7,	//0x0804		VoC_movreg16(REG1,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0xDCA7DCA7,	//0x0806		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0xDCA7DCA7,	//0x0808		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
		//0x080a		RMVB_IntraPred_4x4_CaCu_102
0xF084D91A,	//0x080a		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_lw32_sd(REG45,0x2,DEFAULT)
0x5D6A4435,	//0x080c		VoC_bne16_rd(RMVB_IntraPred_4x4_CaCu_103,REG5,0x5d6a)
0xDC97DC97,	//0x080e		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xDC97DC97,	//0x0810		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x0812		RMVB_IntraPred_4x4_CaCu_103
0x1405F002,	//0x0812		VoC_lw16_d(REG5,0x6246)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x15026246,	//0x0814		VoC_sw16_d(REG2,0x17eb)(lo)	|	VoC_lw16_d(REG5,0x6246)(hi)
0x5F0117EB,	//0x0816		VoC_pop32(REG23,DEFAULT)	|	VoC_sw16_d(REG2,0x17eb)(hi)
0x5F03C165,	//0x0818		VoC_pop32(REG67,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0x1505DF81,	//0x081a		VoC_sw16_d(REG5,0x6246)(lo)	|	VoC_pop16(REG1,IN_PARALLEL)
0x70246246,	//0x081c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sw16_d(REG5,0x6246)(hi)
0x4061FC0B,	//0x081e		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_shru32_ri(REG67,0x1,IN_PARALLEL)
0x40A2D820,	//0x0820		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16_p(REG0,REG2,IN_PARALLEL)
0x1500DF02,	//0x0822		VoC_sw16_d(REG0,0x6244)(lo)	|	VoC_pop32(REG45,IN_PARALLEL)
0x07AD6244,	//0x0824		VoC_sub16_rd(REG5,REG5,0x5d6a)(lo)	|	VoC_sw16_d(REG0,0x6244)(hi)
0x0A805D6A,	//0x0826		VoC_lw16i(REG0,0x17ec)(lo)	|	VoC_sub16_rd(REG5,REG5,0x5d6a)(hi)
0x31C517EC,	//0x0828		VoC_bnez16_r(RMVB_IntraPred_4x4_CaCu_100,REG5)(lo)	|	VoC_lw16i(REG0,0x17ec)(hi)
0xF00007B8,	//0x082a		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bnez16_r(RMVB_IntraPred_4x4_CaCu_100,REG5)(hi)
0x0CBB1402,	//0x082c		VoC_lw16_d(REG2,0xcbb)
0x17EA1500,	//0x082e		VoC_sw16_d(REG0,0x17ea)
0x17EB1502,	//0x0830		VoC_sw16_d(REG2,0x17eb)
0x18F40A80,	//0x0832		VoC_lw16i(REG0,0x18f4)
0x5D6C0700,	//0x0834		VoC_add16_rd(REG0,REG0,0x5d6c)
0x5D6D0702,	//0x0836		VoC_add16_rd(REG2,REG0,0x5d6d)
0x5D6D0715,	//0x0838		VoC_add16_rd(REG5,REG2,0x5d6d)
0xF0065800,	//0x083a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xE04CD822,	//0x083c		VoC_movreg16(RL6_LO,REG2,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x623E0A82,	//0x083e		VoC_lw16i(REG2,0x623e)
0xF7805855,	//0x0840		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xDCA0DCA0,	//0x0842		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
0x1405DCA5,	//0x0844		VoC_lw16_d(REG5,0x6247)(lo)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x072D6247,	//0x0846		VoC_add16_rd(REG5,REG5,0x5d6d)(lo)	|	VoC_lw16_d(REG5,0x6247)(hi)
0xE0A05D6D,	//0x0848		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x5d6d)(hi)
0x62471505,	//0x084a		VoC_sw16_d(REG5,0x6247)
0x071BD835,	//0x084c		VoC_add16_rd(REG3,REG3,0x5d6a)(lo)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0x15055D6A,	//0x084e		VoC_sw16_d(REG5,0x6244)(lo)	|	VoC_add16_rd(REG3,REG3,0x5d6a)(hi)
0x0A856244,	//0x0850		VoC_lw16i(REG5,0x18f4)(lo)	|	VoC_sw16_d(REG5,0x6244)(hi)
0x07A418F4,	//0x0852		VoC_sub16_rd(REG4,REG4,0x5d6a)(lo)	|	VoC_lw16i(REG5,0x18f4)(hi)
0x0A825D6A,	//0x0854		VoC_lw16i(REG2,0x623e)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5d6a)(hi)
0x1505623E,	//0x0856		VoC_sw16_d(REG5,0x6246)(lo)	|	VoC_lw16i(REG2,0x623e)(hi)
0xF0856246,	//0x0858		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_sw16_d(REG5,0x6246)(hi)
0x07B831C4,	//0x085a		VoC_bnez16_r(RMVB_IntraPred_4x4_CaCu_100,REG4)
0xE0937102,	//0x085c		VoC_lw16i_short(REG3,0x9,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xE0B57144,	//0x085e		VoC_lw16i_short(REG5,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x1CAC1502,	//0x0860		VoC_sw16_d(REG2,0x1cac)
0x1CAD1503,	//0x0862		VoC_sw16_d(REG3,0x1cad)
0x1CAE1504,	//0x0864		VoC_sw16_d(REG4,0x1cae)
0x1CAF1505,	//0x0866		VoC_sw16_d(REG5,0x1caf)
0xE1137202,	//0x0868		VoC_lw16i_short(REG3,0x11,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xE1357244,	//0x086a		VoC_lw16i_short(REG5,0x13,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x12,DEFAULT)
0x1CB01502,	//0x086c		VoC_sw16_d(REG2,0x1cb0)
0x1CB11503,	//0x086e		VoC_sw16_d(REG3,0x1cb1)
0x1CB21504,	//0x0870		VoC_sw16_d(REG4,0x1cb2)
0x1CB31505,	//0x0872		VoC_sw16_d(REG5,0x1cb3)
0xE1937302,	//0x0874		VoC_lw16i_short(REG3,0x19,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x18,DEFAULT)
0xE1B57344,	//0x0876		VoC_lw16i_short(REG5,0x1b,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1a,DEFAULT)
0x1CB41502,	//0x0878		VoC_sw16_d(REG2,0x1cb4)
0x1CB51503,	//0x087a		VoC_sw16_d(REG3,0x1cb5)
0x1CB61504,	//0x087c		VoC_sw16_d(REG4,0x1cb6)
0x1CB71505,	//0x087e		VoC_sw16_d(REG5,0x1cb7)
0x1C851403,	//0x0880		VoC_lw16_d(REG3,0x1c85)
0x19240A84,	//0x0882		VoC_lw16i(REG4,0x1924)
0x19340A85,	//0x0884		VoC_lw16i(REG5,0x1934)
0x62441503,	//0x0886		VoC_sw16_d(REG3,0x6244)
0x1C8A1504,	//0x0888		VoC_sw16_d(REG4,0x1c8a)
0x1C8B1505,	//0x088a		VoC_sw16_d(REG5,0x1c8b)
0x5EEE0A84,	//0x088c		VoC_lw16i(REG4,0x5eee)
0x1C881405,	//0x088e		VoC_lw16_d(REG5,0x1c88)
0x0CE21483,	//0x0890		VoC_lw32_d(REG67,0xce2)
0x5D7E072D,	//0x0892		VoC_add16_rd(REG5,REG5,0x5d7e)
0x1504FC83,	//0x0894		VoC_sw16_d(REG4,0x1c8d)(lo)	|	VoC_shru32_ri(REG67,0x10,DEFAULT)
0x15051C8D,	//0x0896		VoC_sw16_d(REG5,0x1c8c)(lo)	|	VoC_sw16_d(REG4,0x1c8d)(hi)
0x15061C8C,	//0x0898		VoC_sw16_d(REG6,0x1c91)(lo)	|	VoC_sw16_d(REG5,0x1c8c)(hi)
0xFFC01C91,	//0x089a		VoC_NAD	|	VoC_sw16_d(REG6,0x1c91)(hi)
0x0D2E2B80,	//0x089c		VoC_jal(CII_RMVB_CIntraPred_4x4_FUNC)
0x1C861403,	//0x089e		VoC_lw16_d(REG3,0x1c86)
0x19440A84,	//0x08a0		VoC_lw16i(REG4,0x1944)
0x19540A85,	//0x08a2		VoC_lw16i(REG5,0x1954)
0x62441503,	//0x08a4		VoC_sw16_d(REG3,0x6244)
0x1C8A1504,	//0x08a6		VoC_sw16_d(REG4,0x1c8a)
0x1C8B1505,	//0x08a8		VoC_sw16_d(REG5,0x1c8b)
0x5F2E0A84,	//0x08aa		VoC_lw16i(REG4,0x5f2e)
0x1C881405,	//0x08ac		VoC_lw16_d(REG5,0x1c88)
0x0CE21483,	//0x08ae		VoC_lw32_d(REG67,0xce2)
0x5D7E072D,	//0x08b0		VoC_add16_rd(REG5,REG5,0x5d7e)
0x5D7D072D,	//0x08b2		VoC_add16_rd(REG5,REG5,0x5d7d)
0x1504FCA3,	//0x08b4		VoC_sw16_d(REG4,0x1c8d)(lo)	|	VoC_shru32_ri(REG67,0x14,DEFAULT)
0x15051C8D,	//0x08b6		VoC_sw16_d(REG5,0x1c8c)(lo)	|	VoC_sw16_d(REG4,0x1c8d)(hi)
0x15061C8C,	//0x08b8		VoC_sw16_d(REG6,0x1c91)(lo)	|	VoC_sw16_d(REG5,0x1c8c)(hi)
0x2B801C91,	//0x08ba		VoC_jal(CII_RMVB_CIntraPred_4x4_FUNC)(lo)	|	VoC_sw16_d(REG6,0x1c91)(hi)
0xDFA90D2E,	//0x08bc		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CIntraPred_4x4_FUNC)(hi)
0xE580FFC0,	//0x08be		VoC_return	|	VoC_NOP
		//0x08c0		RMVB_MBMC_101
0x0CC21401,	//0x08c0		VoC_lw16_d(REG1,0xcc2)
0x0CC31402,	//0x08c2		VoC_lw16_d(REG2,0xcc3)
0xFFC0E451,	//0x08c4		VoC_NOP	|	VoC_or16_rr(REG1,REG2,DEFAULT)
0x0A483181,	//0x08c6		VoC_bez16_r(RMVB_MBMC_103,REG1)
0x0E941484,	//0x08c8		VoC_lw32_d(ACC0,0xe94)
0x07650A80,	//0x08ca		VoC_lw16i(REG0,0x765)
0x0E841404,	//0x08cc		VoC_lw16_d(REG4,0xe84)
0x0E851405,	//0x08ce		VoC_lw16_d(REG5,0xe85)
0x0CB62B80,	//0x08d0		VoC_jal(CII_RMVB_Inter16_Y_DMA_FUNC)
0x0ECA0A80,	//0x08d2		VoC_lw16i(REG0,0xeca)
0x5DEE0A81,	//0x08d4		VoC_lw16i(REG1,0x5dee)
0x0E941482,	//0x08d6		VoC_lw32_d(REG45,0xe94)
0xE0337202,	//0x08d8		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xC020E41C,	//0x08da		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E841404,	//0x08dc		VoC_lw16_d(REG4,0xe84)
0x0E851405,	//0x08de		VoC_lw16_d(REG5,0xe85)
0x130A2B80,	//0x08e0		VoC_jal(CII_RMVB_InterPred_FUNC)
0x0E9C1484,	//0x08e2		VoC_lw32_d(ACC0,0xe9c)
0x09050A80,	//0x08e4		VoC_lw16i(REG0,0x905)
0x0D122B80,	//0x08e6		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0E9E1484,	//0x08e8		VoC_lw32_d(ACC0,0xe9e)
0x09190A80,	//0x08ea		VoC_lw16i(REG0,0x919)
0x0D122B80,	//0x08ec		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA01484,	//0x08ee		VoC_lw32_d(ACC0,0xea0)
0x092D0A80,	//0x08f0		VoC_lw16i(REG0,0x92d)
0x0D122B80,	//0x08f2		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA21484,	//0x08f4		VoC_lw32_d(ACC0,0xea2)
0x09410A80,	//0x08f6		VoC_lw16i(REG0,0x941)
0x0D122B80,	//0x08f8		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA41484,	//0x08fa		VoC_lw32_d(ACC0,0xea4)
0x09550A80,	//0x08fc		VoC_lw16i(REG0,0x955)
0x0D122B80,	//0x08fe		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA61484,	//0x0900		VoC_lw32_d(ACC0,0xea6)
0x09690A80,	//0x0902		VoC_lw16i(REG0,0x969)
0x0D122B80,	//0x0904		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA81484,	//0x0906		VoC_lw32_d(ACC0,0xea8)
0x097D0A80,	//0x0908		VoC_lw16i(REG0,0x97d)
0x0D122B80,	//0x090a		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EAA1484,	//0x090c		VoC_lw32_d(ACC0,0xeaa)
0x09910A80,	//0x090e		VoC_lw16i(REG0,0x991)
0x0D122B80,	//0x0910		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0E841404,	//0x0912		VoC_lw16_d(REG4,0xe84)
0x0E851405,	//0x0914		VoC_lw16_d(REG5,0xe85)
0x091A3244,	//0x0916		VoC_bnltz16_r(RMVB_MBMC_101_MV0X,REG4)
0x5D6A0724,	//0x0918		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x091a		RMVB_MBMC_101_MV0X
0x091E3245,	//0x091a		VoC_bnltz16_r(RMVB_MBMC_101_MV0Y,REG5)
0x5D6A072D,	//0x091c		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x091e		RMVB_MBMC_101_MV0Y
0xF80D780C,	//0x091e		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x120A0A80,	//0x0920		VoC_lw16i(REG0,0x120a)
0x5EEE0A81,	//0x0922		VoC_lw16i(REG1,0x5eee)
0x1481DF42,	//0x0924		VoC_lw32_d(REG23,0xe9c)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630E9C,	//0x0926		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xe9c)(hi)
0xC010E41A,	//0x0928		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x092a		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x12320A80,	//0x092c		VoC_lw16i(REG0,0x1232)
0x5EF20A81,	//0x092e		VoC_lw16i(REG1,0x5ef2)
0x1481D90A,	//0x0930		VoC_lw32_d(REG23,0xe9e)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630E9E,	//0x0932		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xe9e)(hi)
0xC010E41A,	//0x0934		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0936		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x125A0A80,	//0x0938		VoC_lw16i(REG0,0x125a)
0x5F0E0A81,	//0x093a		VoC_lw16i(REG1,0x5f0e)
0x1481D90A,	//0x093c		VoC_lw32_d(REG23,0xea0)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EA0,	//0x093e		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea0)(hi)
0xC010E41A,	//0x0940		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0942		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x12820A80,	//0x0944		VoC_lw16i(REG0,0x1282)
0x5F120A81,	//0x0946		VoC_lw16i(REG1,0x5f12)
0x1481D90A,	//0x0948		VoC_lw32_d(REG23,0xea2)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EA2,	//0x094a		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea2)(hi)
0xC010E41A,	//0x094c		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x094e		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x12AA0A80,	//0x0950		VoC_lw16i(REG0,0x12aa)
0x5F2E0A81,	//0x0952		VoC_lw16i(REG1,0x5f2e)
0x1481D90A,	//0x0954		VoC_lw32_d(REG23,0xea4)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EA4,	//0x0956		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea4)(hi)
0xC010E41A,	//0x0958		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x095a		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x12D20A80,	//0x095c		VoC_lw16i(REG0,0x12d2)
0x5F320A81,	//0x095e		VoC_lw16i(REG1,0x5f32)
0x1481D90A,	//0x0960		VoC_lw32_d(REG23,0xea6)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EA6,	//0x0962		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea6)(hi)
0xC010E41A,	//0x0964		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0966		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x12FA0A80,	//0x0968		VoC_lw16i(REG0,0x12fa)
0x5F4E0A81,	//0x096a		VoC_lw16i(REG1,0x5f4e)
0x1481D90A,	//0x096c		VoC_lw32_d(REG23,0xea8)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EA8,	//0x096e		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea8)(hi)
0xC010E41A,	//0x0970		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0972		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x13220A80,	//0x0974		VoC_lw16i(REG0,0x1322)
0x5F520A81,	//0x0976		VoC_lw16i(REG1,0x5f52)
0x1481D90A,	//0x0978		VoC_lw32_d(REG23,0xeaa)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EAA,	//0x097a		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeaa)(hi)
0xC010E41A,	//0x097c		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x097e		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x0CBE1400,	//0x0980		VoC_lw16_d(REG0,0xcbe)
0x3180DF02,	//0x0982		VoC_bez16_r(RMVB_MBMC_101_END,REG0)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x14840A42,	//0x0984		VoC_lw32_d(ACC0,0xeac)(lo)	|	VoC_bez16_r(RMVB_MBMC_101_END,REG0)(hi)
0x0A800EAC,	//0x0986		VoC_lw16i(REG0,0x9a5)(lo)	|	VoC_lw32_d(ACC0,0xeac)(hi)
0x140409A5,	//0x0988		VoC_lw16_d(REG4,0xe8c)(lo)	|	VoC_lw16i(REG0,0x9a5)(hi)
0x14050E8C,	//0x098a		VoC_lw16_d(REG5,0xe8d)(lo)	|	VoC_lw16_d(REG4,0xe8c)(hi)
0xFFC00E8D,	//0x098c		VoC_NAD	|	VoC_lw16_d(REG5,0xe8d)(hi)
0x0CB62B80,	//0x098e		VoC_jal(CII_RMVB_Inter16_Y_DMA_FUNC)
0x134A0A80,	//0x0990		VoC_lw16i(REG0,0x134a)
0x5F6E0A81,	//0x0992		VoC_lw16i(REG1,0x5f6e)
0x0EAC1482,	//0x0994		VoC_lw32_d(REG45,0xeac)
0xE0337202,	//0x0996		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xC020E41C,	//0x0998		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E8C1404,	//0x099a		VoC_lw16_d(REG4,0xe8c)
0x0E8D1405,	//0x099c		VoC_lw16_d(REG5,0xe8d)
0x130A2B80,	//0x099e		VoC_jal(CII_RMVB_InterPred_FUNC)
0x0EB41484,	//0x09a0		VoC_lw32_d(ACC0,0xeb4)
0x0B450A80,	//0x09a2		VoC_lw16i(REG0,0xb45)
0x0D122B80,	//0x09a4		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EB61484,	//0x09a6		VoC_lw32_d(ACC0,0xeb6)
0x0B590A80,	//0x09a8		VoC_lw16i(REG0,0xb59)
0x0D122B80,	//0x09aa		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EB81484,	//0x09ac		VoC_lw32_d(ACC0,0xeb8)
0x0B6D0A80,	//0x09ae		VoC_lw16i(REG0,0xb6d)
0x0D122B80,	//0x09b0		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EBA1484,	//0x09b2		VoC_lw32_d(ACC0,0xeba)
0x0B810A80,	//0x09b4		VoC_lw16i(REG0,0xb81)
0x0D122B80,	//0x09b6		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EBC1484,	//0x09b8		VoC_lw32_d(ACC0,0xebc)
0x0B950A80,	//0x09ba		VoC_lw16i(REG0,0xb95)
0x0D122B80,	//0x09bc		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EBE1484,	//0x09be		VoC_lw32_d(ACC0,0xebe)
0x0BA90A80,	//0x09c0		VoC_lw16i(REG0,0xba9)
0x0D122B80,	//0x09c2		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EC01484,	//0x09c4		VoC_lw32_d(ACC0,0xec0)
0x0BBD0A80,	//0x09c6		VoC_lw16i(REG0,0xbbd)
0x0D122B80,	//0x09c8		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EC21484,	//0x09ca		VoC_lw32_d(ACC0,0xec2)
0x0BD10A80,	//0x09cc		VoC_lw16i(REG0,0xbd1)
0x0D122B80,	//0x09ce		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0E8C1404,	//0x09d0		VoC_lw16_d(REG4,0xe8c)
0x0E8D1405,	//0x09d2		VoC_lw16_d(REG5,0xe8d)
0x09D83244,	//0x09d4		VoC_bnltz16_r(RMVB_MBMC_101_MV1X,REG4)
0x5D6A0724,	//0x09d6		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x09d8		RMVB_MBMC_101_MV1X
0x09DC3245,	//0x09d8		VoC_bnltz16_r(RMVB_MBMC_101_MV1Y,REG5)
0x5D6A072D,	//0x09da		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x09dc		RMVB_MBMC_101_MV1Y
0xF80D780C,	//0x09dc		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x168A0A80,	//0x09de		VoC_lw16i(REG0,0x168a)
0x606E0A81,	//0x09e0		VoC_lw16i(REG1,0x606e)
0x1481DF42,	//0x09e2		VoC_lw32_d(REG23,0xeb4)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630EB4,	//0x09e4		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeb4)(hi)
0xC010E41A,	//0x09e6		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x09e8		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x16B20A80,	//0x09ea		VoC_lw16i(REG0,0x16b2)
0x60720A81,	//0x09ec		VoC_lw16i(REG1,0x6072)
0x1481D90A,	//0x09ee		VoC_lw32_d(REG23,0xeb6)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EB6,	//0x09f0		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeb6)(hi)
0xC010E41A,	//0x09f2		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x09f4		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x16DA0A80,	//0x09f6		VoC_lw16i(REG0,0x16da)
0x608E0A81,	//0x09f8		VoC_lw16i(REG1,0x608e)
0x1481D90A,	//0x09fa		VoC_lw32_d(REG23,0xeb8)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EB8,	//0x09fc		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeb8)(hi)
0xC010E41A,	//0x09fe		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0a00		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x17020A80,	//0x0a02		VoC_lw16i(REG0,0x1702)
0x60920A81,	//0x0a04		VoC_lw16i(REG1,0x6092)
0x1481D90A,	//0x0a06		VoC_lw32_d(REG23,0xeba)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EBA,	//0x0a08		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeba)(hi)
0xC010E41A,	//0x0a0a		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0a0c		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x172A0A80,	//0x0a0e		VoC_lw16i(REG0,0x172a)
0x60AE0A81,	//0x0a10		VoC_lw16i(REG1,0x60ae)
0x1481D90A,	//0x0a12		VoC_lw32_d(REG23,0xebc)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EBC,	//0x0a14		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xebc)(hi)
0xC010E41A,	//0x0a16		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0a18		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x17520A80,	//0x0a1a		VoC_lw16i(REG0,0x1752)
0x60B20A81,	//0x0a1c		VoC_lw16i(REG1,0x60b2)
0x1481D90A,	//0x0a1e		VoC_lw32_d(REG23,0xebe)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EBE,	//0x0a20		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xebe)(hi)
0xC010E41A,	//0x0a22		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0a24		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x177A0A80,	//0x0a26		VoC_lw16i(REG0,0x177a)
0x60CE0A81,	//0x0a28		VoC_lw16i(REG1,0x60ce)
0x1481D90A,	//0x0a2a		VoC_lw32_d(REG23,0xec0)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EC0,	//0x0a2c		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xec0)(hi)
0xC010E41A,	//0x0a2e		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0a30		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x17A20A80,	//0x0a32		VoC_lw16i(REG0,0x17a2)
0x60D20A81,	//0x0a34		VoC_lw16i(REG1,0x60d2)
0x1481D90A,	//0x0a36		VoC_lw32_d(REG23,0xec2)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF0630EC2,	//0x0a38		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xec2)(hi)
0xC010E41A,	//0x0a3a		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0a3c		VoC_jal(CII_RMVB_CInterPred_FUNC)
0xFFC05F02,	//0x0a3e		VoC_NAD(IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0x0E602B80,	//0x0a40		VoC_jal(CII_RMVB_PRED_AVG)
		//0x0a42		RMVB_MBMC_101_END
0x0EC02B80,	//0x0a42		VoC_jal(CII_RMVB_RECON_16x16)
0xFFC0DFA9,	//0x0a44		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0a46		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0a48		RMVB_MBMC_103
0x0E941484,	//0x0a48		VoC_lw32_d(ACC0,0xe94)
0x07650A80,	//0x0a4a		VoC_lw16i(REG0,0x765)
0x0E841404,	//0x0a4c		VoC_lw16_d(REG4,0xe84)
0x0E851405,	//0x0a4e		VoC_lw16_d(REG5,0xe85)
0x0CE42B80,	//0x0a50		VoC_jal(CII_RMVB_Inter8_Y_DMA_FUNC)
0x0E961484,	//0x0a52		VoC_lw32_d(ACC0,0xe96)
0x07CD0A80,	//0x0a54		VoC_lw16i(REG0,0x7cd)
0x0E861404,	//0x0a56		VoC_lw16_d(REG4,0xe86)
0x0E871405,	//0x0a58		VoC_lw16_d(REG5,0xe87)
0x0CE42B80,	//0x0a5a		VoC_jal(CII_RMVB_Inter8_Y_DMA_FUNC)
0x0E981484,	//0x0a5c		VoC_lw32_d(ACC0,0xe98)
0x08350A80,	//0x0a5e		VoC_lw16i(REG0,0x835)
0x0E881404,	//0x0a60		VoC_lw16_d(REG4,0xe88)
0x0E891405,	//0x0a62		VoC_lw16_d(REG5,0xe89)
0x0CE42B80,	//0x0a64		VoC_jal(CII_RMVB_Inter8_Y_DMA_FUNC)
0x0E9A1484,	//0x0a66		VoC_lw32_d(ACC0,0xe9a)
0x089D0A80,	//0x0a68		VoC_lw16i(REG0,0x89d)
0x0E8A1404,	//0x0a6a		VoC_lw16_d(REG4,0xe8a)
0x0E8B1405,	//0x0a6c		VoC_lw16_d(REG5,0xe8b)
0x0CE42B80,	//0x0a6e		VoC_jal(CII_RMVB_Inter8_Y_DMA_FUNC)
0x0ECA0A80,	//0x0a70		VoC_lw16i(REG0,0xeca)
0x5DEE0A81,	//0x0a72		VoC_lw16i(REG1,0x5dee)
0x0E941482,	//0x0a74		VoC_lw32_d(REG45,0xe94)
0xE0337102,	//0x0a76		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xC020E41C,	//0x0a78		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E841404,	//0x0a7a		VoC_lw16_d(REG4,0xe84)
0x0E851405,	//0x0a7c		VoC_lw16_d(REG5,0xe85)
0x130A2B80,	//0x0a7e		VoC_jal(CII_RMVB_InterPred_FUNC)
0x0F9A0A80,	//0x0a80		VoC_lw16i(REG0,0xf9a)
0x5DF60A81,	//0x0a82		VoC_lw16i(REG1,0x5df6)
0x0E961482,	//0x0a84		VoC_lw32_d(REG45,0xe96)
0xE0337102,	//0x0a86		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xC020E41C,	//0x0a88		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E861404,	//0x0a8a		VoC_lw16_d(REG4,0xe86)
0x0E871405,	//0x0a8c		VoC_lw16_d(REG5,0xe87)
0x130A2B80,	//0x0a8e		VoC_jal(CII_RMVB_InterPred_FUNC)
0x106A0A80,	//0x0a90		VoC_lw16i(REG0,0x106a)
0x5E6E0A81,	//0x0a92		VoC_lw16i(REG1,0x5e6e)
0x0E981482,	//0x0a94		VoC_lw32_d(REG45,0xe98)
0xE0337102,	//0x0a96		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xC020E41C,	//0x0a98		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E881404,	//0x0a9a		VoC_lw16_d(REG4,0xe88)
0x0E891405,	//0x0a9c		VoC_lw16_d(REG5,0xe89)
0x130A2B80,	//0x0a9e		VoC_jal(CII_RMVB_InterPred_FUNC)
0x113A0A80,	//0x0aa0		VoC_lw16i(REG0,0x113a)
0x5E760A81,	//0x0aa2		VoC_lw16i(REG1,0x5e76)
0x0E9A1482,	//0x0aa4		VoC_lw32_d(REG45,0xe9a)
0xE0337102,	//0x0aa6		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xC020E41C,	//0x0aa8		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E8A1404,	//0x0aaa		VoC_lw16_d(REG4,0xe8a)
0x0E8B1405,	//0x0aac		VoC_lw16_d(REG5,0xe8b)
0x130A2B80,	//0x0aae		VoC_jal(CII_RMVB_InterPred_FUNC)
0x0E9C1484,	//0x0ab0		VoC_lw32_d(ACC0,0xe9c)
0x09050A80,	//0x0ab2		VoC_lw16i(REG0,0x905)
0x0D122B80,	//0x0ab4		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0E9E1484,	//0x0ab6		VoC_lw32_d(ACC0,0xe9e)
0x09190A80,	//0x0ab8		VoC_lw16i(REG0,0x919)
0x0D122B80,	//0x0aba		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA01484,	//0x0abc		VoC_lw32_d(ACC0,0xea0)
0x092D0A80,	//0x0abe		VoC_lw16i(REG0,0x92d)
0x0D122B80,	//0x0ac0		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA21484,	//0x0ac2		VoC_lw32_d(ACC0,0xea2)
0x09410A80,	//0x0ac4		VoC_lw16i(REG0,0x941)
0x0D122B80,	//0x0ac6		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA41484,	//0x0ac8		VoC_lw32_d(ACC0,0xea4)
0x09550A80,	//0x0aca		VoC_lw16i(REG0,0x955)
0x0D122B80,	//0x0acc		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA61484,	//0x0ace		VoC_lw32_d(ACC0,0xea6)
0x09690A80,	//0x0ad0		VoC_lw16i(REG0,0x969)
0x0D122B80,	//0x0ad2		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EA81484,	//0x0ad4		VoC_lw32_d(ACC0,0xea8)
0x097D0A80,	//0x0ad6		VoC_lw16i(REG0,0x97d)
0x0D122B80,	//0x0ad8		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EAA1484,	//0x0ada		VoC_lw32_d(ACC0,0xeaa)
0x09910A80,	//0x0adc		VoC_lw16i(REG0,0x991)
0x0D122B80,	//0x0ade		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0E841404,	//0x0ae0		VoC_lw16_d(REG4,0xe84)
0x0E851405,	//0x0ae2		VoC_lw16_d(REG5,0xe85)
0x0AE83244,	//0x0ae4		VoC_bnltz16_r(RMVB_MBMC_103_MV0X,REG4)
0x5D6A0724,	//0x0ae6		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x0ae8		RMVB_MBMC_103_MV0X
0x0AEC3245,	//0x0ae8		VoC_bnltz16_r(RMVB_MBMC_103_MV0Y,REG5)
0x5D6A072D,	//0x0aea		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x0aec		RMVB_MBMC_103_MV0Y
0xF80D780C,	//0x0aec		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x120A0A80,	//0x0aee		VoC_lw16i(REG0,0x120a)
0x5EEE0A81,	//0x0af0		VoC_lw16i(REG1,0x5eee)
0x1481DF42,	//0x0af2		VoC_lw32_d(REG23,0xe9c)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630E9C,	//0x0af4		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xe9c)(hi)
0xC010E41A,	//0x0af6		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0af8		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x12AA0A80,	//0x0afa		VoC_lw16i(REG0,0x12aa)
0x5F2E0A81,	//0x0afc		VoC_lw16i(REG1,0x5f2e)
0x1481DF02,	//0x0afe		VoC_lw32_d(REG23,0xea4)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0630EA4,	//0x0b00		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea4)(hi)
0xC010E41A,	//0x0b02		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0b04		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x0E861404,	//0x0b06		VoC_lw16_d(REG4,0xe86)
0x0E871405,	//0x0b08		VoC_lw16_d(REG5,0xe87)
0x0B0E3244,	//0x0b0a		VoC_bnltz16_r(RMVB_MBMC_103_MV1X,REG4)
0x5D6A0724,	//0x0b0c		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x0b0e		RMVB_MBMC_103_MV1X
0x0B123245,	//0x0b0e		VoC_bnltz16_r(RMVB_MBMC_103_MV1Y,REG5)
0x5D6A072D,	//0x0b10		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x0b12		RMVB_MBMC_103_MV1Y
0xF80D780C,	//0x0b12		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x12320A80,	//0x0b14		VoC_lw16i(REG0,0x1232)
0x5EF20A81,	//0x0b16		VoC_lw16i(REG1,0x5ef2)
0x1481DF42,	//0x0b18		VoC_lw32_d(REG23,0xe9e)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630E9E,	//0x0b1a		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xe9e)(hi)
0xC010E41A,	//0x0b1c		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0b1e		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x12D20A80,	//0x0b20		VoC_lw16i(REG0,0x12d2)
0x5F320A81,	//0x0b22		VoC_lw16i(REG1,0x5f32)
0x1481DF02,	//0x0b24		VoC_lw32_d(REG23,0xea6)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0630EA6,	//0x0b26		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea6)(hi)
0xC010E41A,	//0x0b28		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0b2a		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x0E881404,	//0x0b2c		VoC_lw16_d(REG4,0xe88)
0x0E891405,	//0x0b2e		VoC_lw16_d(REG5,0xe89)
0x0B343244,	//0x0b30		VoC_bnltz16_r(RMVB_MBMC_103_MV2X,REG4)
0x5D6A0724,	//0x0b32		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x0b34		RMVB_MBMC_103_MV2X
0x0B383245,	//0x0b34		VoC_bnltz16_r(RMVB_MBMC_103_MV2Y,REG5)
0x5D6A072D,	//0x0b36		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x0b38		RMVB_MBMC_103_MV2Y
0xF80D780C,	//0x0b38		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x125A0A80,	//0x0b3a		VoC_lw16i(REG0,0x125a)
0x5F0E0A81,	//0x0b3c		VoC_lw16i(REG1,0x5f0e)
0x1481DF42,	//0x0b3e		VoC_lw32_d(REG23,0xea0)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630EA0,	//0x0b40		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea0)(hi)
0xC010E41A,	//0x0b42		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0b44		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x12FA0A80,	//0x0b46		VoC_lw16i(REG0,0x12fa)
0x5F4E0A81,	//0x0b48		VoC_lw16i(REG1,0x5f4e)
0x1481DF02,	//0x0b4a		VoC_lw32_d(REG23,0xea8)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0630EA8,	//0x0b4c		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea8)(hi)
0xC010E41A,	//0x0b4e		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0b50		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x0E8A1404,	//0x0b52		VoC_lw16_d(REG4,0xe8a)
0x0E8B1405,	//0x0b54		VoC_lw16_d(REG5,0xe8b)
0x0B5A3244,	//0x0b56		VoC_bnltz16_r(RMVB_MBMC_103_MV3X,REG4)
0x5D6A0724,	//0x0b58		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x0b5a		RMVB_MBMC_103_MV3X
0x0B5E3245,	//0x0b5a		VoC_bnltz16_r(RMVB_MBMC_103_MV3Y,REG5)
0x5D6A072D,	//0x0b5c		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x0b5e		RMVB_MBMC_103_MV3Y
0xF80D780C,	//0x0b5e		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x12820A80,	//0x0b60		VoC_lw16i(REG0,0x1282)
0x5F120A81,	//0x0b62		VoC_lw16i(REG1,0x5f12)
0x1481DF42,	//0x0b64		VoC_lw32_d(REG23,0xea2)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630EA2,	//0x0b66		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xea2)(hi)
0xC010E41A,	//0x0b68		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0b6a		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x13220A80,	//0x0b6c		VoC_lw16i(REG0,0x1322)
0x5F520A81,	//0x0b6e		VoC_lw16i(REG1,0x5f52)
0x1481DF02,	//0x0b70		VoC_lw32_d(REG23,0xeaa)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0630EAA,	//0x0b72		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeaa)(hi)
0xC010E41A,	//0x0b74		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0b76		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x0CBE1400,	//0x0b78		VoC_lw16_d(REG0,0xcbe)
0x3180FFC0,	//0x0b7a		VoC_bez16_r(RMVB_MBMC_103_END,REG0)(lo)	|	VoC_NOP
0x14840CB0,	//0x0b7c		VoC_lw32_d(ACC0,0xeac)(lo)	|	VoC_bez16_r(RMVB_MBMC_103_END,REG0)(hi)
0x0A800EAC,	//0x0b7e		VoC_lw16i(REG0,0x9a5)(lo)	|	VoC_lw32_d(ACC0,0xeac)(hi)
0x140409A5,	//0x0b80		VoC_lw16_d(REG4,0xe8c)(lo)	|	VoC_lw16i(REG0,0x9a5)(hi)
0x14050E8C,	//0x0b82		VoC_lw16_d(REG5,0xe8d)(lo)	|	VoC_lw16_d(REG4,0xe8c)(hi)
0xFFC00E8D,	//0x0b84		VoC_NAD	|	VoC_lw16_d(REG5,0xe8d)(hi)
0x0CE42B80,	//0x0b86		VoC_jal(CII_RMVB_Inter8_Y_DMA_FUNC)
0x0EAE1484,	//0x0b88		VoC_lw32_d(ACC0,0xeae)
0x0A0D0A80,	//0x0b8a		VoC_lw16i(REG0,0xa0d)
0x0E8E1404,	//0x0b8c		VoC_lw16_d(REG4,0xe8e)
0x0E8F1405,	//0x0b8e		VoC_lw16_d(REG5,0xe8f)
0x0CE42B80,	//0x0b90		VoC_jal(CII_RMVB_Inter8_Y_DMA_FUNC)
0x0EB01484,	//0x0b92		VoC_lw32_d(ACC0,0xeb0)
0x0A750A80,	//0x0b94		VoC_lw16i(REG0,0xa75)
0x0E901404,	//0x0b96		VoC_lw16_d(REG4,0xe90)
0x0E911405,	//0x0b98		VoC_lw16_d(REG5,0xe91)
0x0CE42B80,	//0x0b9a		VoC_jal(CII_RMVB_Inter8_Y_DMA_FUNC)
0x0EB21484,	//0x0b9c		VoC_lw32_d(ACC0,0xeb2)
0x0ADD0A80,	//0x0b9e		VoC_lw16i(REG0,0xadd)
0x0E921404,	//0x0ba0		VoC_lw16_d(REG4,0xe92)
0x0E931405,	//0x0ba2		VoC_lw16_d(REG5,0xe93)
0x0CE42B80,	//0x0ba4		VoC_jal(CII_RMVB_Inter8_Y_DMA_FUNC)
0x134A0A80,	//0x0ba6		VoC_lw16i(REG0,0x134a)
0x5F6E0A81,	//0x0ba8		VoC_lw16i(REG1,0x5f6e)
0x0EAC1482,	//0x0baa		VoC_lw32_d(REG45,0xeac)
0xE0337102,	//0x0bac		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xC020E41C,	//0x0bae		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E8C1404,	//0x0bb0		VoC_lw16_d(REG4,0xe8c)
0x0E8D1405,	//0x0bb2		VoC_lw16_d(REG5,0xe8d)
0x130A2B80,	//0x0bb4		VoC_jal(CII_RMVB_InterPred_FUNC)
0x141A0A80,	//0x0bb6		VoC_lw16i(REG0,0x141a)
0x5F760A81,	//0x0bb8		VoC_lw16i(REG1,0x5f76)
0x0EAE1482,	//0x0bba		VoC_lw32_d(REG45,0xeae)
0xE0337102,	//0x0bbc		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xC020E41C,	//0x0bbe		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E8E1404,	//0x0bc0		VoC_lw16_d(REG4,0xe8e)
0x0E8F1405,	//0x0bc2		VoC_lw16_d(REG5,0xe8f)
0x130A2B80,	//0x0bc4		VoC_jal(CII_RMVB_InterPred_FUNC)
0x14EA0A80,	//0x0bc6		VoC_lw16i(REG0,0x14ea)
0x5FEE0A81,	//0x0bc8		VoC_lw16i(REG1,0x5fee)
0x0EB01482,	//0x0bca		VoC_lw32_d(REG45,0xeb0)
0xE0337102,	//0x0bcc		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xC020E41C,	//0x0bce		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E901404,	//0x0bd0		VoC_lw16_d(REG4,0xe90)
0x0E911405,	//0x0bd2		VoC_lw16_d(REG5,0xe91)
0x130A2B80,	//0x0bd4		VoC_jal(CII_RMVB_InterPred_FUNC)
0x15BA0A80,	//0x0bd6		VoC_lw16i(REG0,0x15ba)
0x5FF60A81,	//0x0bd8		VoC_lw16i(REG1,0x5ff6)
0x0EB21482,	//0x0bda		VoC_lw32_d(REG45,0xeb2)
0xE0337102,	//0x0bdc		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0xC020E41C,	//0x0bde		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x0E921404,	//0x0be0		VoC_lw16_d(REG4,0xe92)
0x0E931405,	//0x0be2		VoC_lw16_d(REG5,0xe93)
0x130A2B80,	//0x0be4		VoC_jal(CII_RMVB_InterPred_FUNC)
0x0EB41484,	//0x0be6		VoC_lw32_d(ACC0,0xeb4)
0x0B450A80,	//0x0be8		VoC_lw16i(REG0,0xb45)
0x0D122B80,	//0x0bea		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EB61484,	//0x0bec		VoC_lw32_d(ACC0,0xeb6)
0x0B590A80,	//0x0bee		VoC_lw16i(REG0,0xb59)
0x0D122B80,	//0x0bf0		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EB81484,	//0x0bf2		VoC_lw32_d(ACC0,0xeb8)
0x0B6D0A80,	//0x0bf4		VoC_lw16i(REG0,0xb6d)
0x0D122B80,	//0x0bf6		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EBA1484,	//0x0bf8		VoC_lw32_d(ACC0,0xeba)
0x0B810A80,	//0x0bfa		VoC_lw16i(REG0,0xb81)
0x0D122B80,	//0x0bfc		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EBC1484,	//0x0bfe		VoC_lw32_d(ACC0,0xebc)
0x0B950A80,	//0x0c00		VoC_lw16i(REG0,0xb95)
0x0D122B80,	//0x0c02		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EBE1484,	//0x0c04		VoC_lw32_d(ACC0,0xebe)
0x0BA90A80,	//0x0c06		VoC_lw16i(REG0,0xba9)
0x0D122B80,	//0x0c08		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EC01484,	//0x0c0a		VoC_lw32_d(ACC0,0xec0)
0x0BBD0A80,	//0x0c0c		VoC_lw16i(REG0,0xbbd)
0x0D122B80,	//0x0c0e		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0EC21484,	//0x0c10		VoC_lw32_d(ACC0,0xec2)
0x0BD10A80,	//0x0c12		VoC_lw16i(REG0,0xbd1)
0x0D122B80,	//0x0c14		VoC_jal(CII_RMVB_Inter_UV_DMA_FUNC)
0x0E8C1404,	//0x0c16		VoC_lw16_d(REG4,0xe8c)
0x0E8D1405,	//0x0c18		VoC_lw16_d(REG5,0xe8d)
0x0C1E3244,	//0x0c1a		VoC_bnltz16_r(RMVB_MBMC_103_MV4X,REG4)
0x5D6A0724,	//0x0c1c		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x0c1e		RMVB_MBMC_103_MV4X
0x0C223245,	//0x0c1e		VoC_bnltz16_r(RMVB_MBMC_103_MV4Y,REG5)
0x5D6A072D,	//0x0c20		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x0c22		RMVB_MBMC_103_MV4Y
0xF80D780C,	//0x0c22		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x168A0A80,	//0x0c24		VoC_lw16i(REG0,0x168a)
0x606E0A81,	//0x0c26		VoC_lw16i(REG1,0x606e)
0x1481DF42,	//0x0c28		VoC_lw32_d(REG23,0xeb4)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630EB4,	//0x0c2a		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeb4)(hi)
0xC010E41A,	//0x0c2c		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0c2e		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x172A0A80,	//0x0c30		VoC_lw16i(REG0,0x172a)
0x60AE0A81,	//0x0c32		VoC_lw16i(REG1,0x60ae)
0x1481DF02,	//0x0c34		VoC_lw32_d(REG23,0xebc)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0630EBC,	//0x0c36		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xebc)(hi)
0xC010E41A,	//0x0c38		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0c3a		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x0E8E1404,	//0x0c3c		VoC_lw16_d(REG4,0xe8e)
0x0E8F1405,	//0x0c3e		VoC_lw16_d(REG5,0xe8f)
0x0C443244,	//0x0c40		VoC_bnltz16_r(RMVB_MBMC_103_MV5X,REG4)
0x5D6A0724,	//0x0c42		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x0c44		RMVB_MBMC_103_MV5X
0x0C483245,	//0x0c44		VoC_bnltz16_r(RMVB_MBMC_103_MV5Y,REG5)
0x5D6A072D,	//0x0c46		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x0c48		RMVB_MBMC_103_MV5Y
0xF80D780C,	//0x0c48		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x16B20A80,	//0x0c4a		VoC_lw16i(REG0,0x16b2)
0x60720A81,	//0x0c4c		VoC_lw16i(REG1,0x6072)
0x1481DF42,	//0x0c4e		VoC_lw32_d(REG23,0xeb6)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630EB6,	//0x0c50		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeb6)(hi)
0xC010E41A,	//0x0c52		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0c54		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x17520A80,	//0x0c56		VoC_lw16i(REG0,0x1752)
0x60B20A81,	//0x0c58		VoC_lw16i(REG1,0x60b2)
0x1481DF02,	//0x0c5a		VoC_lw32_d(REG23,0xebe)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0630EBE,	//0x0c5c		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xebe)(hi)
0xC010E41A,	//0x0c5e		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0c60		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x0E901404,	//0x0c62		VoC_lw16_d(REG4,0xe90)
0x0E911405,	//0x0c64		VoC_lw16_d(REG5,0xe91)
0x0C6A3244,	//0x0c66		VoC_bnltz16_r(RMVB_MBMC_103_MV6X,REG4)
0x5D6A0724,	//0x0c68		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x0c6a		RMVB_MBMC_103_MV6X
0x0C6E3245,	//0x0c6a		VoC_bnltz16_r(RMVB_MBMC_103_MV6Y,REG5)
0x5D6A072D,	//0x0c6c		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x0c6e		RMVB_MBMC_103_MV6Y
0xF80D780C,	//0x0c6e		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x16DA0A80,	//0x0c70		VoC_lw16i(REG0,0x16da)
0x608E0A81,	//0x0c72		VoC_lw16i(REG1,0x608e)
0x1481DF42,	//0x0c74		VoC_lw32_d(REG23,0xeb8)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630EB8,	//0x0c76		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeb8)(hi)
0xC010E41A,	//0x0c78		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0c7a		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x177A0A80,	//0x0c7c		VoC_lw16i(REG0,0x177a)
0x60CE0A81,	//0x0c7e		VoC_lw16i(REG1,0x60ce)
0x1481DF02,	//0x0c80		VoC_lw32_d(REG23,0xec0)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0630EC0,	//0x0c82		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xec0)(hi)
0xC010E41A,	//0x0c84		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0c86		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x0E921404,	//0x0c88		VoC_lw16_d(REG4,0xe92)
0x0E931405,	//0x0c8a		VoC_lw16_d(REG5,0xe93)
0x0C903244,	//0x0c8c		VoC_bnltz16_r(RMVB_MBMC_103_MV7X,REG4)
0x5D6A0724,	//0x0c8e		VoC_add16_rd(REG4,REG4,0x5d6a)
		//0x0c90		RMVB_MBMC_103_MV7X
0x0C943245,	//0x0c90		VoC_bnltz16_r(RMVB_MBMC_103_MV7Y,REG5)
0x5D6A072D,	//0x0c92		VoC_add16_rd(REG5,REG5,0x5d6a)
		//0x0c94		RMVB_MBMC_103_MV7Y
0xF80D780C,	//0x0c94		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x17020A80,	//0x0c96		VoC_lw16i(REG0,0x1702)
0x60920A81,	//0x0c98		VoC_lw16i(REG1,0x6092)
0x1481DF42,	//0x0c9a		VoC_lw32_d(REG23,0xeba)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0630EBA,	//0x0c9c		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xeba)(hi)
0xC010E41A,	//0x0c9e		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0ca0		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x17A20A80,	//0x0ca2		VoC_lw16i(REG0,0x17a2)
0x60D20A81,	//0x0ca4		VoC_lw16i(REG1,0x60d2)
0x1481DF02,	//0x0ca6		VoC_lw32_d(REG23,0xec2)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0630EC2,	//0x0ca8		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xec2)(hi)
0xC010E41A,	//0x0caa		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_and16_rr(REG2,REG3,DEFAULT)
0x14FC2B80,	//0x0cac		VoC_jal(CII_RMVB_CInterPred_FUNC)
0x0E602B80,	//0x0cae		VoC_jal(CII_RMVB_PRED_AVG)
		//0x0cb0		RMVB_MBMC_103_END
0x0EC02B80,	//0x0cb0		VoC_jal(CII_RMVB_RECON_16x16)
0xFFC0DFA9,	//0x0cb2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0cb4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0cb6		CII_RMVB_Inter16_Y_DMA_FUNC
0x0CB21401,	//0x0cb6		VoC_lw16_d(REG1,0xcb2)
0xE0667302,	//0x0cb8		VoC_lw16i_short(REG6,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x18,DEFAULT)
0xE0334251,	//0x0cba		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)
0xF811641C,	//0x0cbc		VoC_shr16_ri(REG1,0x2,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x7FC21546,	//0x0cbe		VoC_sw16_d(REG6,0xffc2)
0x7FC81541,	//0x0cc0		VoC_sw16_d(REG1,0xffc8)
0xFA14641D,	//0x0cc2		VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG3,DEFAULT)
0x2A04FBF4,	//0x0cc4		VoC_or32_rd(ACC0,0x5d86)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x31C55D86,	//0x0cc6		VoC_bnez16_r(RMVB_Inter16_Y_DMA_FUNC_100,REG5)(lo)	|	VoC_or32_rd(ACC0,0x5d86)(hi)
0x72020CCE,	//0x0cc8		VoC_lw16i_short(REG2,0x10,DEFAULT)	|	VoC_bnez16_r(RMVB_Inter16_Y_DMA_FUNC_100,REG5)(hi)
0xC020E184,	//0x0cca		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x18,IN_PARALLEL)
0xFFC065CC,	//0x0ccc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RMVB_Inter16_Y_DMA_FUNC_102)
		//0x0cce		RMVB_Inter16_Y_DMA_FUNC_100
0x0CD635A3,	//0x0cce		VoC_bne16_rr(RMVB_Inter16_Y_DMA_FUNC_101,REG4,REG3)
0x0CD635AB,	//0x0cd0		VoC_bne16_rr(RMVB_Inter16_Y_DMA_FUNC_101,REG5,REG3)
0xE1847222,	//0x0cd2		VoC_lw16i_short(REG4,0x18,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x11,DEFAULT)
0xE5C3C020,	//0x0cd4		VoC_jump(RMVB_Inter16_Y_DMA_FUNC_102)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
		//0x0cd6		RMVB_Inter16_Y_DMA_FUNC_101
0xFFC072A2,	//0x0cd6		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x15,DEFAULT)
		//0x0cd8		RMVB_Inter16_Y_DMA_FUNC_102
0x7FC31540,	//0x0cd8		VoC_sw16_d(REG0,0xffc3)
0x7FC91542,	//0x0cda		VoC_sw16_d(REG2,0xffc9)
0x7FC415C4,	//0x0cdc		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0cde		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0ce0		VoC_cfg_lg(0x8,)
0xE580FFC0,	//0x0ce2		VoC_return	|	VoC_NOP
		//0x0ce4		CII_RMVB_Inter8_Y_DMA_FUNC
0x0CB21401,	//0x0ce4		VoC_lw16_d(REG1,0xcb2)
0xE0467202,	//0x0ce6		VoC_lw16i_short(REG6,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xE0334251,	//0x0ce8		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)
0xF811641C,	//0x0cea		VoC_shr16_ri(REG1,0x2,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x7FC21546,	//0x0cec		VoC_sw16_d(REG6,0xffc2)
0x7FC81541,	//0x0cee		VoC_sw16_d(REG1,0xffc8)
0xFA14641D,	//0x0cf0		VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG3,DEFAULT)
0x2A04FBF4,	//0x0cf2		VoC_or32_rd(ACC0,0x5d86)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x31C55D86,	//0x0cf4		VoC_bnez16_r(RMVB_Inter8_Y_DMA_FUNC_100,REG5)(lo)	|	VoC_or32_rd(ACC0,0x5d86)(hi)
0x71020CFC,	//0x0cf6		VoC_lw16i_short(REG2,0x8,DEFAULT)	|	VoC_bnez16_r(RMVB_Inter8_Y_DMA_FUNC_100,REG5)(hi)
0xC020E104,	//0x0cf8		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x10,IN_PARALLEL)
0xFFC065CC,	//0x0cfa		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RMVB_Inter8_Y_DMA_FUNC_102)
		//0x0cfc		RMVB_Inter8_Y_DMA_FUNC_100
0x0D0435A3,	//0x0cfc		VoC_bne16_rr(RMVB_Inter8_Y_DMA_FUNC_101,REG4,REG3)
0x0D0435AB,	//0x0cfe		VoC_bne16_rr(RMVB_Inter8_Y_DMA_FUNC_101,REG5,REG3)
0xE1047122,	//0x0d00		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x9,DEFAULT)
0xE5C3C020,	//0x0d02		VoC_jump(RMVB_Inter8_Y_DMA_FUNC_102)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
		//0x0d04		RMVB_Inter8_Y_DMA_FUNC_101
0xFFC071A2,	//0x0d04		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0xd,DEFAULT)
		//0x0d06		RMVB_Inter8_Y_DMA_FUNC_102
0x7FC31540,	//0x0d06		VoC_sw16_d(REG0,0xffc3)
0x7FC91542,	//0x0d08		VoC_sw16_d(REG2,0xffc9)
0x7FC415C4,	//0x0d0a		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0d0c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0d0e		VoC_cfg_lg(0x8,)
0xE580FFC0,	//0x0d10		VoC_return	|	VoC_NOP
		//0x0d12		CII_RMVB_Inter_UV_DMA_FUNC
0x0CB21401,	//0x0d12		VoC_lw16_d(REG1,0xcb2)
0x7102F809,	//0x0d14		VoC_lw16i_short(REG2,0x8,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0x4251E026,	//0x0d16		VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16i_short(REG6,0x2,IN_PARALLEL)
0x7811FA14,	//0x0d18		VoC_shr16_ri(REG1,0x2,DEFAULT)	|	VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)
0x1546FBF4,	//0x0d1a		VoC_sw16_d(REG6,0xffc2)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffe,IN_PARALLEL)
0x15417FC2,	//0x0d1c		VoC_sw16_d(REG1,0xffc8)(lo)	|	VoC_sw16_d(REG6,0xffc2)(hi)
0xF0A27FC8,	//0x0d1e		VoC_lw16i_short(REG2,0x5,DEFAULT)	|	VoC_sw16_d(REG1,0xffc8)(hi)
0x5D862A04,	//0x0d20		VoC_or32_rd(ACC0,0x5d86)
0x7FC91542,	//0x0d22		VoC_sw16_d(REG2,0xffc9)
0x7FC31540,	//0x0d24		VoC_sw16_d(REG0,0xffc3)
0x7FC415C4,	//0x0d26		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0d28		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0d2a		VoC_cfg_lg(0x8,)
0xE580FFC0,	//0x0d2c		VoC_return	|	VoC_NOP
		//0x0d2e		CII_RMVB_CIntraPred_4x4_FUNC
0x1401DFE9,	//0x0d2e		VoC_lw16_d(REG1,0x1c8a)(lo)	|	VoC_push16(RA,DEFAULT)
0x14031C8A,	//0x0d30		VoC_lw16_d(REG3,0x1c8b)(lo)	|	VoC_lw16_d(REG1,0x1c8a)(hi)
0x07091C8B,	//0x0d32		VoC_add16_rd(REG1,REG1,0x5d6c)(lo)	|	VoC_lw16_d(REG3,0x1c8b)(hi)
0x071B5D6C,	//0x0d34		VoC_add16_rd(REG3,REG3,0x5d6c)(lo)	|	VoC_add16_rd(REG1,REG1,0x5d6c)(hi)
0xD8115D6C,	//0x0d36		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x5d6c)(hi)
0x1501D833,	//0x0d38		VoC_sw16_d(REG1,0x623e)(lo)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0x1503623E,	//0x0d3a		VoC_sw16_d(REG3,0x6241)(lo)	|	VoC_sw16_d(REG1,0x623e)(hi)
0x14056241,	//0x0d3c		VoC_lw16_d(REG5,0x1c8a)(lo)	|	VoC_sw16_d(REG3,0x6241)(hi)
0x14061C8A,	//0x0d3e		VoC_lw16_d(REG6,0x1c8b)(lo)	|	VoC_lw16_d(REG5,0x1c8a)(hi)
0x15051C8B,	//0x0d40		VoC_sw16_d(REG5,0x6246)(lo)	|	VoC_lw16_d(REG6,0x1c8b)(hi)
0x15066246,	//0x0d42		VoC_sw16_d(REG6,0x6247)(lo)	|	VoC_sw16_d(REG5,0x6246)(hi)
0x70446247,	//0x0d44		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_sw16_d(REG6,0x6247)(hi)
0x1406E025,	//0x0d46		VoC_lw16_d(REG6,0x1c91)(lo)	|	VoC_lw16i_short(REG5,0x2,IN_PARALLEL)
0x14001C91,	//0x0d48		VoC_lw16_d(REG0,0x1c8b)(lo)	|	VoC_lw16_d(REG6,0x1c91)(hi)
0x14011C8B,	//0x0d4a		VoC_lw16_d(REG1,0x1c89)(lo)	|	VoC_lw16_d(REG0,0x1c8b)(hi)
0x14021C89,	//0x0d4c		VoC_lw16_d(REG2,0xcba)(lo)	|	VoC_lw16_d(REG1,0x1c89)(hi)
0x14030CBA,	//0x0d4e		VoC_lw16_d(REG3,0xcbb)(lo)	|	VoC_lw16_d(REG2,0xcba)(hi)
0x15020CBB,	//0x0d50		VoC_sw16_d(REG2,0x17ea)(lo)	|	VoC_lw16_d(REG3,0xcbb)(hi)
0x150317EA,	//0x0d52		VoC_sw16_d(REG3,0x17eb)(lo)	|	VoC_sw16_d(REG2,0x17ea)(hi)
0x0A8217EB,	//0x0d54		VoC_lw16i(REG2,0x623e)(lo)	|	VoC_sw16_d(REG3,0x17eb)(hi)
0x0A83623E,	//0x0d56		VoC_lw16i(REG3,0x6241)(lo)	|	VoC_lw16i(REG2,0x623e)(hi)
0xFFC06241,	//0x0d58		VoC_NAD	|	VoC_lw16i(REG3,0x6241)(hi)
		//0x0d5a		RMVB_CIntraPred_4x4_FUNC_101
0xDFC65F42,	//0x0d5a		VoC_push16(REG6,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xDFC15F41,	//0x0d5c		VoC_push16(REG1,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0xD8127043,	//0x0d5e		VoC_lw16_p(REG2,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x62461401,	//0x0d60		VoC_lw16_d(REG1,0x6246)
0xC2ED42E4,	//0x0d62		VoC_sub16_rr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)
0xF8F578DC,	//0x0d64		VoC_shr16_ri(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffb,DEFAULT)
0xF8F5412F,	//0x0d66		VoC_shr16_ri(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG4,REG5,DEFAULT)
0x1404C12E,	//0x0d68		VoC_lw16_d(REG4,0x1c8d)(lo)	|	VoC_add16_rr(REG6,REG4,REG5,DEFAULT)
0x14051C8D,	//0x0d6a		VoC_lw16_d(REG5,0x1c8c)(lo)	|	VoC_lw16_d(REG4,0x1c8d)(hi)
0x41E71C8C,	//0x0d6c		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16_d(REG5,0x1c8c)(hi)
0x7087C1AE,	//0x0d6e		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)
0xDF43F6E3,	//0x0d70		VoC_push32(REG67,DEFAULT)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0x0FC72B80,	//0x0d72		VoC_jal(CII_RMVB_IntraPred_4x4_FUNC)
0xD626DF00,	//0x0d74		VoC_lw16_sd(REG6,0x1,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0x5D6A2806,	//0x0d76		VoC_and16_rd(REG6,0x5d6a)
0xF0057030,	//0x0d78		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x0D823186,	//0x0d7a		VoC_bez16_r(RMVB_CIntraPred_4x4_FUNC_102,REG6)
0xFFC07084,	//0x0d7c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x0F662B80,	//0x0d7e		VoC_jal(CII_RMVB_RECON_4x4_ADD)
0x0DAC2B00,	//0x0d80		VoC_jump_lg(RMVB_CIntraPred_4x4_FUNC_103)
		//0x0d82		RMVB_CIntraPred_4x4_FUNC_102
0xFFC0D804,	//0x0d82		VoC_NOP	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0x0D8C3184,	//0x0d84		VoC_bez16_r(RMVB_CIntraPred_4x4_FUNC_1020,REG4)
0xFFC07084,	//0x0d86		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x0F962B80,	//0x0d88		VoC_jal(CII_RMVB_RECON_4x4_DC)
0x0DAC2B00,	//0x0d8a		VoC_jump_lg(RMVB_CIntraPred_4x4_FUNC_103)
		//0x0d8c		RMVB_CIntraPred_4x4_FUNC_1020
0x17EC1806,	//0x0d8c		VoC_lw16i_set_inc(REG2,0x17ec,0x1)
0x62461400,	//0x0d8e		VoC_lw16_d(REG0,0x6246)
0x5D6C070B,	//0x0d90		VoC_add16_rd(REG3,REG1,0x5d6c)
0x5D71071C,	//0x0d92		VoC_add16_rd(REG4,REG3,0x5d71)
0x5D710725,	//0x0d94		VoC_add16_rd(REG5,REG4,0x5d71)
0x5D6E0729,	//0x0d96		VoC_add16_rd(REG1,REG5,0x5d6e)
0xD844D833,	//0x0d98		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xDCA35855,	//0x0d9a		VoC_sw16inc_p(REG3,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xDCA45896,	//0x0d9c		VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xDCA55893,	//0x0d9e		VoC_sw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0xDC865894,	//0x0da0		VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xDC835897,	//0x0da2		VoC_sw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xDC87DC84,	//0x0da4		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xF6015CA7,	//0x0da6		VoC_movreg16(REG1,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0xDCA7DCA7,	//0x0da8		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0xDCA7DCA7,	//0x0daa		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
		//0x0dac		RMVB_CIntraPred_4x4_FUNC_103
0xF084D912,	//0x0dac		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_lw32_sd(REG45,0x1,DEFAULT)
0x5D6A4435,	//0x0dae		VoC_bne16_rd(RMVB_CIntraPred_4x4_FUNC_104,REG5,0x5d6a)
0xDC97DC97,	//0x0db0		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xDC97DC97,	//0x0db2		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x0db4		RMVB_CIntraPred_4x4_FUNC_104
0x1405F002,	//0x0db4		VoC_lw16_d(REG5,0x6246)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x15026246,	//0x0db6		VoC_sw16_d(REG2,0x17eb)(lo)	|	VoC_lw16_d(REG5,0x6246)(hi)
0x5F0117EB,	//0x0db8		VoC_pop32(REG23,DEFAULT)	|	VoC_sw16_d(REG2,0x17eb)(hi)
0x4165DF81,	//0x0dba		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_pop16(REG1,IN_PARALLEL)
0x7044DF86,	//0x0dbc		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_pop16(REG6,IN_PARALLEL)
0x1505F90E,	//0x0dbe		VoC_sw16_d(REG5,0x6246)(lo)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x40616246,	//0x0dc0		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_sw16_d(REG5,0x6246)(hi)
0xDF02D820,	//0x0dc2		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16_p(REG0,REG2,IN_PARALLEL)
0x62441500,	//0x0dc4		VoC_sw16_d(REG0,0x6244)
0x5D6A07AD,	//0x0dc6		VoC_sub16_rd(REG5,REG5,0x5d6a)
0x17EC0A80,	//0x0dc8		VoC_lw16i(REG0,0x17ec)
0x0D5A31C5,	//0x0dca		VoC_bnez16_r(RMVB_CIntraPred_4x4_FUNC_101,REG5)
0x1402F000,	//0x0dcc		VoC_lw16_d(REG2,0xcbb)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x15000CBB,	//0x0dce		VoC_sw16_d(REG0,0x17ea)(lo)	|	VoC_lw16_d(REG2,0xcbb)(hi)
0x150217EA,	//0x0dd0		VoC_sw16_d(REG2,0x17eb)(lo)	|	VoC_sw16_d(REG0,0x17ea)(hi)
0x140017EB,	//0x0dd2		VoC_lw16_d(REG0,0x1c8a)(lo)	|	VoC_sw16_d(REG2,0x17eb)(hi)
0x07001C8A,	//0x0dd4		VoC_add16_rd(REG0,REG0,0x5d6c)(lo)	|	VoC_lw16_d(REG0,0x1c8a)(hi)
0x14055D6C,	//0x0dd6		VoC_lw16_d(REG5,0x6247)(lo)	|	VoC_add16_rd(REG0,REG0,0x5d6c)(hi)
0xD8006247,	//0x0dd8		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_lw16_d(REG5,0x6247)(hi)
0x5D6D072D,	//0x0dda		VoC_add16_rd(REG5,REG5,0x5d6d)
0x623E1500,	//0x0ddc		VoC_sw16_d(REG0,0x623e)
0x62471505,	//0x0dde		VoC_sw16_d(REG5,0x6247)
0xE04560A0,	//0x0de0		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0xD8354069,	//0x0de2		VoC_lw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x623E0A82,	//0x0de4		VoC_lw16i(REG2,0x623e)
0x62441505,	//0x0de6		VoC_sw16_d(REG5,0x6244)
0x1C8A1405,	//0x0de8		VoC_lw16_d(REG5,0x1c8a)
0x5D6A07A4,	//0x0dea		VoC_sub16_rd(REG4,REG4,0x5d6a)
0x62461505,	//0x0dec		VoC_sw16_d(REG5,0x6246)
0x31C4F045,	//0x0dee		VoC_bnez16_r(RMVB_CIntraPred_4x4_FUNC_101,REG4)(lo)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xDFA90D5A,	//0x0df0		VoC_pop16(RA,DEFAULT)	|	VoC_bnez16_r(RMVB_CIntraPred_4x4_FUNC_101,REG4)(hi)
0xE580FFC0,	//0x0df2		VoC_return	|	VoC_NOP
		//0x0df4		CII_RMVB_CIntraPred_16x16_MODE0
0xE0045883,	//0x0df4		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE8E382CB,	//0x0df6		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_add16inc_rp(REG3,REG3,REG1,DEFAULT)
0xC11C5883,	//0x0df8		VoC_add16_rr(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x0dfa		VoC_endloop0
0x411C82CB,	//0x0dfa		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_add16inc_rp(REG3,REG3,REG1,DEFAULT)
0xC12CE085,	//0x0dfc		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x8,IN_PARALLEL)
0xE085F824,	//0x0dfe		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x4,DEFAULT)
0xDDD2EA02,	//0x0e00		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_loop_i_short(0x10,DEFAULT)
		//0x0e02		VoC_endloop0
0xE580DDD2,	//0x0e02		VoC_return	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x0e04		CII_RMVB_IntraPred_16x16_PLANAR
0x7019DF40,	//0x0e04		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x7104F3FE,	//0x0e06		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)
0x4020E062,	//0x0e08		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG2,0x6,IN_PARALLEL)
0x7006C012,	//0x0e0a		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_add16_rr(REG2,REG0,REG2,IN_PARALLEL)
0x7F44E017,	//0x0e0c		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xE8E3D884,	//0x0e0e		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0xC1BE0715,	//0x0e10		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_sub16inc_rp(REG5,REG4,REG2,DEFAULT)
		//0x0e12		VoC_endloop0
0xD8844E2E,	//0x0e12		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0x1C841402,	//0x0e14		VoC_lw16_d(REG2,0x1c84)
0xF3FE7031,	//0x0e16		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xC1BE4315,	//0x0e18		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG4,REG2,DEFAULT)
0xE0624E2E,	//0x0e1a		VoC_lw16i_short(REG2,0x6,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0xE0844052,	//0x0e1c		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG2,DEFAULT)
0xC0617F26,	//0x0e1e		VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xE0067A16,	//0x0e20		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x2,DEFAULT)
0xE01749A6,	//0x0e22		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)
0xFF447A26,	//0x0e24		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
0xD89468E4,	//0x0e26		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0xC1BE0715,	//0x0e28		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_sub16inc_rp(REG5,REG4,REG2,DEFAULT)
		//0x0e2a		VoC_endloop0
0xD8944E2E,	//0x0e2a		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0x1C841402,	//0x0e2c		VoC_lw16_d(REG2,0x1c84)
0x4315DF00,	//0x0e2e		VoC_sub16_rr(REG5,REG4,REG2,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0x4E2EC1BE,	//0x0e30		VoC_mac32_rr(REG5,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)
0x4010E0F2,	//0x0e32		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0xf,IN_PARALLEL)
0xFF27C051,	//0x0e34		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0xD8007A17,	//0x0e36		VoC_lw16_p(REG0,REG0,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0x2,DEFAULT)
0xD81149E7,	//0x0e38		VoC_lw16_p(REG1,REG1,IN_PARALLEL)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0xC0087A27,	//0x0e3a		VoC_add16_rr(REG0,REG0,REG1,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0x4,DEFAULT)
0xF7C478E0,	//0x0e3c		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xfffffffc,DEFAULT)
0x0A81E185,	//0x0e3e		VoC_lw16i(REG1,0xff)(lo)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0x40CB00FF,	//0x0e40		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16i(REG1,0xff)(hi)
0x6081F3FF,	//0x0e42		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0x78E9F6A2,	//0x0e44		VoC_shr16_ri(REG1,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG2,REG5,IN_PARALLEL)
0x4051F8EA,	//0x0e46		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffd,IN_PARALLEL)
0xC051E102,	//0x0e48		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x10,IN_PARALLEL)
0x0A87C041,	//0x0e4a		VoC_lw16i(REG7,0xff)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xFFC000FF,	//0x0e4c		VoC_NAD	|	VoC_lw16i(REG7,0xff)(hi)
0x0E5D2C21,	//0x0e4e		VoC_loop_i(0x1,0x10)
0xF6265FC1,	//0x0e50		VoC_movreg16(REG6,REG1,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0xC261782E,	//0x0e52		VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x5,DEFAULT)
0xDEFE69E5,	//0x0e54		VoC_clipu16_rr(REG6,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0xf,DEFAULT)
0x5CB6E026,	//0x0e56		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_movreg16(REG6,REG1,DEFAULT)
0x4261F82E,	//0x0e58		VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x5,IN_PARALLEL)
		//0x0e59		VoC_endloop0
0xDF81DEFE,	//0x0e5a		VoC_pop16(REG1,DEFAULT)	|	VoC_clipu16_rr(REG6,REG7,IN_PARALLEL)
0xDCB6C269,	//0x0e5c		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG5,DEFAULT)
		//0x0e5d		VoC_endloop1
0xFFC06580,	//0x0e5e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0e60		CII_RMVB_PRED_AVG
0x5DEE0A80,	//0x0e60		VoC_lw16i(REG0,0x5dee)
0x5F6E0A81,	//0x0e62		VoC_lw16i(REG1,0x5f6e)
0x5DEE0A82,	//0x0e64		VoC_lw16i(REG2,0x5dee)
0xF0057030,	//0x0e66		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x20000A8C,	//0x0e68		VoC_lw16i(RL6_LO,0x2000)
0xF006700D,	//0x0e6a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x0CC01405,	//0x0e6c		VoC_lw16_d(REG5,0xcc0)
0x0CC11404,	//0x0e6e		VoC_lw16_d(REG4,0xcc1)
0xF4007019,	//0x0e70		VoC_lw16i_short(FORMAT16,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xD1299B04,	//0x0e72		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xFFC01B05,	//0x0e74		VoC_NAD(IN_PARALLEL)	|	VoC_multf32inc_rp(ACC1,REG4,REG0,DEFAULT)
0x0E9F2C40,	//0x0e76		VoC_loop_i(0x0,0x20)
0xD1294933,	//0x0e78		VoC_mac32inc_rp(REG5,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0x9B047C73,	//0x0e7a		VoC_multf32inc_rp(ACC0,REG4,REG0,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xe,DEFAULT)
0xC9735129,	//0x0e7c		VoC_add32_rr(REG67,ACC1,RL6,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xDCA67C73,	//0x0e7e		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xe,DEFAULT)
0x9B054933,	//0x0e80		VoC_multf32inc_rp(ACC1,REG4,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0x7C73DCA6,	//0x0e82		VoC_shru32_ri(REG67,0xe,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x9B04D129,	//0x0e84		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG1,IN_PARALLEL)
0xDCA64973,	//0x0e86		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC1,RL6,DEFAULT)
0xFC735129,	//0x0e88		VoC_shru32_ri(REG67,0xe,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xDCA69B05,	//0x0e8a		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG4,REG0,DEFAULT)
0xD1294933,	//0x0e8c		VoC_mac32inc_rp(REG5,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0x9B047C73,	//0x0e8e		VoC_multf32inc_rp(ACC0,REG4,REG0,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xe,DEFAULT)
0xC9735129,	//0x0e90		VoC_add32_rr(REG67,ACC1,RL6,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xDCA67C73,	//0x0e92		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xe,DEFAULT)
0x9B054933,	//0x0e94		VoC_multf32inc_rp(ACC1,REG4,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0x7C73DCA6,	//0x0e96		VoC_shru32_ri(REG67,0xe,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x9B04D129,	//0x0e98		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG1,IN_PARALLEL)
0xDCA64973,	//0x0e9a		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC1,RL6,DEFAULT)
0xFC735129,	//0x0e9c		VoC_shru32_ri(REG67,0xe,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xDCA69B05,	//0x0e9e		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG4,REG0,DEFAULT)
		//0x0e9f		VoC_endloop0
0x5EEE0A80,	//0x0ea0		VoC_lw16i(REG0,0x5eee)
0x606E0A81,	//0x0ea2		VoC_lw16i(REG1,0x606e)
0x5EEE0A82,	//0x0ea4		VoC_lw16i(REG2,0x5eee)
0xD1299B04,	//0x0ea6		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0x9B056C15,	//0x0ea8		VoC_multf32inc_rp(ACC1,REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x20,DEFAULT)
0xD1294933,	//0x0eaa		VoC_mac32inc_rp(REG5,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0x9B047C73,	//0x0eac		VoC_multf32inc_rp(ACC0,REG4,REG0,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xe,DEFAULT)
0xC9735129,	//0x0eae		VoC_add32_rr(REG67,ACC1,RL6,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xDCA67C73,	//0x0eb0		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xe,DEFAULT)
0x9B054933,	//0x0eb2		VoC_multf32inc_rp(ACC1,REG4,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0x7C73DCA6,	//0x0eb4		VoC_shru32_ri(REG67,0xe,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x9B04D129,	//0x0eb6		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG1,IN_PARALLEL)
0xDCA64973,	//0x0eb8		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC1,RL6,DEFAULT)
0xFC735129,	//0x0eba		VoC_shru32_ri(REG67,0xe,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xDCA69B05,	//0x0ebc		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG4,REG0,DEFAULT)
		//0x0ebd		VoC_endloop0
0xFFC06580,	//0x0ebe		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0ec0		CII_RMVB_RECON_16x16
0x0CE21483,	//0x0ec0		VoC_lw32_d(REG67,0xce2)
0x1C881400,	//0x0ec2		VoC_lw16_d(REG0,0x1c88)
0x5DEE0A81,	//0x0ec4		VoC_lw16i(REG1,0x5dee)
0xE0457084,	//0x0ec6		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0xF0057030,	//0x0ec8		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xE0C37032,	//0x0eca		VoC_lw16i_short(REG3,0xc,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
		//0x0ecc		CII_RMVB_RECON_16x16_100
0xDF40DF42,	//0x0ecc		VoC_push32(REG01,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x2983DF43,	//0x0ece		VoC_and32_rd(REG67,0x5d80)(lo)	|	VoC_push32(REG67,DEFAULT)
0xD8055D80,	//0x0ed0		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_and32_rd(REG67,0x5d80)(hi)
0x0EE83303,	//0x0ed2		VoC_bez32_r(CII_RMVB_RECON_16x16_101,REG67)
0x00FF0A84,	//0x0ed4		VoC_lw16i(REG4,0xff)
0xF62C688F,	//0x0ed6		VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xF782220D,	//0x0ed8		VoC_movreg16(REG2,RL6_LO,IN_PARALLEL)	|	VoC_add16inc_pp(REG5,REG0,REG1,DEFAULT)
0xDEE5220E,	//0x0eda		VoC_clipu16_rr(REG5,REG4,IN_PARALLEL)	|	VoC_add16inc_pp(REG6,REG0,REG1,DEFAULT)
0xDEE6220F,	//0x0edc		VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)	|	VoC_add16inc_pp(REG7,REG0,REG1,DEFAULT)
0xDEE75CA5,	//0x0ede		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x5CA6A20D,	//0x0ee0		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_add16inc_pp(REG5,REG0,REG1,DEFAULT)
0x5CA7DEE5,	//0x0ee2		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_clipu16_rr(REG5,REG4,IN_PARALLEL)
0x5CA5C059,	//0x0ee4		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
		//0x0ee5		VoC_endloop0
0xE5D8F62C,	//0x0ee6		VoC_jump(CII_RMVB_RECON_16x16_102)	|	VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)
		//0x0ee8		CII_RMVB_RECON_16x16_101
0x0EFF3185,	//0x0ee8		VoC_bez16_r(CII_RMVB_RECON_16x16_102,REG5)
0x00FF0A84,	//0x0eea		VoC_lw16i(REG4,0xff)
0xF62C60A0,	//0x0eec		VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0xE88EFFC0,	//0x0eee		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xF782020D,	//0x0ef0		VoC_movreg16(REG2,RL6_LO,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0xDEE5020E,	//0x0ef2		VoC_clipu16_rr(REG5,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG1,DEFAULT)
0xDEE6020F,	//0x0ef4		VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG7,REG0,REG1,DEFAULT)
0xDEE75CA5,	//0x0ef6		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x5CA6820D,	//0x0ef8		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0x5CA7DEE5,	//0x0efa		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_clipu16_rr(REG5,REG4,IN_PARALLEL)
0x5CA5C059,	//0x0efc		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
		//0x0efd		VoC_endloop0
0xDF03F62C,	//0x0efe		VoC_pop32(REG67,DEFAULT)	|	VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)
		//0x0eff		CII_RMVB_RECON_16x16_102
0xFA0B5F00,	//0x0f00		VoC_shr32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x07ADDF02,	//0x0f02		VoC_sub16_rd(REG5,REG5,0x5d6a)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x07095D6A,	//0x0f04		VoC_add16_rd(REG1,REG1,0x5d6d)(lo)	|	VoC_sub16_rd(REG5,REG5,0x5d6a)(hi)
0x07005D6D,	//0x0f06		VoC_add16_rd(REG0,REG0,0x5d79)(lo)	|	VoC_add16_rd(REG1,REG1,0x5d6d)(hi)
0x31C55D79,	//0x0f08		VoC_bnez16_r(CII_RMVB_RECON_16x16_100,REG5)(lo)	|	VoC_add16_rd(REG0,REG0,0x5d79)(hi)
0x07A40ECC,	//0x0f0a		VoC_sub16_rd(REG4,REG4,0x5d6a)(lo)	|	VoC_bnez16_r(CII_RMVB_RECON_16x16_100,REG5)(hi)
0x70855D6A,	//0x0f0c		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x5d6a)(hi)
0xC051E302,	//0x0f0e		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x30,IN_PARALLEL)
0x0ECC31C4,	//0x0f10		VoC_bnez16_r(CII_RMVB_RECON_16x16_100,REG4)
0x0CE21483,	//0x0f12		VoC_lw32_d(REG67,0xce2)
0x1C881400,	//0x0f14		VoC_lw16_d(REG0,0x1c88)
0x5D7E0700,	//0x0f16		VoC_add16_rd(REG0,REG0,0x5d7e)
0x5EEE0A81,	//0x0f18		VoC_lw16i(REG1,0x5eee)
0xE0257084,	//0x0f1a		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0xE0437A83,	//0x0f1c		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
		//0x0f1e		CII_RMVB_RECON_16x16_103
0xDF40DF42,	//0x0f1e		VoC_push32(REG01,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x2983DF43,	//0x0f20		VoC_and32_rd(REG67,0x5d80)(lo)	|	VoC_push32(REG67,DEFAULT)
0xD8055D80,	//0x0f22		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_and32_rd(REG67,0x5d80)(hi)
0x0F3A3303,	//0x0f24		VoC_bez32_r(CII_RMVB_RECON_16x16_104,REG67)
0x00FF0A84,	//0x0f26		VoC_lw16i(REG4,0xff)
0xF62C688F,	//0x0f28		VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xF782220D,	//0x0f2a		VoC_movreg16(REG2,RL6_LO,IN_PARALLEL)	|	VoC_add16inc_pp(REG5,REG0,REG1,DEFAULT)
0xDEE5220E,	//0x0f2c		VoC_clipu16_rr(REG5,REG4,IN_PARALLEL)	|	VoC_add16inc_pp(REG6,REG0,REG1,DEFAULT)
0xDEE6220F,	//0x0f2e		VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)	|	VoC_add16inc_pp(REG7,REG0,REG1,DEFAULT)
0xDEE75CA5,	//0x0f30		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x5CA6A20D,	//0x0f32		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_add16inc_pp(REG5,REG0,REG1,DEFAULT)
0x5CA7DEE5,	//0x0f34		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_clipu16_rr(REG5,REG4,IN_PARALLEL)
0x5CA5C059,	//0x0f36		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
		//0x0f37		VoC_endloop0
0xE5D8F62C,	//0x0f38		VoC_jump(CII_RMVB_RECON_16x16_105)	|	VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)
		//0x0f3a		CII_RMVB_RECON_16x16_104
0x0F513185,	//0x0f3a		VoC_bez16_r(CII_RMVB_RECON_16x16_105,REG5)
0x00FF0A84,	//0x0f3c		VoC_lw16i(REG4,0xff)
0xF62C60A0,	//0x0f3e		VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0xE88EFFC0,	//0x0f40		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xF782020D,	//0x0f42		VoC_movreg16(REG2,RL6_LO,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0xDEE5020E,	//0x0f44		VoC_clipu16_rr(REG5,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG1,DEFAULT)
0xDEE6020F,	//0x0f46		VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG7,REG0,REG1,DEFAULT)
0xDEE75CA5,	//0x0f48		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x5CA6820D,	//0x0f4a		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)
0x5CA7DEE5,	//0x0f4c		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_clipu16_rr(REG5,REG4,IN_PARALLEL)
0x5CA5C059,	//0x0f4e		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
		//0x0f4f		VoC_endloop0
0xDF03F62C,	//0x0f50		VoC_pop32(REG67,DEFAULT)	|	VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)
		//0x0f51		CII_RMVB_RECON_16x16_105
0xFA0B5F00,	//0x0f52		VoC_shr32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x07ADDF02,	//0x0f54		VoC_sub16_rd(REG5,REG5,0x5d6a)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x07095D6A,	//0x0f56		VoC_add16_rd(REG1,REG1,0x5d6d)(lo)	|	VoC_sub16_rd(REG5,REG5,0x5d6a)(hi)
0x07005D6D,	//0x0f58		VoC_add16_rd(REG0,REG0,0x5d79)(lo)	|	VoC_add16_rd(REG1,REG1,0x5d6d)(hi)
0x31C55D79,	//0x0f5a		VoC_bnez16_r(CII_RMVB_RECON_16x16_103,REG5)(lo)	|	VoC_add16_rd(REG0,REG0,0x5d79)(hi)
0x07A40F1E,	//0x0f5c		VoC_sub16_rd(REG4,REG4,0x5d6a)(lo)	|	VoC_bnez16_r(CII_RMVB_RECON_16x16_103,REG5)(hi)
0x70455D6A,	//0x0f5e		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x5d6a)(hi)
0xC051E182,	//0x0f60		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x18,IN_PARALLEL)
0x0F1E31C4,	//0x0f62		VoC_bnez16_r(CII_RMVB_RECON_16x16_103,REG4)
0xFFC06580,	//0x0f64		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0f66		CII_RMVB_RECON_4x4_ADD
0x17EC0A82,	//0x0f66		VoC_lw16i(REG2,0x17ec)
0x00FF0A85,	//0x0f68		VoC_lw16i(REG5,0xff)
0xF0077032,	//0x0f6a		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xE023E86E,	//0x0f6c		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0x2247A246,	//0x0f6e		VoC_add16inc_pp(REG7,REG1,REG0,DEFAULT)	|	VoC_add16inc_pp(REG6,REG1,REG0,DEFAULT)
0x2246DEEE,	//0x0f70		VoC_add16inc_pp(REG6,REG1,REG0,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0x5CB6DEEF,	//0x0f72		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_clipu16_rr(REG7,REG5,IN_PARALLEL)
0xA247DEEE,	//0x0f74		VoC_add16inc_pp(REG7,REG1,REG0,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xDEEF5CB7,	//0x0f76		VoC_clipu16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0xC0615CB6,	//0x0f78		VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x0f7a		VoC_endloop0
0xDCA75CB7,	//0x0f7a		VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0xA246E023,	//0x0f7c		VoC_add16inc_pp(REG6,REG1,REG0,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0xDEEE2247,	//0x0f7e		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_add16inc_pp(REG7,REG1,REG0,DEFAULT)
0xDEEF2244,	//0x0f80		VoC_clipu16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_add16inc_pp(REG4,REG1,REG0,DEFAULT)
0xDEEC2240,	//0x0f82		VoC_clipu16_rr(REG4,REG5,IN_PARALLEL)	|	VoC_add16inc_pp(REG0,REG1,REG0,DEFAULT)
0x62461401,	//0x0f84		VoC_lw16_d(REG1,0x6246)
0xDEE85CB6,	//0x0f86		VoC_clipu16_rr(REG0,REG5,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDC965CB7,	//0x0f88		VoC_sw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0xDC975CB4,	//0x0f8a		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xDC945CB0,	//0x0f8c		VoC_sw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG0,REG3,DEFAULT)
0xDC90DCA0,	//0x0f8e		VoC_sw16inc_p(REG0,REG1,DEFAULT)	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
0xDCA0DCA0,	//0x0f90		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
0x5CA0DCA0,	//0x0f92		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
0xE580F607,	//0x0f94		VoC_return	|	VoC_movreg16(REG7,REG0,IN_PARALLEL)
		//0x0f96		CII_RMVB_RECON_4x4_DC
0x0A82D800,	//0x0f96		VoC_lw16i(REG2,0x17ec)(lo)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x0A8517EC,	//0x0f98		VoC_lw16i(REG5,0xff)(lo)	|	VoC_lw16i(REG2,0x17ec)(hi)
0x703200FF,	//0x0f9a		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i(REG5,0xff)(hi)
0xE86EF007,	//0x0f9c		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x820EE023,	//0x0f9e		VoC_add16inc_rp(REG6,REG0,REG1,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0xDEEE020F,	//0x0fa0		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_add16inc_rp(REG7,REG0,REG1,DEFAULT)
0xDEEF020E,	//0x0fa2		VoC_clipu16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG0,REG1,DEFAULT)
0xDEEE5CB6,	//0x0fa4		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x5CB7820F,	//0x0fa6		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG1,DEFAULT)
0x5CB6DEEF,	//0x0fa8		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_clipu16_rr(REG7,REG5,IN_PARALLEL)
0x5CB7C061,	//0x0faa		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
		//0x0fab		VoC_endloop0
0xE023DCA7,	//0x0fac		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)
0x020F820E,	//0x0fae		VoC_add16inc_rp(REG7,REG0,REG1,DEFAULT)	|	VoC_add16inc_rp(REG6,REG0,REG1,DEFAULT)
0x020CDEEE,	//0x0fb0		VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0x0208DEEF,	//0x0fb2		VoC_add16inc_rp(REG0,REG0,REG1,DEFAULT)	|	VoC_clipu16_rr(REG7,REG5,IN_PARALLEL)
0x1401DEEC,	//0x0fb4		VoC_lw16_d(REG1,0x6246)(lo)	|	VoC_clipu16_rr(REG4,REG5,IN_PARALLEL)
0x5CB66246,	//0x0fb6		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x6246)(hi)
0x5CB7DEE8,	//0x0fb8		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_clipu16_rr(REG0,REG5,IN_PARALLEL)
0x5CB4DC96,	//0x0fba		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,IN_PARALLEL)
0x5CB0DC97,	//0x0fbc		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)
0xDCA0DC94,	//0x0fbe		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,IN_PARALLEL)
0xDCA0DC90,	//0x0fc0		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_sw16inc_p(REG0,REG1,DEFAULT)
0xDCA0DCA0,	//0x0fc2		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
0xF6075CA0,	//0x0fc4		VoC_movreg16(REG7,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
0xF064E580,	//0x0fc6		VoC_lw16i_short(REG4,0x3,DEFAULT)	|	VoC_return
		//0x0fc7		CII_RMVB_IntraPred_4x4_FUNC
0x3414FFC0,	//0x0fc8		VoC_bgt16_rr(RMVB_LumaIntraPred_4x4_CaCu_104,REG2,REG4)(lo)	|	VoC_NOP
0x31C21081,	//0x0fca		VoC_bnez16_r(RMVB_LumaIntraPred_4x4_CaCu_101,REG2)(lo)	|	VoC_bgt16_rr(RMVB_LumaIntraPred_4x4_CaCu_104,REG2,REG4)(hi)
0x70300FF6,	//0x0fcc		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_bnez16_r(RMVB_LumaIntraPred_4x4_CaCu_101,REG2)(hi)
0x6E13F005,	//0x0fce		VoC_bnez16_d(RMVB_LumaIntraPred_4x4_CaCu_100DC1,0x17ea)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x6E0917EA,	//0x0fd0		VoC_bnez16_d(RMVB_LumaIntraPred_4x4_CaCu_100DC0,0x17eb)(lo)	|	VoC_bnez16_d(RMVB_LumaIntraPred_4x4_CaCu_100DC1,0x17ea)(hi)
0x705317EB,	//0x0fd2		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_bnez16_d(RMVB_LumaIntraPred_4x4_CaCu_100DC0,0x17eb)(hi)
0xE882E044,	//0x0fd4		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_short(REG4,0x4,IN_PARALLEL)
0x830C8304,	//0x0fd6		VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
		//0x0fd7		VoC_endloop0
0xE5D6F81C,	//0x0fd8		VoC_jump(RMVB_LumaIntraPred_4x4_CaCu_100DC3)	|	VoC_shr16_ri(REG4,0x3,DEFAULT)
		//0x0fda		RMVB_LumaIntraPred_4x4_CaCu_100DC0
0xE0247053,	//0x0fda		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0x830C830C,	//0x0fdc		VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)
0x830C830C,	//0x0fde		VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)
0xE5CEF814,	//0x0fe0		VoC_jump(RMVB_LumaIntraPred_4x4_CaCu_100DC3)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
		//0x0fe2		RMVB_LumaIntraPred_4x4_CaCu_100DC1
0x17EB6E0A,	//0x0fe2		VoC_bnez16_d(RMVB_LumaIntraPred_4x4_CaCu_100DC2,0x17eb)
0xE0247053,	//0x0fe4		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0x83048304,	//0x0fe6		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
0x83048304,	//0x0fe8		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
0xE5C4F814,	//0x0fea		VoC_jump(RMVB_LumaIntraPred_4x4_CaCu_100DC3)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
		//0x0fec		RMVB_LumaIntraPred_4x4_CaCu_100DC2
0x00800A84,	//0x0fec		VoC_lw16i(REG4,0x80)
0xE085F053,	//0x0fee		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
		//0x0fef		RMVB_LumaIntraPred_4x4_CaCu_100DC3
0xDDDAE884,	//0x0ff0		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC0FBDDDA,	//0x0ff2		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x0ff4		VoC_endloop0
0xE580FFC0,	//0x0ff4		VoC_return	|	VoC_NOP
		//0x0ff6		RMVB_LumaIntraPred_4x4_CaCu_101
0x5D6A4502,	//0x0ff6		VoC_bne16_rd(RMVB_LumaIntraPred_4x4_CaCu_102,REG2,0x5d6a)
0xF033F031,	//0x0ff8		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xD895D894,	//0x0ffa		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD892D896,	//0x0ffc		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xDCB4E886,	//0x0ffe		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCB6DCB5,	//0x1000		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xC0FBDCB2,	//0x1002		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
		//0x1004		VoC_endloop0
0xE580FFC0,	//0x1004		VoC_return	|	VoC_NOP
		//0x1006		RMVB_LumaIntraPred_4x4_CaCu_102
0x5D6B4502,	//0x1006		VoC_bne16_rd(RMVB_LumaIntraPred_4x4_CaCu_103,REG2,0x5d6b)
0xF053F030,	//0x1008		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xE085D884,	//0x100a		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDDDAE866,	//0x100c		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xD8845DDA,	//0x100e		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xF68540FB,	//0x1010		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
		//0x1012		VoC_endloop0
0xDDDAFFC0,	//0x1012		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_NOP
0xE580DDDA,	//0x1014		VoC_return	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x1016		RMVB_LumaIntraPred_4x4_CaCu_103
0xF0057030,	//0x1016		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x62440A82,	//0x1018		VoC_lw16i(REG2,0x6244)
0xE0275805,	//0x101a		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
0xD822D896,	//0x101c		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xC09541AC,	//0x101e		VoC_add16_rr(REG5,REG2,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG6,REG5,DEFAULT)
0xC13CC12C,	//0x1020		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x071DF814,	//0x1022		VoC_add16_rd(REG5,REG3,0x1cad)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071F1CAD,	//0x1024		VoC_add16_rd(REG7,REG3,0x1cb2)(lo)	|	VoC_add16_rd(REG5,REG3,0x1cad)(hi)
0xDC341CB2,	//0x1026		VoC_sw16_p(REG4,REG3,DEFAULT)	|	VoC_add16_rd(REG7,REG3,0x1cb2)(hi)
0x071DDC54,	//0x1028		VoC_add16_rd(REG5,REG3,0x1cb7)(lo)	|	VoC_sw16_p(REG4,REG5,DEFAULT)
0x5C741CB7,	//0x102a		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG5,REG3,0x1cb7)(hi)
0x5C54E027,	//0x102c		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x40ACD895,	//0x102e		VoC_add16_rr(REG4,REG2,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
0x4114C1B2,	//0x1030		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG6,REG6,IN_PARALLEL)
0x413CE012,	//0x1032		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0xF814C0D2,	//0x1034		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG2,REG3,REG2,IN_PARALLEL)
0x1CAE071F,	//0x1036		VoC_add16_rd(REG7,REG3,0x1cae)
0x071ADC24,	//0x1038		VoC_add16_rd(REG2,REG3,0x1cb3)(lo)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0x5C741CB3,	//0x103a		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG2,REG3,0x1cb3)(hi)
0x5C24E027,	//0x103c		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x40B4D892,	//0x103e		VoC_add16_rr(REG4,REG2,REG6,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,IN_PARALLEL)
0x4134C16E,	//0x1040		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG5,IN_PARALLEL)
0x413CE026,	//0x1042		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG6,0x2,IN_PARALLEL)
0xF814C0F7,	//0x1044		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG7,REG3,REG6,IN_PARALLEL)
0x1CAF071E,	//0x1046		VoC_add16_rd(REG6,REG3,0x1caf)
0xE0275C74,	//0x1048		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0xD8965C64,	//0x104a		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
0xC0964174,	//0x104c		VoC_add16_rr(REG6,REG2,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG5,REG6,DEFAULT)
0xE0364134,	//0x104e		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC0F7413C,	//0x1050		VoC_add16_rr(REG7,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xD8867814,	//0x1052		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x62440A82,	//0x1054		VoC_lw16i(REG2,0x6244)
0xD8855C74,	//0x1056		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0xE0275822,	//0x1058		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xC1B240AC,	//0x105a		VoC_add16_rr(REG2,REG6,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG5,DEFAULT)
0xC13CC114,	//0x105c		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x071AF814,	//0x105e		VoC_add16_rd(REG2,REG3,0x1cac)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071F1CAC,	//0x1060		VoC_add16_rd(REG7,REG3,0x1cb1)(lo)	|	VoC_add16_rd(REG2,REG3,0x1cac)(hi)
0xDC241CB1,	//0x1062		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_add16_rd(REG7,REG3,0x1cb1)(hi)
0x1CB6071A,	//0x1064		VoC_add16_rd(REG2,REG3,0x1cb6)
0xE0275C74,	//0x1066		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0xD8825C24,	//0x1068		VoC_lw16inc_p(REG2,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0xC16E40B4,	//0x106a		VoC_add16_rr(REG6,REG5,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG6,DEFAULT)
0xC13CC134,	//0x106c		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x071FF814,	//0x106e		VoC_add16_rd(REG7,REG3,0x1cb0)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071E1CB0,	//0x1070		VoC_add16_rd(REG6,REG3,0x1cb5)(lo)	|	VoC_add16_rd(REG7,REG3,0x1cb0)(hi)
0x5C741CB5,	//0x1072		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x1cb5)(hi)
0x5C64E027,	//0x1074		VoC_sw16_p(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x4174D886,	//0x1076		VoC_add16_rr(REG4,REG5,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0xC134C096,	//0x1078		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG2,REG2,IN_PARALLEL)
0xF814C13C,	//0x107a		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x1CB4071F,	//0x107c		VoC_add16_rd(REG7,REG3,0x1cb4)
0xDC74FFC0,	//0x107e		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_NOP
0xF087E580,	//0x1080		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_return
		//0x1081		RMVB_LumaIntraPred_4x4_CaCu_104
0x3597FFC0,	//0x1082		VoC_bne16_rr(RMVB_LumaIntraPred_4x4_CaCu_105,REG2,REG7)(lo)	|	VoC_NOP
0x70301115,	//0x1084		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_bne16_rr(RMVB_LumaIntraPred_4x4_CaCu_105,REG2,REG7)(hi)
0xF082F005,	//0x1086		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xD885D894,	//0x1088		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD887D896,	//0x108a		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xC17D4134,	//0x108c		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC17D4134,	//0x108e		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xFF1E4114,	//0x1090		VoC_movreg32(RL6,REG67,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0xD887D896,	//0x1092		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xC17D4134,	//0x1094		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xFF32412A,	//0x1096		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG4,REG5,DEFAULT)
0x4134F81A,	//0x1098		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG2,0x3,DEFAULT)
0x5C32C17D,	//0x109a		VoC_sw16_p(REG2,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x4134E042,	//0x109c		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,IN_PARALLEL)
0x4114C17D,	//0x109e		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xD896FF1E,	//0x10a0		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_movreg32(RL6,REG67,IN_PARALLEL)
0x4134D887,	//0x10a2		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0x412CC17D,	//0x10a4		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x781CE015,	//0x10a6		VoC_shr16_ri(REG4,0x3,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x071AC15D,	//0x10a8		VoC_add16_rd(REG2,REG3,0x1cac)(lo)	|	VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)
0x5C541CAC,	//0x10aa		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_add16_rd(REG2,REG3,0x1cac)(hi)
0x5C24E042,	//0x10ac		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,IN_PARALLEL)
0x4134FF32,	//0x10ae		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0x4134C17D,	//0x10b0		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x4114C17D,	//0x10b2		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xD896FF1E,	//0x10b4		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_movreg32(RL6,REG67,IN_PARALLEL)
0x4134D887,	//0x10b6		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0x412CC17D,	//0x10b8		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x781CE025,	//0x10ba		VoC_shr16_ri(REG4,0x3,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,IN_PARALLEL)
0x071AC15D,	//0x10bc		VoC_add16_rd(REG2,REG3,0x1cad)(lo)	|	VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)
0xDC541CAD,	//0x10be		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_add16_rd(REG2,REG3,0x1cad)(hi)
0x1CB0071D,	//0x10c0		VoC_add16_rd(REG5,REG3,0x1cb0)
0xE0425C24,	//0x10c2		VoC_lw16i_short(REG2,0x4,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0xFF325C54,	//0x10c4		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG5,DEFAULT)
0xC17D4134,	//0x10c6		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC17D4134,	//0x10c8		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xFF1E4114,	//0x10ca		VoC_movreg32(RL6,REG67,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0xD887D896,	//0x10cc		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xC17D4134,	//0x10ce		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xE035412C,	//0x10d0		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xC15D781C,	//0x10d2		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x3,DEFAULT)
0x1CAE071A,	//0x10d4		VoC_add16_rd(REG2,REG3,0x1cae)
0x071DDC54,	//0x10d6		VoC_add16_rd(REG5,REG3,0x1cb1)(lo)	|	VoC_sw16_p(REG4,REG5,DEFAULT)
0xDC241CB1,	//0x10d8		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_add16_rd(REG5,REG3,0x1cb1)(hi)
0x1CB4071A,	//0x10da		VoC_add16_rd(REG2,REG3,0x1cb4)
0xFF325C54,	//0x10dc		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG5,DEFAULT)
0xE0425C24,	//0x10de		VoC_lw16i_short(REG2,0x4,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0xC17D4134,	//0x10e0		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC17D4134,	//0x10e2		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xFF1E4114,	//0x10e4		VoC_movreg32(RL6,REG67,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0xD887D896,	//0x10e6		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xC17D4134,	//0x10e8		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xF81CC12C,	//0x10ea		VoC_shr16_ri(REG4,0x3,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x1CAF071D,	//0x10ec		VoC_add16_rd(REG5,REG3,0x1caf)
0x1CB2071A,	//0x10ee		VoC_add16_rd(REG2,REG3,0x1cb2)
0x071DDC54,	//0x10f0		VoC_add16_rd(REG5,REG3,0x1cb5)(lo)	|	VoC_sw16_p(REG4,REG5,DEFAULT)
0x5C241CB5,	//0x10f2		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_add16_rd(REG5,REG3,0x1cb5)(hi)
0x5C54E042,	//0x10f4		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,IN_PARALLEL)
0x4134FF32,	//0x10f6		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0x4134C17D,	//0x10f8		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x4114C17D,	//0x10fa		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xD896FF1E,	//0x10fc		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_movreg32(RL6,REG67,IN_PARALLEL)
0x4134D887,	//0x10fe		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0xC12CC17D,	//0x1100		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x071AF81C,	//0x1102		VoC_add16_rd(REG2,REG3,0x1cb3)(lo)	|	VoC_shr16_ri(REG4,0x3,DEFAULT)
0x071D1CB3,	//0x1104		VoC_add16_rd(REG5,REG3,0x1cb6)(lo)	|	VoC_add16_rd(REG2,REG3,0x1cb3)(hi)
0x5C241CB6,	//0x1106		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_add16_rd(REG5,REG3,0x1cb6)(hi)
0x5C54E022,	//0x1108		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,IN_PARALLEL)
0x4134FF32,	//0x110a		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0xC12CC17D,	//0x110c		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xF814C114,	//0x110e		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x1CB7071D,	//0x1110		VoC_add16_rd(REG5,REG3,0x1cb7)
0xDC54FFC0,	//0x1112		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_NOP
0xF0A7E580,	//0x1114		VoC_lw16i_short(REG7,0x5,DEFAULT)	|	VoC_return
		//0x1115		RMVB_LumaIntraPred_4x4_CaCu_105
0x3597FFC0,	//0x1116		VoC_bne16_rr(RMVB_LumaIntraPred_4x4_CaCu_106,REG2,REG7)(lo)	|	VoC_NOP
0x7030118C,	//0x1118		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_bne16_rr(RMVB_LumaIntraPred_4x4_CaCu_106,REG2,REG7)(hi)
0x0A82F005,	//0x111a		VoC_lw16i(REG2,0x6244)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x58056244,	//0x111c		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_lw16i(REG2,0x6244)(hi)
0xD896E017,	//0x111e		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x40B4D822,	//0x1120		VoC_add16_rr(REG4,REG2,REG6,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x413CC155,	//0x1122		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)
0xF80CC165,	//0x1124		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0x1CB1071F,	//0x1126		VoC_add16_rd(REG7,REG3,0x1cb1)
0x5C74DC34,	//0x1128		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
0xC17CE027,	//0x112a		VoC_add16_rr(REG4,REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x071FF814,	//0x112c		VoC_add16_rd(REG7,REG3,0x1cac)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071D1CAC,	//0x112e		VoC_add16_rd(REG5,REG3,0x1cb5)(lo)	|	VoC_add16_rd(REG7,REG3,0x1cac)(hi)
0x5C741CB5,	//0x1130		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG5,REG3,0x1cb5)(hi)
0x5C54E017,	//0x1132		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x41ACD895,	//0x1134		VoC_add16_rr(REG4,REG6,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
0x413CC192,	//0x1136		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG2,REG6,REG2,IN_PARALLEL)
0x780CC0A2,	//0x1138		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0xE04EC0FF,	//0x113a		VoC_movreg16(RL7_LO,REG2,DEFAULT)	|	VoC_add16_rr(REG7,REG3,REG7,IN_PARALLEL)
0x1CB2071A,	//0x113c		VoC_add16_rd(REG2,REG3,0x1cb2)
0xE0275C74,	//0x113e		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0xF7C45C24,	//0x1140		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0xF814C13C,	//0x1142		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x1CAD071A,	//0x1144		VoC_add16_rd(REG2,REG3,0x1cad)
0x1CB6071F,	//0x1146		VoC_add16_rd(REG7,REG3,0x1cb6)
0xD8925C24,	//0x1148		VoC_lw16inc_p(REG2,REG1,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0xE0175C74,	//0x114a		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0xC1AE4154,	//0x114c		VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG5,REG2,DEFAULT)
0xC1A6413C,	//0x114e		VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xE027780C,	//0x1150		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC0FF60CE,	//0x1152		VoC_add16_rr(REG7,REG3,REG7,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
0x1CB3071E,	//0x1154		VoC_add16_rd(REG6,REG3,0x1cb3)
0xE0275C74,	//0x1156		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0xF7C45C64,	//0x1158		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
0xF814C13C,	//0x115a		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x1CAE071E,	//0x115c		VoC_add16_rd(REG6,REG3,0x1cae)
0x1CB7071F,	//0x115e		VoC_add16_rd(REG7,REG3,0x1cb7)
0xD8965C64,	//0x1160		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
0xE0175C74,	//0x1162		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0xC15540B4,	//0x1164		VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG6,DEFAULT)
0xC165413C,	//0x1166		VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xE037780C,	//0x1168		VoC_lw16i_short(REG7,0x3,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xF047C0FF,	//0x116a		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_add16_rr(REG7,REG3,REG7,DEFAULT)
0xC17CDC74,	//0x116c		VoC_add16_rr(REG4,REG5,REG7,DEFAULT)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0x071FF814,	//0x116e		VoC_add16_rd(REG7,REG3,0x1caf)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x0A821CAF,	//0x1170		VoC_lw16i(REG2,0x6244)(lo)	|	VoC_add16_rd(REG7,REG3,0x1caf)(hi)
0x5C746244,	//0x1172		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_lw16i(REG2,0x6244)(hi)
0x7047D886,	//0x1174		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0xD822D885,	//0x1176		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
0xC1B240AC,	//0x1178		VoC_add16_rr(REG2,REG6,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG5,DEFAULT)
0xC13CC114,	//0x117a		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x071AF814,	//0x117c		VoC_add16_rd(REG2,REG3,0x1cb0)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xF0471CB0,	//0x117e		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_add16_rd(REG2,REG3,0x1cb0)(hi)
0xD8825C24,	//0x1180		VoC_lw16inc_p(REG2,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0xC16E40B4,	//0x1182		VoC_add16_rr(REG6,REG5,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG6,DEFAULT)
0xC13CC134,	//0x1184		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x071FF814,	//0x1186		VoC_add16_rd(REG7,REG3,0x1cb4)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xFFC01CB4,	//0x1188		VoC_NOP	|	VoC_add16_rd(REG7,REG3,0x1cb4)(hi)
0xE580DC74,	//0x118a		VoC_return	|	VoC_sw16_p(REG4,REG7,DEFAULT)
		//0x118c		RMVB_LumaIntraPred_4x4_CaCu_106
0xFFC0F0C7,	//0x118c		VoC_NOP	|	VoC_lw16i_short(REG7,0x6,DEFAULT)
0x12103597,	//0x118e		VoC_bne16_rr(RMVB_LumaIntraPred_4x4_CaCu_107,REG2,REG7)
0xF0057030,	//0x1190		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x5896DF40,	//0x1192		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xD895E017,	//0x1194		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xD896D892,	//0x1196		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xC0B54154,	//0x1198		VoC_add16_rr(REG5,REG2,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG5,REG2,DEFAULT)
0xC165413C,	//0x119a		VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xC0FF780C,	//0x119c		VoC_add16_rr(REG7,REG3,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x071DE0AE,	//0x119e		VoC_add16_rd(REG5,REG3,0x1cb0)(lo)	|	VoC_movreg16(RL7_LO,REG5,DEFAULT)
0x5C741CB0,	//0x11a0		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG5,REG3,0x1cb0)(hi)
0x5C54E027,	//0x11a2		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0xC13CF7C4,	//0x11a4		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)
0x071FF814,	//0x11a6		VoC_add16_rd(REG7,REG3,0x1cad)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071D1CAD,	//0x11a8		VoC_add16_rd(REG5,REG3,0x1cb4)(lo)	|	VoC_add16_rd(REG7,REG3,0x1cad)(hi)
0x5C741CB4,	//0x11aa		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG5,REG3,0x1cb4)(hi)
0x5C54E017,	//0x11ac		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x40B4D895,	//0x11ae		VoC_add16_rr(REG4,REG2,REG6,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
0x413CC1AA,	//0x11b0		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG2,REG6,REG5,IN_PARALLEL)
0x780CC0A2,	//0x11b2		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0x40FFE027,	//0x11b4		VoC_add16_rr(REG7,REG3,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x071AF64E,	//0x11b6		VoC_add16_rd(REG2,REG3,0x1cb1)(lo)	|	VoC_movreg16(RL7_LO,REG2,IN_PARALLEL)
0x5C741CB1,	//0x11b8		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG2,REG3,0x1cb1)(hi)
0x5C24E027,	//0x11ba		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0xC13CF7C4,	//0x11bc		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)
0x071FF814,	//0x11be		VoC_add16_rd(REG7,REG3,0x1cae)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071A1CAE,	//0x11c0		VoC_add16_rd(REG2,REG3,0x1cb5)(lo)	|	VoC_add16_rd(REG7,REG3,0x1cae)(hi)
0x5C741CB5,	//0x11c2		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG2,REG3,0x1cb5)(hi)
0x5C24E017,	//0x11c4		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x41ACD892,	//0x11c6		VoC_add16_rr(REG4,REG6,REG5,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,IN_PARALLEL)
0x413CC156,	//0x11c8		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG2,IN_PARALLEL)
0x780CC1A6,	//0x11ca		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)
0x40FFE037,	//0x11cc		VoC_add16_rr(REG7,REG3,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x3,IN_PARALLEL)
0x071EF6CE,	//0x11ce		VoC_add16_rd(REG6,REG3,0x1cb2)(lo)	|	VoC_movreg16(RL7_LO,REG6,IN_PARALLEL)
0x5C741CB2,	//0x11d0		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x1cb2)(hi)
0x5C64E027,	//0x11d2		VoC_sw16_p(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0xC13CF7C4,	//0x11d4		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)
0x071FF814,	//0x11d6		VoC_add16_rd(REG7,REG3,0x1caf)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071E1CAF,	//0x11d8		VoC_add16_rd(REG6,REG3,0x1cb6)(lo)	|	VoC_add16_rd(REG7,REG3,0x1caf)(hi)
0x5C741CB6,	//0x11da		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x1cb6)(hi)
0x5C64E017,	//0x11dc		VoC_sw16_p(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x4154D896,	//0x11de		VoC_add16_rr(REG4,REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
0x413CC0B5,	//0x11e0		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG2,REG6,IN_PARALLEL)
0x780CC165,	//0x11e2		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0x071FDF00,	//0x11e4		VoC_add16_rd(REG7,REG3,0x1cb3)(lo)	|	VoC_pop32(REG01,IN_PARALLEL)
0xF0421CB3,	//0x11e6		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_add16_rd(REG7,REG3,0x1cb3)(hi)
0xC1555C74,	//0x11e8		VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0x071FF815,	//0x11ea		VoC_add16_rd(REG7,REG3,0x1cb7)(lo)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0xD8941CB7,	//0x11ec		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rd(REG7,REG3,0x1cb7)(hi)
0xD8855C75,	//0x11ee		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG7,DEFAULT)
0x412AD895,	//0x11f0		VoC_add16_rr(REG2,REG4,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x4092D886,	//0x11f2		VoC_add16_rr(REG2,REG2,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0x5F42D887,	//0x11f4		VoC_push32(REG45,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)
0x41BCC0BA,	//0x11f6		VoC_add16_rr(REG4,REG6,REG7,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)
0x40A2D886,	//0x11f8		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0x40B2E045,	//0x11fa		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0x40AAC1BC,	//0x11fc		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_add16_rr(REG4,REG6,REG7,IN_PARALLEL)
0x781AC134,	//0x11fe		VoC_shr16_ri(REG2,0x3,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)
0x412CDF03,	//0x1200		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0x412CC1BD,	//0x1202		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG6,REG7,IN_PARALLEL)
0x413CD895,	//0x1204		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
0x412CD886,	//0x1206		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0xC134E045,	//0x1208		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0x1CAC071D,	//0x120a		VoC_add16_rd(REG5,REG3,0x1cac)
0xDC32F81C,	//0x120c		VoC_sw16_p(REG2,REG3,DEFAULT)	|	VoC_shr16_ri(REG4,0x3,DEFAULT)
0xE580DC54,	//0x120e		VoC_return	|	VoC_sw16_p(REG4,REG5,DEFAULT)
		//0x1210		RMVB_LumaIntraPred_4x4_CaCu_107
0xFFC0F0E7,	//0x1210		VoC_NOP	|	VoC_lw16i_short(REG7,0x7,DEFAULT)
0x129C3597,	//0x1212		VoC_bne16_rr(RMVB_LumaIntraPred_4x4_CaCu_108,REG2,REG7)
0xF0057030,	//0x1214		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xD894F082,	//0x1216		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xD885D894,	//0x1218		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD887D896,	//0x121a		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xC1744112,	//0x121c		VoC_add16_rr(REG4,REG5,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG4,REG2,DEFAULT)
0xC13C008A,	//0x121e		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_add16_rp(REG2,REG2,REG1,DEFAULT)
0x4112C124,	//0x1220		VoC_add16_rr(REG2,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG4,DEFAULT)
0xF81AD894,	//0x1222		VoC_shr16_ri(REG2,0x3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
0x8186814D,	//0x1224		VoC_add16_rp(REG6,REG6,REG0,DEFAULT)	|	VoC_add16_rp(REG5,REG5,REG1,DEFAULT)
0xE0425C32,	//0x1226		VoC_lw16i_short(REG2,0x4,IN_PARALLEL)	|	VoC_sw16_p(REG2,REG3,DEFAULT)
0xC1E64175,	//0x1228		VoC_add16_rr(REG6,REG7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xC1B64155,	//0x122a		VoC_add16_rr(REG6,REG6,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0xE0164172,	//0x122c		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG5,REG6,DEFAULT)
0xC0F6781A,	//0x122e		VoC_add16_rr(REG6,REG3,REG6,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x3,DEFAULT)
0x5C62D895,	//0x1230		VoC_sw16_p(REG2,REG6,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x4114E042,	//0x1232		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,IN_PARALLEL)
0x010C8142,	//0x1234		VoC_add16_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_add16_rp(REG2,REG5,REG0,IN_PARALLEL)
0x4092C0BA,	//0x1236		VoC_add16_rr(REG2,REG2,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)
0x40A2E046,	//0x1238		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i_short(REG6,0x4,IN_PARALLEL)
0x781AE024,	//0x123a		VoC_shr16_ri(REG2,0x3,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,IN_PARALLEL)
0x071EC0E4,	//0x123c		VoC_add16_rd(REG6,REG3,0x1cac)(lo)	|	VoC_add16_rr(REG4,REG3,REG4,IN_PARALLEL)
0x5C421CAC,	//0x123e		VoC_sw16_p(REG2,REG4,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x1cac)(hi)
0x5C62D884,	//0x1240		VoC_sw16_p(REG2,REG6,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0x417FD896,	//0x1242		VoC_add16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
0x01CFE025,	//0x1244		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,IN_PARALLEL)
0x01C7C175,	//0x1246		VoC_add16_rp(REG7,REG7,REG0,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)
0x416DC165,	//0x1248		VoC_add16_rr(REG5,REG5,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0xC17DE032,	//0x124a		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG2,0x3,IN_PARALLEL)
0xC0D2781D,	//0x124c		VoC_add16_rr(REG2,REG3,REG2,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x3,DEFAULT)
0x1CAD071F,	//0x124e		VoC_add16_rd(REG7,REG3,0x1cad)
0xD8925C25,	//0x1250		VoC_lw16inc_p(REG2,REG1,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG2,DEFAULT)
0xE0475C75,	//0x1252		VoC_lw16i_short(REG7,0x4,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG7,DEFAULT)
0x808741BE,	//0x1254		VoC_add16_rp(REG7,REG2,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xC1E7018E,	//0x1256		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0xC1F7C1FF,	//0x1258		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG7,DEFAULT)
0x071DF81F,	//0x125a		VoC_add16_rd(REG5,REG3,0x1cae)(lo)	|	VoC_shr16_ri(REG7,0x3,DEFAULT)
0x071E1CAE,	//0x125c		VoC_add16_rd(REG6,REG3,0x1cb0)(lo)	|	VoC_add16_rd(REG5,REG3,0x1cae)(hi)
0x5C571CB0,	//0x125e		VoC_sw16_p(REG7,REG5,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x1cb0)(hi)
0x5C67D885,	//0x1260		VoC_sw16_p(REG7,REG6,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
0x413CE047,	//0x1262		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x4,IN_PARALLEL)
0x4114814F,	//0x1264		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rp(REG7,REG5,REG1,IN_PARALLEL)
0xC1BEC1FE,	//0x1266		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG7,IN_PARALLEL)
0xF81EC1A6,	//0x1268		VoC_shr16_ri(REG6,0x3,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x1CAF071F,	//0x126a		VoC_add16_rd(REG7,REG3,0x1caf)
0x1CB1071C,	//0x126c		VoC_add16_rd(REG4,REG3,0x1cb1)
0xD8875C76,	//0x126e		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG7,DEFAULT)
0xE0245C46,	//0x1270		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG4,DEFAULT)
0xC17C40A2,	//0x1272		VoC_add16_rr(REG4,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xC114810C,	//0x1274		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rp(REG4,REG4,REG1,DEFAULT)
0x071AF814,	//0x1276		VoC_add16_rd(REG2,REG3,0x1cb4)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071E1CB4,	//0x1278		VoC_add16_rd(REG6,REG3,0x1cb2)(lo)	|	VoC_add16_rd(REG2,REG3,0x1cb4)(hi)
0x5C241CB2,	//0x127a		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x1cb2)(hi)
0x5C64D882,	//0x127c		VoC_sw16_p(REG4,REG6,DEFAULT)	|	VoC_lw16inc_p(REG2,REG0,IN_PARALLEL)
0x4174E026,	//0x127e		VoC_add16_rr(REG4,REG5,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x2,IN_PARALLEL)
0xC12CC1D5,	//0x1280		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG7,REG2,IN_PARALLEL)
0xF814C13C,	//0x1282		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x1CB3071E,	//0x1284		VoC_add16_rd(REG6,REG3,0x1cb3)
0x1CB5071D,	//0x1286		VoC_add16_rd(REG5,REG3,0x1cb5)
0xE0165C64,	//0x1288		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
0xC1BE5C54,	//0x128a		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG5,DEFAULT)
0xF80EC196,	//0x128c		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0x1CB6071D,	//0x128e		VoC_add16_rd(REG5,REG3,0x1cb6)
0x808741D4,	//0x1290		VoC_add16_rp(REG7,REG2,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG7,REG2,DEFAULT)
0xE0255C56,	//0x1292		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG5,DEFAULT)
0xC13CC12C,	//0x1294		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x1CB7071D,	//0x1296		VoC_add16_rd(REG5,REG3,0x1cb7)
0xFFC0F814,	//0x1298		VoC_NOP	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xE580DC54,	//0x129a		VoC_return	|	VoC_sw16_p(REG4,REG5,DEFAULT)
		//0x129c		RMVB_LumaIntraPred_4x4_CaCu_108
0xF0057030,	//0x129c		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x62440A82,	//0x129e		VoC_lw16i(REG2,0x6244)
0xE0275805,	//0x12a0		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
0xD822D896,	//0x12a2		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xC09541AC,	//0x12a4		VoC_add16_rr(REG5,REG2,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG6,REG5,DEFAULT)
0xE015412C,	//0x12a6		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xC0EF413C,	//0x12a8		VoC_add16_rr(REG7,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x071DF814,	//0x12aa		VoC_add16_rd(REG5,REG3,0x1caf)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x5C741CAF,	//0x12ac		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG5,REG3,0x1caf)(hi)
0x5C54E027,	//0x12ae		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x40ACD895,	//0x12b0		VoC_add16_rr(REG4,REG2,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
0x4114C1B2,	//0x12b2		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG6,REG6,IN_PARALLEL)
0x413CE022,	//0x12b4		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,IN_PARALLEL)
0xF814C0D2,	//0x12b6		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG2,REG3,REG2,IN_PARALLEL)
0x5C24F047,	//0x12b8		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x40B4D892,	//0x12ba		VoC_add16_rr(REG4,REG2,REG6,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,IN_PARALLEL)
0x4134C16E,	//0x12bc		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG5,IN_PARALLEL)
0x413CE036,	//0x12be		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG6,0x3,IN_PARALLEL)
0x7814C0F6,	//0x12c0		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG6,IN_PARALLEL)
0x0A82E017,	//0x12c2		VoC_lw16i(REG2,0x6244)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x5C646244,	//0x12c4		VoC_sw16_p(REG4,REG6,DEFAULT)	|	VoC_lw16i(REG2,0x6244)(hi)
0xD885D886,	//0x12c6		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0x40B4D822,	//0x12c8		VoC_add16_rr(REG4,REG2,REG6,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x413CC1AA,	//0x12ca		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG2,REG6,REG5,IN_PARALLEL)
0xF80CC0A2,	//0x12cc		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0x1CAE071F,	//0x12ce		VoC_add16_rd(REG7,REG3,0x1cae)
0x5C74DC34,	//0x12d0		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
0xC0BCE027,	//0x12d2		VoC_add16_rr(REG4,REG2,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x071FF814,	//0x12d4		VoC_add16_rd(REG7,REG3,0x1cad)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071A1CAD,	//0x12d6		VoC_add16_rd(REG2,REG3,0x1cb3)(lo)	|	VoC_add16_rd(REG7,REG3,0x1cad)(hi)
0x5C741CB3,	//0x12d8		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG2,REG3,0x1cb3)(hi)
0x5C24E017,	//0x12da		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x41ACD882,	//0x12dc		VoC_add16_rr(REG4,REG6,REG5,DEFAULT)	|	VoC_lw16inc_p(REG2,REG0,IN_PARALLEL)
0x413CC156,	//0x12de		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG2,IN_PARALLEL)
0x780CC1A6,	//0x12e0		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)
0x071FF6CE,	//0x12e2		VoC_add16_rd(REG7,REG3,0x1cac)(lo)	|	VoC_movreg16(RL7_LO,REG6,IN_PARALLEL)
0x071E1CAC,	//0x12e4		VoC_add16_rd(REG6,REG3,0x1cb2)(lo)	|	VoC_add16_rd(REG7,REG3,0x1cac)(hi)
0x5C741CB2,	//0x12e6		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x1cb2)(hi)
0x5C64E027,	//0x12e8		VoC_sw16_p(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0xC13CF7C4,	//0x12ea		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)
0x071FF814,	//0x12ec		VoC_add16_rd(REG7,REG3,0x1cb1)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x071E1CB1,	//0x12ee		VoC_add16_rd(REG6,REG3,0x1cb7)(lo)	|	VoC_add16_rd(REG7,REG3,0x1cb1)(hi)
0x5C741CB7,	//0x12f0		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x1cb7)(hi)
0x5C64E017,	//0x12f2		VoC_sw16_p(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x4154D886,	//0x12f4		VoC_add16_rr(REG4,REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0x413CC0B5,	//0x12f6		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG2,REG6,IN_PARALLEL)
0xC12AC17D,	//0x12f8		VoC_add16_rr(REG2,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x071EF812,	//0x12fa		VoC_add16_rd(REG6,REG3,0x1cb5)(lo)	|	VoC_shr16_ri(REG2,0x2,DEFAULT)
0x780C1CB5,	//0x12fc		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x1cb5)(hi)
0xDC62F80D,	//0x12fe		VoC_sw16_p(REG2,REG6,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0x1CB4071E,	//0x1300		VoC_add16_rd(REG6,REG3,0x1cb4)
0x1CB0071F,	//0x1302		VoC_add16_rd(REG7,REG3,0x1cb0)
0x1CB6071A,	//0x1304		VoC_add16_rd(REG2,REG3,0x1cb6)
0xDC74DC65,	//0x1306		VoC_sw16_p(REG4,REG7,DEFAULT)	|	VoC_sw16_p(REG5,REG6,DEFAULT)
0xE580DC24,	//0x1308		VoC_return	|	VoC_sw16_p(REG4,REG2,DEFAULT)
		//0x130a		CII_RMVB_InterPred_FUNC
0xE0335FE9,	//0x130a		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0CAF1407,	//0x130c		VoC_lw16_d(REG7,0xcaf)
0xE41DE41C,	//0x130e		VoC_and16_rr(REG5,REG3,DEFAULT)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x142931C7,	//0x1310		VoC_bnez16_r(RMVB_InterPred_FUNC_END,REG7)
0x135B31C5,	//0x1312		VoC_bnez16_r(RMVB_InterPred_FUNC_Y01,REG5)
0x133831C4,	//0x1314		VoC_bnez16_r(RMVB_InterPred_FUNC_X01Y00,REG4)
0xE2237104,	//0x1316		VoC_lw16i_short(REG3,0x22,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x5D794432,	//0x1318		VoC_bne16_rd(RMVB_InterPred_FUNC_X00Y00_100,REG2,0x5d79)
0x00320A83,	//0x131a		VoC_lw16i(REG3,0x32)
0xFFC07004,	//0x131c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x131e		RMVB_InterPred_FUNC_X00Y00_100
0xE0634018,	//0x131e		VoC_lw16i_short(REG3,0x6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xF0057030,	//0x1320		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x13332E11,	//0x1322		VoC_loop_r(1,REG2)
0xF8125FC2,	//0x1324		VoC_shr16_ri(REG2,0x2,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xD886D885,	//0x1326		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xE687FFC0,	//0x1328		VoC_loop_r_short(REG2,DEFAULT)	|	VoC_NAD
0xDC955887,	//0x132a		VoC_sw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0xDC965882,	//0x132c		VoC_sw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xDC975885,	//0x132e		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
		//0x1330		VoC_endloop0
0xDC925886,	//0x1330		VoC_sw16inc_p(REG2,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x4018DF82,	//0x1332		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x1333		VoC_endloop1
0xDFA9C061,	//0x1334		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xE580FFC0,	//0x1336		VoC_return	|	VoC_NOP
		//0x1338		RMVB_InterPred_FUNC_X01Y00
0x720FF20D,	//0x1338		VoC_lw16i_short(RL7_HI,0x10,DEFAULT)	|	VoC_lw16i_short(RL6_HI,0x10,DEFAULT)
0x442AE203,	//0x133a		VoC_bne16_rd(RMVB_InterPred_FUNC_X01Y00_100,REG2,0x5d79)(lo)	|	VoC_lw16i_short(REG3,0x20,IN_PARALLEL)
0xF30F5D79,	//0x133c		VoC_lw16i_short(RL7_HI,0x18,DEFAULT)	|	VoC_bne16_rd(RMVB_InterPred_FUNC_X01Y00_100,REG2,0x5d79)(hi)
0x00300A83,	//0x133e		VoC_lw16i(REG3,0x30)
		//0x1340		RMVB_InterPred_FUNC_X01Y00_100
0xF6434018,	//0x1340		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xF0057030,	//0x1342		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF80B708E,	//0x1344		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x4,DEFAULT)
0x5D6A4484,	//0x1346		VoC_bne16_rd(RMVB_InterPred_FUNC_X10Y00,REG4,0x5d6a)
0x14692B80,	//0x1348		VoC_jal(CII_RMVB_Interpolate_filter0)
0xFFC0DFA9,	//0x134a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x134c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x134e		RMVB_InterPred_FUNC_X10Y00
0x5D6B4484,	//0x134e		VoC_bne16_rd(RMVB_InterPred_FUNC_X11Y00,REG4,0x5d6b)
0x149A2B80,	//0x1350		VoC_jal(CII_RMVB_Interpolate_filter1)
0xFFC0DFA9,	//0x1352		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1354		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1356		RMVB_InterPred_FUNC_X11Y00
0x14CB2B80,	//0x1356		VoC_jal(CII_RMVB_Interpolate_filter2)
0xFFC0DFA9,	//0x1358		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF027E580,	//0x135a		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_return
		//0x135b		RMVB_InterPred_FUNC_Y01
0x35AFFFC0,	//0x135c		VoC_bne16_rr(RMVB_InterPred_FUNC_Y10,REG5,REG7)(lo)	|	VoC_NOP
0x31C41391,	//0x135e		VoC_bnez16_r(RMVB_InterPred_FUNC_X01Y01,REG4)(lo)	|	VoC_bne16_rr(RMVB_InterPred_FUNC_Y10,REG5,REG7)(hi)
0x70431376,	//0x1360		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_bnez16_r(RMVB_InterPred_FUNC_X01Y01,REG4)(hi)
0x4018F040,	//0x1362		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(INC0,0x10,IN_PARALLEL)
0x702FF041,	//0x1364		VoC_lw16i_short(RL7_HI,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x10,IN_PARALLEL)
0x0A8EE01D,	//0x1366		VoC_lw16i(RL7_LO,0x40)(lo)	|	VoC_lw16i_short(RL6_HI,0x1,IN_PARALLEL)
0x442A0040,	//0x1368		VoC_bne16_rd(RMVB_InterPred_FUNC_X00Y01_100,REG2,0x5d79)(lo)	|	VoC_lw16i(RL7_LO,0x40)(hi)
0xF3105D79,	//0x136a		VoC_lw16i_short(INC0,0x18,DEFAULT)	|	VoC_bne16_rd(RMVB_InterPred_FUNC_X00Y01_100,REG2,0x5d79)(hi)
0x00600A8E,	//0x136c		VoC_lw16i(RL7_LO,0x60)
		//0x136e		RMVB_InterPred_FUNC_X00Y01_100
0xF80BE043,	//0x136e		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x14692B80,	//0x1370		VoC_jal(CII_RMVB_Interpolate_filter0)
0xFFC0DFA9,	//0x1372		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1374		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1376		RMVB_InterPred_FUNC_X01Y01
0x5D6A4494,	//0x1376		VoC_bne16_rd(RMVB_InterPred_FUNC_X10Y01,REG4,0x5d6a)
0xE0077006,	//0x1378		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x142C2B80,	//0x137a		VoC_jal(CII_RMVB_InterPred_2FILTER)
0xFFC0DFA9,	//0x137c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x137e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1380		RMVB_InterPred_FUNC_X10Y01
0x5D6B4494,	//0x1380		VoC_bne16_rd(RMVB_InterPred_FUNC_X11Y01,REG4,0x5d6b)
0xE0077026,	//0x1382		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x142C2B80,	//0x1384		VoC_jal(CII_RMVB_InterPred_2FILTER)
0xFFC0DFA9,	//0x1386		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1388		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x138a		RMVB_InterPred_FUNC_X11Y01
0xE0077046,	//0x138a		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x142C2B80,	//0x138c		VoC_jal(CII_RMVB_InterPred_2FILTER)
0xFFC0DFA9,	//0x138e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF047E580,	//0x1390		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_return
		//0x1391		RMVB_InterPred_FUNC_Y10
0x35AFFFC0,	//0x1392		VoC_bne16_rr(RMVB_InterPred_FUNC_Y11,REG5,REG7)(lo)	|	VoC_NOP
0x31C413C8,	//0x1394		VoC_bnez16_r(RMVB_InterPred_FUNC_X01Y10,REG4)(lo)	|	VoC_bne16_rr(RMVB_InterPred_FUNC_Y11,REG5,REG7)(hi)
0x704313AC,	//0x1396		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_bnez16_r(RMVB_InterPred_FUNC_X01Y10,REG4)(hi)
0x4018F040,	//0x1398		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(INC0,0x10,IN_PARALLEL)
0x702FF041,	//0x139a		VoC_lw16i_short(RL7_HI,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x10,IN_PARALLEL)
0x0A8EE01D,	//0x139c		VoC_lw16i(RL7_LO,0x40)(lo)	|	VoC_lw16i_short(RL6_HI,0x1,IN_PARALLEL)
0x442A0040,	//0x139e		VoC_bne16_rd(RMVB_InterPred_FUNC_X00Y10_100,REG2,0x5d79)(lo)	|	VoC_lw16i(RL7_LO,0x40)(hi)
0xF3105D79,	//0x13a0		VoC_lw16i_short(INC0,0x18,DEFAULT)	|	VoC_bne16_rd(RMVB_InterPred_FUNC_X00Y10_100,REG2,0x5d79)(hi)
0x00600A8E,	//0x13a2		VoC_lw16i(RL7_LO,0x60)
		//0x13a4		RMVB_InterPred_FUNC_X00Y10_100
0xF80BE043,	//0x13a4		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x149A2B80,	//0x13a6		VoC_jal(CII_RMVB_Interpolate_filter1)
0xFFC0DFA9,	//0x13a8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x13aa		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x13ac		RMVB_InterPred_FUNC_X01Y10
0x5D6A4494,	//0x13ac		VoC_bne16_rd(RMVB_InterPred_FUNC_X10Y10,REG4,0x5d6a)
0xE0177006,	//0x13ae		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x142C2B80,	//0x13b0		VoC_jal(CII_RMVB_InterPred_2FILTER)
0xFFC0DFA9,	//0x13b2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x13b4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x13b6		RMVB_InterPred_FUNC_X10Y10
0x5D6B4494,	//0x13b6		VoC_bne16_rd(RMVB_InterPred_FUNC_X11Y10,REG4,0x5d6b)
0xE0177026,	//0x13b8		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x142C2B80,	//0x13ba		VoC_jal(CII_RMVB_InterPred_2FILTER)
0xFFC0DFA9,	//0x13bc		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x13be		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x13c0		RMVB_InterPred_FUNC_X11Y10
0xE0177046,	//0x13c0		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x142C2B80,	//0x13c2		VoC_jal(CII_RMVB_InterPred_2FILTER)
0xFFC0DFA9,	//0x13c4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x13c6		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x13c8		RMVB_InterPred_FUNC_Y11
0x13DE31C4,	//0x13c8		VoC_bnez16_r(RMVB_InterPred_FUNC_X01Y11,REG4)
0xF0407043,	//0x13ca		VoC_lw16i_short(INC0,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0xF0414018,	//0x13cc		VoC_lw16i_short(INC1,0x10,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xE01D702F,	//0x13ce		VoC_lw16i_short(RL6_HI,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x1,DEFAULT)
0x00400A8E,	//0x13d0		VoC_lw16i(RL7_LO,0x40)
0x5D79442A,	//0x13d2		VoC_bne16_rd(RMVB_InterPred_FUNC_X00Y11_100,REG2,0x5d79)
0x0A8EF310,	//0x13d4		VoC_lw16i(RL7_LO,0x60)(lo)	|	VoC_lw16i_short(INC0,0x18,DEFAULT)
0xE0430060,	//0x13d6		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x60)(hi)
		//0x13d7		RMVB_InterPred_FUNC_X00Y11_100
0x2B80F80B,	//0x13d8		VoC_jal(CII_RMVB_Interpolate_filter2)(lo)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0xDFA914CB,	//0x13da		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_Interpolate_filter2)(hi)
0xE580FFC0,	//0x13dc		VoC_return	|	VoC_NOP
		//0x13de		RMVB_InterPred_FUNC_X01Y11
0x5D6A4494,	//0x13de		VoC_bne16_rd(RMVB_InterPred_FUNC_X10Y11,REG4,0x5d6a)
0xE0277006,	//0x13e0		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x142C2B80,	//0x13e2		VoC_jal(CII_RMVB_InterPred_2FILTER)
0xFFC0DFA9,	//0x13e4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x13e6		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x13e8		RMVB_InterPred_FUNC_X10Y11
0x5D6B4494,	//0x13e8		VoC_bne16_rd(RMVB_InterPred_FUNC_X11Y11,REG4,0x5d6b)
0xE0277026,	//0x13ea		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x142C2B80,	//0x13ec		VoC_jal(CII_RMVB_InterPred_2FILTER)
0xFFC0DFA9,	//0x13ee		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x13f0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x13f2		RMVB_InterPred_FUNC_X11Y11
0x00220A83,	//0x13f2		VoC_lw16i(REG3,0x22)
0xE10D720F,	//0x13f4		VoC_lw16i_short(RL6_HI,0x10,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x10,DEFAULT)
0x5D794432,	//0x13f6		VoC_bne16_rd(RMVB_InterPred_FUNC_X11Y11_100,REG2,0x5d79)
0x00320A83,	//0x13f8		VoC_lw16i(REG3,0x32)
0xFFC0730F,	//0x13fa		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x18,DEFAULT)
		//0x13fc		RMVB_InterPred_FUNC_X11Y11_100
0xF7E34018,	//0x13fc		VoC_movreg16(REG3,RL7_HI,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xF0057030,	//0x13fe		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF007401B,	//0x1400		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG0,REG3,DEFAULT)
0x14282E11,	//0x1402		VoC_loop_r(1,REG2)
0xDF405FC2,	//0x1404		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x5884F812,	//0x1406		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_shr16_ri(REG2,0x2,DEFAULT)
0x831CE025,	//0x1408		VoC_add16inc_rp(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,IN_PARALLEL)
0x839E8346,	//0x140a		VoC_add16inc_rp(REG6,REG6,REG3,DEFAULT)	|	VoC_add16inc_rp(REG6,REG5,REG0,DEFAULT)
0xD8876694,	//0x140c		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
0x83DF4134,	//0x140e		VoC_add16inc_rp(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC1F27814,	//0x1410		VoC_add16_rr(REG2,REG7,REG6,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x83467812,	//0x1412		VoC_add16inc_rp(REG6,REG5,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x2,DEFAULT)
0x839E5C94,	//0x1414		VoC_add16inc_rp(REG6,REG6,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xD8845C92,	//0x1416		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0x831C41F7,	//0x1418		VoC_add16inc_rp(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
0xC1327817,	//0x141a		VoC_add16_rr(REG2,REG4,REG6,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0x83467812,	//0x141c		VoC_add16inc_rp(REG6,REG5,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x2,DEFAULT)
0x839E5C97,	//0x141e		VoC_add16inc_rp(REG6,REG6,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x1420		VoC_endloop0
0xD8875C92,	//0x1420		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0xDF0061A7,	//0x1422		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_movreg16(REG7,RL6_HI,DEFAULT)
0xE1E7C079,	//0x1424		VoC_movreg16(REG7,RL7_HI,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xDF824038,	//0x1426		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
		//0x1428		VoC_endloop1
0xDFA9C03B,	//0x1428		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG3,REG0,REG7,DEFAULT)
		//0x1429		RMVB_InterPred_FUNC_END
0xE580FFC0,	//0x142a		VoC_return	|	VoC_NOP
		//0x142c		CII_RMVB_InterPred_2FILTER
0xDFE95F43,	//0x142c		VoC_push16(RA,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xDFC25F40,	//0x142e		VoC_push16(REG2,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x60EE0A81,	//0x1430		VoC_lw16i(REG1,0x60ee)
0xE10F720D,	//0x1432		VoC_lw16i_short(RL7_HI,0x10,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x10,DEFAULT)
0x5D79441A,	//0x1434		VoC_bne16_rd(RMVB_InterPred_2FILTER_100,REG2,0x5d79)
0xF0A3F30F,	//0x1436		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x18,DEFAULT)
		//0x1437		RMVB_InterPred_2FILTER_100
0xF643409A,	//0x1438		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0xF0057030,	//0x143a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF80B708E,	//0x143c		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x4,DEFAULT)
0x144431C6,	//0x143e		VoC_bnez16_r(RMVB_InterPred_2FILTER_101,REG6)
0x14692B80,	//0x1440		VoC_jal(CII_RMVB_Interpolate_filter0)
0xFFC065CA,	//0x1442		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RMVB_InterPred_2FILTER_103)
		//0x1444		RMVB_InterPred_2FILTER_101
0x5D6A4436,	//0x1444		VoC_bne16_rd(RMVB_InterPred_2FILTER_102,REG6,0x5d6a)
0x149A2B80,	//0x1446		VoC_jal(CII_RMVB_Interpolate_filter1)
0xFFC065C4,	//0x1448		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RMVB_InterPred_2FILTER_103)
		//0x144a		RMVB_InterPred_2FILTER_102
0x14CB2B80,	//0x144a		VoC_jal(CII_RMVB_Interpolate_filter2)
		//0x144c		RMVB_InterPred_2FILTER_103
0xDF825F00,	//0x144c		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x0A80DF03,	//0x144e		VoC_lw16i(REG0,0x60ee)(lo)	|	VoC_pop32(REG67,DEFAULT)
0x721060EE,	//0x1450		VoC_lw16i_short(INC0,0x10,DEFAULT)	|	VoC_lw16i(REG0,0x60ee)(hi)
0x702FF041,	//0x1452		VoC_lw16i_short(RL7_HI,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x10,IN_PARALLEL)
0x0A8EE01D,	//0x1454		VoC_lw16i(RL7_LO,0x40)(lo)	|	VoC_lw16i_short(RL6_HI,0x1,IN_PARALLEL)
0xE0430040,	//0x1456		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x40)(hi)
0x31C7F80B,	//0x1458		VoC_bnez16_r(RMVB_InterPred_2FILTER_105,REG7)(lo)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0x2B80145E,	//0x145a		VoC_jal(CII_RMVB_Interpolate_filter0)(lo)	|	VoC_bnez16_r(RMVB_InterPred_2FILTER_105,REG7)(hi)
0xE5C91469,	//0x145c		VoC_jump(RMVB_InterPred_2FILTER_107)	|	VoC_jal(CII_RMVB_Interpolate_filter0)(hi)
		//0x145e		RMVB_InterPred_2FILTER_105
0x5D6A4437,	//0x145e		VoC_bne16_rd(RMVB_InterPred_2FILTER_106,REG7,0x5d6a)
0x149A2B80,	//0x1460		VoC_jal(CII_RMVB_Interpolate_filter1)
0xFFC065C4,	//0x1462		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RMVB_InterPred_2FILTER_107)
		//0x1464		RMVB_InterPred_2FILTER_106
0x14CB2B80,	//0x1464		VoC_jal(CII_RMVB_Interpolate_filter2)
		//0x1466		RMVB_InterPred_2FILTER_107
0xFFC0DFA9,	//0x1466		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF286E580,	//0x1468		VoC_lw16i_short(REG6,0x14,DEFAULT)	|	VoC_return
		//0x1469		CII_RMVB_Interpolate_filter0
0xF4007019,	//0x146a		VoC_lw16i_short(FORMAT16,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x00FF0A84,	//0x146c		VoC_lw16i(REG4,0xff)
0xE0555FC3,	//0x146e		VoC_lw16i_short(REG5,0x5,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x14972E11,	//0x1470		VoC_loop_r(1,REG2)
0xE3475F40,	//0x1472		VoC_lw16i_short(REG7,0x34,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0xD88266DC,	//0x1474		VoC_lw16inc_p(REG2,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG3,DEFAULT)
0xD8831944,	//0x1476		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0x9B4550B8,	//0x1478		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG0,DEFAULT)
0xD1B850B0,	//0x147a		VoC_msu32inc_rp(REG7,REG0,IN_PARALLEL)	|	VoC_msu32_rp(REG6,REG0,DEFAULT)
0xD1B05028,	//0x147c		VoC_msu32inc_rp(REG6,REG0,IN_PARALLEL)	|	VoC_mac32_rp(REG5,REG0,DEFAULT)
0xD1280082,	//0x147e		VoC_mac32inc_rp(REG5,REG0,IN_PARALLEL)	|	VoC_add16_rp(REG2,REG2,REG0,DEFAULT)
0xF70700C3,	//0x1480		VoC_movreg16(REG7,ACC0_LO,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG3,REG0,DEFAULT)
0xF74742BA,	//0x1482		VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0xE20742FB,	//0x1484		VoC_lw16i_short(REG7,0x20,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)
0xC0FB40BA,	//0x1486		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x7833F832,	//0x1488		VoC_shr16_ri(REG3,0x6,DEFAULT)	|	VoC_shr16_ri(REG2,0x6,DEFAULT)
0x61C7DEE2,	//0x148a		VoC_movreg16(REG7,RL7_LO,DEFAULT)	|	VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)
0x5C92DEE3,	//0x148c		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)
0xDC93C238,	//0x148e		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG7,IN_PARALLEL)
		//0x1490		VoC_endloop0
0xE3475882,	//0x1490		VoC_lw16i_short(REG7,0x34,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xF7E75F00,	//0x1492		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xF7A74038,	//0x1494		VoC_movreg16(REG7,RL6_HI,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD613C079,	//0x1496		VoC_lw16_sd(REG3,0x0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
		//0x1497		VoC_endloop1
0xE580DF83,	//0x1498		VoC_return	|	VoC_pop16(REG3,DEFAULT)
		//0x149a		CII_RMVB_Interpolate_filter1
0x7019E1C7,	//0x149a		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0x0A84F400,	//0x149c		VoC_lw16i(REG4,0xff)(lo)	|	VoC_lw16i_short(FORMAT16,0x0,IN_PARALLEL)
0x5FC300FF,	//0x149e		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i(REG4,0xff)(hi)
0xFFC0E055,	//0x14a0		VoC_NAD	|	VoC_lw16i_short(REG5,0x5,IN_PARALLEL)
0x14C82E11,	//0x14a2		VoC_loop_r(1,REG2)
0xE1465F40,	//0x14a4		VoC_lw16i_short(REG6,0x14,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0xD88266DC,	//0x14a6		VoC_lw16inc_p(REG2,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG3,DEFAULT)
0xD8831944,	//0x14a8		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0x9B4550B0,	//0x14aa		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_msu32_rp(REG6,REG0,DEFAULT)
0xD1B050B0,	//0x14ac		VoC_msu32inc_rp(REG6,REG0,IN_PARALLEL)	|	VoC_msu32_rp(REG6,REG0,DEFAULT)
0xD1B05028,	//0x14ae		VoC_msu32inc_rp(REG6,REG0,IN_PARALLEL)	|	VoC_mac32_rp(REG5,REG0,DEFAULT)
0xD1280082,	//0x14b0		VoC_mac32inc_rp(REG5,REG0,IN_PARALLEL)	|	VoC_add16_rp(REG2,REG2,REG0,DEFAULT)
0xF70600C3,	//0x14b2		VoC_movreg16(REG6,ACC0_LO,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG3,REG0,DEFAULT)
0xF74642B2,	//0x14b4		VoC_movreg16(REG6,ACC1_LO,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)
0xE10642F3,	//0x14b6		VoC_lw16i_short(REG6,0x10,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)
0xC0F340B2,	//0x14b8		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0x782BF82A,	//0x14ba		VoC_shr16_ri(REG3,0x5,DEFAULT)	|	VoC_shr16_ri(REG2,0x5,DEFAULT)
0x4238DEE2,	//0x14bc		VoC_sub16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)
0x5C92DEE3,	//0x14be		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)
0xDC93E146,	//0x14c0		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x14,IN_PARALLEL)
		//0x14c2		VoC_endloop0
0x5F00D882,	//0x14c2		VoC_pop32(REG01,DEFAULT)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0x4030F7E6,	//0x14c4		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_movreg16(REG6,RL7_HI,IN_PARALLEL)
0xC071F7A6,	//0x14c6		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_movreg16(REG6,RL6_HI,IN_PARALLEL)
		//0x14c8		VoC_endloop1
0xDF83D613,	//0x14c8		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16_sd(REG3,0x0,DEFAULT)
0xF286E580,	//0x14ca		VoC_lw16i_short(REG6,0x14,DEFAULT)	|	VoC_return
		//0x14cb		CII_RMVB_Interpolate_filter2
0xF4007019,	//0x14cc		VoC_lw16i_short(FORMAT16,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x00FF0A84,	//0x14ce		VoC_lw16i(REG4,0xff)
0xE0555FC3,	//0x14d0		VoC_lw16i_short(REG5,0x5,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x14F92E11,	//0x14d2		VoC_loop_r(1,REG2)
0xE3475F40,	//0x14d4		VoC_lw16i_short(REG7,0x34,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0xD88266DC,	//0x14d6		VoC_lw16inc_p(REG2,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG3,DEFAULT)
0xD8831944,	//0x14d8		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0x9B4550B0,	//0x14da		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_msu32_rp(REG6,REG0,DEFAULT)
0xD1B050B8,	//0x14dc		VoC_msu32inc_rp(REG6,REG0,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG0,DEFAULT)
0xD1B85028,	//0x14de		VoC_msu32inc_rp(REG7,REG0,IN_PARALLEL)	|	VoC_mac32_rp(REG5,REG0,DEFAULT)
0xD1280082,	//0x14e0		VoC_mac32inc_rp(REG5,REG0,IN_PARALLEL)	|	VoC_add16_rp(REG2,REG2,REG0,DEFAULT)
0xF70700C3,	//0x14e2		VoC_movreg16(REG7,ACC0_LO,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG3,REG0,DEFAULT)
0xF74742BA,	//0x14e4		VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0xE20742FB,	//0x14e6		VoC_lw16i_short(REG7,0x20,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)
0xC0FB40BA,	//0x14e8		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x7833F832,	//0x14ea		VoC_shr16_ri(REG3,0x6,DEFAULT)	|	VoC_shr16_ri(REG2,0x6,DEFAULT)
0x61C7DEE2,	//0x14ec		VoC_movreg16(REG7,RL7_LO,DEFAULT)	|	VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)
0x5C92DEE3,	//0x14ee		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)
0xDC93C238,	//0x14f0		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG7,IN_PARALLEL)
		//0x14f2		VoC_endloop0
0xE3475882,	//0x14f2		VoC_lw16i_short(REG7,0x34,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xF7E75F00,	//0x14f4		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xF7A74038,	//0x14f6		VoC_movreg16(REG7,RL6_HI,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD613C079,	//0x14f8		VoC_lw16_sd(REG3,0x0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
		//0x14f9		VoC_endloop1
0xE580DF83,	//0x14fa		VoC_return	|	VoC_pop16(REG3,DEFAULT)
		//0x14fc		CII_RMVB_CInterPred_FUNC
0x0CAF1407,	//0x14fc		VoC_lw16_d(REG7,0xcaf)
0x31C7DFE9,	//0x14fe		VoC_bnez16_r(RMVB_CInterPred_FUNC_END,REG7)(lo)	|	VoC_push16(RA,DEFAULT)
0xF06315BF,	//0x1500		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_bnez16_r(RMVB_CInterPred_FUNC_END,REG7)(hi)
0xE41CE41D,	//0x1502		VoC_and16_rr(REG4,REG3,DEFAULT)	|	VoC_and16_rr(REG5,REG3,DEFAULT)
0x153C31C5,	//0x1504		VoC_bnez16_r(RMVB_CInterPred_FUNC_Y01,REG5)
0x151C31C4,	//0x1506		VoC_bnez16_r(RMVB_CInterPred_FUNC_X01Y00,REG4)
0xF0057030,	//0x1508		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xD885F087,	//0x150a		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xE88AD886,	//0x150c		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xDC955885,	//0x150e		VoC_sw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xDC965886,	//0x1510		VoC_sw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xDC954038,	//0x1512		VoC_sw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x5885DC96,	//0x1514		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xD886C079,	//0x1516		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
		//0x1517		VoC_endloop0
0xFFC0DFA9,	//0x1518		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x151a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x151c		RMVB_CInterPred_FUNC_X01Y00
0xE0127030,	//0x151c		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF0067031,	//0x151e		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x5D6A4494,	//0x1520		VoC_bne16_rd(RMVB_CInterPred_FUNC_X10Y00,REG4,0x5d6a)
0xE0144012,	//0x1522		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x15C22B80,	//0x1524		VoC_jal(CII_RMVB_CInterpolate_filter0)
0xFFC0DFA9,	//0x1526		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1528		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x152a		RMVB_CInterPred_FUNC_X10Y00
0x5D6B4494,	//0x152a		VoC_bne16_rd(RMVB_CInterPred_FUNC_X11Y00,REG4,0x5d6b)
0xE0144012,	//0x152c		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x15E12B80,	//0x152e		VoC_jal(CII_RMVB_CInterpolate_filter1)
0xFFC0DFA9,	//0x1530		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1532		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1534		RMVB_CInterPred_FUNC_X11Y00
0xF6024010,	//0x1534		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x2B80F024,	//0x1536		VoC_jal(CII_RMVB_CInterpolate_filter0)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xDFA915C2,	//0x1538		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter0)(hi)
0xE580FFC0,	//0x153a		VoC_return	|	VoC_NOP
		//0x153c		RMVB_CInterPred_FUNC_Y01
0x7030F027,	//0x153c		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x7031E082,	//0x153e		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,IN_PARALLEL)
0x35AFF006,	//0x1540		VoC_bne16_rr(RMVB_CInterPred_FUNC_Y10,REG5,REG7)(lo)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x31C4156E,	//0x1542		VoC_bnez16_r(RMVB_CInterPred_FUNC_X01Y01,REG4)(lo)	|	VoC_bne16_rr(RMVB_CInterPred_FUNC_Y10,REG5,REG7)(hi)
0x4012154C,	//0x1544		VoC_add16_rr(REG2,REG0,REG2,DEFAULT)	|	VoC_bnez16_r(RMVB_CInterPred_FUNC_X01Y01,REG4)(hi)
0x2B80E024,	//0x1546		VoC_jal(CII_RMVB_CInterpolate_filter0)(lo)	|	VoC_lw16i_short(REG4,0x2,IN_PARALLEL)
0xDFA915C2,	//0x1548		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter0)(hi)
0xE580FFC0,	//0x154a		VoC_return	|	VoC_NOP
		//0x154c		RMVB_CInterPred_FUNC_X01Y01
0x5D6A44A4,	//0x154c		VoC_bne16_rd(RMVB_CInterPred_FUNC_X10Y01,REG4,0x5d6a)
0x712CC012,	//0x154e		VoC_lw16i_short(RL6_LO,0x9,DEFAULT)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x706DE03E,	//0x1550		VoC_lw16i_short(RL6_HI,0x3,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x3,IN_PARALLEL)
0x2B80E01F,	//0x1552		VoC_jal(CII_RMVB_CInterpolate_filter2)(lo)	|	VoC_lw16i_short(RL7_HI,0x1,IN_PARALLEL)
0xDFA915FE,	//0x1554		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter2)(hi)
0xE580FFC0,	//0x1556		VoC_return	|	VoC_NOP
		//0x1558		RMVB_CInterPred_FUNC_X10Y01
0x5D6B44A4,	//0x1558		VoC_bne16_rd(RMVB_CInterPred_FUNC_X11Y01,REG4,0x5d6b)
0x706CC012,	//0x155a		VoC_lw16i_short(RL6_LO,0x3,DEFAULT)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x702DE03E,	//0x155c		VoC_lw16i_short(RL6_HI,0x1,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x3,IN_PARALLEL)
0x2B80E01F,	//0x155e		VoC_jal(CII_RMVB_CInterpolate_filter3)(lo)	|	VoC_lw16i_short(RL7_HI,0x1,IN_PARALLEL)
0xDFA91632,	//0x1560		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter3)(hi)
0xE580FFC0,	//0x1562		VoC_return	|	VoC_NOP
		//0x1564		RMVB_CInterPred_FUNC_X11Y01
0x706CC012,	//0x1564		VoC_lw16i_short(RL6_LO,0x3,DEFAULT)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x702DE09E,	//0x1566		VoC_lw16i_short(RL6_HI,0x1,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x9,IN_PARALLEL)
0x2B80E03F,	//0x1568		VoC_jal(CII_RMVB_CInterpolate_filter2)(lo)	|	VoC_lw16i_short(RL7_HI,0x3,IN_PARALLEL)
0xDFA915FE,	//0x156a		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter2)(hi)
0xE580FFC0,	//0x156c		VoC_return	|	VoC_NOP
		//0x156e		RMVB_CInterPred_FUNC_Y10
0xFFC0F047,	//0x156e		VoC_NOP	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x159A35AF,	//0x1570		VoC_bne16_rr(RMVB_CInterPred_FUNC_Y11,REG5,REG7)
0x157C31C4,	//0x1572		VoC_bnez16_r(RMVB_CInterPred_FUNC_X01Y10,REG4)
0xE0044012,	//0x1574		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x15E12B80,	//0x1576		VoC_jal(CII_RMVB_CInterpolate_filter1)
0xFFC0DFA9,	//0x1578		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x157a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x157c		RMVB_CInterPred_FUNC_X01Y10
0x5D6A44A4,	//0x157c		VoC_bne16_rd(RMVB_CInterPred_FUNC_X10Y10,REG4,0x5d6a)
0x706CC012,	//0x157e		VoC_lw16i_short(RL6_LO,0x3,DEFAULT)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x706DE01E,	//0x1580		VoC_lw16i_short(RL6_HI,0x3,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
0x2B80E01F,	//0x1582		VoC_jal(CII_RMVB_CInterpolate_filter3)(lo)	|	VoC_lw16i_short(RL7_HI,0x1,IN_PARALLEL)
0xDFA91632,	//0x1584		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter3)(hi)
0xE580FFC0,	//0x1586		VoC_return	|	VoC_NOP
		//0x1588		RMVB_CInterPred_FUNC_X10Y10
0x5D6B4484,	//0x1588		VoC_bne16_rd(RMVB_CInterPred_FUNC_X11Y10,REG4,0x5d6b)
0x2B80C012,	//0x158a		VoC_jal(CII_RMVB_CInterpolate_filter4)(lo)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0xDFA91666,	//0x158c		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter4)(hi)
0xE580FFC0,	//0x158e		VoC_return	|	VoC_NOP
		//0x1590		RMVB_CInterPred_FUNC_X11Y10
0x702CC012,	//0x1590		VoC_lw16i_short(RL6_LO,0x1,DEFAULT)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x702DE03E,	//0x1592		VoC_lw16i_short(RL6_HI,0x1,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x3,IN_PARALLEL)
0x2B80E03F,	//0x1594		VoC_jal(CII_RMVB_CInterpolate_filter3)(lo)	|	VoC_lw16i_short(RL7_HI,0x3,IN_PARALLEL)
0xDFA91632,	//0x1596		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter3)(hi)
0xE580FFC0,	//0x1598		VoC_return	|	VoC_NOP
		//0x159a		RMVB_CInterPred_FUNC_Y11
0x15A431C4,	//0x159a		VoC_bnez16_r(RMVB_CInterPred_FUNC_X01Y11,REG4)
0xF6024010,	//0x159c		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x2B80F044,	//0x159e		VoC_jal(CII_RMVB_CInterpolate_filter0)(lo)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0xDFA915C2,	//0x15a0		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter0)(hi)
0xE580FFC0,	//0x15a2		VoC_return	|	VoC_NOP
		//0x15a4		RMVB_CInterPred_FUNC_X01Y11
0x5D6A44A4,	//0x15a4		VoC_bne16_rd(RMVB_CInterPred_FUNC_X10Y11,REG4,0x5d6a)
0x706CC012,	//0x15a6		VoC_lw16i_short(RL6_LO,0x3,DEFAULT)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x712DE01E,	//0x15a8		VoC_lw16i_short(RL6_HI,0x9,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
0x2B80E03F,	//0x15aa		VoC_jal(CII_RMVB_CInterpolate_filter2)(lo)	|	VoC_lw16i_short(RL7_HI,0x3,IN_PARALLEL)
0xDFA915FE,	//0x15ac		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter2)(hi)
0xE580FFC0,	//0x15ae		VoC_return	|	VoC_NOP
		//0x15b0		RMVB_CInterPred_FUNC_X10Y11
0x5D6B44A4,	//0x15b0		VoC_bne16_rd(RMVB_CInterPred_FUNC_X11Y11,REG4,0x5d6b)
0x702CC012,	//0x15b2		VoC_lw16i_short(RL6_LO,0x1,DEFAULT)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0x706DE01E,	//0x15b4		VoC_lw16i_short(RL6_HI,0x3,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
0x2B80E03F,	//0x15b6		VoC_jal(CII_RMVB_CInterpolate_filter3)(lo)	|	VoC_lw16i_short(RL7_HI,0x3,IN_PARALLEL)
0xDFA91632,	//0x15b8		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter3)(hi)
0xE580FFC0,	//0x15ba		VoC_return	|	VoC_NOP
		//0x15bc		RMVB_CInterPred_FUNC_X11Y11
0x2B80C012,	//0x15bc		VoC_jal(CII_RMVB_CInterpolate_filter4)(lo)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
0xDFA91666,	//0x15be		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_RMVB_CInterpolate_filter4)(hi)
		//0x15bf		RMVB_CInterPred_FUNC_END
0xE580FFC0,	//0x15c0		VoC_return	|	VoC_NOP
		//0x15c2		CII_RMVB_CInterpolate_filter0
0xF4007019,	//0x15c2		VoC_lw16i_short(FORMAT16,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x8AC7F063,	//0x15c4		VoC_mult16inc_rp(REG7,REG3,REG0,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0xE8988316,	//0x15c6		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_add16inc_rp(REG6,REG4,REG2,DEFAULT)
0xC1F70AC5,	//0x15c8		VoC_add16_rr(REG7,REG7,REG6,IN_PARALLEL)	|	VoC_mult16inc_rp(REG5,REG3,REG0,DEFAULT)
0xF8170316,	//0x15ca		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG4,REG2,DEFAULT)
0x8AC74175,	//0x15cc		VoC_mult16inc_rp(REG7,REG3,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xDC977815,	//0x15ce		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0x5C958316,	//0x15d0		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_add16inc_rp(REG6,REG4,REG2,DEFAULT)
0x41F78AC5,	//0x15d2		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_mult16inc_rp(REG5,REG3,REG0,IN_PARALLEL)
0x78178316,	//0x15d4		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG4,REG2,IN_PARALLEL)
0xF815C175,	//0x15d6		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)
0x5C97F086,	//0x15d8		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x4,DEFAULT)
0x5C95C030,	//0x15da		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)
0x0AC7C0B2,	//0x15dc		VoC_mult16inc_rp(REG7,REG3,REG0,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)
0x8316C071,	//0x15de		VoC_add16inc_rp(REG6,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)
		//0x15df		VoC_endloop0
0xD883E580,	//0x15e0		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_return
		//0x15e1		CII_RMVB_CInterpolate_filter1
0x02D7D886,	//0x15e2		VoC_add16inc_rp(REG7,REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xE897E045,	//0x15e4		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0xC1E70396,	//0x15e6		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0xF80F41A6,	//0x15e8		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xD883780E,	//0x15ea		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xD8865C97,	//0x15ec		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x82D75C96,	//0x15ee		VoC_add16inc_rp(REG7,REG3,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xC1E70396,	//0x15f0		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0xC02841A6,	//0x15f2		VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xC0AA780F,	//0x15f4		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xD883780E,	//0x15f6		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xD8865C97,	//0x15f8		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x82D75C96,	//0x15fa		VoC_add16inc_rp(REG7,REG3,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x15fc		VoC_endloop0
0xE580C069,	//0x15fc		VoC_return	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
		//0x15fe		CII_RMVB_CInterpolate_filter2
0xF4007019,	//0x15fe		VoC_lw16i_short(FORMAT16,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFF3B7F32,	//0x1600		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x512A9B04,	//0x1602		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xFFC0E043,	//0x1604		VoC_NAD	|	VoC_lw16i_short(REG3,0x4,IN_PARALLEL)
0x16302C08,	//0x1606		VoC_loop_i(0x0,0x4)
0x9B055030,	//0x1608		VoC_multf32inc_rp(ACC1,REG4,REG0,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG0,DEFAULT)
0xD12A503A,	//0x160a		VoC_mac32inc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG2,DEFAULT)
0xD03070E4,	//0x160c		VoC_mac32_rp(REG6,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x7,DEFAULT)
0xD03A6106,	//0x160e		VoC_mac32_rp(REG7,REG2,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x7826C1A6,	//0x1610		VoC_shr16_ri(REG6,0x4,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x41E7F747,	//0x1612		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)
0x5C96FF32,	//0x1614		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0x1B04F827,	//0x1616		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0x4,IN_PARALLEL)
0x512AFF3B,	//0x1618		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_movreg32(REG67,RL7,IN_PARALLEL)
0x5030DC97,	//0x161a		VoC_mac32_rp(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)
0x503A9B05,	//0x161c		VoC_mac32_rp(REG7,REG2,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG4,REG0,IN_PARALLEL)
0x70E4D12A,	//0x161e		VoC_lw16i_short(REG4,0x7,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG2,IN_PARALLEL)
0x6106D030,	//0x1620		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_mac32_rp(REG6,REG0,IN_PARALLEL)
0xC1A6D03A,	//0x1622		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_mac32_rp(REG7,REG2,IN_PARALLEL)
0xC09A4018,	//0x1624		VoC_add16_rr(REG2,REG2,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xF7477826,	//0x1626		VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x4,DEFAULT)
0xFF3241E7,	//0x1628		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0xF8275C96,	//0x162a		VoC_shr16_ri(REG7,0x4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xFF3B1B04,	//0x162c		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xDC97512A,	//0x162e		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG2,DEFAULT)
		//0x1630		VoC_endloop0
0xE580C059,	//0x1630		VoC_return	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x1632		CII_RMVB_CInterpolate_filter3
0xF4007019,	//0x1632		VoC_lw16i_short(FORMAT16,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFF3B7F32,	//0x1634		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x512A9B04,	//0x1636		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xFFC0E043,	//0x1638		VoC_NAD	|	VoC_lw16i_short(REG3,0x4,IN_PARALLEL)
0x16642C08,	//0x163a		VoC_loop_i(0x0,0x4)
0x9B055030,	//0x163c		VoC_multf32inc_rp(ACC1,REG4,REG0,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG0,DEFAULT)
0xD12A503A,	//0x163e		VoC_mac32inc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG2,DEFAULT)
0xD0307084,	//0x1640		VoC_mac32_rp(REG6,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0xD03A6106,	//0x1642		VoC_mac32_rp(REG7,REG2,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x781EC1A6,	//0x1644		VoC_shr16_ri(REG6,0x3,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x41E7F747,	//0x1646		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)
0x5C96FF32,	//0x1648		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0x1B04F81F,	//0x164a		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0x3,IN_PARALLEL)
0x512AFF3B,	//0x164c		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_movreg32(REG67,RL7,IN_PARALLEL)
0x5030DC97,	//0x164e		VoC_mac32_rp(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)
0x503A9B05,	//0x1650		VoC_mac32_rp(REG7,REG2,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG4,REG0,IN_PARALLEL)
0x7084D12A,	//0x1652		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG2,IN_PARALLEL)
0x6106D030,	//0x1654		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_mac32_rp(REG6,REG0,IN_PARALLEL)
0xC1A6D03A,	//0x1656		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_mac32_rp(REG7,REG2,IN_PARALLEL)
0xC09A4018,	//0x1658		VoC_add16_rr(REG2,REG2,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xF747781E,	//0x165a		VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
0xFF3241E7,	//0x165c		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0xF81F5C96,	//0x165e		VoC_shr16_ri(REG7,0x3,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xFF3B1B04,	//0x1660		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xDC97512A,	//0x1662		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG2,DEFAULT)
		//0x1664		VoC_endloop0
0xE580C059,	//0x1664		VoC_return	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x1666		CII_RMVB_CInterpolate_filter4
0xD884F023,	//0x1666		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x689C8314,	//0x1668		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0x839682C6,	//0x166a		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG3,REG0,IN_PARALLEL)
0x4134D887,	//0x166c		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0x781483D7,	//0x166e		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG2,IN_PARALLEL)
0x02C6C1F5,	//0x1670		VoC_add16inc_rp(REG6,REG3,REG0,DEFAULT)	|	VoC_add16_rr(REG5,REG7,REG6,IN_PARALLEL)
0x5C94F815,	//0x1672		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_shr16_ri(REG5,0x2,IN_PARALLEL)
0x5C958396,	//0x1674		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,IN_PARALLEL)
0x41F7D884,	//0x1676		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0x78178314,	//0x1678		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG2,IN_PARALLEL)
0x0700C135,	//0x167a		VoC_add16_rd(REG0,REG0,0x5d6c)(lo)	|	VoC_add16_rr(REG5,REG4,REG6,IN_PARALLEL)
0x07125D6C,	//0x167c		VoC_add16_rd(REG2,REG2,0x5d6c)(lo)	|	VoC_add16_rd(REG0,REG0,0x5d6c)(hi)
0x78155D6C,	//0x167e		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x5d6c)(hi)
0x5C97D884,	//0x1680		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0x5C958314,	//0x1682		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG2,IN_PARALLEL)
0x070982C6,	//0x1684		VoC_add16_rd(REG1,REG1,0x5d6d)(lo)	|	VoC_add16inc_rp(REG6,REG3,REG0,IN_PARALLEL)
		//0x1685		VoC_endloop0
0xE5805D6D,	//0x1686		VoC_return	|	VoC_add16_rd(REG1,REG1,0x5d6d)(hi)
		//0x1688		CII_RMVB_DeblockFilter
0x1486DFE9,	//0x1688		VoC_lw32_d(RL6,0xcda)(lo)	|	VoC_push16(RA,DEFAULT)
0x14870CDA,	//0x168a		VoC_lw32_d(RL7,0xcdc)(lo)	|	VoC_lw32_d(RL6,0xcda)(hi)
0x653E0CDC,	//0x168c		VoC_or32_rr(RL6,RL7,DEFAULT)	|	VoC_lw32_d(RL7,0xcdc)(hi)
0x0AC2E003,	//0x168e		VoC_lw16i(REG2,0xffff)(lo)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xE4CE7FFF,	//0x1690		VoC_and32_rr(RL6,REG23,DEFAULT)	|	VoC_lw16i(REG2,0xffff)(hi)
0x3306F002,	//0x1692		VoC_bez32_r(RMVB_DeblockFilter_CHROMA,RL6)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x1502186A,	//0x1694		VoC_sw16_d(REG2,0x1c9d)(lo)	|	VoC_bez32_r(RMVB_DeblockFilter_CHROMA,RL6)(hi)
0x14051C9D,	//0x1696		VoC_lw16_d(REG5,0xcb2)(lo)	|	VoC_sw16_d(REG2,0x1c9d)(hi)
0x07AD0CB2,	//0x1698		VoC_sub16_rd(REG5,REG5,0x5d79)(lo)	|	VoC_lw16_d(REG5,0xcb2)(hi)
0x78155D79,	//0x169a		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_sub16_rd(REG5,REG5,0x5d79)(hi)
0x0A83E044,	//0x169c		VoC_lw16i(REG3,0xc1a)(lo)	|	VoC_lw16i_short(REG4,0x4,IN_PARALLEL)
0x14860C1A,	//0x169e		VoC_lw32_d(RL6,0xec4)(lo)	|	VoC_lw16i(REG3,0xc1a)(hi)
0x09B60EC4,	//0x16a0		VoC_sub32_rd(RL6,RL6,0x1c8e)(lo)	|	VoC_lw32_d(RL6,0xec4)(hi)
0x2A061C8E,	//0x16a2		VoC_or32_rd(RL6,0x5d86)(lo)	|	VoC_sub32_rd(RL6,RL6,0x1c8e)(hi)
0x15455D86,	//0x16a4		VoC_sw16_d(REG5,0xffc8)(lo)	|	VoC_or32_rd(RL6,0x5d86)(hi)
0x15447FC8,	//0x16a6		VoC_sw16_d(REG4,0xffc9)(lo)	|	VoC_sw16_d(REG5,0xffc8)(hi)
0x15437FC9,	//0x16a8		VoC_sw16_d(REG3,0xffc3)(lo)	|	VoC_sw16_d(REG4,0xffc9)(hi)
0x15447FC3,	//0x16aa		VoC_sw16_d(REG4,0xffc2)(lo)	|	VoC_sw16_d(REG3,0xffc3)(hi)
0x15C67FC2,	//0x16ac		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG4,0xffc2)(hi)
0xDE807FC4,	//0x16ae		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x16b0		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14050008,	//0x16b2		VoC_lw16_d(REG5,0xcb2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x07AD0CB2,	//0x16b4		VoC_sub16_rd(REG5,REG5,0x5d6d)(lo)	|	VoC_lw16_d(REG5,0xcb2)(hi)
0x78155D6D,	//0x16b6		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_sub16_rd(REG5,REG5,0x5d6d)(hi)
0x0A83E104,	//0x16b8		VoC_lw16i(REG3,0xbfa)(lo)	|	VoC_lw16i_short(REG4,0x10,IN_PARALLEL)
0x14860BFA,	//0x16ba		VoC_lw32_d(RL6,0xec4)(lo)	|	VoC_lw16i(REG3,0xbfa)(hi)
0x09B60EC4,	//0x16bc		VoC_sub32_rd(RL6,RL6,0x5d82)(lo)	|	VoC_lw32_d(RL6,0xec4)(hi)
0x2A065D82,	//0x16be		VoC_or32_rd(RL6,0x5d86)(lo)	|	VoC_sub32_rd(RL6,RL6,0x5d82)(hi)
0xF0225D86,	//0x16c0		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_or32_rd(RL6,0x5d86)(hi)
0x7FC81545,	//0x16c2		VoC_sw16_d(REG5,0xffc8)
0x7FC91544,	//0x16c4		VoC_sw16_d(REG4,0xffc9)
0x7FC31543,	//0x16c6		VoC_sw16_d(REG3,0xffc3)
0x7FC21542,	//0x16c8		VoC_sw16_d(REG2,0xffc2)
0x7FC415C6,	//0x16ca		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x16cc		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x16ce		VoC_cfg_lg(0x8,)
0xE0017100,	//0x16d0		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x10000A82,	//0x16d2		VoC_lw16i(REG2,0x1000)
0xE3067003,	//0x16d4		VoC_lw16i_short(REG6,0x30,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xE0057024,	//0x16d6		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x1C941580,	//0x16d8		VoC_sw32_d(REG01,0x1c94)
0x1C961581,	//0x16da		VoC_sw32_d(REG23,0x1c96)
0x1C921582,	//0x16dc		VoC_sw32_d(REG45,0x1c92)
0xE0017200,	//0x16de		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x10,DEFAULT)
0x18640A82,	//0x16e0		VoC_lw16i(REG2,0x1864)
0x1C981580,	//0x16e2		VoC_sw32_d(REG01,0x1c98)
0x1C9A1502,	//0x16e4		VoC_sw16_d(REG2,0x1c9a)
0x5DEE0A82,	//0x16e6		VoC_lw16i(REG2,0x5dee)
0x17F70A83,	//0x16e8		VoC_lw16i(REG3,0x17f7)
0x1C9B1502,	//0x16ea		VoC_sw16_d(REG2,0x1c9b)
0x1C9C1503,	//0x16ec		VoC_sw16_d(REG3,0x1c9c)
0x5E1E0A82,	//0x16ee		VoC_lw16i(REG2,0x5e1e)
0x5E2E0A83,	//0x16f0		VoC_lw16i(REG3,0x5e2e)
0x1C9E1502,	//0x16f2		VoC_sw16_d(REG2,0x1c9e)
0x1C9F1503,	//0x16f4		VoC_sw16_d(REG3,0x1c9f)
0x1A212B80,	//0x16f6		VoC_jal(CII_RMVB_Filter_BLK0)
0xE0017020,	//0x16f8		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xE0037042,	//0x16fa		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x1C941580,	//0x16fc		VoC_sw32_d(REG01,0x1c94)
0x1C921581,	//0x16fe		VoC_sw32_d(REG23,0x1c92)
0x20000A80,	//0x1700		VoC_lw16i(REG0,0x2000)
0xE3467001,	//0x1702		VoC_lw16i_short(REG6,0x34,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xE2027003,	//0x1704		VoC_lw16i_short(REG2,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x1C961580,	//0x1706		VoC_sw32_d(REG01,0x1c96)
0x1C981581,	//0x1708		VoC_sw32_d(REG23,0x1c98)
0x5DF10A80,	//0x170a		VoC_lw16i(REG0,0x5df1)
0x5DF20A81,	//0x170c		VoC_lw16i(REG1,0x5df2)
0x18680A82,	//0x170e		VoC_lw16i(REG2,0x1868)
0x1C9C1500,	//0x1710		VoC_sw16_d(REG0,0x1c9c)
0x1C9B1501,	//0x1712		VoC_sw16_d(REG1,0x1c9b)
0x1C9A1502,	//0x1714		VoC_sw16_d(REG2,0x1c9a)
0x5E220A80,	//0x1716		VoC_lw16i(REG0,0x5e22)
0x5E320A81,	//0x1718		VoC_lw16i(REG1,0x5e32)
0x1C9E1500,	//0x171a		VoC_sw16_d(REG0,0x1c9e)
0x1C9F1501,	//0x171c		VoC_sw16_d(REG1,0x1c9f)
		//0x171e		RMVB_DeblockFilter_100
0x1B2F2B80,	//0x171e		VoC_jal(CII_RMVB_Filter_BLK1)
0xE0017100,	//0x1720		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x1C921487,	//0x1722		VoC_lw32_d(RL7,0x1c92)
0x1C941486,	//0x1724		VoC_lw32_d(RL6,0x1c94)
0x17543707,	//0x1726		VoC_be32_rr(RMVB_DeblockFilter_101,REG01,RL7)
0x1C961484,	//0x1728		VoC_lw32_d(ACC0,0x1c96)
0x1C981485,	//0x172a		VoC_lw32_d(ACC1,0x1c98)
0xFBFF7BFE,	//0x172c		VoC_shr32_ri(RL7,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xffffffff,DEFAULT)
0xFBFD7BFC,	//0x172e		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0x1C941586,	//0x1730		VoC_sw32_d(RL6,0x1c94)
0x1C921587,	//0x1732		VoC_sw32_d(RL7,0x1c92)
0x1C961584,	//0x1734		VoC_sw32_d(ACC0,0x1c96)
0x1C981585,	//0x1736		VoC_sw32_d(ACC1,0x1c98)
0x1400F087,	//0x1738		VoC_lw16_d(REG0,0x1c9c)(lo)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0x14011C9C,	//0x173a		VoC_lw16_d(REG1,0x1c9b)(lo)	|	VoC_lw16_d(REG0,0x1c9c)(hi)
0x14021C9B,	//0x173c		VoC_lw16_d(REG2,0x1c9a)(lo)	|	VoC_lw16_d(REG1,0x1c9b)(hi)
0x14031C9A,	//0x173e		VoC_lw16_d(REG3,0x1c9e)(lo)	|	VoC_lw16_d(REG2,0x1c9a)(hi)
0x14041C9E,	//0x1740		VoC_lw16_d(REG4,0x1c9f)(lo)	|	VoC_lw16_d(REG3,0x1c9e)(hi)
0x40381C9F,	//0x1742		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG4,0x1c9f)(hi)
0x40BAC079,	//0x1744		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0xC13CC0FB,	//0x1746		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
0x1C9C1500,	//0x1748		VoC_sw16_d(REG0,0x1c9c)
0x1C9B1501,	//0x174a		VoC_sw16_d(REG1,0x1c9b)
0x1C9A1502,	//0x174c		VoC_sw16_d(REG2,0x1c9a)
0x1C9E1503,	//0x174e		VoC_sw16_d(REG3,0x1c9e)
0x1C9F1504,	//0x1750		VoC_sw16_d(REG4,0x1c9f)
0x171E2B00,	//0x1752		VoC_jump_lg(RMVB_DeblockFilter_100)
		//0x1754		RMVB_DeblockFilter_101
0x00800A80,	//0x1754		VoC_lw16i(REG0,0x80)
0xE1367001,	//0x1756		VoC_lw16i_short(REG6,0x13,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xE0037202,	//0x1758		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1CA11501,	//0x175a		VoC_sw16_d(REG1,0x1ca1)
0x1C941580,	//0x175c		VoC_sw32_d(REG01,0x1c94)
0x1C921581,	//0x175e		VoC_sw32_d(REG23,0x1c92)
0x01000A80,	//0x1760		VoC_lw16i(REG0,0x100)
0x18070A82,	//0x1762		VoC_lw16i(REG2,0x1807)
0x5E2E0A83,	//0x1764		VoC_lw16i(REG3,0x5e2e)
0x1C981580,	//0x1766		VoC_sw32_d(REG01,0x1c98)
0x1C9C1502,	//0x1768		VoC_sw16_d(REG2,0x1c9c)
0x1C9B1503,	//0x176a		VoC_sw16_d(REG3,0x1c9b)
0x5E5E0A80,	//0x176c		VoC_lw16i(REG0,0x5e5e)
0x5E6E0A81,	//0x176e		VoC_lw16i(REG1,0x5e6e)
0x1C9E1500,	//0x1770		VoC_sw16_d(REG0,0x1c9e)
0x1501F000,	//0x1772		VoC_sw16_d(REG1,0x1c9f)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xDFC01C9F,	//0x1774		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_d(REG1,0x1c9f)(hi)
		//0x1776		RMVB_DeblockFilter_102
0x1C072B80,	//0x1776		VoC_jal(CII_RMVB_Filter_BLK2)
0xE0125F80,	//0x1778		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x00400A87,	//0x177a		VoC_lw16i(REG7,0x40)
0x17AC3402,	//0x177c		VoC_bgt16_rr(RMVB_DeblockFilter_103,REG0,REG2)
0x1C921486,	//0x177e		VoC_lw32_d(RL6,0x1c92)
0x1C941487,	//0x1780		VoC_lw32_d(RL7,0x1c94)
0x1C981484,	//0x1782		VoC_lw32_d(ACC0,0x1c98)
0xFBE77BE6,	//0x1784		VoC_shr32_ri(RL7,0xfffffffc,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffffc,DEFAULT)
0x1586FBE4,	//0x1786		VoC_sw32_d(RL6,0x1c92)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)
0x15871C92,	//0x1788		VoC_sw32_d(RL7,0x1c94)(lo)	|	VoC_sw32_d(RL6,0x1c92)(hi)
0x15841C94,	//0x178a		VoC_sw32_d(ACC0,0x1c98)(lo)	|	VoC_sw32_d(RL7,0x1c94)(hi)
0x14021C98,	//0x178c		VoC_lw16_d(REG2,0x1c9c)(lo)	|	VoC_sw32_d(ACC0,0x1c98)(hi)
0x14031C9C,	//0x178e		VoC_lw16_d(REG3,0x1c9b)(lo)	|	VoC_lw16_d(REG2,0x1c9c)(hi)
0x14041C9B,	//0x1790		VoC_lw16_d(REG4,0x1c9e)(lo)	|	VoC_lw16_d(REG3,0x1c9b)(hi)
0x14051C9E,	//0x1792		VoC_lw16_d(REG5,0x1c9f)(lo)	|	VoC_lw16_d(REG4,0x1c9e)(hi)
0x413C1C9F,	//0x1794		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16_d(REG5,0x1c9f)(hi)
0x40FBC17D,	//0x1796		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x40BAE107,	//0x1798		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x10,IN_PARALLEL)
0xC038E017,	//0x179a		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x1C9E1504,	//0x179c		VoC_sw16_d(REG4,0x1c9e)
0x1C9F1505,	//0x179e		VoC_sw16_d(REG5,0x1c9f)
0x1C9C1502,	//0x17a0		VoC_sw16_d(REG2,0x1c9c)
0x1C9B1503,	//0x17a2		VoC_sw16_d(REG3,0x1c9b)
0x3487DFC0,	//0x17a4		VoC_bngt16_rr(RMVB_DeblockFilter_102,REG0,REG7)(lo)	|	VoC_push16(REG0,DEFAULT)
0x15071776,	//0x17a6		VoC_sw16_d(REG7,0x1ca1)(lo)	|	VoC_bngt16_rr(RMVB_DeblockFilter_102,REG0,REG7)(hi)
0x2B001CA1,	//0x17a8		VoC_jump_lg(RMVB_DeblockFilter_102)(lo)	|	VoC_sw16_d(REG7,0x1ca1)(hi)
0xFFC01776,	//0x17aa		VoC_NAD	|	VoC_jump_lg(RMVB_DeblockFilter_102)(hi)
		//0x17ac		RMVB_DeblockFilter_103
0xE0017200,	//0x17ac		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x10,DEFAULT)
0xE2027003,	//0x17ae		VoC_lw16i_short(REG2,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x1CA11501,	//0x17b0		VoC_sw16_d(REG1,0x1ca1)
0x1C941580,	//0x17b2		VoC_sw32_d(REG01,0x1c94)
0x1C921581,	//0x17b4		VoC_sw32_d(REG23,0x1c92)
0x02000A80,	//0x17b6		VoC_lw16i(REG0,0x200)
0x5E310A82,	//0x17b8		VoC_lw16i(REG2,0x5e31)
0x5E320A83,	//0x17ba		VoC_lw16i(REG3,0x5e32)
0x1C981580,	//0x17bc		VoC_sw32_d(REG01,0x1c98)
0x1C9C1502,	//0x17be		VoC_sw16_d(REG2,0x1c9c)
0x1C9B1503,	//0x17c0		VoC_sw16_d(REG3,0x1c9b)
0x5E620A80,	//0x17c2		VoC_lw16i(REG0,0x5e62)
0x5E720A81,	//0x17c4		VoC_lw16i(REG1,0x5e72)
0x1C9E1500,	//0x17c6		VoC_sw16_d(REG0,0x1c9e)
0x1501F000,	//0x17c8		VoC_sw16_d(REG1,0x1c9f)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xDFC01C9F,	//0x17ca		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_d(REG1,0x1c9f)(hi)
		//0x17cc		RMVB_DeblockFilter_104
0x1C892B80,	//0x17cc		VoC_jal(CII_RMVB_Filter_BLK3)
0xE0775F80,	//0x17ce		VoC_lw16i_short(REG7,0x7,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xE0567045,	//0x17d0		VoC_lw16i_short(REG6,0x5,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x18303407,	//0x17d2		VoC_bgt16_rr(RMVB_DeblockFilter_107,REG0,REG7)
0x18013506,	//0x17d4		VoC_be16_rr(RMVB_DeblockFilter_105,REG0,REG6)
0x18063505,	//0x17d6		VoC_be16_rr(RMVB_DeblockFilter_106,REG0,REG5)
0x1C921486,	//0x17d8		VoC_lw32_d(RL6,0x1c92)
0x1C941487,	//0x17da		VoC_lw32_d(RL7,0x1c94)
0x1C981484,	//0x17dc		VoC_lw32_d(ACC0,0x1c98)
0xFBFF7BFE,	//0x17de		VoC_shr32_ri(RL7,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xffffffff,DEFAULT)
0xE0477BFC,	//0x17e0		VoC_lw16i_short(REG7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0x1C921586,	//0x17e2		VoC_sw32_d(RL6,0x1c92)
0x1C941587,	//0x17e4		VoC_sw32_d(RL7,0x1c94)
0x1C981584,	//0x17e6		VoC_sw32_d(ACC0,0x1c98)
0x1C9C1402,	//0x17e8		VoC_lw16_d(REG2,0x1c9c)
0x1C9B1403,	//0x17ea		VoC_lw16_d(REG3,0x1c9b)
0x1C9E1404,	//0x17ec		VoC_lw16_d(REG4,0x1c9e)
0x1C9F1405,	//0x17ee		VoC_lw16_d(REG5,0x1c9f)
0xC0FB40BA,	//0x17f0		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xC17D413C,	//0x17f2		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x1C9C1502,	//0x17f4		VoC_sw16_d(REG2,0x1c9c)
0x1C9B1503,	//0x17f6		VoC_sw16_d(REG3,0x1c9b)
0x1C9E1504,	//0x17f8		VoC_sw16_d(REG4,0x1c9e)
0x5D6A0700,	//0x17fa		VoC_add16_rd(REG0,REG0,0x5d6a)
0x1C9F1505,	//0x17fc		VoC_sw16_d(REG5,0x1c9f)
0x2B00DFC0,	//0x17fe		VoC_jump_lg(RMVB_DeblockFilter_104)(lo)	|	VoC_push16(REG0,DEFAULT)
0xF02717CC,	//0x1800		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_jump_lg(RMVB_DeblockFilter_104)(hi)
		//0x1801		RMVB_DeblockFilter_105
0x1507FFC0,	//0x1802		VoC_sw16_d(REG7,0x1ca1)(lo)	|	VoC_NOP
0xFFC01CA1,	//0x1804		VoC_NAD	|	VoC_sw16_d(REG7,0x1ca1)(hi)
		//0x1806		RMVB_DeblockFilter_106
0x1C921486,	//0x1806		VoC_lw32_d(RL6,0x1c92)
0x1C941487,	//0x1808		VoC_lw32_d(RL7,0x1c94)
0x1C981484,	//0x180a		VoC_lw32_d(ACC0,0x1c98)
0xFBF77BF6,	//0x180c		VoC_shr32_ri(RL7,0xfffffffe,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffffe,DEFAULT)
0x1586FBF4,	//0x180e		VoC_sw32_d(RL6,0x1c92)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x15871C92,	//0x1810		VoC_sw32_d(RL7,0x1c94)(lo)	|	VoC_sw32_d(RL6,0x1c92)(hi)
0x15841C94,	//0x1812		VoC_sw32_d(ACC0,0x1c98)(lo)	|	VoC_sw32_d(RL7,0x1c94)(hi)
0x14021C98,	//0x1814		VoC_lw16_d(REG2,0x1c9c)(lo)	|	VoC_sw32_d(ACC0,0x1c98)(hi)
0x14031C9C,	//0x1816		VoC_lw16_d(REG3,0x1c9b)(lo)	|	VoC_lw16_d(REG2,0x1c9c)(hi)
0x14041C9B,	//0x1818		VoC_lw16_d(REG4,0x1c9e)(lo)	|	VoC_lw16_d(REG3,0x1c9b)(hi)
0x14051C9E,	//0x181a		VoC_lw16_d(REG5,0x1c9f)(lo)	|	VoC_lw16_d(REG4,0x1c9e)(hi)
0x0A871C9F,	//0x181c		VoC_lw16i(REG7,0x38)(lo)	|	VoC_lw16_d(REG5,0x1c9f)(hi)
0x40BA0038,	//0x181e		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_lw16i(REG7,0x38)(hi)
0x413CC0FB,	//0x1820		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
0x0700C17D,	//0x1822		VoC_add16_rd(REG0,REG0,0x5d6a)(lo)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x15025D6A,	//0x1824		VoC_sw16_d(REG2,0x1c9c)(lo)	|	VoC_add16_rd(REG0,REG0,0x5d6a)(hi)
0x15031C9C,	//0x1826		VoC_sw16_d(REG3,0x1c9b)(lo)	|	VoC_sw16_d(REG2,0x1c9c)(hi)
0x15041C9B,	//0x1828		VoC_sw16_d(REG4,0x1c9e)(lo)	|	VoC_sw16_d(REG3,0x1c9b)(hi)
0x15051C9E,	//0x182a		VoC_sw16_d(REG5,0x1c9f)(lo)	|	VoC_sw16_d(REG4,0x1c9e)(hi)
0xDFC01C9F,	//0x182c		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_d(REG5,0x1c9f)(hi)
0x17CC2B00,	//0x182e		VoC_jump_lg(RMVB_DeblockFilter_104)
		//0x1830		RMVB_DeblockFilter_107
0x0CB21405,	//0x1830		VoC_lw16_d(REG5,0xcb2)
0x5D7907AD,	//0x1832		VoC_sub16_rd(REG5,REG5,0x5d79)
0xE0447815,	//0x1834		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0x0C1A0A83,	//0x1836		VoC_lw16i(REG3,0xc1a)
0x0EC41486,	//0x1838		VoC_lw32_d(RL6,0xec4)
0x1C8E09B6,	//0x183a		VoC_sub32_rd(RL6,RL6,0x1c8e)
0x5D882A06,	//0x183c		VoC_or32_rd(RL6,0x5d88)
0x7FC81545,	//0x183e		VoC_sw16_d(REG5,0xffc8)
0x7FC91544,	//0x1840		VoC_sw16_d(REG4,0xffc9)
0x7FC31543,	//0x1842		VoC_sw16_d(REG3,0xffc3)
0x7FC21544,	//0x1844		VoC_sw16_d(REG4,0xffc2)
0x7FC415C6,	//0x1846		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x1848		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x184a		VoC_cfg_lg(0x8,)
0x0CB21405,	//0x184c		VoC_lw16_d(REG5,0xcb2)
0x5D6D07AD,	//0x184e		VoC_sub16_rd(REG5,REG5,0x5d6d)
0xE1047815,	//0x1850		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0x0BFA0A83,	//0x1852		VoC_lw16i(REG3,0xbfa)
0x0EC41486,	//0x1854		VoC_lw32_d(RL6,0xec4)
0x5D8209B6,	//0x1856		VoC_sub32_rd(RL6,RL6,0x5d82)
0x5D882A06,	//0x1858		VoC_or32_rd(RL6,0x5d88)
0x1545F022,	//0x185a		VoC_sw16_d(REG5,0xffc8)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x15447FC8,	//0x185c		VoC_sw16_d(REG4,0xffc9)(lo)	|	VoC_sw16_d(REG5,0xffc8)(hi)
0x15437FC9,	//0x185e		VoC_sw16_d(REG3,0xffc3)(lo)	|	VoC_sw16_d(REG4,0xffc9)(hi)
0x15427FC3,	//0x1860		VoC_sw16_d(REG2,0xffc2)(lo)	|	VoC_sw16_d(REG3,0xffc3)(hi)
0x15C67FC2,	//0x1862		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG2,0xffc2)(hi)
0xDE807FC4,	//0x1864		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x1866		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xFFC00008,	//0x1868		VoC_NAD	|	VoC_cfg_lg(0x8,)(hi)
		//0x186a		RMVB_DeblockFilter_CHROMA
0x0CCC1406,	//0x186a		VoC_lw16_d(REG6,0xccc)
0x0CDA1486,	//0x186c		VoC_lw32_d(RL6,0xcda)
0x0CDC1487,	//0x186e		VoC_lw32_d(RL7,0xcdc)
0x7A86E53E,	//0x1870		VoC_shr32_ri(RL6,0x10,DEFAULT)	|	VoC_or32_rr(RL6,RL7,DEFAULT)
0x1506E012,	//0x1872		VoC_sw16_d(REG6,0xccb)(lo)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0x33060CCB,	//0x1874		VoC_bez32_r(RMVB_DeblockFilter_END,RL6)(lo)	|	VoC_sw16_d(REG6,0xccb)(hi)
0x15021A1E,	//0x1876		VoC_sw16_d(REG2,0x1c9d)(lo)	|	VoC_bez32_r(RMVB_DeblockFilter_END,RL6)(hi)
0x14051C9D,	//0x1878		VoC_lw16_d(REG5,0xcb2)(lo)	|	VoC_sw16_d(REG2,0x1c9d)(hi)
0xF80D0CB2,	//0x187a		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_lw16_d(REG5,0xcb2)(hi)
0x5D7107AD,	//0x187c		VoC_sub16_rd(REG5,REG5,0x5d71)
0xE0247815,	//0x187e		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0x0C4A0A83,	//0x1880		VoC_lw16i(REG3,0xc4a)
0x1486F082,	//0x1882		VoC_lw32_d(RL6,0xec6)(lo)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x14870EC6,	//0x1884		VoC_lw32_d(RL7,0x1c8e)(lo)	|	VoC_lw32_d(RL6,0xec6)(hi)
0xFA0F1C8E,	//0x1886		VoC_shr32_ri(RL7,0x1,DEFAULT)	|	VoC_lw32_d(RL7,0x1c8e)(hi)
0x2A06CBBE,	//0x1888		VoC_or32_rd(RL6,0x5d86)(lo)	|	VoC_sub32_rr(RL6,RL6,RL7,DEFAULT)
0x15455D86,	//0x188a		VoC_sw16_d(REG5,0xffc8)(lo)	|	VoC_or32_rd(RL6,0x5d86)(hi)
0x15427FC8,	//0x188c		VoC_sw16_d(REG2,0xffc9)(lo)	|	VoC_sw16_d(REG5,0xffc8)(hi)
0x15437FC9,	//0x188e		VoC_sw16_d(REG3,0xffc3)(lo)	|	VoC_sw16_d(REG2,0xffc9)(hi)
0x15447FC3,	//0x1890		VoC_sw16_d(REG4,0xffc2)(lo)	|	VoC_sw16_d(REG3,0xffc3)(hi)
0x15C67FC2,	//0x1892		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG4,0xffc2)(hi)
0xDE807FC4,	//0x1894		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x1896		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xF0820008,	//0x1898		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x0C6A0A83,	//0x189a		VoC_lw16i(REG3,0xc6a)
0x0EC81486,	//0x189c		VoC_lw32_d(RL6,0xec8)
0x2A06CBBE,	//0x189e		VoC_or32_rd(RL6,0x5d86)(lo)	|	VoC_sub32_rr(RL6,RL6,RL7,DEFAULT)
0x15425D86,	//0x18a0		VoC_sw16_d(REG2,0xffc9)(lo)	|	VoC_or32_rd(RL6,0x5d86)(hi)
0x15437FC9,	//0x18a2		VoC_sw16_d(REG3,0xffc3)(lo)	|	VoC_sw16_d(REG2,0xffc9)(hi)
0x15C67FC3,	//0x18a4		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc3)(hi)
0xDE807FC4,	//0x18a6		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x18a8		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14050008,	//0x18aa		VoC_lw16_d(REG5,0xcb2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xF80D0CB2,	//0x18ac		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_lw16_d(REG5,0xcb2)(hi)
0x5D6D07AD,	//0x18ae		VoC_sub16_rd(REG5,REG5,0x5d6d)
0xE0847815,	//0x18b0		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0x0C3A0A83,	//0x18b2		VoC_lw16i(REG3,0xc3a)
0x0EC61486,	//0x18b4		VoC_lw32_d(RL6,0xec6)
0x5D8209B6,	//0x18b6		VoC_sub32_rd(RL6,RL6,0x5d82)
0x5D862A06,	//0x18b8		VoC_or32_rd(RL6,0x5d86)
0x1545F022,	//0x18ba		VoC_sw16_d(REG5,0xffc8)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x15447FC8,	//0x18bc		VoC_sw16_d(REG4,0xffc9)(lo)	|	VoC_sw16_d(REG5,0xffc8)(hi)
0x15437FC9,	//0x18be		VoC_sw16_d(REG3,0xffc3)(lo)	|	VoC_sw16_d(REG4,0xffc9)(hi)
0x15427FC3,	//0x18c0		VoC_sw16_d(REG2,0xffc2)(lo)	|	VoC_sw16_d(REG3,0xffc3)(hi)
0x15C67FC2,	//0x18c2		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG2,0xffc2)(hi)
0xDE807FC4,	//0x18c4		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x18c6		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xF1040008,	//0x18c8		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x0C5A0A83,	//0x18ca		VoC_lw16i(REG3,0xc5a)
0x0EC81486,	//0x18cc		VoC_lw32_d(RL6,0xec8)
0x5D8209B6,	//0x18ce		VoC_sub32_rd(RL6,RL6,0x5d82)
0x5D862A06,	//0x18d0		VoC_or32_rd(RL6,0x5d86)
0x7FC91544,	//0x18d2		VoC_sw16_d(REG4,0xffc9)
0x7FC31543,	//0x18d4		VoC_sw16_d(REG3,0xffc3)
0x7FC415C6,	//0x18d6		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x18d8		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x18da		VoC_cfg_lg(0x8,)
0xE0217000,	//0x18dc		VoC_lw16i_short(REG1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE0437002,	//0x18de		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xE0157004,	//0x18e0		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x1C941580,	//0x18e2		VoC_sw32_d(REG01,0x1c94)
0x1C961581,	//0x18e4		VoC_sw32_d(REG23,0x1c96)
0x1C981581,	//0x18e6		VoC_sw32_d(REG23,0x1c98)
0x1C921582,	//0x18e8		VoC_sw32_d(REG45,0x1c92)
0x5EEE0A82,	//0x18ea		VoC_lw16i(REG2,0x5eee)
0x18770A83,	//0x18ec		VoC_lw16i(REG3,0x1877)
0x18AC0A84,	//0x18ee		VoC_lw16i(REG4,0x18ac)
0x1C9B1502,	//0x18f0		VoC_sw16_d(REG2,0x1c9b)
0x1C9C1503,	//0x18f2		VoC_sw16_d(REG3,0x1c9c)
0x1C9A1504,	//0x18f4		VoC_sw16_d(REG4,0x1c9a)
0x5F060A82,	//0x18f6		VoC_lw16i(REG2,0x5f06)
0x5F0E0A83,	//0x18f8		VoC_lw16i(REG3,0x5f0e)
0x1C9E1502,	//0x18fa		VoC_sw16_d(REG2,0x1c9e)
0x1C9F1503,	//0x18fc		VoC_sw16_d(REG3,0x1c9f)
0x1A212B80,	//0x18fe		VoC_jal(CII_RMVB_Filter_BLK0)
0xE2017000,	//0x1900		VoC_lw16i_short(REG1,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE4037002,	//0x1902		VoC_lw16i_short(REG3,0x40,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xE1057004,	//0x1904		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x1C941580,	//0x1906		VoC_sw32_d(REG01,0x1c94)
0x1C961581,	//0x1908		VoC_sw32_d(REG23,0x1c96)
0x1C981581,	//0x190a		VoC_sw32_d(REG23,0x1c98)
0x1C921582,	//0x190c		VoC_sw32_d(REG45,0x1c92)
0x5F2E0A82,	//0x190e		VoC_lw16i(REG2,0x5f2e)
0x18B70A83,	//0x1910		VoC_lw16i(REG3,0x18b7)
0x18EC0A84,	//0x1912		VoC_lw16i(REG4,0x18ec)
0x1C9B1502,	//0x1914		VoC_sw16_d(REG2,0x1c9b)
0x1C9C1503,	//0x1916		VoC_sw16_d(REG3,0x1c9c)
0x1C9A1504,	//0x1918		VoC_sw16_d(REG4,0x1c9a)
0x5F460A82,	//0x191a		VoC_lw16i(REG2,0x5f46)
0x5F4E0A83,	//0x191c		VoC_lw16i(REG3,0x5f4e)
0x1C9E1502,	//0x191e		VoC_sw16_d(REG2,0x1c9e)
0x1C9F1503,	//0x1920		VoC_sw16_d(REG3,0x1c9f)
0x1A212B80,	//0x1922		VoC_jal(CII_RMVB_Filter_BLK0)
0xE0117000,	//0x1924		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE0237002,	//0x1926		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x1C941580,	//0x1928		VoC_sw32_d(REG01,0x1c94)
0x1C921581,	//0x192a		VoC_sw32_d(REG23,0x1c92)
0xE1C67101,	//0x192c		VoC_lw16i_short(REG6,0x1c,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0x5EF10A82,	//0x192e		VoC_lw16i(REG2,0x5ef1)
0x5EF20A83,	//0x1930		VoC_lw16i(REG3,0x5ef2)
0x18B00A84,	//0x1932		VoC_lw16i(REG4,0x18b0)
0x1C961580,	//0x1934		VoC_sw32_d(REG01,0x1c96)
0x1C981580,	//0x1936		VoC_sw32_d(REG01,0x1c98)
0x1C9C1502,	//0x1938		VoC_sw16_d(REG2,0x1c9c)
0x1C9B1503,	//0x193a		VoC_sw16_d(REG3,0x1c9b)
0x1C9A1504,	//0x193c		VoC_sw16_d(REG4,0x1c9a)
0x5F0A0A80,	//0x193e		VoC_lw16i(REG0,0x5f0a)
0x5F120A81,	//0x1940		VoC_lw16i(REG1,0x5f12)
0x1C9E1500,	//0x1942		VoC_sw16_d(REG0,0x1c9e)
0x1C9F1501,	//0x1944		VoC_sw16_d(REG1,0x1c9f)
0x1B2F2B80,	//0x1946		VoC_jal(CII_RMVB_Filter_BLK1)
0xE1017000,	//0x1948		VoC_lw16i_short(REG1,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE2037002,	//0x194a		VoC_lw16i_short(REG3,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x1C941580,	//0x194c		VoC_sw32_d(REG01,0x1c94)
0x1C921581,	//0x194e		VoC_sw32_d(REG23,0x1c92)
0x00800A81,	//0x1950		VoC_lw16i(REG1,0x80)
0x0A82F386,	//0x1952		VoC_lw16i(REG2,0x5f31)(lo)	|	VoC_lw16i_short(REG6,0x1c,DEFAULT)
0x0A835F31,	//0x1954		VoC_lw16i(REG3,0x5f32)(lo)	|	VoC_lw16i(REG2,0x5f31)(hi)
0x0A845F32,	//0x1956		VoC_lw16i(REG4,0x18f0)(lo)	|	VoC_lw16i(REG3,0x5f32)(hi)
0x158018F0,	//0x1958		VoC_sw32_d(REG01,0x1c96)(lo)	|	VoC_lw16i(REG4,0x18f0)(hi)
0x15801C96,	//0x195a		VoC_sw32_d(REG01,0x1c98)(lo)	|	VoC_sw32_d(REG01,0x1c96)(hi)
0x15021C98,	//0x195c		VoC_sw16_d(REG2,0x1c9c)(lo)	|	VoC_sw32_d(REG01,0x1c98)(hi)
0x15031C9C,	//0x195e		VoC_sw16_d(REG3,0x1c9b)(lo)	|	VoC_sw16_d(REG2,0x1c9c)(hi)
0x15041C9B,	//0x1960		VoC_sw16_d(REG4,0x1c9a)(lo)	|	VoC_sw16_d(REG3,0x1c9b)(hi)
0x0A801C9A,	//0x1962		VoC_lw16i(REG0,0x5f4a)(lo)	|	VoC_sw16_d(REG4,0x1c9a)(hi)
0x0A815F4A,	//0x1964		VoC_lw16i(REG1,0x5f52)(lo)	|	VoC_lw16i(REG0,0x5f4a)(hi)
0x15005F52,	//0x1966		VoC_sw16_d(REG0,0x1c9e)(lo)	|	VoC_lw16i(REG1,0x5f52)(hi)
0x15011C9E,	//0x1968		VoC_sw16_d(REG1,0x1c9f)(lo)	|	VoC_sw16_d(REG0,0x1c9e)(hi)
0xFFC01C9F,	//0x196a		VoC_NAD	|	VoC_sw16_d(REG1,0x1c9f)(hi)
0x1B2F2B80,	//0x196c		VoC_jal(CII_RMVB_Filter_BLK1)
0xE0817000,	//0x196e		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE0437002,	//0x1970		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x1580F266,	//0x1972		VoC_sw32_d(REG01,0x1c94)(lo)	|	VoC_lw16i_short(REG6,0x13,DEFAULT)
0x15811C94,	//0x1974		VoC_sw32_d(REG23,0x1c92)(lo)	|	VoC_sw32_d(REG01,0x1c94)(hi)
0x0A821C92,	//0x1976		VoC_lw16i(REG2,0x1887)(lo)	|	VoC_sw32_d(REG23,0x1c92)(hi)
0x0A831887,	//0x1978		VoC_lw16i(REG3,0x5f0e)(lo)	|	VoC_lw16i(REG2,0x1887)(hi)
0xF0205F0E,	//0x197a		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_lw16i(REG3,0x5f0e)(hi)
0x1C9C1502,	//0x197c		VoC_sw16_d(REG2,0x1c9c)
0x1C9B1503,	//0x197e		VoC_sw16_d(REG3,0x1c9b)
0x1CA11500,	//0x1980		VoC_sw16_d(REG0,0x1ca1)
0x1C072B80,	//0x1982		VoC_jal(CII_RMVB_Filter_BLK2)
0xE0027000,	//0x1984		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x00800A81,	//0x1986		VoC_lw16i(REG1,0x80)
0xE4037266,	//0x1988		VoC_lw16i_short(REG3,0x40,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x13,DEFAULT)
0x1C941580,	//0x198a		VoC_sw32_d(REG01,0x1c94)
0x1C921581,	//0x198c		VoC_sw32_d(REG23,0x1c92)
0x18C70A82,	//0x198e		VoC_lw16i(REG2,0x18c7)
0x5F4E0A83,	//0x1990		VoC_lw16i(REG3,0x5f4e)
0x1C9C1502,	//0x1992		VoC_sw16_d(REG2,0x1c9c)
0x1C9B1503,	//0x1994		VoC_sw16_d(REG3,0x1c9b)
0x1C072B80,	//0x1996		VoC_jal(CII_RMVB_Filter_BLK2)
0xE0817000,	//0x1998		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE0437002,	//0x199a		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x1C921580,	//0x199c		VoC_sw32_d(REG01,0x1c92)
0x1C941581,	//0x199e		VoC_sw32_d(REG23,0x1c94)
0x5F110A82,	//0x19a0		VoC_lw16i(REG2,0x5f11)
0x5F120A83,	//0x19a2		VoC_lw16i(REG3,0x5f12)
0x1C9C1502,	//0x19a4		VoC_sw16_d(REG2,0x1c9c)
0x1C9B1503,	//0x19a6		VoC_sw16_d(REG3,0x1c9b)
0x1C892B80,	//0x19a8		VoC_jal(CII_RMVB_Filter_BLK3)
0xE0027000,	//0x19aa		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x00800A81,	//0x19ac		VoC_lw16i(REG1,0x80)
0x00400A83,	//0x19ae		VoC_lw16i(REG3,0x40)
0x1C921580,	//0x19b0		VoC_sw32_d(REG01,0x1c92)
0x1C941581,	//0x19b2		VoC_sw32_d(REG23,0x1c94)
0x5F510A82,	//0x19b4		VoC_lw16i(REG2,0x5f51)
0x5F520A83,	//0x19b6		VoC_lw16i(REG3,0x5f52)
0x1C9C1502,	//0x19b8		VoC_sw16_d(REG2,0x1c9c)
0x1C9B1503,	//0x19ba		VoC_sw16_d(REG3,0x1c9b)
0x1C892B80,	//0x19bc		VoC_jal(CII_RMVB_Filter_BLK3)
0x0CB21400,	//0x19be		VoC_lw16_d(REG0,0xcb2)
0x1486F808,	//0x19c0		VoC_lw32_d(RL6,0xec6)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x14870EC6,	//0x19c2		VoC_lw32_d(RL7,0xec8)(lo)	|	VoC_lw32_d(RL6,0xec6)(hi)
0x70010EC8,	//0x19c4		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_lw32_d(RL7,0xec8)(hi)
0x0785E024,	//0x19c6		VoC_sub16_rd(REG5,REG0,0x5d71)(lo)	|	VoC_lw16i_short(REG4,0x2,IN_PARALLEL)
0x78155D71,	//0x19c8		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_sub16_rd(REG5,REG0,0x5d71)(hi)
0x0A82FBF8,	//0x19ca		VoC_lw16i(REG2,0xc52)(lo)	|	VoC_shr32_ri(REG01,0xffffffff,IN_PARALLEL)
0x0A830C52,	//0x19cc		VoC_lw16i(REG3,0xc72)(lo)	|	VoC_lw16i(REG2,0xc52)(hi)
0x4B860C72,	//0x19ce		VoC_sub32_rr(RL6,RL6,REG01,DEFAULT)	|	VoC_lw16i(REG3,0xc72)(hi)
0x2A06CBC7,	//0x19d0		VoC_or32_rd(RL6,0x5d88)(lo)	|	VoC_sub32_rr(RL7,RL7,REG01,IN_PARALLEL)
0x2A075D88,	//0x19d2		VoC_or32_rd(RL7,0x5d88)(lo)	|	VoC_or32_rd(RL6,0x5d88)(hi)
0x15455D88,	//0x19d4		VoC_sw16_d(REG5,0xffc8)(lo)	|	VoC_or32_rd(RL7,0x5d88)(hi)
0x15447FC8,	//0x19d6		VoC_sw16_d(REG4,0xffc9)(lo)	|	VoC_sw16_d(REG5,0xffc8)(hi)
0x15427FC9,	//0x19d8		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_sw16_d(REG4,0xffc9)(hi)
0x15447FC3,	//0x19da		VoC_sw16_d(REG4,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C67FC2,	//0x19dc		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG4,0xffc2)(hi)
0xDE807FC4,	//0x19de		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x19e0		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x15440008,	//0x19e2		VoC_sw16_d(REG4,0xffc9)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15437FC9,	//0x19e4		VoC_sw16_d(REG3,0xffc3)(lo)	|	VoC_sw16_d(REG4,0xffc9)(hi)
0x15C77FC3,	//0x19e6		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc3)(hi)
0xDE807FC4,	//0x19e8		VoC_cfg(0x0)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x1794FFC0,	//0x19ea		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14050008,	//0x19ec		VoC_lw16_d(REG5,0xcb2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xF80D0CB2,	//0x19ee		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_lw16_d(REG5,0xcb2)(hi)
0x5D6D07AD,	//0x19f0		VoC_sub16_rd(REG5,REG5,0x5d6d)
0xE0847815,	//0x19f2		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0x0C3A0A83,	//0x19f4		VoC_lw16i(REG3,0xc3a)
0x0EC61486,	//0x19f6		VoC_lw32_d(RL6,0xec6)
0x5D8209B6,	//0x19f8		VoC_sub32_rd(RL6,RL6,0x5d82)
0x5D882A06,	//0x19fa		VoC_or32_rd(RL6,0x5d88)
0x1545F022,	//0x19fc		VoC_sw16_d(REG5,0xffc8)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x15447FC8,	//0x19fe		VoC_sw16_d(REG4,0xffc9)(lo)	|	VoC_sw16_d(REG5,0xffc8)(hi)
0x15437FC9,	//0x1a00		VoC_sw16_d(REG3,0xffc3)(lo)	|	VoC_sw16_d(REG4,0xffc9)(hi)
0x15427FC3,	//0x1a02		VoC_sw16_d(REG2,0xffc2)(lo)	|	VoC_sw16_d(REG3,0xffc3)(hi)
0x15C67FC2,	//0x1a04		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_sw16_d(REG2,0xffc2)(hi)
0xDE807FC4,	//0x1a06		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x1a08		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xF1040008,	//0x1a0a		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x0C5A0A83,	//0x1a0c		VoC_lw16i(REG3,0xc5a)
0x0EC81486,	//0x1a0e		VoC_lw32_d(RL6,0xec8)
0x5D8209B6,	//0x1a10		VoC_sub32_rd(RL6,RL6,0x5d82)
0x5D882A06,	//0x1a12		VoC_or32_rd(RL6,0x5d88)
0x7FC91544,	//0x1a14		VoC_sw16_d(REG4,0xffc9)
0x7FC31543,	//0x1a16		VoC_sw16_d(REG3,0xffc3)
0x7FC415C6,	//0x1a18		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x1a1a		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x1a1c		VoC_cfg_lg(0x8,)
		//0x1a1e		RMVB_DeblockFilter_END
0xFFC0DFA9,	//0x1a1e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1a20		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1a21		CII_RMVB_Filter_BLK0
0x0CDA1486,	//0x1a22		VoC_lw32_d(RL6,0xcda)
0x0CDC1487,	//0x1a24		VoC_lw32_d(RL7,0xcdc)
0x1C922987,	//0x1a26		VoC_and32_rd(RL7,0x1c92)
0x2986FF34,	//0x1a28		VoC_and32_rd(RL6,0x1c92)(lo)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0x29841C92,	//0x1a2a		VoC_and32_rd(ACC0,0x1c98)(lo)	|	VoC_and32_rd(RL6,0x1c92)(hi)
0xE53E1C98,	//0x1a2c		VoC_or32_rr(RL6,RL7,DEFAULT)	|	VoC_and32_rd(ACC0,0x1c98)(hi)
0x1487E534,	//0x1a2e		VoC_lw32_d(RL7,0xcd8)(lo)	|	VoC_or32_rr(ACC0,RL6,DEFAULT)
0x33040CD8,	//0x1a30		VoC_bez32_r(RMVB_Filter_BLK0_END,ACC0)(lo)	|	VoC_lw32_d(RL7,0xcd8)(hi)
0x29871B2C,	//0x1a32		VoC_and32_rd(RL7,0x1c92)(lo)	|	VoC_bez32_r(RMVB_Filter_BLK0_END,ACC0)(hi)
0x14021C92,	//0x1a34		VoC_lw16_d(REG2,0xccf)(lo)	|	VoC_and32_rd(RL7,0x1c92)(hi)
0x33470CCF,	//0x1a36		VoC_bnez32_r(RMVB_Filter_BLK0_100,RL7)(lo)	|	VoC_lw16_d(REG2,0xccf)(hi)
0x14021A3B,	//0x1a38		VoC_lw16_d(REG2,0xccd)(lo)	|	VoC_bnez32_r(RMVB_Filter_BLK0_100,RL7)(hi)
0xE0430CCD,	//0x1a3a		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_lw16_d(REG2,0xccd)(hi)
		//0x1a3b		RMVB_Filter_BLK0_100
0x1CA21502,	//0x1a3c		VoC_sw16_d(REG2,0x1ca2)
0x0CD26C04,	//0x1a3e		VoC_bez16_d(RMVB_Filter_BLK0_101,0xcd2)
0x0CCE1402,	//0x1a40		VoC_lw16_d(REG2,0xcce)
		//0x1a42		RMVB_Filter_BLK0_101
0x0CD36C04,	//0x1a42		VoC_bez16_d(RMVB_Filter_BLK0_102,0xcd3)
0x0CCE1403,	//0x1a44		VoC_lw16_d(REG3,0xcce)
		//0x1a46		RMVB_Filter_BLK0_102
0x1CA31502,	//0x1a46		VoC_sw16_d(REG2,0x1ca3)
0x1CA41503,	//0x1a48		VoC_sw16_d(REG3,0x1ca4)
0x0CD61486,	//0x1a4a		VoC_lw32_d(RL6,0xcd6)
0x1C942986,	//0x1a4c		VoC_and32_rd(RL6,0x1c94)
0x0CD01402,	//0x1a4e		VoC_lw16_d(REG2,0xcd0)
0x1A543346,	//0x1a50		VoC_bnez32_r(RMVB_Filter_BLK0_103,RL6)
0x0CCD1402,	//0x1a52		VoC_lw16_d(REG2,0xccd)
		//0x1a54		RMVB_Filter_BLK0_103
0x0CDA1486,	//0x1a54		VoC_lw32_d(RL6,0xcda)
0x1CA51502,	//0x1a56		VoC_sw16_d(REG2,0x1ca5)
0x0CDE1487,	//0x1a58		VoC_lw32_d(RL7,0xcde)
0x1C982986,	//0x1a5a		VoC_and32_rd(RL6,0x1c98)
0x1C982987,	//0x1a5c		VoC_and32_rd(RL7,0x1c98)
0x1A843306,	//0x1a5e		VoC_bez32_r(RMVB_Filter_BLK0_106,RL6)
0x1A843347,	//0x1a60		VoC_bnez32_r(RMVB_Filter_BLK0_106,RL7)
0x1C9E1400,	//0x1a62		VoC_lw16_d(REG0,0x1c9e)
0x1C9F1401,	//0x1a64		VoC_lw16_d(REG1,0x1c9f)
0xE0037202,	//0x1a66		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1C9D6C04,	//0x1a68		VoC_bez16_d(RMVB_Filter_BLK0_104,0x1c9d)
0xE0037102,	//0x1a6a		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1a6c		RMVB_Filter_BLK0_104
0xF0057030,	//0x1a6c		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1CA61502,	//0x1a6e		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1a70		VoC_sw16_d(REG3,0x1ca7)
0x0CD81486,	//0x1a72		VoC_lw32_d(RL6,0xcd8)
0x1C982986,	//0x1a74		VoC_and32_rd(RL6,0x1c98)
0x0CCF1403,	//0x1a76		VoC_lw16_d(REG3,0xccf)
0x1A7C3346,	//0x1a78		VoC_bnez32_r(RMVB_Filter_BLK0_105,RL6)
0x0CCD1403,	//0x1a7a		VoC_lw16_d(REG3,0xccd)
		//0x1a7c		RMVB_Filter_BLK0_105
0x1CA21402,	//0x1a7c		VoC_lw16_d(REG2,0x1ca2)
0x1CA81503,	//0x1a7e		VoC_sw16_d(REG3,0x1ca8)
0x1CA91502,	//0x1a80		VoC_sw16_d(REG2,0x1ca9)
0x1CF92B80,	//0x1a82		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1a84		RMVB_Filter_BLK0_106
0x0CDA1486,	//0x1a84		VoC_lw32_d(RL6,0xcda)
0x0CDE1487,	//0x1a86		VoC_lw32_d(RL7,0xcde)
0x1C922986,	//0x1a88		VoC_and32_rd(RL6,0x1c92)
0x1C922987,	//0x1a8a		VoC_and32_rd(RL7,0x1c92)
0x1AB23306,	//0x1a8c		VoC_bez32_r(RMVB_Filter_BLK0_109,RL6)
0x1AB23347,	//0x1a8e		VoC_bnez32_r(RMVB_Filter_BLK0_109,RL7)
0x1C9A1400,	//0x1a90		VoC_lw16_d(REG0,0x1c9a)
0x1C9B1401,	//0x1a92		VoC_lw16_d(REG1,0x1c9b)
0xE0037202,	//0x1a94		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1C9D6C04,	//0x1a96		VoC_bez16_d(RMVB_Filter_BLK0_107,0x1c9d)
0xE0037102,	//0x1a98		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1a9a		RMVB_Filter_BLK0_107
0xF0057030,	//0x1a9a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1CA61502,	//0x1a9c		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1a9e		VoC_sw16_d(REG3,0x1ca7)
0x0CD41486,	//0x1aa0		VoC_lw32_d(RL6,0xcd4)
0x1C962986,	//0x1aa2		VoC_and32_rd(RL6,0x1c96)
0x0CD11403,	//0x1aa4		VoC_lw16_d(REG3,0xcd1)
0x1AAA3346,	//0x1aa6		VoC_bnez32_r(RMVB_Filter_BLK0_108,RL6)
0x0CCD1403,	//0x1aa8		VoC_lw16_d(REG3,0xccd)
		//0x1aaa		RMVB_Filter_BLK0_108
0x1CA31402,	//0x1aaa		VoC_lw16_d(REG2,0x1ca3)
0x1CA91503,	//0x1aac		VoC_sw16_d(REG3,0x1ca9)
0x1CA81502,	//0x1aae		VoC_sw16_d(REG2,0x1ca8)
0x1CF92B80,	//0x1ab0		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1ab2		RMVB_Filter_BLK0_109
0x0CDC1486,	//0x1ab2		VoC_lw32_d(RL6,0xcdc)
0x0CE01487,	//0x1ab4		VoC_lw32_d(RL7,0xce0)
0x1C922986,	//0x1ab6		VoC_and32_rd(RL6,0x1c92)
0x1C922987,	//0x1ab8		VoC_and32_rd(RL7,0x1c92)
0x1AD83306,	//0x1aba		VoC_bez32_r(RMVB_Filter_BLK0_112,RL6)
0x1AD83347,	//0x1abc		VoC_bnez32_r(RMVB_Filter_BLK0_112,RL7)
0x1C9C1400,	//0x1abe		VoC_lw16_d(REG0,0x1c9c)
0x1C9B1401,	//0x1ac0		VoC_lw16_d(REG1,0x1c9b)
0xE0037022,	//0x1ac2		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xF0417090,	//0x1ac4		VoC_lw16i_short(INC1,0x10,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x1C9D6C04,	//0x1ac6		VoC_bez16_d(RMVB_Filter_BLK0_110,0x1c9d)
0xF0217090,	//0x1ac8		VoC_lw16i_short(INC1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
		//0x1aca		RMVB_Filter_BLK0_110
0x1CA61502,	//0x1aca		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1acc		VoC_sw16_d(REG3,0x1ca7)
0x1CA41403,	//0x1ace		VoC_lw16_d(REG3,0x1ca4)
0x1CA51402,	//0x1ad0		VoC_lw16_d(REG2,0x1ca5)
0x1CA81503,	//0x1ad2		VoC_sw16_d(REG3,0x1ca8)
0x1CA91502,	//0x1ad4		VoC_sw16_d(REG2,0x1ca9)
0x1CF92B80,	//0x1ad6		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1ad8		RMVB_Filter_BLK0_112
0x0CDA1486,	//0x1ad8		VoC_lw32_d(RL6,0xcda)
0x0CDE1487,	//0x1ada		VoC_lw32_d(RL7,0xcde)
0x1C922986,	//0x1adc		VoC_and32_rd(RL6,0x1c92)
0x1C922987,	//0x1ade		VoC_and32_rd(RL7,0x1c92)
0x1B063306,	//0x1ae0		VoC_bez32_r(RMVB_Filter_BLK0_116,RL6)
0x1B063307,	//0x1ae2		VoC_bez32_r(RMVB_Filter_BLK0_116,RL7)
0x1C9A1400,	//0x1ae4		VoC_lw16_d(REG0,0x1c9a)
0x1C9B1401,	//0x1ae6		VoC_lw16_d(REG1,0x1c9b)
0xE0137202,	//0x1ae8		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1C9D6C04,	//0x1aea		VoC_bez16_d(RMVB_Filter_BLK0_113,0x1c9d)
0xE0137102,	//0x1aec		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1aee		RMVB_Filter_BLK0_113
0xF0057030,	//0x1aee		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1CA61502,	//0x1af0		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1af2		VoC_sw16_d(REG3,0x1ca7)
0x0CD41486,	//0x1af4		VoC_lw32_d(RL6,0xcd4)
0x1C962986,	//0x1af6		VoC_and32_rd(RL6,0x1c96)
0x0CD11403,	//0x1af8		VoC_lw16_d(REG3,0xcd1)
0x1AFE3346,	//0x1afa		VoC_bnez32_r(RMVB_Filter_BLK0_114,RL6)
0x0CCD1403,	//0x1afc		VoC_lw16_d(REG3,0xccd)
		//0x1afe		RMVB_Filter_BLK0_114
0x1CA31402,	//0x1afe		VoC_lw16_d(REG2,0x1ca3)
0x1CA91503,	//0x1b00		VoC_sw16_d(REG3,0x1ca9)
0x1CA81502,	//0x1b02		VoC_sw16_d(REG2,0x1ca8)
0x1CF92B80,	//0x1b04		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1b06		RMVB_Filter_BLK0_116
0x0CDC1486,	//0x1b06		VoC_lw32_d(RL6,0xcdc)
0x0CE01487,	//0x1b08		VoC_lw32_d(RL7,0xce0)
0x1C922986,	//0x1b0a		VoC_and32_rd(RL6,0x1c92)
0x1C922987,	//0x1b0c		VoC_and32_rd(RL7,0x1c92)
0x1B2C3306,	//0x1b0e		VoC_bez32_r(RMVB_Filter_BLK0_END,RL6)
0x1B2C3307,	//0x1b10		VoC_bez32_r(RMVB_Filter_BLK0_END,RL7)
0x1C9C1400,	//0x1b12		VoC_lw16_d(REG0,0x1c9c)
0x1C9B1401,	//0x1b14		VoC_lw16_d(REG1,0x1c9b)
0xE0137022,	//0x1b16		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xF0417090,	//0x1b18		VoC_lw16i_short(INC1,0x10,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x1C9D6C04,	//0x1b1a		VoC_bez16_d(RMVB_Filter_BLK0_117,0x1c9d)
0xF0217090,	//0x1b1c		VoC_lw16i_short(INC1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
		//0x1b1e		RMVB_Filter_BLK0_117
0x1CA61502,	//0x1b1e		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1b20		VoC_sw16_d(REG3,0x1ca7)
0x1CA41403,	//0x1b22		VoC_lw16_d(REG3,0x1ca4)
0x1CA51402,	//0x1b24		VoC_lw16_d(REG2,0x1ca5)
0x1CA81503,	//0x1b26		VoC_sw16_d(REG3,0x1ca8)
0x1CA91502,	//0x1b28		VoC_sw16_d(REG2,0x1ca9)
0x1CF92B80,	//0x1b2a		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1b2c		RMVB_Filter_BLK0_END
0xFFC0DFA9,	//0x1b2c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1b2e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1b2f		CII_RMVB_Filter_BLK1
0x0CDA1486,	//0x1b30		VoC_lw32_d(RL6,0xcda)
0x0CDC1487,	//0x1b32		VoC_lw32_d(RL7,0xcdc)
0x1C922987,	//0x1b34		VoC_and32_rd(RL7,0x1c92)
0x2986FF34,	//0x1b36		VoC_and32_rd(RL6,0x1c92)(lo)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0x29841C92,	//0x1b38		VoC_and32_rd(ACC0,0x1c98)(lo)	|	VoC_and32_rd(RL6,0x1c92)(hi)
0xE53E1C98,	//0x1b3a		VoC_or32_rr(RL6,RL7,DEFAULT)	|	VoC_and32_rd(ACC0,0x1c98)(hi)
0x1487E534,	//0x1b3c		VoC_lw32_d(RL7,0xcd8)(lo)	|	VoC_or32_rr(ACC0,RL6,DEFAULT)
0x33040CD8,	//0x1b3e		VoC_bez32_r(RMVB_Filter_BLK1_END,ACC0)(lo)	|	VoC_lw32_d(RL7,0xcd8)(hi)
0x29871C04,	//0x1b40		VoC_and32_rd(RL7,0x1c92)(lo)	|	VoC_bez32_r(RMVB_Filter_BLK1_END,ACC0)(hi)
0x14021C92,	//0x1b42		VoC_lw16_d(REG2,0xccf)(lo)	|	VoC_and32_rd(RL7,0x1c92)(hi)
0x33470CCF,	//0x1b44		VoC_bnez32_r(RMVB_Filter_BLK1_100,RL7)(lo)	|	VoC_lw16_d(REG2,0xccf)(hi)
0x14021B4A,	//0x1b46		VoC_lw16_d(REG2,0xccd)(lo)	|	VoC_bnez32_r(RMVB_Filter_BLK1_100,RL7)(hi)
0xFFC00CCD,	//0x1b48		VoC_NAD	|	VoC_lw16_d(REG2,0xccd)(hi)
		//0x1b4a		RMVB_Filter_BLK1_100
0x0CDA1486,	//0x1b4a		VoC_lw32_d(RL6,0xcda)
0x1CA21502,	//0x1b4c		VoC_sw16_d(REG2,0x1ca2)
0x0CD26C04,	//0x1b4e		VoC_bez16_d(RMVB_Filter_BLK1_101,0xcd2)
0x0CCE1402,	//0x1b50		VoC_lw16_d(REG2,0xcce)
		//0x1b52		RMVB_Filter_BLK1_101
0x0CDE1487,	//0x1b52		VoC_lw32_d(RL7,0xcde)
0x1CA31502,	//0x1b54		VoC_sw16_d(REG2,0x1ca3)
0x1C982986,	//0x1b56		VoC_and32_rd(RL6,0x1c98)
0x1C982987,	//0x1b58		VoC_and32_rd(RL7,0x1c98)
0x1B803306,	//0x1b5a		VoC_bez32_r(RMVB_Filter_BLK1_106,RL6)
0x1B803347,	//0x1b5c		VoC_bnez32_r(RMVB_Filter_BLK1_106,RL7)
0x1C9E1400,	//0x1b5e		VoC_lw16_d(REG0,0x1c9e)
0x1C9F1401,	//0x1b60		VoC_lw16_d(REG1,0x1c9f)
0xE0037202,	//0x1b62		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1C9D6C04,	//0x1b64		VoC_bez16_d(RMVB_Filter_BLK1_103,0x1c9d)
0xE0037102,	//0x1b66		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1b68		RMVB_Filter_BLK1_103
0xF0057030,	//0x1b68		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1CA61502,	//0x1b6a		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1b6c		VoC_sw16_d(REG3,0x1ca7)
0x0CD81486,	//0x1b6e		VoC_lw32_d(RL6,0xcd8)
0x1C982986,	//0x1b70		VoC_and32_rd(RL6,0x1c98)
0x0CCF1403,	//0x1b72		VoC_lw16_d(REG3,0xccf)
0x1B783346,	//0x1b74		VoC_bnez32_r(RMVB_Filter_BLK1_104,RL6)
0x0CCD1403,	//0x1b76		VoC_lw16_d(REG3,0xccd)
		//0x1b78		RMVB_Filter_BLK1_104
0x1CA21402,	//0x1b78		VoC_lw16_d(REG2,0x1ca2)
0x1CA81503,	//0x1b7a		VoC_sw16_d(REG3,0x1ca8)
0x1CA91502,	//0x1b7c		VoC_sw16_d(REG2,0x1ca9)
0x1CF92B80,	//0x1b7e		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1b80		RMVB_Filter_BLK1_106
0x0CDA1486,	//0x1b80		VoC_lw32_d(RL6,0xcda)
0x0CDE1487,	//0x1b82		VoC_lw32_d(RL7,0xcde)
0x1C922986,	//0x1b84		VoC_and32_rd(RL6,0x1c92)
0x1C922987,	//0x1b86		VoC_and32_rd(RL7,0x1c92)
0x1BAE3306,	//0x1b88		VoC_bez32_r(RMVB_Filter_BLK1_110,RL6)
0x1BAE3347,	//0x1b8a		VoC_bnez32_r(RMVB_Filter_BLK1_110,RL7)
0x1C9A1400,	//0x1b8c		VoC_lw16_d(REG0,0x1c9a)
0x1C9B1401,	//0x1b8e		VoC_lw16_d(REG1,0x1c9b)
0xE0037202,	//0x1b90		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1C9D6C04,	//0x1b92		VoC_bez16_d(RMVB_Filter_BLK1_107,0x1c9d)
0xE0037102,	//0x1b94		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1b96		RMVB_Filter_BLK1_107
0xF0057030,	//0x1b96		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1CA61502,	//0x1b98		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1b9a		VoC_sw16_d(REG3,0x1ca7)
0x0CD41486,	//0x1b9c		VoC_lw32_d(RL6,0xcd4)
0x1C962986,	//0x1b9e		VoC_and32_rd(RL6,0x1c96)
0x0CD11403,	//0x1ba0		VoC_lw16_d(REG3,0xcd1)
0x1BA63346,	//0x1ba2		VoC_bnez32_r(RMVB_Filter_BLK1_108,RL6)
0x0CCD1403,	//0x1ba4		VoC_lw16_d(REG3,0xccd)
		//0x1ba6		RMVB_Filter_BLK1_108
0x1CA31402,	//0x1ba6		VoC_lw16_d(REG2,0x1ca3)
0x1CA91503,	//0x1ba8		VoC_sw16_d(REG3,0x1ca9)
0x1CA81502,	//0x1baa		VoC_sw16_d(REG2,0x1ca8)
0x1CF92B80,	//0x1bac		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1bae		RMVB_Filter_BLK1_110
0x0CDC1486,	//0x1bae		VoC_lw32_d(RL6,0xcdc)
0x1C922986,	//0x1bb0		VoC_and32_rd(RL6,0x1c92)
0x1C9C1400,	//0x1bb2		VoC_lw16_d(REG0,0x1c9c)
0x1C9B1401,	//0x1bb4		VoC_lw16_d(REG1,0x1c9b)
0x1BD63306,	//0x1bb6		VoC_bez32_r(RMVB_Filter_BLK1_114,RL6)
0xE0037022,	//0x1bb8		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xF0417210,	//0x1bba		VoC_lw16i_short(INC1,0x10,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x10,DEFAULT)
0x1C9D6C04,	//0x1bbc		VoC_bez16_d(RMVB_Filter_BLK1_111,0x1c9d)
0xF0217110,	//0x1bbe		VoC_lw16i_short(INC1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x8,DEFAULT)
		//0x1bc0		RMVB_Filter_BLK1_111
0x1CA61502,	//0x1bc0		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1bc2		VoC_sw16_d(REG3,0x1ca7)
0x0CD81486,	//0x1bc4		VoC_lw32_d(RL6,0xcd8)
0x1C942986,	//0x1bc6		VoC_and32_rd(RL6,0x1c94)
0x0CCF1403,	//0x1bc8		VoC_lw16_d(REG3,0xccf)
0x1BCE3346,	//0x1bca		VoC_bnez32_r(RMVB_Filter_BLK1_112,RL6)
0x0CCD1403,	//0x1bcc		VoC_lw16_d(REG3,0xccd)
		//0x1bce		RMVB_Filter_BLK1_112
0x1CA21402,	//0x1bce		VoC_lw16_d(REG2,0x1ca2)
0x1CA91503,	//0x1bd0		VoC_sw16_d(REG3,0x1ca9)
0x1CA81502,	//0x1bd2		VoC_sw16_d(REG2,0x1ca8)
0x1CF92B80,	//0x1bd4		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1bd6		RMVB_Filter_BLK1_114
0x0CDA1486,	//0x1bd6		VoC_lw32_d(RL6,0xcda)
0x0CDE1487,	//0x1bd8		VoC_lw32_d(RL7,0xcde)
0x1C922986,	//0x1bda		VoC_and32_rd(RL6,0x1c92)
0x1C922987,	//0x1bdc		VoC_and32_rd(RL7,0x1c92)
0x1C043306,	//0x1bde		VoC_bez32_r(RMVB_Filter_BLK1_END,RL6)
0x1C043307,	//0x1be0		VoC_bez32_r(RMVB_Filter_BLK1_END,RL7)
0x1C9A1400,	//0x1be2		VoC_lw16_d(REG0,0x1c9a)
0x1C9B1401,	//0x1be4		VoC_lw16_d(REG1,0x1c9b)
0xE0137202,	//0x1be6		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1C9D6C04,	//0x1be8		VoC_bez16_d(RMVB_Filter_BLK1_115,0x1c9d)
0xE0137102,	//0x1bea		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1bec		RMVB_Filter_BLK1_115
0xF0057030,	//0x1bec		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1CA61502,	//0x1bee		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1bf0		VoC_sw16_d(REG3,0x1ca7)
0x0CD41486,	//0x1bf2		VoC_lw32_d(RL6,0xcd4)
0x1C962986,	//0x1bf4		VoC_and32_rd(RL6,0x1c96)
0x0CD11403,	//0x1bf6		VoC_lw16_d(REG3,0xcd1)
0x1BFC3346,	//0x1bf8		VoC_bnez32_r(RMVB_Filter_BLK1_116,RL6)
0x0CCD1403,	//0x1bfa		VoC_lw16_d(REG3,0xccd)
		//0x1bfc		RMVB_Filter_BLK1_116
0x1CA31402,	//0x1bfc		VoC_lw16_d(REG2,0x1ca3)
0x1CA91503,	//0x1bfe		VoC_sw16_d(REG3,0x1ca9)
0x1CA81502,	//0x1c00		VoC_sw16_d(REG2,0x1ca8)
0x1CF92B80,	//0x1c02		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1c04		RMVB_Filter_BLK1_END
0xFFC0DFA9,	//0x1c04		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1c06		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1c07		CII_RMVB_Filter_BLK2
0x0CDA1486,	//0x1c08		VoC_lw32_d(RL6,0xcda)
0x0CDC1487,	//0x1c0a		VoC_lw32_d(RL7,0xcdc)
0x1C982986,	//0x1c0c		VoC_and32_rd(RL6,0x1c98)
0x1C922987,	//0x1c0e		VoC_and32_rd(RL7,0x1c92)
0x1487E53E,	//0x1c10		VoC_lw32_d(RL7,0xcd8)(lo)	|	VoC_or32_rr(RL6,RL7,DEFAULT)
0x33060CD8,	//0x1c12		VoC_bez32_r(RMVB_Filter_BLK2_END,RL6)(lo)	|	VoC_lw32_d(RL7,0xcd8)(hi)
0x29871C86,	//0x1c14		VoC_and32_rd(RL7,0x1c92)(lo)	|	VoC_bez32_r(RMVB_Filter_BLK2_END,RL6)(hi)
0x14021C92,	//0x1c16		VoC_lw16_d(REG2,0xccf)(lo)	|	VoC_and32_rd(RL7,0x1c92)(hi)
0x33470CCF,	//0x1c18		VoC_bnez32_r(RMVB_Filter_BLK2_100,RL7)(lo)	|	VoC_lw16_d(REG2,0xccf)(hi)
0x14021C1E,	//0x1c1a		VoC_lw16_d(REG2,0xccd)(lo)	|	VoC_bnez32_r(RMVB_Filter_BLK2_100,RL7)(hi)
0xFFC00CCD,	//0x1c1c		VoC_NAD	|	VoC_lw16_d(REG2,0xccd)(hi)
		//0x1c1e		RMVB_Filter_BLK2_100
0x0CD61486,	//0x1c1e		VoC_lw32_d(RL6,0xcd6)
0x1CA21502,	//0x1c20		VoC_sw16_d(REG2,0x1ca2)
0x0CD36C04,	//0x1c22		VoC_bez16_d(RMVB_Filter_BLK2_101,0xcd3)
0x0CCE1402,	//0x1c24		VoC_lw16_d(REG2,0xcce)
		//0x1c26		RMVB_Filter_BLK2_101
0x1C942986,	//0x1c26		VoC_and32_rd(RL6,0x1c94)
0x1CA41502,	//0x1c28		VoC_sw16_d(REG2,0x1ca4)
0x0CD01402,	//0x1c2a		VoC_lw16_d(REG2,0xcd0)
0x1C303346,	//0x1c2c		VoC_bnez32_r(RMVB_Filter_BLK2_102,RL6)
0x0CCD1402,	//0x1c2e		VoC_lw16_d(REG2,0xccd)
		//0x1c30		RMVB_Filter_BLK2_102
0x0CDA1486,	//0x1c30		VoC_lw32_d(RL6,0xcda)
0x1CA51502,	//0x1c32		VoC_sw16_d(REG2,0x1ca5)
0x1C982986,	//0x1c34		VoC_and32_rd(RL6,0x1c98)
0x1CA11402,	//0x1c36		VoC_lw16_d(REG2,0x1ca1)
0x1C5E3306,	//0x1c38		VoC_bez32_r(RMVB_Filter_BLK2_106,RL6)
0x1C5E31C2,	//0x1c3a		VoC_bnez16_r(RMVB_Filter_BLK2_106,REG2)
0x1C9E1400,	//0x1c3c		VoC_lw16_d(REG0,0x1c9e)
0x1C9F1401,	//0x1c3e		VoC_lw16_d(REG1,0x1c9f)
0xE0037202,	//0x1c40		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1C9D6C04,	//0x1c42		VoC_bez16_d(RMVB_Filter_BLK2_103,0x1c9d)
0xE0037102,	//0x1c44		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1c46		RMVB_Filter_BLK2_103
0xF0057030,	//0x1c46		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1CA61502,	//0x1c48		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1c4a		VoC_sw16_d(REG3,0x1ca7)
0x0CD81486,	//0x1c4c		VoC_lw32_d(RL6,0xcd8)
0x1C982986,	//0x1c4e		VoC_and32_rd(RL6,0x1c98)
0x0CCF1403,	//0x1c50		VoC_lw16_d(REG3,0xccf)
0x1C563346,	//0x1c52		VoC_bnez32_r(RMVB_Filter_BLK2_104,RL6)
0x0CCD1403,	//0x1c54		VoC_lw16_d(REG3,0xccd)
		//0x1c56		RMVB_Filter_BLK2_104
0x1CA21402,	//0x1c56		VoC_lw16_d(REG2,0x1ca2)
0x1CA81503,	//0x1c58		VoC_sw16_d(REG3,0x1ca8)
0x1CA91502,	//0x1c5a		VoC_sw16_d(REG2,0x1ca9)
0x1CF92B80,	//0x1c5c		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1c5e		RMVB_Filter_BLK2_106
0x0CDC1486,	//0x1c5e		VoC_lw32_d(RL6,0xcdc)
0x0CE01487,	//0x1c60		VoC_lw32_d(RL7,0xce0)
0x1C922986,	//0x1c62		VoC_and32_rd(RL6,0x1c92)
0x1C922987,	//0x1c64		VoC_and32_rd(RL7,0x1c92)
0xE0037022,	//0x1c66		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x1C863306,	//0x1c68		VoC_bez32_r(RMVB_Filter_BLK2_END,RL6)
0x1C6E3307,	//0x1c6a		VoC_bez32_r(RMVB_Filter_BLK2_107,RL7)
0xE0137022,	//0x1c6c		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x1c6e		RMVB_Filter_BLK2_107
0xF0417090,	//0x1c6e		VoC_lw16i_short(INC1,0x10,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x1C9D6C04,	//0x1c70		VoC_bez16_d(RMVB_Filter_BLK2_108,0x1c9d)
0xF0217090,	//0x1c72		VoC_lw16i_short(INC1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
		//0x1c74		RMVB_Filter_BLK2_108
0x1CA61502,	//0x1c74		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1c76		VoC_sw16_d(REG3,0x1ca7)
0x1C9C1400,	//0x1c78		VoC_lw16_d(REG0,0x1c9c)
0x1C9B1401,	//0x1c7a		VoC_lw16_d(REG1,0x1c9b)
0x1CA41403,	//0x1c7c		VoC_lw16_d(REG3,0x1ca4)
0x1CA51402,	//0x1c7e		VoC_lw16_d(REG2,0x1ca5)
0x1CA81503,	//0x1c80		VoC_sw16_d(REG3,0x1ca8)
0x1CA91502,	//0x1c82		VoC_sw16_d(REG2,0x1ca9)
0x1CF92B80,	//0x1c84		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1c86		RMVB_Filter_BLK2_END
0xFFC0DFA9,	//0x1c86		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1c88		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1c89		CII_RMVB_Filter_BLK3
0x0CDA1486,	//0x1c8a		VoC_lw32_d(RL6,0xcda)
0x0CDC1487,	//0x1c8c		VoC_lw32_d(RL7,0xcdc)
0x1C982986,	//0x1c8e		VoC_and32_rd(RL6,0x1c98)
0x1C922987,	//0x1c90		VoC_and32_rd(RL7,0x1c92)
0x1487E53E,	//0x1c92		VoC_lw32_d(RL7,0xcd8)(lo)	|	VoC_or32_rr(RL6,RL7,DEFAULT)
0x33060CD8,	//0x1c94		VoC_bez32_r(RMVB_Filter_BLK3_END,RL6)(lo)	|	VoC_lw32_d(RL7,0xcd8)(hi)
0x29871CF6,	//0x1c96		VoC_and32_rd(RL7,0x1c92)(lo)	|	VoC_bez32_r(RMVB_Filter_BLK3_END,RL6)(hi)
0x14021C92,	//0x1c98		VoC_lw16_d(REG2,0xccf)(lo)	|	VoC_and32_rd(RL7,0x1c92)(hi)
0x33470CCF,	//0x1c9a		VoC_bnez32_r(RMVB_Filter_BLK3_100,RL7)(lo)	|	VoC_lw16_d(REG2,0xccf)(hi)
0x14021CA0,	//0x1c9c		VoC_lw16_d(REG2,0xccd)(lo)	|	VoC_bnez32_r(RMVB_Filter_BLK3_100,RL7)(hi)
0xFFC00CCD,	//0x1c9e		VoC_NAD	|	VoC_lw16_d(REG2,0xccd)(hi)
		//0x1ca0		RMVB_Filter_BLK3_100
0x0CDA1486,	//0x1ca0		VoC_lw32_d(RL6,0xcda)
0x1CA21502,	//0x1ca2		VoC_sw16_d(REG2,0x1ca2)
0x1C982986,	//0x1ca4		VoC_and32_rd(RL6,0x1c98)
0x1CA11402,	//0x1ca6		VoC_lw16_d(REG2,0x1ca1)
0x1CCE3306,	//0x1ca8		VoC_bez32_r(RMVB_Filter_BLK3_104,RL6)
0x1CCE31C2,	//0x1caa		VoC_bnez16_r(RMVB_Filter_BLK3_104,REG2)
0x1C9E1400,	//0x1cac		VoC_lw16_d(REG0,0x1c9e)
0x1C9F1401,	//0x1cae		VoC_lw16_d(REG1,0x1c9f)
0xE0037202,	//0x1cb0		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1C9D6C04,	//0x1cb2		VoC_bez16_d(RMVB_Filter_BLK3_101,0x1c9d)
0xE0037102,	//0x1cb4		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1cb6		RMVB_Filter_BLK3_101
0xF0057030,	//0x1cb6		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1CA61502,	//0x1cb8		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1cba		VoC_sw16_d(REG3,0x1ca7)
0x0CD81486,	//0x1cbc		VoC_lw32_d(RL6,0xcd8)
0x1C982986,	//0x1cbe		VoC_and32_rd(RL6,0x1c98)
0x0CCF1403,	//0x1cc0		VoC_lw16_d(REG3,0xccf)
0x1CC63346,	//0x1cc2		VoC_bnez32_r(RMVB_Filter_BLK3_102,RL6)
0x0CCD1403,	//0x1cc4		VoC_lw16_d(REG3,0xccd)
		//0x1cc6		RMVB_Filter_BLK3_102
0x1CA21402,	//0x1cc6		VoC_lw16_d(REG2,0x1ca2)
0x1CA81503,	//0x1cc8		VoC_sw16_d(REG3,0x1ca8)
0x1CA91502,	//0x1cca		VoC_sw16_d(REG2,0x1ca9)
0x1CF92B80,	//0x1ccc		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1cce		RMVB_Filter_BLK3_104
0x0CDC1486,	//0x1cce		VoC_lw32_d(RL6,0xcdc)
0x1C922986,	//0x1cd0		VoC_and32_rd(RL6,0x1c92)
0xE0037022,	//0x1cd2		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x1CF63306,	//0x1cd4		VoC_bez32_r(RMVB_Filter_BLK3_END,RL6)
0x1C9C1400,	//0x1cd6		VoC_lw16_d(REG0,0x1c9c)
0x1C9B1401,	//0x1cd8		VoC_lw16_d(REG1,0x1c9b)
0xF0417210,	//0x1cda		VoC_lw16i_short(INC1,0x10,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x10,DEFAULT)
0x1C9D6C04,	//0x1cdc		VoC_bez16_d(RMVB_Filter_BLK3_105,0x1c9d)
0xF0217110,	//0x1cde		VoC_lw16i_short(INC1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x8,DEFAULT)
		//0x1ce0		RMVB_Filter_BLK3_105
0x1CA61502,	//0x1ce0		VoC_sw16_d(REG2,0x1ca6)
0x1CA71503,	//0x1ce2		VoC_sw16_d(REG3,0x1ca7)
0x0CD81486,	//0x1ce4		VoC_lw32_d(RL6,0xcd8)
0x1C942986,	//0x1ce6		VoC_and32_rd(RL6,0x1c94)
0x0CCF1403,	//0x1ce8		VoC_lw16_d(REG3,0xccf)
0x1CEE3346,	//0x1cea		VoC_bnez32_r(RMVB_Filter_BLK3_106,RL6)
0x0CCD1403,	//0x1cec		VoC_lw16_d(REG3,0xccd)
		//0x1cee		RMVB_Filter_BLK3_106
0x1CA21402,	//0x1cee		VoC_lw16_d(REG2,0x1ca2)
0x1CA91503,	//0x1cf0		VoC_sw16_d(REG3,0x1ca9)
0x1CA81502,	//0x1cf2		VoC_sw16_d(REG2,0x1ca8)
0x1CF92B80,	//0x1cf4		VoC_jal(CII_RMVB_EdgeFilter4)
		//0x1cf6		RMVB_Filter_BLK3_END
0xFFC0DFA9,	//0x1cf6		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDF40E580,	//0x1cf8		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x1cf9		CII_RMVB_EdgeFilter4
0x8304D884,	//0x1cfa		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x83048304,	//0x1cfc		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
0x834DD895,	//0x1cfe		VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x834D834D,	//0x1d00		VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)
0x1402D908,	//0x1d02		VoC_lw16_d(REG2,0x1ca6)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xC2101CA6,	//0x1d04		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16_d(REG2,0x1ca6)(hi)
0xD886C051,	//0x1d06		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0x83868386,	//0x1d08		VoC_add16inc_rp(REG6,REG6,REG0,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG0,DEFAULT)
0xD8978386,	//0x1d0a		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG0,DEFAULT)
0x83CF83CF,	//0x1d0c		VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
0x43A483CF,	//0x1d0e		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
0x1403C3ED,	//0x1d10		VoC_lw16_d(REG3,0xcca)(lo)	|	VoC_sub16_rr(REG5,REG7,REG5,IN_PARALLEL)
0x78F30CCA,	//0x1d12		VoC_shr16_ri(REG3,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG3,0xcca)(hi)
0x5E44DF43,	//0x1d14		VoC_abs16_r(REG4,DEFAULT)	|	VoC_push32(REG67,IN_PARALLEL)
0x7066DE45,	//0x1d16		VoC_lw16i_short(REG6,0x3,DEFAULT)	|	VoC_abs16_r(REG5,IN_PARALLEL)
0x341CE037,	//0x1d18		VoC_bgt16_rr(RMVB_EdgeFilter4_100,REG3,REG4)(lo)	|	VoC_lw16i_short(REG7,0x3,IN_PARALLEL)
0xF0261D1C,	//0x1d1a		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_bgt16_rr(RMVB_EdgeFilter4_100,REG3,REG4)(hi)
		//0x1d1c		RMVB_EdgeFilter4_100
0x1D20341D,	//0x1d1c		VoC_bgt16_rr(RMVB_EdgeFilter4_101,REG3,REG5)
0xFFC07027,	//0x1d1e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1d20		RMVB_EdgeFilter4_101
0xE03241BB,	//0x1d20		VoC_lw16i_short(REG2,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG6,REG7,DEFAULT)
0x1CAB1506,	//0x1d22		VoC_sw16_d(REG6,0x1cab)
0x1CAA1507,	//0x1d24		VoC_sw16_d(REG7,0x1caa)
0x3413DF03,	//0x1d26		VoC_bgt16_rr(RMVB_EdgeFilter4_end,REG2,REG3)(lo)	|	VoC_pop32(REG67,DEFAULT)
0x14041ED0,	//0x1d28		VoC_lw16_d(REG4,0x1ca9)(lo)	|	VoC_bgt16_rr(RMVB_EdgeFilter4_end,REG2,REG3)(hi)
0x14051CA9,	//0x1d2a		VoC_lw16_d(REG5,0x1ca8)(lo)	|	VoC_lw16_d(REG4,0x1ca9)(hi)
0xC12C1CA8,	//0x1d2c		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16_d(REG5,0x1ca8)(hi)
0xF80CC11C,	//0x1d2e		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0x1CA71402,	//0x1d30		VoC_lw16_d(REG2,0x1ca7)
0x3182DFC4,	//0x1d32		VoC_bez16_r(RMVB_EdgeFilter4_110,REG2)(lo)	|	VoC_push16(REG4,DEFAULT)
0x14021DEA,	//0x1d34		VoC_lw16_d(REG2,0x1cab)(lo)	|	VoC_bez16_r(RMVB_EdgeFilter4_110,REG2)(hi)
0xF0641CAB,	//0x1d36		VoC_lw16i_short(REG4,0x3,DEFAULT)	|	VoC_lw16_d(REG2,0x1cab)(hi)
0x1CAA1403,	//0x1d38		VoC_lw16_d(REG3,0x1caa)
0x1DEA3594,	//0x1d3a		VoC_bne16_rr(RMVB_EdgeFilter4_110,REG2,REG4)
0x1DEA359C,	//0x1d3c		VoC_bne16_rr(RMVB_EdgeFilter4_110,REG3,REG4)
0x1402D908,	//0x1d3e		VoC_lw16_d(REG2,0x1ca6)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x42101CA6,	//0x1d40		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16_d(REG2,0x1ca6)(hi)
0xC210C051,	//0x1d42		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0xD884C051,	//0x1d44		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0x83048304,	//0x1d46		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
0xD8958304,	//0x1d48		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
0x834D834D,	//0x1d4a		VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)
0x43A4834D,	//0x1d4c		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)
0xDE44C3ED,	//0x1d4e		VoC_abs16_r(REG4,DEFAULT)	|	VoC_sub16_rr(REG5,REG7,REG5,IN_PARALLEL)
0x0CCB1402,	//0x1d50		VoC_lw16_d(REG2,0xccb)
0xD9085E45,	//0x1d52		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_abs16_r(REG5,DEFAULT)
0x1DEA3494,	//0x1d54		VoC_bngt16_rr(RMVB_EdgeFilter4_110,REG2,REG4)
0x1DEA3495,	//0x1d56		VoC_bngt16_rr(RMVB_EdgeFilter4_110,REG2,REG5)
0x1DE52C08,	//0x1d58		VoC_loop_i(0x0,0x4)
0x1CA61402,	//0x1d5a		VoC_lw16_d(REG2,0x1ca6)
0x5804DD08,	//0x1d5c		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_sw32_sd(REG01,0x0,DEFAULT)
0x5815C210,	//0x1d5e		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG2,IN_PARALLEL)
0x4366C051,	//0x1d60		VoC_sub16_rr(REG6,REG5,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0x1407FF16,	//0x1d62		VoC_lw16_d(REG7,0xcc9)(lo)	|	VoC_movreg32(RL6,REG45,IN_PARALLEL)
0x31860CC9,	//0x1d64		VoC_bez16_r(RMVB_EdgeFilter4_105,REG6)(lo)	|	VoC_lw16_d(REG7,0xcc9)(hi)
0x5E461DE3,	//0x1d66		VoC_abs16_r(REG6,DEFAULT)	|	VoC_bez16_r(RMVB_EdgeFilter4_105,REG6)(hi)
0x45BBE015,	//0x1d68		VoC_mult16_rr(REG3,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x5817D806,	//0x1d6a		VoC_lw16_p(REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG6,REG0,IN_PARALLEL)
0x783BC210,	//0x1d6c		VoC_shr16_ri(REG3,0x7,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG2,IN_PARALLEL)
0x7F1FC051,	//0x1d6e		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0x341DD804,	//0x1d70		VoC_bgt16_rr(RMVB_EdgeFilter4_105,REG3,REG5)(lo)	|	VoC_lw16_p(REG4,REG0,IN_PARALLEL)
0xDFC31DE3,	//0x1d72		VoC_push16(REG3,DEFAULT)	|	VoC_bgt16_rr(RMVB_EdgeFilter4_105,REG3,REG5)(hi)
0xC2105815,	//0x1d74		VoC_sub16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0xC0517F14,	//0x1d76		VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xFF31413C,	//0x1d78		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xC09A4175,	//0x1d7a		VoC_add16_rr(REG2,REG2,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xC1D74196,	//0x1d7c		VoC_add16_rr(REG7,REG7,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0xC1ED41A4,	//0x1d7e		VoC_add16_rr(REG5,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG6,REG4,DEFAULT)
0x451CF323,	//0x1d80		VoC_mult16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x19,DEFAULT)
0x0A83C55D,	//0x1d82		VoC_lw16i(REG3,0x40)(lo)	|	VoC_mult16_rr(REG5,REG5,REG3,IN_PARALLEL)
0x41A40040,	//0x1d84		VoC_add16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_lw16i(REG3,0x40)(hi)
0x411CC1ED,	//0x1d86		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG7,REG5,IN_PARALLEL)
0x5616C15D,	//0x1d88		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)
0x783CFF31,	//0x1d8a		VoC_shr16_ri(REG4,0x7,DEFAULT)	|	VoC_movreg32(REG23,RL6,IN_PARALLEL)
0x3186F83D,	//0x1d8c		VoC_bez16_r(RMVB_EdgeFilter4_102,REG6)(lo)	|	VoC_shr16_ri(REG5,0x7,IN_PARALLEL)
0x43141D96,	//0x1d8e		VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_bez16_r(RMVB_EdgeFilter4_102,REG6)(hi)
0x435DD626,	//0x1d90		VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,IN_PARALLEL)
0x4114DEB4,	//0x1d92		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_clip16_rr(REG4,REG6,IN_PARALLEL)
0xC15DDEB5,	//0x1d94		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_clip16_rr(REG5,REG6,IN_PARALLEL)
		//0x1d96		RMVB_EdgeFilter4_102
0xFF357F16,	//0x1d96		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0xFF235800,	//0x1d98		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xFF395811,	//0x1d9a		VoC_movreg32(REG23,RL7,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xC0FF40B6,	//0x1d9c		VoC_add16_rr(REG7,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG2,REG6,DEFAULT)
0xC17F4136,	//0x1d9e		VoC_add16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG6,DEFAULT)
0x41ACFF2A,	//0x1da0		VoC_add16_rr(REG4,REG6,REG5,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0x4024C1E5,	//0x1da2		VoC_add16_rr(REG4,REG0,REG4,DEFAULT)	|	VoC_add16_rr(REG5,REG7,REG4,IN_PARALLEL)
0x7323C06D,	//0x1da4		VoC_lw16i_short(REG3,0x19,DEFAULT)	|	VoC_add16_rr(REG5,REG1,REG5,IN_PARALLEL)
0x451CFF05,	//0x1da6		VoC_mult16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_movreg32(ACC1,REG01,IN_PARALLEL)
0x0A83C55D,	//0x1da8		VoC_lw16i(REG3,0x40)(lo)	|	VoC_mult16_rr(REG5,REG5,REG3,IN_PARALLEL)
0x41340040,	//0x1daa		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i(REG3,0x40)(hi)
0x411CC17D,	//0x1dac		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x5F86C15D,	//0x1dae		VoC_pop16(REG6,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)
0x783CFF39,	//0x1db0		VoC_shr16_ri(REG4,0x7,DEFAULT)	|	VoC_movreg32(REG23,RL7,IN_PARALLEL)
0x3186F83D,	//0x1db2		VoC_bez16_r(RMVB_EdgeFilter4_103,REG6)(lo)	|	VoC_shr16_ri(REG5,0x7,IN_PARALLEL)
0x43141DBC,	//0x1db4		VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_bez16_r(RMVB_EdgeFilter4_103,REG6)(hi)
0x435DD616,	//0x1db6		VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_lw16_sd(REG6,0x0,IN_PARALLEL)
0x4114DEB4,	//0x1db8		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_clip16_rr(REG4,REG6,IN_PARALLEL)
0xC15DDEB5,	//0x1dba		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_clip16_rr(REG5,REG6,IN_PARALLEL)
		//0x1dbc		RMVB_EdgeFilter4_103
0xFF307F17,	//0x1dbc		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xFF237F29,	//0x1dbe		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x1C9D6E14,	//0x1dc0		VoC_bnez16_d(RMVB_EdgeFilter4_104,0x1c9d)
0xC17D4134,	//0x1dc2		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC15D4114,	//0x1dc4		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0xC17F4136,	//0x1dc6		VoC_add16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG6,DEFAULT)
0xC07F4036,	//0x1dc8		VoC_add16_rr(REG7,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG0,REG6,DEFAULT)
0xE4027323,	//0x1dca		VoC_lw16i_short(REG2,0x40,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x19,DEFAULT)
0xC5DF459E,	//0x1dcc		VoC_mult16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_mult16_rr(REG6,REG6,REG3,DEFAULT)
0xC1554114,	//0x1dce		VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0xC1EF41A6,	//0x1dd0		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF83F783E,	//0x1dd2		VoC_shr16_ri(REG7,0x7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x7,DEFAULT)
		//0x1dd4		RMVB_EdgeFilter4_104
0xFF325908,	//0x1dd4		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x1CA61402,	//0x1dd6		VoC_lw16_d(REG2,0x1ca6)
0xC2105C04,	//0x1dd8		VoC_sub16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG0,DEFAULT)
0x5C15FF3A,	//0x1dda		VoC_sw16_p(REG5,REG1,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x5C04C051,	//0x1ddc		VoC_sw16_p(REG4,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0x5C15C210,	//0x1dde		VoC_sw16_p(REG5,REG1,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG2,IN_PARALLEL)
0xDC06C051,	//0x1de0		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0xD908DC17,	//0x1de2		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
		//0x1de3		RMVB_EdgeFilter4_105
0x5E00FFC0,	//0x1de4		VoC_inc_p(REG0,DEFAULT)	|	VoC_NOP
		//0x1de5		VoC_endloop0
0x5F84DE08,	//0x1de6		VoC_pop16(REG4,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
0xE580DF01,	//0x1de8		VoC_return	|	VoC_pop32(REG23,IN_PARALLEL)
		//0x1dea		RMVB_EdgeFilter4_110
0x1406F025,	//0x1dea		VoC_lw16_d(REG6,0x1cab)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x14071CAB,	//0x1dec		VoC_lw16_d(REG7,0x1caa)(lo)	|	VoC_lw16_d(REG6,0x1cab)(hi)
0x35351CAA,	//0x1dee		VoC_be16_rr(RMVB_EdgeFilter4_120,REG6,REG5)(lo)	|	VoC_lw16_d(REG7,0x1caa)(hi)
0x353D1E58,	//0x1df0		VoC_be16_rr(RMVB_EdgeFilter4_120,REG7,REG5)(lo)	|	VoC_be16_rr(RMVB_EdgeFilter4_120,REG6,REG5)(hi)
0x14041E58,	//0x1df2		VoC_lw16_d(REG4,0x1ca9)(lo)	|	VoC_be16_rr(RMVB_EdgeFilter4_120,REG7,REG5)(hi)
0x14051CA9,	//0x1df4		VoC_lw16_d(REG5,0x1ca8)(lo)	|	VoC_lw16_d(REG4,0x1ca9)(hi)
0x14021CA8,	//0x1df6		VoC_lw16_d(REG2,0x1ca6)(lo)	|	VoC_lw16_d(REG5,0x1ca8)(hi)
0x0A8E1CA6,	//0x1df8		VoC_lw16i(RL7_LO,0xff)(lo)	|	VoC_lw16_d(REG2,0x1ca6)(hi)
0x7F1500FF,	//0x1dfa		VoC_movreg32(ACC1,REG45,DEFAULT)	|	VoC_lw16i(RL7_LO,0xff)(hi)
0xE04FD908,	//0x1dfc		VoC_movreg16(RL7_HI,REG2,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,IN_PARALLEL)
0x1E532C08,	//0x1dfe		VoC_loop_i(0x0,0x4)
0xC2105804,	//0x1e00		VoC_sub16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0x5815DD08,	//0x1e02		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_sw32_sd(REG01,0x0,DEFAULT)
0x4363C051,	//0x1e04		VoC_sub16_rr(REG3,REG5,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0x5E43FF16,	//0x1e06		VoC_abs16_r(REG3,DEFAULT)	|	VoC_movreg32(RL6,REG45,IN_PARALLEL)
0x3183F664,	//0x1e08		VoC_bez16_r(RMVB_EdgeFilter4_113,REG3)(lo)	|	VoC_movreg16(REG4,REG3,IN_PARALLEL)
0x14071E51,	//0x1e0a		VoC_lw16_d(REG7,0xcc9)(lo)	|	VoC_bez16_r(RMVB_EdgeFilter4_113,REG3)(hi)
0x44FB0CC9,	//0x1e0c		VoC_mult16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0xcc9)(hi)
0x4210D806,	//0x1e0e		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16_p(REG6,REG0,IN_PARALLEL)
0x783BD817,	//0x1e10		VoC_shr16_ri(REG3,0x7,DEFAULT)	|	VoC_lw16_p(REG7,REG1,IN_PARALLEL)
0x5800E025,	//0x1e12		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,IN_PARALLEL)
0x341DC051,	//0x1e14		VoC_bgt16_rr(RMVB_EdgeFilter4_113,REG3,REG5)(lo)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0x78F41E51,	//0x1e16		VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)	|	VoC_bgt16_rr(RMVB_EdgeFilter4_113,REG3,REG5)(hi)
0x43BCE045,	//0x1e18		VoC_sub16_rr(REG4,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0x4165C12D,	//0x1e1a		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_add16_rr(REG5,REG4,REG5,IN_PARALLEL)
0x781DD614,	//0x1e1c		VoC_shr16_ri(REG5,0x3,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x7F31D811,	//0x1e1e		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_lw16_p(REG1,REG1,IN_PARALLEL)
0xE1C4DEA5,	//0x1e20		VoC_movreg16(REG4,RL7_LO,DEFAULT)	|	VoC_clip16_rr(REG5,REG4,IN_PARALLEL)
0xC2EB40AA,	//0x1e22		VoC_sub16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xDEE24380,	//0x1e24		VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG6,REG0,DEFAULT)
0xDEE343C9,	//0x1e26		VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG7,REG1,DEFAULT)
0xFF017F0C,	//0x1e28		VoC_movreg32(REG23,REG01,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG23,DEFAULT)
0xDE415E40,	//0x1e2a		VoC_abs16_r(REG1,IN_PARALLEL)	|	VoC_abs16_r(REG0,DEFAULT)
0xC0EB42AA,	//0x1e2c		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)
0x0CCA1405,	//0x1e2e		VoC_lw16_d(REG5,0xcca)
0xC2694228,	//0x1e30		VoC_sub16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)
0xE0057004,	//0x1e32		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x1E3A3100,	//0x1e34		VoC_bgtz16_r(RMVB_EdgeFilter4_111,REG0)
0xF7824194,	//0x1e36		VoC_movreg16(REG2,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG6,REG2,DEFAULT)
0xF80CC314,	//0x1e38		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)
		//0x1e3a		RMVB_EdgeFilter4_111
0x1E403101,	//0x1e3a		VoC_bgtz16_r(RMVB_EdgeFilter4_112,REG1)
0xF7A341DD,	//0x1e3c		VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG7,REG3,DEFAULT)
0xF80DC35D,	//0x1e3e		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)
		//0x1e40		RMVB_EdgeFilter4_112
0x61C2FF29,	//0x1e40		VoC_movreg16(REG2,RL7_LO,DEFAULT)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x43A6DE94,	//0x1e42		VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_clip16_rr(REG4,REG2,IN_PARALLEL)
0x43EFDE9D,	//0x1e44		VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_clip16_rr(REG5,REG3,IN_PARALLEL)
0x5908FF22,	//0x1e46		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_movreg32(REG45,ACC0,IN_PARALLEL)
0x61E2DED6,	//0x1e48		VoC_movreg16(REG2,RL7_HI,DEFAULT)	|	VoC_clipu16_rr(REG6,REG2,IN_PARALLEL)
0x5C04DED7,	//0x1e4a		VoC_sw16_p(REG4,REG0,DEFAULT)	|	VoC_clipu16_rr(REG7,REG2,IN_PARALLEL)
0x5C15C210,	//0x1e4c		VoC_sw16_p(REG5,REG1,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG2,IN_PARALLEL)
0xDC06C051,	//0x1e4e		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0xD908DC17,	//0x1e50		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
		//0x1e51		RMVB_EdgeFilter4_113
0x5E00FFC0,	//0x1e52		VoC_inc_p(REG0,DEFAULT)	|	VoC_NOP
		//0x1e53		VoC_endloop0
0x5F84DE08,	//0x1e54		VoC_pop16(REG4,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
0xE580DF01,	//0x1e56		VoC_return	|	VoC_pop32(REG23,IN_PARALLEL)
		//0x1e58		RMVB_EdgeFilter4_120
0x1CAB1406,	//0x1e58		VoC_lw16_d(REG6,0x1cab)
0x1CAA1407,	//0x1e5a		VoC_lw16_d(REG7,0x1caa)
0x43AEF025,	//0x1e5c		VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x1402C3EF,	//0x1e5e		VoC_lw16_d(REG2,0x1ca6)(lo)	|	VoC_sub16_rr(REG7,REG7,REG5,IN_PARALLEL)
0x15061CA6,	//0x1e60		VoC_sw16_d(REG6,0x1cab)(lo)	|	VoC_lw16_d(REG2,0x1ca6)(hi)
0x15071CAB,	//0x1e62		VoC_sw16_d(REG7,0x1caa)(lo)	|	VoC_sw16_d(REG6,0x1cab)(hi)
0xDF831CAA,	//0x1e64		VoC_pop16(REG3,DEFAULT)	|	VoC_sw16_d(REG7,0x1caa)(hi)
0x1CA91404,	//0x1e66		VoC_lw16_d(REG4,0x1ca9)
0x1CA81405,	//0x1e68		VoC_lw16_d(REG5,0x1ca8)
0x780CF80B,	//0x1e6a		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0xDFC3F80D,	//0x1e6c		VoC_push16(REG3,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0xD9087F15,	//0x1e6e		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG45,DEFAULT)
0x00FF0A8E,	//0x1e70		VoC_lw16i(RL7_LO,0xff)
0xFFC0604F,	//0x1e72		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG2,DEFAULT)
0x1ECB2C08,	//0x1e74		VoC_loop_i(0x0,0x4)
0xC2105804,	//0x1e76		VoC_sub16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0x5815DD08,	//0x1e78		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_sw32_sd(REG01,0x0,DEFAULT)
0x4363C051,	//0x1e7a		VoC_sub16_rr(REG3,REG5,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0x5E43FF16,	//0x1e7c		VoC_abs16_r(REG3,DEFAULT)	|	VoC_movreg32(RL6,REG45,IN_PARALLEL)
0x3183F664,	//0x1e7e		VoC_bez16_r(RMVB_EdgeFilter4_123,REG3)(lo)	|	VoC_movreg16(REG4,REG3,IN_PARALLEL)
0x14071EC9,	//0x1e80		VoC_lw16_d(REG7,0xcc9)(lo)	|	VoC_bez16_r(RMVB_EdgeFilter4_123,REG3)(hi)
0x44FB0CC9,	//0x1e82		VoC_mult16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0xcc9)(hi)
0x4210D806,	//0x1e84		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16_p(REG6,REG0,IN_PARALLEL)
0x783BD817,	//0x1e86		VoC_shr16_ri(REG3,0x7,DEFAULT)	|	VoC_lw16_p(REG7,REG1,IN_PARALLEL)
0x5800E035,	//0x1e88		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x3,IN_PARALLEL)
0x341DC051,	//0x1e8a		VoC_bgt16_rr(RMVB_EdgeFilter4_123,REG3,REG5)(lo)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0x58111EC9,	//0x1e8c		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_bgt16_rr(RMVB_EdgeFilter4_123,REG3,REG5)(hi)
0x4165E015,	//0x1e8e		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x780DD614,	//0x1e90		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x61C4FF31,	//0x1e92		VoC_movreg16(REG4,RL7_LO,DEFAULT)	|	VoC_movreg32(REG23,RL6,IN_PARALLEL)
0x40AADEA5,	//0x1e94		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_clip16_rr(REG5,REG4,IN_PARALLEL)
0x4380C2EB,	//0x1e96		VoC_sub16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG5,IN_PARALLEL)
0x43C9DEE2,	//0x1e98		VoC_sub16_rr(REG1,REG7,REG1,DEFAULT)	|	VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)
0x7F0CDEE3,	//0x1e9a		VoC_movreg32(ACC0,REG23,DEFAULT)	|	VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)
0x5E40FF01,	//0x1e9c		VoC_abs16_r(REG0,DEFAULT)	|	VoC_movreg32(REG23,REG01,IN_PARALLEL)
0x42AADE41,	//0x1e9e		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_abs16_r(REG1,IN_PARALLEL)
0x1405C0EB,	//0x1ea0		VoC_lw16_d(REG5,0xcca)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0x42280CCA,	//0x1ea2		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_lw16_d(REG5,0xcca)(hi)
0x7004C269,	//0x1ea4		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x3100E005,	//0x1ea6		VoC_bgtz16_r(RMVB_EdgeFilter4_121,REG0)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x6C071EB0,	//0x1ea8		VoC_bez16_d(RMVB_EdgeFilter4_121,0x1cab)(lo)	|	VoC_bgtz16_r(RMVB_EdgeFilter4_121,REG0)(hi)
0x41941CAB,	//0x1eaa		VoC_add16_rr(REG4,REG6,REG2,DEFAULT)	|	VoC_bez16_d(RMVB_EdgeFilter4_121,0x1cab)(hi)
0xC314F782,	//0x1eac		VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG2,RL6_LO,IN_PARALLEL)
0xFFC0780C,	//0x1eae		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x1eb0		RMVB_EdgeFilter4_121
0x1EB83101,	//0x1eb0		VoC_bgtz16_r(RMVB_EdgeFilter4_122,REG1)
0x1CAA6C06,	//0x1eb2		VoC_bez16_d(RMVB_EdgeFilter4_122,0x1caa)
0xF7A341DD,	//0x1eb4		VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG7,REG3,DEFAULT)
0xF80DC35D,	//0x1eb6		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)
		//0x1eb8		RMVB_EdgeFilter4_122
0x61C2FF29,	//0x1eb8		VoC_movreg16(REG2,RL7_LO,DEFAULT)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x43A6DE94,	//0x1eba		VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_clip16_rr(REG4,REG2,IN_PARALLEL)
0x43EFDE9D,	//0x1ebc		VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_clip16_rr(REG5,REG3,IN_PARALLEL)
0x5908FF22,	//0x1ebe		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_movreg32(REG45,ACC0,IN_PARALLEL)
0x61E2DED6,	//0x1ec0		VoC_movreg16(REG2,RL7_HI,DEFAULT)	|	VoC_clipu16_rr(REG6,REG2,IN_PARALLEL)
0x5C04DED7,	//0x1ec2		VoC_sw16_p(REG4,REG0,DEFAULT)	|	VoC_clipu16_rr(REG7,REG2,IN_PARALLEL)
0x5C15C210,	//0x1ec4		VoC_sw16_p(REG5,REG1,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG2,IN_PARALLEL)
0xDC06C051,	//0x1ec6		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0xD908DC17,	//0x1ec8		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
		//0x1ec9		RMVB_EdgeFilter4_123
0x5E00FFC0,	//0x1eca		VoC_inc_p(REG0,DEFAULT)	|	VoC_NOP
		//0x1ecb		VoC_endloop0
0x5F84DE08,	//0x1ecc		VoC_pop16(REG4,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
0xE580DF01,	//0x1ece		VoC_return	|	VoC_pop32(REG23,IN_PARALLEL)
		//0x1ed0		RMVB_EdgeFilter4_end
0xE580DF00,	//0x1ed0		VoC_return	|	VoC_pop32(REG01,DEFAULT)
