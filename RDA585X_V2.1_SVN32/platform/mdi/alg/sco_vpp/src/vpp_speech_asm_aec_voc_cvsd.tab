		//0x05d0		VoC_code_section_1
		//0x05d0		Coolsand_AEC
0xDFE9F000,	//0x05d0		VoC_push16(RA,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x21BA1500,	//0x05d2		VoC_sw16_d(REG0,0x21ba)
0x06212B80,	//0x05d4		VoC_jal(Coolsand_AECReset)
0x43051402,	//0x05d6		VoC_lw16_d(REG2,0x4305)
0x01700A80,	//0x05d8		VoC_lw16i(REG0,0x170)
0x42341482,	//0x05da		VoC_lw32_d(REG45,0x4234)
0x05E23502,	//0x05dc		VoC_be16_rr(Coolsand_AEC_Begin,REG0,REG2)
0x01400A89,	//0x05de		VoC_lw16i(ACC0_HI,0x140)
0xC8A2FA84,	//0x05e0		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
		//0x05e2		Coolsand_AEC_Begin
0x3FFF1645,	//0x05e2		VoC_and16_ri(REG5,0xbfff)
0x0A83F80A,	//0x05e4		VoC_lw16i(REG3,0x50)(lo)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFFC00050,	//0x05e6		VoC_NAD	|	VoC_lw16i(REG3,0x50)(hi)
0x02622B80,	//0x05e8		VoC_jal(Rda_RunDma)
0x00100A83,	//0x05ea		VoC_lw16i(REG3,0x10)
0x7FFF0A84,	//0x05ec		VoC_lw16i(REG4,0x7fff)
0x6C09F205,	//0x05ee		VoC_bez16_d(Coolsand_AEC_L1,0x4271)(lo)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x14034271,	//0x05f0		VoC_lw16_d(REG3,0x62fa)(lo)	|	VoC_bez16_d(Coolsand_AEC_L1,0x4271)(hi)
0x140462FA,	//0x05f2		VoC_lw16_d(REG4,0x62fb)(lo)	|	VoC_lw16_d(REG3,0x62fa)(hi)
0x140562FB,	//0x05f4		VoC_lw16_d(REG5,0x62fa)(lo)	|	VoC_lw16_d(REG4,0x62fb)(hi)
0xFFC062FA,	//0x05f6		VoC_NAD	|	VoC_lw16_d(REG5,0x62fa)(hi)
		//0x05f8		Coolsand_AEC_L1
0x43052008,	//0x05f8		VoC_lw16d_set_inc(REG0,0x4305,0x2)
0x191A1809,	//0x05fa		VoC_lw16i_set_inc(REG1,0x191a,0x2)
0x252A180A,	//0x05fc		VoC_lw16i_set_inc(REG2,0x252a,0x2)
0x1AFC1503,	//0x05fe		VoC_sw16_d(REG3,0x1afc)
0x1AFD1504,	//0x0600		VoC_sw16_d(REG4,0x1afd)
0x62F91505,	//0x0602		VoC_sw16_d(REG5,0x62f9)
0x19180A83,	//0x0604		VoC_lw16i(REG3,0x1918)
		//0x0606		Coolsand_AEC_L0
0x083FF107,	//0x0606		VoC_mult16_rd(REG7,REG7,0x21ba)(lo)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x140021BA,	//0x0608		VoC_lw16_d(REG0,0x4305)(lo)	|	VoC_mult16_rd(REG7,REG7,0x21ba)(hi)
0x14014305,	//0x060a		VoC_lw16_d(REG1,0x4304)(lo)	|	VoC_lw16_d(REG0,0x4305)(hi)
0x14024304,	//0x060c		VoC_lw16_d(REG2,0x4304)(lo)	|	VoC_lw16_d(REG1,0x4304)(hi)
0x40384304,	//0x060e		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG2,0x4304)(hi)
0xC0BAC079,	//0x0610		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0x07162B80,	//0x0612		VoC_jal(Coolsand_EchoCancelProcessing)
0x0709F021,	//0x0614		VoC_add16_rd(REG1,REG1,0x21ba)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF28221BA,	//0x0616		VoC_lw16i_short(REG2,0x14,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x21ba)(hi)
0x21BA1501,	//0x0618		VoC_sw16_d(REG1,0x21ba)
0x21BA1405,	//0x061a		VoC_lw16_d(REG5,0x21ba)
0x06063415,	//0x061c		VoC_bgt16_rr(Coolsand_AEC_L0,REG2,REG5)
0xFFC0DFA9,	//0x061e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0620		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0621		Coolsand_AECReset
0x40361400,	//0x0622		VoC_lw16_d(REG0,0x4036)
0x07133180,	//0x0624		VoC_bez16_r(Coolsand_AnalysisProcessing_L1,REG0)
0x1808FF44,	//0x0626		VoC_lw16i_set_inc(REG0,0x1c48,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x18091C48,	//0x0628		VoC_lw16i_set_inc(REG1,0x1cc8,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1c48,0x2)(hi)
0x180A1CC8,	//0x062a		VoC_lw16i_set_inc(REG2,0x1d48,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1cc8,0x2)(hi)
0x2C801D48,	//0x062c		VoC_loop_i(0x0,0x40)(lo)	|	VoC_lw16i_set_inc(REG2,0x1d48,0x2)(hi)
0xDDC40631,	//0x062e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x40)(hi)
0xDDD4DDCC,	//0x0630		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0631		VoC_endloop0
0x1EA81808,	//0x0632		VoC_lw16i_set_inc(REG0,0x1ea8,0x2)
0x1EF01809,	//0x0634		VoC_lw16i_set_inc(REG1,0x1ef0,0x2)
0x1F38180A,	//0x0636		VoC_lw16i_set_inc(REG2,0x1f38,0x2)
0x1FC8180B,	//0x0638		VoC_lw16i_set_inc(REG3,0x1fc8,0x2)
0x06412C48,	//0x063a		VoC_loop_i(0x0,0x24)
0xDDCCDDC4,	//0x063c		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDD4DDD4,	//0x063e		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDDDCDDDC,	//0x0640		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0641		VoC_endloop0
0x20581804,	//0x0642		VoC_lw16i_set_inc(REG0,0x2058,0x1)
0x20621805,	//0x0644		VoC_lw16i_set_inc(REG1,0x2062,0x1)
0x206C1806,	//0x0646		VoC_lw16i_set_inc(REG2,0x206c,0x1)
0x20761807,	//0x0648		VoC_lw16i_set_inc(REG3,0x2076,0x1)
0x064F2C12,	//0x064a		VoC_loop_i(0x0,0x9)
0xDC98DC88,	//0x064c		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDCB8DCA8,	//0x064e		VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
		//0x064f		VoC_endloop0
0x20C41808,	//0x0650		VoC_lw16i_set_inc(REG0,0x20c4,0x2)
0x20E81809,	//0x0652		VoC_lw16i_set_inc(REG1,0x20e8,0x2)
0x20FA180A,	//0x0654		VoC_lw16i_set_inc(REG2,0x20fa,0x2)
0x20D6180B,	//0x0656		VoC_lw16i_set_inc(REG3,0x20d6,0x2)
0x065D2C12,	//0x0658		VoC_loop_i(0x0,0x9)
0xDDCCDDC4,	//0x065a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDDCDDD4,	//0x065c		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x065d		VoC_endloop0
0x21851508,	//0x065e		VoC_sw16_d(ACC0_LO,0x2185)
0x21861808,	//0x0660		VoC_lw16i_set_inc(REG0,0x2186,0x2)
0xE1B573E4,	//0x0662		VoC_lw16i_short(REG5,0x1b,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1f,DEFAULT)
0xE0077346,	//0x0664		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1a,DEFAULT)
0xE0145DC2,	//0x0666		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x218A1805,	//0x0668		VoC_lw16i_set_inc(REG1,0x218a,0x1)
0xE0035DC3,	//0x066a		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x2C3EDC94,	//0x066c		VoC_loop_i(0x0,0x1f)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xDC93066F,	//0x066e		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x1f)(hi)
		//0x066f		VoC_endloop0
0x1808FF44,	//0x0670		VoC_lw16i_set_inc(REG0,0x2116,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x18092116,	//0x0672		VoC_lw16i_set_inc(REG1,0x2128,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x2116,0x2)(hi)
0x180A2128,	//0x0674		VoC_lw16i_set_inc(REG2,0x214e,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x2128,0x2)(hi)
0x180B214E,	//0x0676		VoC_lw16i_set_inc(REG3,0x2160,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x214e,0x2)(hi)
0x2C122160,	//0x0678		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i_set_inc(REG3,0x2160,0x2)(hi)
0xDDC4067E,	//0x067a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
0xDDD4DDCC,	//0x067c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x067e		VoC_endloop0
0x1804DDDC,	//0x067e		VoC_lw16i_set_inc(REG0,0x213a,0x1)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x1805213A,	//0x0680		VoC_lw16i_set_inc(REG1,0x2144,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x213a,0x1)(hi)
0x18062144,	//0x0682		VoC_lw16i_set_inc(REG2,0x24b0,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x2144,0x1)(hi)
0x180724B0,	//0x0684		VoC_lw16i_set_inc(REG3,0x2172,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x24b0,0x1)(hi)
0x0A872172,	//0x0686		VoC_lw16i(REG7,0x7f)(lo)	|	VoC_lw16i_set_inc(REG3,0x2172,0x1)(hi)
0x2C12007F,	//0x0688		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i(REG7,0x7f)(hi)
0xDC88068E,	//0x068a		VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
0xDCA7DC98,	//0x068c		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
		//0x068e		VoC_endloop0
0x1584DCB7,	//0x068e		VoC_sw32_d(ACC0,0x2330)(lo)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0x15842330,	//0x0690		VoC_sw32_d(ACC0,0x2332)(lo)	|	VoC_sw32_d(ACC0,0x2330)(hi)
0x15842332,	//0x0692		VoC_sw32_d(ACC0,0x232c)(lo)	|	VoC_sw32_d(ACC0,0x2332)(hi)
0x1584232C,	//0x0694		VoC_sw32_d(ACC0,0x232e)(lo)	|	VoC_sw32_d(ACC0,0x232c)(hi)
0x1584232E,	//0x0696		VoC_sw32_d(ACC0,0x2338)(lo)	|	VoC_sw32_d(ACC0,0x232e)(hi)
0x15842338,	//0x0698		VoC_sw32_d(ACC0,0x233a)(lo)	|	VoC_sw32_d(ACC0,0x2338)(hi)
0x1584233A,	//0x069a		VoC_sw32_d(ACC0,0x2334)(lo)	|	VoC_sw32_d(ACC0,0x233a)(hi)
0x15842334,	//0x069c		VoC_sw32_d(ACC0,0x2336)(lo)	|	VoC_sw32_d(ACC0,0x2334)(hi)
0x15842336,	//0x069e		VoC_sw32_d(ACC0,0x233c)(lo)	|	VoC_sw32_d(ACC0,0x2336)(hi)
0x1584233C,	//0x06a0		VoC_sw32_d(ACC0,0x233e)(lo)	|	VoC_sw32_d(ACC0,0x233c)(hi)
0x1508233E,	//0x06a2		VoC_sw16_d(ACC0_LO,0x2347)(lo)	|	VoC_sw32_d(ACC0,0x233e)(hi)
0x15082347,	//0x06a4		VoC_sw16_d(ACC0_LO,0x24b9)(lo)	|	VoC_sw16_d(ACC0_LO,0x2347)(hi)
0x158424B9,	//0x06a6		VoC_sw32_d(ACC0,0x24ba)(lo)	|	VoC_sw16_d(ACC0_LO,0x24b9)(hi)
0x158424BA,	//0x06a8		VoC_sw32_d(ACC0,0x24bc)(lo)	|	VoC_sw32_d(ACC0,0x24ba)(hi)
0x700B24BC,	//0x06aa		VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)	|	VoC_sw32_d(ACC0,0x24bc)(hi)
0x0A87E20A,	//0x06ac		VoC_lw16i(REG7,0x7f)(lo)	|	VoC_lw16i_short(ACC1_LO,0x20,IN_PARALLEL)
0x1808007F,	//0x06ae		VoC_lw16i_set_inc(REG0,0x2128,0x2)(lo)	|	VoC_lw16i(REG7,0x7f)(hi)
0x18092128,	//0x06b0		VoC_lw16i_set_inc(REG1,0x2348,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x2128,0x2)(hi)
0x18062348,	//0x06b2		VoC_lw16i_set_inc(REG2,0x2363,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x2348,0x2)(hi)
0x180B2363,	//0x06b4		VoC_lw16i_set_inc(REG3,0x249e,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x2363,0x1)(hi)
0x2C12249E,	//0x06b6		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i_set_inc(REG3,0x249e,0x2)(hi)
0xDDC506BC,	//0x06b8		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
0xDCA8DDCD,	//0x06ba		VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x06bc		VoC_endloop0
0x1808DDDC,	//0x06bc		VoC_lw16i_set_inc(REG0,0x236c,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x1809236C,	//0x06be		VoC_lw16i_set_inc(REG1,0x24d0,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x236c,0x2)(hi)
0x180A24D0,	//0x06c0		VoC_lw16i_set_inc(REG2,0x24e2,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x24d0,0x2)(hi)
0x2C1224E2,	//0x06c2		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i_set_inc(REG2,0x24e2,0x2)(hi)
0xDDC406C7,	//0x06c4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
0xDDD4DDCC,	//0x06c6		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x06c7		VoC_endloop0
0x237E1808,	//0x06c8		VoC_lw16i_set_inc(REG0,0x237e,0x2)
0x240E1809,	//0x06ca		VoC_lw16i_set_inc(REG1,0x240e,0x2)
0x06CF2C90,	//0x06cc		VoC_loop_i(0x0,0x48)
0xDDCCDDC4,	//0x06ce		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x06cf		VoC_endloop0
0x24F41584,	//0x06d0		VoC_sw32_d(ACC0,0x24f4)
0x24F81584,	//0x06d2		VoC_sw32_d(ACC0,0x24f8)
0x24FC1584,	//0x06d4		VoC_sw32_d(ACC0,0x24fc)
0x25001584,	//0x06d6		VoC_sw32_d(ACC0,0x2500)
0x25041584,	//0x06d8		VoC_sw32_d(ACC0,0x2504)
0x25081584,	//0x06da		VoC_sw32_d(ACC0,0x2508)
0x250C1584,	//0x06dc		VoC_sw32_d(ACC0,0x250c)
0x25101584,	//0x06de		VoC_sw32_d(ACC0,0x2510)
0x25141584,	//0x06e0		VoC_sw32_d(ACC0,0x2514)
0x25181584,	//0x06e2		VoC_sw32_d(ACC0,0x2518)
0x251C1584,	//0x06e4		VoC_sw32_d(ACC0,0x251c)
0x24F61584,	//0x06e6		VoC_sw32_d(ACC0,0x24f6)
0x24FA1584,	//0x06e8		VoC_sw32_d(ACC0,0x24fa)
0x24FE1584,	//0x06ea		VoC_sw32_d(ACC0,0x24fe)
0x25021584,	//0x06ec		VoC_sw32_d(ACC0,0x2502)
0x25061584,	//0x06ee		VoC_sw32_d(ACC0,0x2506)
0x250A1584,	//0x06f0		VoC_sw32_d(ACC0,0x250a)
0x250E1584,	//0x06f2		VoC_sw32_d(ACC0,0x250e)
0x25121584,	//0x06f4		VoC_sw32_d(ACC0,0x2512)
0x25161584,	//0x06f6		VoC_sw32_d(ACC0,0x2516)
0x251A1584,	//0x06f8		VoC_sw32_d(ACC0,0x251a)
0x251E1584,	//0x06fa		VoC_sw32_d(ACC0,0x251e)
0x42461402,	//0x06fc		VoC_lw16_d(REG2,0x4246)
0x24BE1804,	//0x06fe		VoC_lw16i_set_inc(REG0,0x24be,0x1)
0x24C71805,	//0x0700		VoC_lw16i_set_inc(REG1,0x24c7,0x1)
0x07052C12,	//0x0702		VoC_loop_i(0x0,0x9)
0xDC98DC82,	//0x0704		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
		//0x0705		VoC_endloop0
0x252A180B,	//0x0706		VoC_lw16i_set_inc(REG3,0x252a,0x2)
0x070A2CA0,	//0x0708		VoC_loop_i(0x0,0x50)
		//0x070a		VoC_endloop0
0x1482DDDC,	//0x070a		VoC_lw32_d(REG45,0x4232)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x0A824232,	//0x070c		VoC_lw16i(REG2,0x10fe)(lo)	|	VoC_lw32_d(REG45,0x4232)(hi)
0x0A8310FE,	//0x070e		VoC_lw16i(REG3,0x98)(lo)	|	VoC_lw16i(REG2,0x10fe)(hi)
0x2B800098,	//0x0710		VoC_jal(Rda_RunDma)(lo)	|	VoC_lw16i(REG3,0x98)(hi)
0xDFA90262,	//0x0712		VoC_pop16(RA,DEFAULT)	|	VoC_jal(Rda_RunDma)(hi)
		//0x0713		Coolsand_AnalysisProcessing_L1
0xE580FFC0,	//0x0714		VoC_return	|	VoC_NOP
		//0x0716		Coolsand_EchoCancelProcessing
0xDFC2DFE9,	//0x0716		VoC_push16(REG2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0A81DFC1,	//0x0718		VoC_lw16i(REG1,0x1c48)(lo)	|	VoC_push16(REG1,DEFAULT)
0x0A841C48,	//0x071a		VoC_lw16i(REG4,0x1e48)(lo)	|	VoC_lw16i(REG1,0x1c48)(hi)
0x0A851E48,	//0x071c		VoC_lw16i(REG5,0x1e58)(lo)	|	VoC_lw16i(REG4,0x1e48)(hi)
0x2B801E58,	//0x071e		VoC_jal(Coolsand_AnalysisProcessing)(lo)	|	VoC_lw16i(REG5,0x1e58)(hi)
0xDF800833,	//0x0720		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(Coolsand_AnalysisProcessing)(hi)
0x1CC80A81,	//0x0722		VoC_lw16i(REG1,0x1cc8)
0x1E680A84,	//0x0724		VoC_lw16i(REG4,0x1e68)
0x1E780A85,	//0x0726		VoC_lw16i(REG5,0x1e78)
0x08332B80,	//0x0728		VoC_jal(Coolsand_AnalysisProcessing)
0x1EA81804,	//0x072a		VoC_lw16i_set_inc(REG0,0x1ea8,0x1)
0x1EF01805,	//0x072c		VoC_lw16i_set_inc(REG1,0x1ef0,0x1)
0x1F381806,	//0x072e		VoC_lw16i_set_inc(REG2,0x1f38,0x1)
0x1FC81807,	//0x0730		VoC_lw16i_set_inc(REG3,0x1fc8,0x1)
0x21AA1580,	//0x0732		VoC_sw32_d(REG01,0x21aa)
0x21AC1581,	//0x0734		VoC_sw32_d(REG23,0x21ac)
0x20801804,	//0x0736		VoC_lw16i_set_inc(REG0,0x2080,0x1)
0x208A1805,	//0x0738		VoC_lw16i_set_inc(REG1,0x208a,0x1)
0x20581806,	//0x073a		VoC_lw16i_set_inc(REG2,0x2058,0x1)
0x20621807,	//0x073c		VoC_lw16i_set_inc(REG3,0x2062,0x1)
0x21B21580,	//0x073e		VoC_sw32_d(REG01,0x21b2)
0x21AE1581,	//0x0740		VoC_sw32_d(REG23,0x21ae)
0x1E681804,	//0x0742		VoC_lw16i_set_inc(REG0,0x1e68,0x1)
0x1E781805,	//0x0744		VoC_lw16i_set_inc(REG1,0x1e78,0x1)
0x1E481806,	//0x0746		VoC_lw16i_set_inc(REG2,0x1e48,0x1)
0x1E581807,	//0x0748		VoC_lw16i_set_inc(REG3,0x1e58,0x1)
0x21B41580,	//0x074a		VoC_sw32_d(REG01,0x21b4)
0x206C1804,	//0x074c		VoC_lw16i_set_inc(REG0,0x206c,0x1)
0x20761805,	//0x074e		VoC_lw16i_set_inc(REG1,0x2076,0x1)
0x21B61581,	//0x0750		VoC_sw32_d(REG23,0x21b6)
0x20C41806,	//0x0752		VoC_lw16i_set_inc(REG2,0x20c4,0x1)
0x21B01580,	//0x0754		VoC_sw32_d(REG01,0x21b0)
0x21B81502,	//0x0756		VoC_sw16_d(REG2,0x21b8)
0xFFC0F000,	//0x0758		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x21BB1500,	//0x075a		VoC_sw16_d(REG0,0x21bb)
		//0x075c		Coolsand_EchoCancelProcessing_L0
0x08C62B80,	//0x075c		VoC_jal(Coolsand_AdaptiveFilteringAmp)
0x09632B80,	//0x075e		VoC_jal(Coolsand_UpdateSpkPower)
0x21BB1407,	//0x0760		VoC_lw16_d(REG7,0x21bb)
0x1E480A82,	//0x0762		VoC_lw16i(REG2,0x1e48)
0x1E580A83,	//0x0764		VoC_lw16i(REG3,0x1e58)
0xC0FB40BA,	//0x0766		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x21851406,	//0x0768		VoC_lw16_d(REG6,0x2185)
0xD833D822,	//0x076a		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x09902B80,	//0x076c		VoC_jal(Coolsand_FilterUpdateCotrol_Int)
0x21BB1407,	//0x076e		VoC_lw16_d(REG7,0x21bb)
0x0A802B80,	//0x0770		VoC_jal(Coolsand_UpdateFilterAmp)
0x0709F021,	//0x0772		VoC_add16_rd(REG1,REG1,0x21bb)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF12221BB,	//0x0774		VoC_lw16i_short(REG2,0x9,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x21bb)(hi)
0x21BB1501,	//0x0776		VoC_sw16_d(REG1,0x21bb)
0x075C3411,	//0x0778		VoC_bgt16_rr(Coolsand_EchoCancelProcessing_L0,REG2,REG1)
0xF021F000,	//0x077a		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x21431500,	//0x077c		VoC_sw16_d(REG0,0x2143)
0x214D1501,	//0x077e		VoC_sw16_d(REG1,0x214d)
0x1E681806,	//0x0780		VoC_lw16i_set_inc(REG2,0x1e68,0x1)
0x1E781807,	//0x0782		VoC_lw16i_set_inc(REG3,0x1e78,0x1)
0x214D0712,	//0x0784		VoC_add16_rd(REG2,REG2,0x214d)
0x214D071B,	//0x0786		VoC_add16_rd(REG3,REG3,0x214d)
0x0E882B80,	//0x0788		VoC_jal(Coolsand_SumInstantPower)
0x1806FF26,	//0x078a		VoC_lw16i_set_inc(REG2,0x1e48,0x1)(lo)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x18071E48,	//0x078c		VoC_lw16i_set_inc(REG3,0x1e58,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x1e48,0x1)(hi)
0x07121E58,	//0x078e		VoC_add16_rd(REG2,REG2,0x214d)(lo)	|	VoC_lw16i_set_inc(REG3,0x1e58,0x1)(hi)
0x071B214D,	//0x0790		VoC_add16_rd(REG3,REG3,0x214d)(lo)	|	VoC_add16_rd(REG2,REG2,0x214d)(hi)
0x2B80214D,	//0x0792		VoC_jal(Coolsand_SumInstantPower)(lo)	|	VoC_add16_rd(REG3,REG3,0x214d)(hi)
0xFF270E88,	//0x0794		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_jal(Coolsand_SumInstantPower)(hi)
0x20801806,	//0x0796		VoC_lw16i_set_inc(REG2,0x2080,0x1)
0x208A1807,	//0x0798		VoC_lw16i_set_inc(REG3,0x208a,0x1)
0x214D0712,	//0x079a		VoC_add16_rd(REG2,REG2,0x214d)
0x214D071B,	//0x079c		VoC_add16_rd(REG3,REG3,0x214d)
0x0E882B80,	//0x079e		VoC_jal(Coolsand_SumInstantPower)
0x25221586,	//0x07a0		VoC_sw32_d(RL6,0x2522)
0x25241587,	//0x07a2		VoC_sw32_d(RL7,0x2524)
0x25261584,	//0x07a4		VoC_sw32_d(ACC0,0x2526)
0x12542B80,	//0x07a6		VoC_jal(Coolsand_ControlLogicDTD)
0x25281500,	//0x07a8		VoC_sw16_d(REG0,0x2528)
0xF061F040,	//0x07aa		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0x21431500,	//0x07ac		VoC_sw16_d(REG0,0x2143)
0x214D1501,	//0x07ae		VoC_sw16_d(REG1,0x214d)
0x1E681806,	//0x07b0		VoC_lw16i_set_inc(REG2,0x1e68,0x1)
0x1E781807,	//0x07b2		VoC_lw16i_set_inc(REG3,0x1e78,0x1)
0x214D0712,	//0x07b4		VoC_add16_rd(REG2,REG2,0x214d)
0x214D071B,	//0x07b6		VoC_add16_rd(REG3,REG3,0x214d)
0x0E882B80,	//0x07b8		VoC_jal(Coolsand_SumInstantPower)
0x25220926,	//0x07ba		VoC_add32_rd(RL6,ACC0,0x2522)
0x1E481806,	//0x07bc		VoC_lw16i_set_inc(REG2,0x1e48,0x1)
0x1E581807,	//0x07be		VoC_lw16i_set_inc(REG3,0x1e58,0x1)
0x214D0712,	//0x07c0		VoC_add16_rd(REG2,REG2,0x214d)
0x214D071B,	//0x07c2		VoC_add16_rd(REG3,REG3,0x214d)
0x0E882B80,	//0x07c4		VoC_jal(Coolsand_SumInstantPower)
0x25240927,	//0x07c6		VoC_add32_rd(RL7,ACC0,0x2524)
0x20801806,	//0x07c8		VoC_lw16i_set_inc(REG2,0x2080,0x1)
0x208A1807,	//0x07ca		VoC_lw16i_set_inc(REG3,0x208a,0x1)
0x214D0712,	//0x07cc		VoC_add16_rd(REG2,REG2,0x214d)
0x214D071B,	//0x07ce		VoC_add16_rd(REG3,REG3,0x214d)
0x0E882B80,	//0x07d0		VoC_jal(Coolsand_SumInstantPower)
0x25260924,	//0x07d2		VoC_add32_rd(ACC0,ACC0,0x2526)
0xFA0F7A0E,	//0x07d4		VoC_shr32_ri(RL7,0x1,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0xDF46FA0C,	//0x07d6		VoC_push32(RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xDF44DF47,	//0x07d8		VoC_push32(ACC0,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x12542B80,	//0x07da		VoC_jal(Coolsand_ControlLogicDTD)
0x25291500,	//0x07dc		VoC_sw16_d(REG0,0x2529)
0x31C0F001,	//0x07de		VoC_bnez16_r(Coolsand_EchoCancelProcessing_L3,REG0)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x7C0407E5,	//0x07e0		VoC_bltz32_d(Coolsand_EchoCancelProcessing_L3,0x2518)(lo)	|	VoC_bnez16_r(Coolsand_EchoCancelProcessing_L3,REG0)(hi)
0x15012518,	//0x07e2		VoC_sw16_d(REG1,0x2528)(lo)	|	VoC_bltz32_d(Coolsand_EchoCancelProcessing_L3,0x2518)(hi)
0xDF042528,	//0x07e4		VoC_pop32(ACC0,DEFAULT)	|	VoC_sw16_d(REG1,0x2528)(hi)
		//0x07e5		Coolsand_EchoCancelProcessing_L3
0xDF06DF07,	//0x07e6		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF447F3A,	//0x07e8		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xF4397BFA,	//0x07ea		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x42691407,	//0x07ec		VoC_lw16_d(REG7,0x4269)
0xF5C2790C,	//0x07ee		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCE6FCD3C,	//0x07f0		VoC_macX_rr(REG5,REG7,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG7,DEFAULT)
0x5F04FFC0,	//0x07f2		VoC_pop32(ACC0,DEFAULT)	|	VoC_NOP
0xFBC7FF27,	//0x07f4		VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0xFFC07A47,	//0x07f6		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(RL7,0x8,DEFAULT)
0x0E9C2B80,	//0x07f8		VoC_jal(Coolsand_ControlLogicMergeChnlEnhancedDTD)
0x0EAE2B80,	//0x07fa		VoC_jal(Coolsand_ControlLogicSingleChnlEnhanced)
0xFFC0F000,	//0x07fc		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x21BB1500,	//0x07fe		VoC_sw16_d(REG0,0x21bb)
		//0x0800		Coolsand_EchoCancelProcessing_L1
0x21BB1407,	//0x0800		VoC_lw16_d(REG7,0x21bb)
0x0C882B80,	//0x0802		VoC_jal(Coolsand_ComputeNoiseWeight_DeciDirectCTRL)
0x106C2B80,	//0x0804		VoC_jal(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL)
0x0DAF2B80,	//0x0806		VoC_jal(Coolsand_PostFiltering)
0x0709F021,	//0x0808		VoC_add16_rd(REG1,REG1,0x21bb)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF12221BB,	//0x080a		VoC_lw16i_short(REG2,0x9,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x21bb)(hi)
0x21BB1501,	//0x080c		VoC_sw16_d(REG1,0x21bb)
0x08003411,	//0x080e		VoC_bgt16_rr(Coolsand_EchoCancelProcessing_L1,REG2,REG1)
0x1401F280,	//0x0810		VoC_lw16_d(REG1,0x2346)(lo)	|	VoC_lw16i_short(REG0,0x14,DEFAULT)
0x14022346,	//0x0812		VoC_lw16_d(REG2,0x4271)(lo)	|	VoC_lw16_d(REG1,0x2346)(hi)
0x1FBE4271,	//0x0814		VoC_lw16i_set_inc(REG2,0x1e8f,0xffffffff)(lo)	|	VoC_lw16_d(REG2,0x4271)(hi)
0x1FBF1E8F,	//0x0816		VoC_lw16i_set_inc(REG3,0x1e9f,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG2,0x1e8f,0xffffffff)(hi)
0x18041E9F,	//0x0818		VoC_lw16i_set_inc(REG0,0x1e91,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x1e9f,0xffffffff)(hi)
0x18051E91,	//0x081a		VoC_lw16i_set_inc(REG1,0x1ea1,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x1e91,0x1)(hi)
0x68E51EA1,	//0x081c		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1ea1,0x1)(hi)
0xD8A4E006,	//0x081e		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0xDC84879D,	//0x0820		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sub16inc_rp(REG5,REG6,REG3,DEFAULT)
		//0x0822		VoC_endloop0
0xDF83DC95,	//0x0822		VoC_pop16(REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x1E880A80,	//0x0824		VoC_lw16i(REG0,0x1e88)
0x1E980A81,	//0x0826		VoC_lw16i(REG1,0x1e98)
0x1D480A82,	//0x0828		VoC_lw16i(REG2,0x1d48)
0x08782B80,	//0x082a		VoC_jal(Coolsand_SynthesisProcessing)
0x0709F021,	//0x082c		VoC_add16_rd(REG1,REG1,0x2185)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xDFA92185,	//0x082e		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x2185)(hi)
0x21851501,	//0x0830		VoC_sw16_d(REG1,0x2185)
0xDFE9E580,	//0x0832		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0833		Coolsand_AnalysisProcessing
0xE0866023,	//0x0834		VoC_lw16i_short(REG6,0x8,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0xE7874072,	//0x0836		VoC_lw16i_short(REG7,0x78,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG6,DEFAULT)
0x0B1C2B80,	//0x0838		VoC_jal(Coolsand_BackCopyVec)
0x6001F107,	//0x083a		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x6062F005,	//0x083c		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xFFC0F3FE,	//0x083e		VoC_NAD	|	VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)
0x0B282B80,	//0x0840		VoC_jal(Coolsand_FlipVec)
0xF5E86061,	//0x0842		VoC_lw16i_short(FORMAT16,0xfffffffd,IN_PARALLEL)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x21FC0A82,	//0x0844		VoC_lw16i(REG2,0x21fc)
0x1DC80A83,	//0x0846		VoC_lw16i(REG3,0x1dc8)
0x00800A80,	//0x0848		VoC_lw16i(REG0,0x80)
0x0B302B80,	//0x084a		VoC_jal(Coolsand_MulVec)
0x0A87E081,	//0x084c		VoC_lw16i(REG7,0x10)(lo)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xFFC00010,	//0x084e		VoC_NAD	|	VoC_lw16i(REG7,0x10)(hi)
0x0B3C2B80,	//0x0850		VoC_jal(Coolsand_ClearVec)
0xE1077030,	//0x0852		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1DC80A81,	//0x0854		VoC_lw16i(REG1,0x1dc8)
0xF0067031,	//0x0856		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x085E2C11,	//0x0858		VoC_loop_i(0x1,0x8)
0xF6826080,	//0x085a		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x0B422B80,	//0x085c		VoC_jal(Coolsand_AddVec)
		//0x085e		VoC_endloop1
0x60A1FFC0,	//0x085e		VoC_movreg16(REG1,REG5,DEFAULT)	|	VoC_NAD
0xFFC0E107,	//0x0860		VoC_NAD	|	VoC_lw16i_short(REG7,0x10,IN_PARALLEL)
0x0B3C2B80,	//0x0862		VoC_jal(Coolsand_ClearVec)
0xF68060A1,	//0x0864		VoC_movreg16(REG0,REG4,IN_PARALLEL)	|	VoC_movreg16(REG1,REG5,DEFAULT)
0x2B80DF42,	//0x0866		VoC_jal(Coolsand_IFFT16)(lo)	|	VoC_push32(REG45,DEFAULT)
0xDF000B48,	//0x0868		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(Coolsand_IFFT16)(hi)
0xF0097050,	//0x086a		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD982E908,	//0x086c		VoC_lw32_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x78FCD98B,	//0x086e		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0x78FEF8FD,	//0x0870		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)
0xDDC2F8FF,	//0x0872		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)
		//0x0874		VoC_endloop0
0xDFA9DDCB,	//0x0874		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xE580FFC0,	//0x0876		VoC_return	|	VoC_NOP
		//0x0878		Coolsand_SynthesisProcessing
0xDF415FE9,	//0x0878		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x2B80DF40,	//0x087a		VoC_jal(Coolsand_IFFT16)(lo)	|	VoC_push32(REG01,DEFAULT)
0xDF000B48,	//0x087c		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(Coolsand_IFFT16)(hi)
0xF0087F07,	//0x087e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xF00A6002,	//0x0880		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xD9C26905,	//0x0882		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF8ED78EC,	//0x0884		VoC_shr16_ri(REG5,0xfffffffd,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)
0xDDD2D9C2,	//0x0886		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x0887		VoC_endloop0
0xF0097F38,	//0x0888		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0x1DC8180A,	//0x088a		VoC_lw16i_set_inc(REG2,0x1dc8,0x2)
0x08922C11,	//0x088c		VoC_loop_i(0x1,0x8)
0xE1076001,	//0x088e		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x0C5A2B80,	//0x0890		VoC_jal(Coolsand_CopyVec)
		//0x0892		VoC_endloop1
0x0A81FFC0,	//0x0892		VoC_lw16i(REG1,0x1dc8)(lo)	|	VoC_NAD
0x0A821DC8,	//0x0894		VoC_lw16i(REG2,0x227c)(lo)	|	VoC_lw16i(REG1,0x1dc8)(hi)
0x6023227C,	//0x0896		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_lw16i(REG2,0x227c)(hi)
0x0A80F5E8,	//0x0898		VoC_lw16i(REG0,0x80)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffffd,IN_PARALLEL)
0xFFC00080,	//0x089a		VoC_NAD	|	VoC_lw16i(REG0,0x80)(hi)
0x0B302B80,	//0x089c		VoC_jal(Coolsand_MulVec)
0xF0065F02,	//0x089e		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xF6817031,	//0x08a0		VoC_movreg16(REG1,REG4,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x1804E082,	//0x08a2		VoC_lw16i_set_inc(REG0,0x1dc8,0x1)(lo)	|	VoC_movreg16(REG2,REG4,DEFAULT)
0x0A871DC8,	//0x08a4		VoC_lw16i(REG7,0x80)(lo)	|	VoC_lw16i_set_inc(REG0,0x1dc8,0x1)(hi)
0xFFC00080,	//0x08a6		VoC_NAD	|	VoC_lw16i(REG7,0x80)(hi)
0x0B422B80,	//0x08a8		VoC_jal(Coolsand_AddVec)
0xF6A26081,	//0x08aa		VoC_movreg16(REG2,REG5,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0x00080A87,	//0x08ac		VoC_lw16i(REG7,0x8)
0xF00A7051,	//0x08ae		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x0C5A2B80,	//0x08b0		VoC_jal(Coolsand_CopyVec)
0xE0836081,	//0x08b2		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xF6824059,	//0x08b4		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0xF00A7051,	//0x08b6		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x00780A87,	//0x08b8		VoC_lw16i(REG7,0x78)
0x0C5A2B80,	//0x08ba		VoC_jal(Coolsand_CopyVec)
0xE7836081,	//0x08bc		VoC_lw16i_short(REG3,0x78,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xE1074059,	//0x08be		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x0B3C2B80,	//0x08c0		VoC_jal(Coolsand_ClearVec)
0xFFC0DFA9,	//0x08c2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x08c4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x08c6		Coolsand_AdaptiveFilteringAmp
0xE0775FE9,	//0x08c6		VoC_lw16i_short(REG7,0x7,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x21AA1481,	//0x08c8		VoC_lw32_d(REG23,0x21aa)
0xC0FB40BA,	//0x08ca		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x21B01482,	//0x08cc		VoC_lw32_d(REG45,0x21b0)
0x5826FF08,	//0x08ce		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_movreg32(REG01,REG23,DEFAULT)
0x5837F3FE,	//0x08d0		VoC_lw16_p(REG7,REG3,DEFAULT)	|	VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)
0x5C46F3FF,	//0x08d2		VoC_sw16_p(REG6,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0x5C57DE10,	//0x08d4		VoC_sw16_p(REG7,REG5,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x77F0DE18,	//0x08d6		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x1483F3FD,	//0x08d8		VoC_lw32_d(REG67,0x21b6)(lo)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0xE8E421B6,	//0x08da		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw32_d(REG67,0x21b6)(hi)
0xD8B5D8A4,	//0x08dc		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDC95DC84,	//0x08de		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x08df		VoC_endloop0
0xD877D866,	//0x08e0		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xF00A5C06,	//0x08e2		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG0,DEFAULT)
0xF00B5C17,	//0x08e4		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0x21AC1481,	//0x08e6		VoC_lw32_d(REG23,0x21ac)
0x20941804,	//0x08e8		VoC_lw16i_set_inc(REG0,0x2094,0x1)
0x209C1805,	//0x08ea		VoC_lw16i_set_inc(REG1,0x209c,0x1)
0xFF426908,	//0x08ec		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD9DBD9D4,	//0x08ee		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0xFBA37BA4,	//0x08f0		VoC_shr32_ri(REG67,0xfffffff4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xDC89C37F,	//0x08f2		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_sub16_rr(REG7,REG5,REG7,DEFAULT)
		//0x08f4		VoC_endloop0
0x1581DC97,	//0x08f4		VoC_sw32_d(REG23,0x21ac)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x148021AC,	//0x08f6		VoC_lw32_d(REG01,0x21aa)(lo)	|	VoC_sw32_d(REG23,0x21ac)(hi)
0x180A21AA,	//0x08f8		VoC_lw16i_set_inc(REG2,0x2094,0x2)(lo)	|	VoC_lw32_d(REG01,0x21aa)(hi)
0x180B2094,	//0x08fa		VoC_lw16i_set_inc(REG3,0x209c,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x2094,0x2)(hi)
0x0A8E209C,	//0x08fc		VoC_lw16i(RL7_LO,0x20a4)(lo)	|	VoC_lw16i_set_inc(REG3,0x209c,0x2)(hi)
0x705020A4,	//0x08fe		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x20a4)(hi)
0x59D2F009,	//0x0900		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xFFC0F459,	//0x0902		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0xD9DB688F,	//0x0904		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B451B04,	//0x0906		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0x070CF004,	//0x0908		VoC_sub16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x4E34870D,	//0x090a		VoC_mac32_rr(REG6,REG4,DEFAULT)	|	VoC_sub16inc_rp(REG5,REG4,REG1,IN_PARALLEL)
0xD9DBCE3D,	//0x090c		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_mac32_rr(REG7,REG5,IN_PARALLEL)
0xF66E61C3,	//0x090e		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0xDDDCD9D2,	//0x0910		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x61C3DDDD,	//0x0912		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
		//0x0913		VoC_endloop0
0x1480F66E,	//0x0914		VoC_lw32_d(REG01,0x21aa)(lo)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0x180A21AA,	//0x0916		VoC_lw16i_set_inc(REG2,0x209c,0x2)(lo)	|	VoC_lw32_d(REG01,0x21aa)(hi)
0x180B209C,	//0x0918		VoC_lw16i_set_inc(REG3,0x2094,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x209c,0x2)(hi)
0x0A8E2094,	//0x091a		VoC_lw16i(RL7_LO,0x20b4)(lo)	|	VoC_lw16i_set_inc(REG3,0x2094,0x2)(hi)
0x705020B4,	//0x091c		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x20b4)(hi)
0x59D2F009,	//0x091e		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xFFC0F459,	//0x0920		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0xD9DB688C,	//0x0922		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B451B04,	//0x0924		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xD1395131,	//0x0926		VoC_mac32inc_rp(REG7,REG1,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0x61C3D9DB,	//0x0928		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0xD9D2F66E,	//0x092a		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0xDDDDDDDC,	//0x092c		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x092e		VoC_endloop0
0xF66E61C3,	//0x092e		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0x21AA1580,	//0x0930		VoC_sw32_d(REG01,0x21aa)
0x21AE1481,	//0x0932		VoC_lw32_d(REG23,0x21ae)
0x20A41808,	//0x0934		VoC_lw16i_set_inc(REG0,0x20a4,0x2)
0x20B41809,	//0x0936		VoC_lw16i_set_inc(REG1,0x20b4,0x2)
0xF0077032,	//0x0938		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xFF457F44,	//0x093a		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xE905FFC0,	//0x093c		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0xFA5D1304,	//0x093e		VoC_shr32_ri(ACC1,0xb,IN_PARALLEL)	|	VoC_add32inc_rp(ACC0,ACC0,REG0,DEFAULT)
0xFBAC134D,	//0x0940		VoC_shr32_ri(ACC0,0xfffffff5,IN_PARALLEL)	|	VoC_add32inc_rp(ACC1,ACC1,REG1,DEFAULT)
		//0x0942		VoC_endloop0
0xFBAD7A5C,	//0x0942		VoC_shr32_ri(ACC1,0xfffffff5,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xb,DEFAULT)
0x0A80F6B8,	//0x0944		VoC_lw16i(REG0,0x24be)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffff5,DEFAULT)
0x070024BE,	//0x0946		VoC_add16_rd(REG0,REG0,0x21bb)(lo)	|	VoC_lw16i(REG0,0x24be)(hi)
0x7BA421BB,	//0x0948		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x21bb)(hi)
0x6126FBFD,	//0x094a		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0x0D86F767,	//0x094c		VoC_multf16_rp(REG6,REG6,REG0,DEFAULT)	|	VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)
0x14808DC7,	//0x094e		VoC_lw32_d(REG01,0x21b2)(lo)	|	VoC_multf16_rp(REG7,REG7,REG0,IN_PARALLEL)
0x703021B2,	//0x0950		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw32_d(REG01,0x21b2)(hi)
0xDCA6F005,	//0x0952		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x1481DCB7,	//0x0954		VoC_lw32_d(REG23,0x21b4)(lo)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0x158121B4,	//0x0956		VoC_sw32_d(REG23,0x21ae)(lo)	|	VoC_lw32_d(REG23,0x21b4)(hi)
0xBAB421AE,	//0x0958		VoC_sub16inc_pr(REG4,REG2,REG6,DEFAULT)	|	VoC_sw32_d(REG23,0x21ae)(hi)
0xDC84BAFD,	//0x095a		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sub16inc_pr(REG5,REG3,REG7,DEFAULT)
0x1581DC95,	//0x095c		VoC_sw32_d(REG23,0x21b4)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDFA921B4,	//0x095e		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_d(REG23,0x21b4)(hi)
0x21B21580,	//0x0960		VoC_sw32_d(REG01,0x21b2)
0xDFE9E580,	//0x0962		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0963		Coolsand_UpdateSpkPower
0xF0057030,	//0x0964		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x21B61480,	//0x0966		VoC_lw32_d(REG01,0x21b6)
0xF0077032,	//0x0968		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xF4315884,	//0x096a		VoC_lw16i_short(FORMAT32,0x6,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xCD245895,	//0x096c		VoC_multf32_rr(ACC0,REG4,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x1481CD6D,	//0x096e		VoC_lw32_d(REG23,0x21b0)(lo)	|	VoC_multf32_rr(ACC1,REG5,REG5,DEFAULT)
0xC92C21B0,	//0x0970		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw32_d(REG23,0x21b0)(hi)
0xFBD458A4,	//0x0972		VoC_shr32_ri(ACC0,0xfffffffa,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xCD2658B5,	//0x0974		VoC_multf32_rr(RL6,REG4,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xFA344D6F,	//0x0976		VoC_shr32_ri(ACC0,0x6,IN_PARALLEL)	|	VoC_multf32_rr(RL7,REG5,REG5,DEFAULT)
0x21B61580,	//0x0978		VoC_sw32_d(REG01,0x21b6)
0x200AC9BE,	//0x097a		VoC_lw16d_set_inc(REG2,0x21b8,0x2)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0x158121B8,	//0x097c		VoC_sw32_d(REG23,0x21b0)(lo)	|	VoC_lw16d_set_inc(REG2,0x21b8,0x2)(hi)
0x7BD621B0,	//0x097e		VoC_shr32_ri(RL6,0xfffffffa,DEFAULT)	|	VoC_sw32_d(REG23,0x21b0)(hi)
0x7A36D995,	//0x0980		VoC_shr32_ri(RL6,0x6,DEFAULT)	|	VoC_lw32_p(ACC1,REG2,IN_PARALLEL)
0xCB34FBFD,	//0x0982		VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0xFA0CC92C,	//0x0984		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFA14FBF4,	//0x0986		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x098B33C4,	//0x0988		VoC_bnltz32_r(Coolsand_UpdateSpkPower100,ACC0)
0xDFA9FF44,	//0x098a		VoC_pop16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x098b		Coolsand_UpdateSpkPower100
0x1502DDD4,	//0x098c		VoC_sw16_d(REG2,0x21b8)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xE58021B8,	//0x098e		VoC_return	|	VoC_sw16_d(REG2,0x21b8)(hi)
		//0x0990		Coolsand_FilterUpdateCotrol_Int
0x0A80DFE9,	//0x0990		VoC_lw16i(REG0,0x2080)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A812080,	//0x0992		VoC_lw16i(REG1,0x208a)(lo)	|	VoC_lw16i(REG0,0x2080)(hi)
0x60E6208A,	//0x0994		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x208a)(hi)
0xC818DFC6,	//0x0996		VoC_add32_rr(REG01,REG01,REG67,DEFAULT)	|	VoC_push16(REG6,IN_PARALLEL)
0x1884F019,	//0x0998		VoC_multf32_rp(ACC0,REG2,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x501998C5,	//0x099a		VoC_mac32_rp(REG3,REG1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG3,REG0,IN_PARALLEL)
0xFFC0D091,	//0x099c		VoC_NOP	|	VoC_msu32_rp(REG2,REG1,IN_PARALLEL)
0xFA3D7A3C,	//0x099e		VoC_shr32_ri(ACC1,0x7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x7,DEFAULT)
0xE0855FC7,	//0x09a0		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xE0047F27,	//0x09a2		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x09A833C4,	//0x09a4		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI_abs,ACC0)
0xCBE7FF47,	//0x09a6		VoC_sub32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
		//0x09a8		Coolsand_FilterUpdateCotrol_Int_InstantCorrI_abs
0x09B036BA,	//0x09a8		VoC_bngt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCorrI,RL7,REG45)
0xFF277F14,	//0x09aa		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0x09B03287,	//0x09ac		VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI,RL7)
0xE0087709,	//0x09ae		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0xfff8,DEFAULT)
		//0x09b0		Coolsand_FilterUpdateCotrol_Int_InstantCorrI
0x33C5FF2E,	//0x09b0		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs,ACC1)(lo)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0xFF4609B6,	//0x09b2		VoC_lw32z(RL6,DEFAULT)	|	VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs,ACC1)(hi)
0xFFC04BAE,	//0x09b4		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(RL6,RL6,ACC1,DEFAULT)
		//0x09b6		Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs
0x09BE36B2,	//0x09b6		VoC_bngt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ,RL6,REG45)
0xFF2E7F15,	//0x09b8		VoC_movreg32(RL6,ACC1,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG45,DEFAULT)
0x09BE3286,	//0x09ba		VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ,RL6)
0xE00A770B,	//0x09bc		VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0xfff8,DEFAULT)
		//0x09be		Coolsand_FilterUpdateCotrol_Int_InstantCorrQ
0x0A84C1FE,	//0x09be		VoC_lw16i(REG4,0x20e8)(lo)	|	VoC_add16_rr(REG6,REG7,REG7,DEFAULT)
0x0A8520E8,	//0x09c0		VoC_lw16i(REG5,0x20fa)(lo)	|	VoC_lw16i(REG4,0x20e8)(hi)
0x413420FA,	//0x09c2		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i(REG5,0x20fa)(hi)
0x5F41C175,	//0x09c4		VoC_push32(REG23,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)
0x59A7F581,	//0x09c6		VoC_lw32_p(RL7,REG4,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,IN_PARALLEL)
0xD9AEF5FA,	//0x09c8		VoC_lw32_p(RL6,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xffffffff,IN_PARALLEL)
0xDF405FC7,	//0x09ca		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xFF297F20,	//0x09cc		VoC_movreg32(REG23,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0x33C0FF43,	//0x09ce		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_L0,REG01)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0xCAC009D2,	//0x09d0		VoC_sub32_rr(REG01,REG67,REG01,DEFAULT)	|	VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_L0,REG01)(hi)
		//0x09d2		Coolsand_FilterUpdateCotrol_Int_L0
0x09D533C1,	//0x09d2		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_L1,REG23)
0xF026CAC9,	//0x09d4		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_sub32_rr(REG23,REG67,REG23,DEFAULT)
		//0x09d5		Coolsand_FilterUpdateCotrol_Int_L1
0x09DA3603,	//0x09d6		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_L2,REG01,REG67)
0x09EE368B,	//0x09d8		VoC_bngt32_rr(Coolsand_FilterUpdateCotrol_Int_L3,REG23,REG67)
		//0x09da		Coolsand_FilterUpdateCotrol_Int_L2
0x42441406,	//0x09da		VoC_lw16_d(REG6,0x4244)
0x42450836,	//0x09dc		VoC_mult16_rd(REG6,REG6,0x4245)
0x4B70CB39,	//0x09de		VoC_sub32_rr(REG01,ACC1,RL6,DEFAULT)	|	VoC_sub32_rr(REG23,ACC0,RL7,DEFAULT)
0x790ACCF4,	//0x09e0		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG6,IN_PARALLEL)
0xCE56CC75,	//0x09e2		VoC_macX_rr(REG2,REG6,DEFAULT)	|	VoC_multf32_rr(ACC1,REG1,REG6,IN_PARALLEL)
0xFA7CF908,	//0x09e4		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xCE86493C,	//0x09e6		VoC_macX_rr(REG0,REG6,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xFA7DFFC0,	//0x09e8		VoC_shr32_ri(ACC1,0xf,DEFAULT)	|	VoC_NOP
0xDDA4C975,	//0x09ea		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)
0xFFC05DAD,	//0x09ec		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG5,DEFAULT)
		//0x09ee		Coolsand_FilterUpdateCotrol_Int_L3
0x42441406,	//0x09ee		VoC_lw16_d(REG6,0x4244)
0xDF875F00,	//0x09f0		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xDF42DF01,	//0x09f2		VoC_push32(REG45,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x20D60A84,	//0x09f4		VoC_lw16i(REG4,0x20d6)
0xF439413C,	//0x09f6		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xC13C4C94,	//0x09f8		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG2,DEFAULT)
0xD9A5CE1B,	//0x09fa		VoC_lw32_p(ACC1,REG4,DEFAULT)	|	VoC_mac32_rr(REG3,REG3,DEFAULT)
0x0A083304,	//0x09fc		VoC_bez32_r(Coolsand_FilterUpdateCotrol_Int_SpkDataPower,ACC0)
0xCB29F619,	//0x09fe		VoC_sub32_rr(REG23,ACC0,ACC1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)
0xF90A4CF4,	//0x0a00		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG6,DEFAULT)
0xFFC0CE56,	//0x0a02		VoC_NOP	|	VoC_macX_rr(REG2,REG6,DEFAULT)
0xC92CFA7C,	//0x0a04		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xDDA4FFC0,	//0x0a06		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_NOP
		//0x0a08		Coolsand_FilterUpdateCotrol_Int_SpkDataPower
0xD9A4DF02,	//0x0a08		VoC_lw32_p(ACC0,REG4,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDF44DF45,	//0x0a0a		VoC_push32(ACC0,DEFAULT)	|	VoC_push32(ACC1,DEFAULT)
0xD9ADD9A4,	//0x0a0c		VoC_lw32_p(ACC1,REG5,DEFAULT)	|	VoC_lw32_p(ACC0,REG4,DEFAULT)
0x0C602B80,	//0x0a0e		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xFF357A44,	//0x0a10		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xDF01DF06,	//0x0a12		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x0A1E3344,	//0x0a14		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm,ACC0)
0x2B80FF3C,	//0x0a16		VoC_jal(Coolsand_CmplxAppxNorm_int)(lo)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0xFA440C60,	//0x0a18		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm_int)(hi)
0x0A1D3344,	//0x0a1a		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm_100,ACC0)
0xFF0EF048,	//0x0a1c		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,DEFAULT)
		//0x0a1d		Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm_100
		//0x0a1e		Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm
0xFBFEFF31,	//0x0a1e		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0xFA66C98E,	//0x0a20		VoC_shr32_ri(RL6,0xc,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG23,DEFAULT)
0x0A253346,	//0x0a22		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_SpkSigSmoothPower_r,RL6)
0xF182F02C,	//0x0a24		VoC_lw16i_short(REG2,0xc,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x0a25		Coolsand_FilterUpdateCotrol_Int_SpkSigSmoothPower_r
0x0C7A2B80,	//0x0a26		VoC_jal(Coolsand_MSBPos)
0xC2D2F182,	//0x0a28		VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0xc,DEFAULT)
0xFBFCFE94,	//0x0a2a		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_shr32_rr(ACC0,REG2,DEFAULT)
0xDF44D81B,	//0x0a2c		VoC_push32(ACC0,DEFAULT)	|	VoC_lw16_p(ACC1_HI,REG1,DEFAULT)
0x7A84D809,	//0x0a2e		VoC_shr32_ri(ACC0,0x10,DEFAULT)	|	VoC_lw16_p(ACC0_HI,REG0,DEFAULT)
0xFFC0FA85,	//0x0a30		VoC_NAD	|	VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)
0x0C602B80,	//0x0a32		VoC_jal(Coolsand_CmplxAppxNorm_int)
0x20C40A80,	//0x0a34		VoC_lw16i(REG0,0x20c4)
0xC030C1FE,	//0x0a36		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG7,DEFAULT)
0x08000A84,	//0x0a38		VoC_lw16i(REG4,0x800)
0x7A66D986,	//0x0a3a		VoC_shr32_ri(RL6,0xc,DEFAULT)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0x3616E005,	//0x0a3c		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s,REG45,RL6)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0A8C0A42,	//0x0a3e		VoC_lw16i(RL6_LO,0x7ff)(lo)	|	VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s,REG45,RL6)(hi)
0xF00D07FF,	//0x0a40		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_lw16i(RL6_LO,0x7ff)(hi)
		//0x0a42		Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s
0x0A453346,	//0x0a42		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s_100,RL6)
0xF182F02C,	//0x0a44		VoC_lw16i_short(REG2,0xc,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x0a45		Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s_100
0x0C7A2B80,	//0x0a46		VoC_jal(Coolsand_MSBPos)
0x43DCF187,	//0x0a48		VoC_sub16_rr(REG4,REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0xE434E016,	//0x0a4a		VoC_and16_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x0A573184,	//0x0a4c		VoC_bez16_r(Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos,REG4)
0xC31CF164,	//0x0a4e		VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0xb,DEFAULT)
0xC3A4F80C,	//0x0a50		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xFF21FEA4,	//0x0a52		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xC90CFBFC,	//0x0a54		VoC_add32_rr(ACC0,ACC0,REG23,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xC2FCE5C4,	//0x0a56		VoC_sub16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_jump(Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos_end)
		//0x0a57		Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos
0xFEA4F80C,	//0x0a58		VoC_shr32_rr(ACC0,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x0a5a		Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos_end
0x0A8BF00A,	//0x0a5a		VoC_lw16i(ACC1_HI,0x10)(lo)	|	VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)
0x362C0010,	//0x0a5c		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor,ACC1,ACC0)(lo)	|	VoC_lw16i(ACC1_HI,0x10)(hi)
0xF7E80A61,	//0x0a5e		VoC_lw16i_short(ACC0_LO,0xffffffff,DEFAULT)	|	VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor,ACC1,ACC0)(hi)
0xDF87F1E9,	//0x0a60		VoC_pop16(REG7,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0xf,DEFAULT)
		//0x0a61		Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor
0x210C0A80,	//0x0a62		VoC_lw16i(REG0,0x210c)
0xDF864038,	//0x0a64		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xE0825F05,	//0x0a66		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_pop32(ACC1,DEFAULT)
0x007F0A85,	//0x0a68		VoC_lw16i(REG5,0x7f)
0x0A7D3416,	//0x0a6a		VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG2,REG6)
0x0A7D362C,	//0x0a6c		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,ACC1,ACC0)
0xF2A2FF26,	//0x0a6e		VoC_lw16i_short(REG2,0x15,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0C7A2B80,	//0x0a70		VoC_jal(Coolsand_MSBPos)
0xC2D3F202,	//0x0a72		VoC_sub16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xFA45FE9D,	//0x0a74		VoC_shr32_ri(ACC1,0x8,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0x0A84E145,	//0x0a76		VoC_lw16i(REG4,0x80)(lo)	|	VoC_movreg16(REG5,ACC1_LO,DEFAULT)
0x34250080,	//0x0a78		VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG4,REG5)(lo)	|	VoC_lw16i(REG4,0x80)(hi)
0x0A850A7D,	//0x0a7a		VoC_lw16i(REG5,0x7f)(lo)	|	VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG4,REG5)(hi)
0xDFA9007F,	//0x0a7c		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i(REG5,0x7f)(hi)
		//0x0a7d		Coolsand_FilterUpdateCotrol_Int_FrameCnt_end
0xE580DC05,	//0x0a7e		VoC_return	|	VoC_sw16_p(REG5,REG0,DEFAULT)
		//0x0a80		Coolsand_UpdateFilterAmp
0x0A80DFE9,	//0x0a80		VoC_lw16i(REG0,0x20c4)(lo)	|	VoC_push16(RA,DEFAULT)
0x403820C4,	//0x0a82		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x20c4)(hi)
0xC038FF44,	//0x0a84		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x42431409,	//0x0a86		VoC_lw16_d(ACC0_HI,0x4243)
0x78F59102,	//0x0a88		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add32_rp(REG45,ACC0,REG0,DEFAULT)
0x7815FF46,	//0x0a8a		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x3105E0E2,	//0x0a8c		VoC_bgtz16_r(Coolsand_ShrinkBit_abs,REG5)(lo)	|	VoC_lw16i_short(REG2,0xe,IN_PARALLEL)
0xF0030A91,	//0x0a8e		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_bgtz16_r(Coolsand_ShrinkBit_abs,REG5)(hi)
0xE0ACC2ED,	//0x0a90		VoC_movreg16(RL6_LO,REG5,DEFAULT)	|	VoC_sub16_rr(REG5,REG3,REG5,DEFAULT)
		//0x0a91		Coolsand_ShrinkBit_abs
0x0C7A2B80,	//0x0a92		VoC_jal(Coolsand_MSBPos)
0x3183F004,	//0x0a94		VoC_bez16_r(Coolsand_ShrinkBit_end,REG3)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF0240A9B,	//0x0a96		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bez16_r(Coolsand_ShrinkBit_end,REG3)(hi)
0xFE1CC31B,	//0x0a98		VoC_shr16_rr(REG4,REG3,DEFAULT)	|	VoC_sub16_rr(REG3,REG4,REG3,DEFAULT)
0xE08CE42C,	//0x0a9a		VoC_movreg16(RL6_LO,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
		//0x0a9b		Coolsand_ShrinkBit_end
0x0C7A2B80,	//0x0a9c		VoC_jal(Coolsand_MSBPos)
0x210C0A81,	//0x0a9e		VoC_lw16i(REG1,0x210c)
0x20800A82,	//0x0aa0		VoC_lw16i(REG2,0x2080)
0xE0744079,	//0x0aa2		VoC_lw16i_short(REG4,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xC0BA42E3,	//0x0aa4		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
0xF5E15811,	//0x0aa6		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xFF447E19,	//0x0aa8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG3,DEFAULT)
0x208A0A83,	//0x0aaa		VoC_lw16i(REG3,0x208a)
0xF8F140FB,	//0x0aac		VoC_shr16_ri(REG1,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xDFA97811,	//0x0aae		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x2,DEFAULT)
0xF8EF1852,	//0x0ab0		VoC_shr16_ri(REG7,0xfffffffd,IN_PARALLEL)	|	VoC_multf32_rp(REG45,REG1,REG2,DEFAULT)
0xF6E6508B,	//0x0ab2		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_msu32_rp(REG1,REG3,DEFAULT)
0x24BE0A80,	//0x0ab4		VoC_lw16i(REG0,0x24be)
0x21BB0700,	//0x0ab6		VoC_add16_rd(REG0,REG0,0x21bb)
0xFA547A52,	//0x0ab8		VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xa,DEFAULT)
0xFBFC7BFA,	//0x0aba		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xFF215800,	//0x0abc		VoC_movreg32(REG23,ACC0,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xE0117828,	//0x0abe		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x5,DEFAULT)
0x0AC63401,	//0x0ac0		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L1,REG0,REG1)
0x40000A81,	//0x0ac2		VoC_lw16i(REG1,0x4000)
0x0AEE2B00,	//0x0ac4		VoC_jump_lg(Coolsand_UpdateFilterAmp_End)
		//0x0ac6		Coolsand_UpdateFilterAmp_L1
0x3401F041,	//0x0ac6		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L2,REG0,REG1)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x0A810ACD,	//0x0ac8		VoC_lw16i(REG1,0x2000)(lo)	|	VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L2,REG0,REG1)(hi)
0x2B002000,	//0x0aca		VoC_jump_lg(Coolsand_UpdateFilterAmp_End)(lo)	|	VoC_lw16i(REG1,0x2000)(hi)
0xF0610AEE,	//0x0acc		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_jump_lg(Coolsand_UpdateFilterAmp_End)(hi)
		//0x0acd		Coolsand_UpdateFilterAmp_L2
0x0AD33401,	//0x0ace		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L3,REG0,REG1)
0x15550A81,	//0x0ad0		VoC_lw16i(REG1,0x1555)
0xF081E5DC,	//0x0ad2		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0ad3		Coolsand_UpdateFilterAmp_L3
0x0AD93401,	//0x0ad4		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L4,REG0,REG1)
0x10000A81,	//0x0ad6		VoC_lw16i(REG1,0x1000)
0xF0A1E5D6,	//0x0ad8		VoC_lw16i_short(REG1,0x5,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0ad9		Coolsand_UpdateFilterAmp_L4
0x0ADF3401,	//0x0ada		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L5,REG0,REG1)
0x0CCC0A81,	//0x0adc		VoC_lw16i(REG1,0xccc)
0xF0C1E5D0,	//0x0ade		VoC_lw16i_short(REG1,0x6,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0adf		Coolsand_UpdateFilterAmp_L5
0x0AE53401,	//0x0ae0		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L6,REG0,REG1)
0x0AAA0A81,	//0x0ae2		VoC_lw16i(REG1,0xaaa)
0xF0E1E5CA,	//0x0ae4		VoC_lw16i_short(REG1,0x7,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0ae5		Coolsand_UpdateFilterAmp_L6
0x0AEC3401,	//0x0ae6		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L7,REG0,REG1)
0x09240A81,	//0x0ae8		VoC_lw16i(REG1,0x924)
0xFFC065C4,	//0x0aea		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0aec		Coolsand_UpdateFilterAmp_L7
0x08000A81,	//0x0aec		VoC_lw16i(REG1,0x800)
		//0x0aee		Coolsand_UpdateFilterAmp_End
0xF90A790C,	//0x0aee		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xF47277F9,	//0x0af0		VoC_lw16i_short(FORMATX,0xe,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0xCD4D4CCC,	//0x0af2		VoC_multf32_rr(ACC1,REG5,REG1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG1,DEFAULT)
0xCEA14E51,	//0x0af4		VoC_macX_rr(REG4,REG1,IN_PARALLEL)	|	VoC_macX_rr(REG2,REG1,DEFAULT)
0x1EA81804,	//0x0af6		VoC_lw16i_set_inc(REG0,0x1ea8,0x1)
0x1EF01805,	//0x0af8		VoC_lw16i_set_inc(REG1,0x1ef0,0x1)
0x7BFAFF2A,	//0x0afa		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0x180AFBFC,	//0x0afc		VoC_lw16i_set_inc(REG2,0x1f38,0x2)(lo)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0x180B1F38,	//0x0afe		VoC_lw16i_set_inc(REG3,0x1fc8,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x1f38,0x2)(hi)
0x48181FC8,	//0x0b00		VoC_add32_rr(REG01,REG01,REG67,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1fc8,0x2)(hi)
0x4859C859,	//0x0b02		VoC_add32_rr(REG23,REG23,REG67,DEFAULT)	|	VoC_add32_rr(REG23,REG23,REG67,IN_PARALLEL)
0x7F23F5E1,	//0x0b04		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)
0x790CF45A,	//0x0b06		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xb,IN_PARALLEL)
0xE911F90E,	//0x0b08		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x99C51944,	//0x0b0a		VoC_multf32_rp(ACC1,REG7,REG0,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0xD1705060,	//0x0b0c		VoC_macXinc_rp(REG6,REG0,IN_PARALLEL)	|	VoC_macX_rp(REG4,REG0,DEFAULT)
0xD02950B9,	//0x0b0e		VoC_mac32_rp(REG5,REG1,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG1,DEFAULT)
0xD16150F1,	//0x0b10		VoC_macXinc_rp(REG4,REG1,IN_PARALLEL)	|	VoC_msuX_rp(REG6,REG1,DEFAULT)
0x7BA4FFC0,	//0x0b12		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_NOP
0x7A64FBA5,	//0x0b14		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff4,IN_PARALLEL)
0x9116FA65,	//0x0b16		VoC_add32_rp(RL6,ACC0,REG2,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)
0xDDD6915F,	//0x0b18		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_add32_rp(RL7,ACC1,REG3,DEFAULT)
		//0x0b1a		VoC_endloop0
0xE580DDDF,	//0x0b1a		VoC_return	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
		//0x0b1c		Coolsand_BackCopyVec
0xF3FA77D1,	//0x0b1c		VoC_lw16i_short(INC2,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0xC0BA4079,	//0x0b1e		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x5E08F80F,	//0x0b20		VoC_inc_p(REG1,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xD9CCDE10,	//0x0b22		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0xD9CCE7C2,	//0x0b24		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x0b26		VoC_endloop0
0xE580DDD4,	//0x0b26		VoC_return	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0b28		Coolsand_FlipVec
0xD899C0BA,	//0x0b28		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xDE1067C3,	//0x0b2a		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xDCA9D899,	//0x0b2c		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x0b2d		VoC_endloop0
0xFFC06580,	//0x0b2e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0b30		Coolsand_MulVec
0xF0067051,	//0x0b30		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF8087053,	//0x0b32		VoC_shr16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9CB6606,	//0x0b34		VoC_lw32inc_p(REG67,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0x8FD78F96,	//0x0b36		VoC_multf16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_multf16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD9CBFFC0,	//0x0b38		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_NOP
		//0x0b3a		VoC_endloop0
0xE580DDDB,	//0x0b3a		VoC_return	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x0b3c		Coolsand_ClearVec
0x7F44F051,	//0x0b3c		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xE7C1F80F,	//0x0b3e		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
		//0x0b40		VoC_endloop0
0xE580DDCC,	//0x0b40		VoC_return	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0b42		Coolsand_AddVec
0xD88667C4,	//0x0b42		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xD886838E,	//0x0b44		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
		//0x0b46		VoC_endloop0
0xE580DCA6,	//0x0b46		VoC_return	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x0b48		Coolsand_IFFT16
0x7050DFE9,	//0x0b48		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2B80DF40,	//0x0b4a		VoC_jal(Coolsand_ReverseIndex)(lo)	|	VoC_push32(REG01,IN_PARALLEL)
0xDF010C3B,	//0x0b4c		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(Coolsand_ReverseIndex)(hi)
0xF0086060,	//0x0b4e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0xFFC05F41,	//0x0b50		VoC_NAD(IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x0C3B2B80,	//0x0b52		VoC_jal(Coolsand_ReverseIndex)
0xF4795F00,	//0x0b54		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x21BC180A,	//0x0b56		VoC_lw16i_set_inc(REG2,0x21bc,0x2)
0x21DC180B,	//0x0b58		VoC_lw16i_set_inc(REG3,0x21dc,0x2)
0xF0087051,	//0x0b5a		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x7FFF0A86,	//0x0b5c		VoC_lw16i(REG6,0x7fff)
0xDF406912,	//0x0b5e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x59CFD9C2,	//0x0b60		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x61E7CD74,	//0x0b62		VoC_movreg16(REG7,RL7_HI,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG6,IN_PARALLEL)
0x4DF6F7CF,	//0x0b64		VoC_multf32_rr(RL6,REG7,REG6,DEFAULT)	|	VoC_movreg16(RL7_HI,RL7_LO,IN_PARALLEL)
0x7A85F68B,	//0x0b66		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)
0x4B65FA87,	//0x0b68		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_shr32_ri(RL7,0x10,IN_PARALLEL)
0x4BF7C964,	//0x0b6a		VoC_sub32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC1,ACC0,IN_PARALLEL)
0xDDD4C9F6,	//0x0b6c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add32_rr(RL6,RL7,RL6,IN_PARALLEL)
0xDDDEDDD5,	//0x0b6e		VoC_sw32inc_p(RL6,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x0b70		VoC_endloop0
0x1810DDDF,	//0x0b70		VoC_lw16i_set_inc(REG0,0x21bc,0x4)(lo)	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
0x181121BC,	//0x0b72		VoC_lw16i_set_inc(REG1,0x21dc,0x4)(lo)	|	VoC_lw16i_set_inc(REG0,0x21bc,0x4)(hi)
0x689921DC,	//0x0b74		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x21dc,0x4)(hi)
0xDF40F402,	//0x0b76		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xEFF259C6,	//0x0b78		VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xF90A5982,	//0x0b7a		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFBFA59CF,	//0x0b7c		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xF90C598B,	//0x0b7e		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0xFBFB4D14,	//0x0b80		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xF90E4E6A,	//0x0b82		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG5,REG2,DEFAULT)
0x5F00CD95,	//0x0b84		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rr(ACC1,REG6,REG2,DEFAULT)
0x4BA4CEBA,	//0x0b86		VoC_sub32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_macX_rr(REG7,REG2,IN_PARALLEL)
0x4BEDC9A6,	//0x0b88		VoC_sub32_rr(ACC1,RL7,ACC1,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0xDDC6C9EF,	//0x0b8a		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC1,IN_PARALLEL)
0xDDCFDDC4,	//0x0b8c		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0b8e		VoC_endloop0
0x1810DDCD,	//0x0b8e		VoC_lw16i_set_inc(REG0,0x21be,0x4)(lo)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0x181121BE,	//0x0b90		VoC_lw16i_set_inc(REG1,0x21de,0x4)(lo)	|	VoC_lw16i_set_inc(REG0,0x21be,0x4)(hi)
0x689921DE,	//0x0b92		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x21de,0x4)(hi)
0xDF40F402,	//0x0b94		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xEFF259C6,	//0x0b96		VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xF90A5982,	//0x0b98		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFBFA59CF,	//0x0b9a		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xF90C598B,	//0x0b9c		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0xFBFB4D14,	//0x0b9e		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xF90E4E6A,	//0x0ba0		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG5,REG2,DEFAULT)
0x5F00CD95,	//0x0ba2		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rr(ACC1,REG6,REG2,DEFAULT)
0x4BE4CEBA,	//0x0ba4		VoC_sub32_rr(ACC0,RL7,ACC0,DEFAULT)	|	VoC_macX_rr(REG7,REG2,IN_PARALLEL)
0x49ADC9E7,	//0x0ba6		VoC_add32_rr(ACC1,RL6,ACC1,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,IN_PARALLEL)
0xDDCFCBAE,	//0x0ba8		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC1,IN_PARALLEL)
0xDDC6DDCC,	//0x0baa		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0bac		VoC_endloop0
0x1880DDC5,	//0x0bac		VoC_lw16i_set_inc(REG0,0x21bc,0x10)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x188121BC,	//0x0bae		VoC_lw16i_set_inc(REG1,0x21dc,0x10)(lo)	|	VoC_lw16i_set_inc(REG0,0x21bc,0x10)(hi)
0x180A21DC,	//0x0bb0		VoC_lw16i_set_inc(REG2,0x22fc,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x21dc,0x10)(hi)
0x180B22FC,	//0x0bb2		VoC_lw16i_set_inc(REG3,0x2304,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x22fc,0x2)(hi)
0xFFC02304,	//0x0bb4		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x2304,0x2)(hi)
0x0BDE2C09,	//0x0bb6		VoC_loop_i(0x1,0x4)
0xE08758A4,	//0x0bb8		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDF40D8B5,	//0x0bba		VoC_push32(REG01,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xC1CF41C6,	//0x0bbc		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG7,REG0,DEFAULT)
0xDF41685C,	//0x0bbe		VoC_push32(REG23,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x59BBD9B1,	//0x0bc0		VoC_lw32_p(REG67,REG7,DEFAULT)	|	VoC_lw32_p(REG23,REG6,DEFAULT)
0x5F43FBF9,	//0x0bc2		VoC_push32(REG67,DEFAULT)	|	VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)
0x790AFBFB,	//0x0bc4		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x4D14F90E,	//0x0bc6		VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x4E63CD55,	//0x0bc8		VoC_macX_rr(REG4,REG3,DEFAULT)	|	VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)
0x4EAECEAB,	//0x0bca		VoC_msu32_rr(REG5,REG6,DEFAULT)	|	VoC_macX_rr(REG5,REG3,IN_PARALLEL)
0x4EEFCE26,	//0x0bcc		VoC_msuX_rr(REG5,REG7,DEFAULT)	|	VoC_mac32_rr(REG4,REG6,IN_PARALLEL)
0xDF03CEA7,	//0x0bce		VoC_pop32(REG67,DEFAULT)	|	VoC_macX_rr(REG4,REG7,IN_PARALLEL)
0x91043C26,	//0x0bd0		VoC_add32_rp(ACC0,ACC0,REG0,IN_PARALLEL)	|	VoC_sub32_pr(RL6,REG0,ACC0,DEFAULT)
0x914D3C6F,	//0x0bd2		VoC_add32_rp(ACC1,ACC1,REG1,IN_PARALLEL)	|	VoC_sub32_pr(RL7,REG1,ACC1,DEFAULT)
0xE0825DB6,	//0x0bd4		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_sw32_p(RL6,REG6,DEFAULT)
0xC0865DC4,	//0x0bd6		VoC_add16_rr(REG6,REG2,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xC08F5DCD,	//0x0bd8		VoC_add16_rr(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0bda		VoC_endloop0
0xDF01DDBF,	//0x0bda		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32_p(RL7,REG7,DEFAULT)
0xE0255F00,	//0x0bdc		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
		//0x0bde		VoC_endloop1
0xC1494140,	//0x0bde		VoC_add16_rr(REG1,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG5,REG0,DEFAULT)
0x21BC1808,	//0x0be0		VoC_lw16i_set_inc(REG0,0x21bc,0x2)
0x21DC1809,	//0x0be2		VoC_lw16i_set_inc(REG1,0x21dc,0x2)
0x22FC1806,	//0x0be4		VoC_lw16i_set_inc(REG2,0x22fc,0x1)
0x23041807,	//0x0be6		VoC_lw16i_set_inc(REG3,0x2304,0x1)
0x41C6F207,	//0x0be8		VoC_add16_rr(REG6,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG7,0x10,DEFAULT)
0xE91EC1CF,	//0x0bea		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)
0xD8B5D8A4,	//0x0bec		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xD9B1DF41,	//0x0bee		VoC_lw32_p(REG23,REG6,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFBF959BB,	//0x0bf0		VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG7,DEFAULT)
0xFBFB5F43,	//0x0bf2		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xF90E790A,	//0x0bf4		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCD554D14,	//0x0bf6		VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xCEAB4E63,	//0x0bf8		VoC_macX_rr(REG5,REG3,IN_PARALLEL)	|	VoC_macX_rr(REG4,REG3,DEFAULT)
0xCE264EAE,	//0x0bfa		VoC_mac32_rr(REG4,REG6,IN_PARALLEL)	|	VoC_msu32_rr(REG5,REG6,DEFAULT)
0xCEA74EEF,	//0x0bfc		VoC_macX_rr(REG4,REG7,IN_PARALLEL)	|	VoC_msuX_rr(REG5,REG7,DEFAULT)
0x3C26DF03,	//0x0bfe		VoC_sub32_pr(RL6,REG0,ACC0,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x3C6F9104,	//0x0c00		VoC_sub32_pr(RL7,REG1,ACC1,DEFAULT)	|	VoC_add32_rp(ACC0,ACC0,REG0,IN_PARALLEL)
0x5DB6914D,	//0x0c02		VoC_sw32_p(RL6,REG6,DEFAULT)	|	VoC_add32_rp(ACC1,ACC1,REG1,IN_PARALLEL)
0x5DC4E104,	//0x0c04		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x10,IN_PARALLEL)
0xDDCDC106,	//0x0c06		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG0,IN_PARALLEL)
0x5DBFDF01,	//0x0c08		VoC_sw32_p(RL7,REG7,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
		//0x0c09		VoC_endloop0
0xDF01C10F,	//0x0c0a		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG7,REG4,REG1,IN_PARALLEL)
0x21BC1808,	//0x0c0c		VoC_lw16i_set_inc(REG0,0x21bc,0x2)
0x21DC1809,	//0x0c0e		VoC_lw16i_set_inc(REG1,0x21dc,0x2)
0xF0077032,	//0x0c10		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x0C372C05,	//0x0c12		VoC_loop_i(0x1,0x2)
0x59C5D9C4,	//0x0c14		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x691DFF26,	//0x0c16		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0xF076FF2F,	//0x0c18		VoC_lw16i_short(STATUS,0x3,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0x6574FAFE,	//0x0c1a		VoC_xor32_rr(ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x1f,DEFAULT)
0x657DFAFF,	//0x0c1c		VoC_xor32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0x1f,IN_PARALLEL)
0x4B7DCB34,	//0x0c1e		VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x6574FA24,	//0x0c20		VoC_xor32_rr(ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x4,IN_PARALLEL)
0xE57DFA25,	//0x0c22		VoC_xor32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,IN_PARALLEL)
0x0C282E80,	//0x0c24		VoC_boe0z16_r(Coolsand_IFFT16_L0)
0xFFC07F47,	//0x0c26		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
		//0x0c28		Coolsand_IFFT16_L0
0x0C2C2F80,	//0x0c28		VoC_boe1z16_r(Coolsand_IFFT16_L1)
0xFFC07F46,	//0x0c2a		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
		//0x0c2c		Coolsand_IFFT16_L1
0xCB344B7D,	//0x0c2c		VoC_sub32_rr(ACC0,ACC0,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0xFB857B84,	//0x0c2e		VoC_shr32_ri(ACC1,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x5CA9D9C4,	//0x0c30		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C5FF26,	//0x0c32		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
		//0x0c34		VoC_endloop0
0xFF2F5CAB,	//0x0c34		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_HI,REG2,DEFAULT)
0xE062E020,	//0x0c36		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
		//0x0c37		VoC_endloop1
0xFFC0DFA9,	//0x0c38		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFC0E580,	//0x0c3a		VoC_push16(REG0,DEFAULT)	|	VoC_return
		//0x0c3b		Coolsand_ReverseIndex
0xD9C6D9C7,	//0x0c3c		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xD9C4D9C5,	//0x0c3e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xD9C2D9C3,	//0x0c40		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD801D9C1,	//0x0c42		VoC_lw16_p(REG1,REG0,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x61E6DF80,	//0x0c44		VoC_movreg16(REG6,RL7_HI,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x618AF6CF,	//0x0c46		VoC_movreg16(ACC1_LO,RL6_LO,DEFAULT)	|	VoC_movreg16(RL7_HI,REG6,IN_PARALLEL)
0x61A2F74C,	//0x0c48		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_movreg16(RL6_LO,ACC1_LO,IN_PARALLEL)
0x6164F64D,	//0x0c4a		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_movreg16(RL6_HI,REG2,IN_PARALLEL)
0x6121F68B,	//0x0c4c		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)
0x60A3F629,	//0x0c4e		VoC_movreg16(REG3,REG5,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG1,IN_PARALLEL)
0xDDC7F665,	//0x0c50		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0xDDC5DDC6,	//0x0c52		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xDDC3DDC4,	//0x0c54		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC1DDC2,	//0x0c56		VoC_sw32inc_p(REG23,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE580DC01,	//0x0c58		VoC_return	|	VoC_sw16_p(REG1,REG0,DEFAULT)
		//0x0c5a		Coolsand_CopyVec
0xF80F59CC,	//0x0c5a		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xD9CCE7C2,	//0x0c5c		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x0c5e		VoC_endloop0
0xE580DDD4,	//0x0c5e		VoC_return	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0c60		Coolsand_CmplxAppxNorm_int
0xFAFC7F22,	//0x0c60		VoC_shr32_ri(ACC0,0x1f,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDF466562,	//0x0c62		VoC_push32(RL6,IN_PARALLEL)	|	VoC_xor32_rr(REG45,ACC0,DEFAULT)
0xFAFD7F2E,	//0x0c64		VoC_shr32_ri(ACC1,0x1f,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0xCAA4656E,	//0x0c66		VoC_sub32_rr(ACC0,REG45,ACC0,IN_PARALLEL)	|	VoC_xor32_rr(RL6,ACC1,DEFAULT)
0x3625CBAD,	//0x0c68		VoC_bgt32_rr(Coolsand_CmplxAppxNorm_int_300,ACC0,ACC1)(lo)	|	VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)
0x7F2C0C6E,	//0x0c6a		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_CmplxAppxNorm_int_300,ACC0,ACC1)(hi)
0xFFC0FF25,	//0x0c6c		VoC_NAD	|	VoC_movreg32(ACC1,ACC0,IN_PARALLEL)
		//0x0c6e		Coolsand_CmplxAppxNorm_int_300
0xFF2A7F26,	//0x0c6e		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBFD7BDC,	//0x0c70		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffb,DEFAULT)
0xC9554B34,	//0x0c72		VoC_add32_rr(ACC1,ACC1,REG45,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFA1D7A2C,	//0x0c74		VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x5,DEFAULT)
0xDF06492C,	//0x0c76		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFFC06580,	//0x0c78		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0c7a		Coolsand_MSBPos
0xFAFE7F34,	//0x0c7a		VoC_shr32_ri(RL6,0x1f,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0xDF446574,	//0x0c7c		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_xor32_rr(ACC0,RL6,DEFAULT)
0xE0034B34,	//0x0c7e		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xF0076684,	//0x0c80		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
0x0C863304,	//0x0c82		VoC_bez32_r(Coolsand_MSBPos_L0,ACC0)
		//0x0c84		VoC_endloop0
0xFA0C5E18,	//0x0c84		VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
		//0x0c86		Coolsand_MSBPos_L0
0xE580DF04,	//0x0c86		VoC_return	|	VoC_pop32(ACC0,DEFAULT)
		//0x0c88		Coolsand_ComputeNoiseWeight_DeciDirectCTRL
0x0A80DFE9,	//0x0c88		VoC_lw16i(REG0,0x2080)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A812080,	//0x0c8a		VoC_lw16i(REG1,0x208a)(lo)	|	VoC_lw16i(REG0,0x2080)(hi)
0x1407208A,	//0x0c8c		VoC_lw16_d(REG7,0x21bb)(lo)	|	VoC_lw16i(REG1,0x208a)(hi)
0xC03821BB,	//0x0c8e		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0x21bb)(hi)
0xD800C079,	//0x0c90		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xFFC05811,	//0x0c92		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x10632B80,	//0x0c94		VoC_jal(Cooland_InstantPower)
0x21BB1405,	//0x0c96		VoC_lw16_d(REG5,0x21bb)
0x21160A86,	//0x0c98		VoC_lw16i(REG6,0x2116)
0x42681407,	//0x0c9a		VoC_lw16_d(REG7,0x4268)
0xF8FD7F27,	//0x0c9c		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xDFC5C1AE,	//0x0c9e		VoC_push16(REG5,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x0FA82B80,	//0x0ca0		VoC_jal(Coolsand_SmoothPeakPower)
0x0A80DF87,	//0x0ca2		VoC_lw16i(REG0,0x2128)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x0A812128,	//0x0ca4		VoC_lw16i(REG1,0x2116)(lo)	|	VoC_lw16i(REG0,0x2128)(hi)
0xC0382116,	//0x0ca6		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x2116)(hi)
0xD984C079,	//0x0ca8		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xDF40D98D,	//0x0caa		VoC_push32(REG01,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x0FBE2B80,	//0x0cac		VoC_jal(Coolsand_InstantSNR)
0x0FF62B80,	//0x0cae		VoC_jal(Coolsand_OverallNoiseEstwState)
0xF284DF00,	//0x0cb0		VoC_lw16i_short(REG4,0x14,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xFBF9D981,	//0x0cb2		VoC_shr32_ri(REG23,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG23,REG0,DEFAULT)
0x3341FA21,	//0x0cb4		VoC_bnez32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L0,REG23)(lo)	|	VoC_shr32_ri(REG23,0x4,DEFAULT)
0x70220CBA,	//0x0cb6		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_bnez32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L0,REG23)(hi)
0xFFC0E003,	//0x0cb8		VoC_NAD	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
		//0x0cba		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L0
0x0D982B80,	//0x0cba		VoC_jal(Coolsand_ShrinkBit)
0xD98B70A4,	//0x0cbc		VoC_lw32_p(REG67,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x5,DEFAULT)
0x7EA3C2E4,	//0x0cbe		VoC_shr32_rr(REG67,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)
0x7F1EE01E,	//0x0cc0		VoC_movreg32(RL6,REG67,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
0xE4FEE00F,	//0x0cc2		VoC_and32_rr(RL6,RL7,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0x0CC83306,	//0x0cc4		VoC_bez32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L1,RL6)
0xFFC048FB,	//0x0cc6		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
		//0x0cc8		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L1
0xFF277B8B,	//0x0cc8		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffff1,DEFAULT)
0x0A82FBE7,	//0x0cca		VoC_lw16i(REG2,0x2144)(lo)	|	VoC_shr32_ri(RL7,0xfffffffc,DEFAULT)
0x07122144,	//0x0ccc		VoC_add16_rd(REG2,REG2,0x21bb)(lo)	|	VoC_lw16i(REG2,0x2144)(hi)
0xBC7F21BB,	//0x0cce		VoC_sub32_pr(RL7,REG1,RL7,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x21bb)(hi)
0x33C7DC27,	//0x0cd0		VoC_bnltz32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L2,RL7)(lo)	|	VoC_sw16_p(REG7,REG2,DEFAULT)
0xFF470CD4,	//0x0cd2		VoC_lw32z(RL7,DEFAULT)	|	VoC_bnltz32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L2,RL7)(hi)
		//0x0cd4		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L2
0x21BB1402,	//0x0cd4		VoC_lw16_d(REG2,0x21bb)
0xDF4478FA,	//0x0cd6		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x214E0A83,	//0x0cd8		VoC_lw16i(REG3,0x214e)
0x1401C0D3,	//0x0cda		VoC_lw16_d(REG1,0x4249)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0x599D4249,	//0x0cdc		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x4249)(hi)
0xCBEAFA27,	//0x0cde		VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_shr32_ri(RL7,0x4,IN_PARALLEL)
0xFF2C7BC2,	//0x0ce0		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xF4397A3A,	//0x0ce2		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xF5C2790C,	//0x0ce4		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCE69CE21,	//0x0ce6		VoC_macX_rr(REG5,REG1,DEFAULT)	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
0xDF06FFC0,	//0x0ce8		VoC_pop32(RL6,DEFAULT)	|	VoC_NOP
0xE1425F44,	//0x0cea		VoC_lw16i_short(REG2,0x14,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x0C7A2B80,	//0x0cec		VoC_jal(Coolsand_MSBPos)
0x235A0A81,	//0x0cee		VoC_lw16i(REG1,0x235a)
0x21BB0709,	//0x0cf0		VoC_add16_rd(REG1,REG1,0x21bb)
0xE0805F04,	//0x0cf2		VoC_lw16i_short(REG0,0x8,IN_PARALLEL)	|	VoC_pop32(ACC0,DEFAULT)
0xFE84C2C0,	//0x0cf4		VoC_shr32_rr(ACC0,REG0,DEFAULT)	|	VoC_sub16_rr(REG0,REG3,REG0,DEFAULT)
0x21720A80,	//0x0cf6		VoC_lw16i(REG0,0x2172)
0x21BB0700,	//0x0cf8		VoC_add16_rd(REG0,REG0,0x21bb)
0x5803FB84,	//0x0cfa		VoC_lw16_p(REG3,REG0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x7A81E084,	//0x0cfc		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,IN_PARALLEL)
0xDFC0DC19,	//0x0cfe		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_p(ACC0_HI,REG1,IN_PARALLEL)
0xFFC05FC9,	//0x0d00		VoC_NAD(IN_PARALLEL)	|	VoC_push16(ACC0_HI,DEFAULT)
0x0D982B80,	//0x0d02		VoC_jal(Coolsand_ShrinkBit)
0xFB445F80,	//0x0d04		VoC_shr32_ri(ACC0,0xffffffe8,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xE0127ABC,	//0x0d06		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x17,DEFAULT)
0xF8CA6101,	//0x0d08		VoC_shr16_ri(REG2,0xfffffff9,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0x0D0E3491,	//0x0d0a		VoC_bngt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L3,REG2,REG1)
0xF5B84608,	//0x0d0c		VoC_lw16i_short(FORMAT16,0xfffffff7,IN_PARALLEL)	|	VoC_multf16_rr(REG0,REG0,REG1,DEFAULT)
		//0x0d0e		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L3
0xF1E2DF81,	//0x0d0e		VoC_lw16i_short(REG2,0xf,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x600D8008,	//0x0d10		VoC_movreg16(RL6_HI,REG0,DEFAULT)	|	VoC_add16_rp(REG0,REG0,REG1,DEFAULT)
0xFA86DFC1,	//0x0d12		VoC_shr32_ri(RL6,0x10,DEFAULT)	|	VoC_push16(REG1,IN_PARALLEL)
0x0C7A2B80,	//0x0d14		VoC_jal(Coolsand_MSBPos)
0xE01271E0,	//0x0d16		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0xf,DEFAULT)
0xF8CA42C3,	//0x0d18		VoC_shr16_ri(REG2,0xfffffff9,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG0,DEFAULT)
0x424B1401,	//0x0d1a		VoC_lw16_d(REG1,0x424b)
0xDF847E19,	//0x0d1c		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG3,DEFAULT)
0x3491F005,	//0x0d1e		VoC_bngt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L4,REG2,REG1)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC28D0D22,	//0x0d20		VoC_sub16_rr(REG5,REG2,REG1,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L4,REG2,REG1)(hi)
		//0x0d22		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L4
0x42621400,	//0x0d22		VoC_lw16_d(REG0,0x4262)
0x21BB0800,	//0x0d24		VoC_mult16_rd(REG0,REG0,0x21bb)
0x0700FFC0,	//0x0d26		VoC_add16_rd(REG0,REG0,0x424c)(lo)	|	VoC_NOP
0x3428424C,	//0x0d28		VoC_bgt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L5,REG5,REG0)(lo)	|	VoC_add16_rd(REG0,REG0,0x424c)(hi)
0xE0050D2C,	//0x0d2a		VoC_movreg16(REG5,REG0,DEFAULT)	|	VoC_bgt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L5,REG5,REG0)(hi)
		//0x0d2c		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L5
0xDC45DFA9,	//0x0d2c		VoC_sw16_p(REG5,REG4,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0d2e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0d30		Coolsand_CmplxAppxNorm
0xF8787F01,	//0x0d30		VoC_shr16_ri(REG0,0xf,IN_PARALLEL)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xF8796482,	//0x0d32		VoC_shr16_ri(REG1,0xf,IN_PARALLEL)	|	VoC_xor16_rr(REG2,REG0,DEFAULT)
0xC282648B,	//0x0d34		VoC_sub16_rr(REG2,REG2,REG0,IN_PARALLEL)	|	VoC_xor16_rr(REG3,REG1,DEFAULT)
0xE1F042CB,	//0x0d36		VoC_lw16i_short(REG0,0x1f,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)
0x0D3C3413,	//0x0d38		VoC_bgt16_rr(Coolsand_CmplxAppxNorm_L0,REG2,REG3)
0xF6436062,	//0x0d3a		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
		//0x0d3c		Coolsand_CmplxAppxNorm_L0
0xF41A70B9,	//0x0d3c		VoC_lw16i_short(FORMATX,0x3,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x5,DEFAULT)
0xE0314C84,	//0x0d3e		VoC_lw16i_short(REG1,0x3,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)
0xE580CE59,	//0x0d40		VoC_return	|	VoC_macX_rr(REG3,REG1,DEFAULT)
		//0x0d42		Coolsand_FirstOrderIIRSmooth2
0xFBC2CBE2,	//0x0d42		VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)
0xF90CFA3A,	//0x0d44		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xCE69CE21,	//0x0d46		VoC_macX_rr(REG5,REG1,DEFAULT)	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
0xDFE9E580,	//0x0d48		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0d49		Coolsand_NoisePSDEst
0x00320A87,	//0x0d4a		VoC_lw16i(REG7,0x32)
0xD98DD984,	//0x0d4c		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0x0D5434BE,	//0x0d4e		VoC_bngt16_rr(Coolsand_NoisePSDEst_L0,REG7,REG6)
0x2B00FF25,	//0x0d50		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFFC00D90,	//0x0d52		VoC_NAD	|	VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(hi)
		//0x0d54		Coolsand_NoisePSDEst_L0
0x0D6036AC,	//0x0d54		VoC_bngt32_rr(Coolsand_NoisePSDEst_L1,ACC1,ACC0)
0x0D5C3304,	//0x0d56		VoC_bez32_r(Coolsand_NoisePSDEst_L1_sub0,ACC0)
0x2B00FF25,	//0x0d58		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFFC00D90,	//0x0d5a		VoC_NAD	|	VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(hi)
		//0x0d5c		Coolsand_NoisePSDEst_L1_sub0
0xE00B702A,	//0x0d5c		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0x1,DEFAULT)
0x0D902B00,	//0x0d5e		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)
		//0x0d60		Coolsand_NoisePSDEst_L1
0xE00D720C,	//0x0d60		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x10,DEFAULT)
0x0D66362E,	//0x0d62		VoC_bgt32_rr(Coolsand_NoisePSDEst_L2,ACC1,RL6)
0xE5CFE087,	//0x0d64		VoC_jump(Coolsand_NoisePSDEst_L4)	|	VoC_movreg16(REG7,REG4,DEFAULT)
		//0x0d66		Coolsand_NoisePSDEst_L2
0xE20C700D,	//0x0d66		VoC_lw16i_short(RL6_LO,0x20,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x0D6C36B5,	//0x0d68		VoC_bngt32_rr(Coolsand_NoisePSDEst_L3,RL6,ACC1)
0xE5C9E0A7,	//0x0d6a		VoC_jump(Coolsand_NoisePSDEst_L4)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0d6c		Coolsand_NoisePSDEst_L3
0xF853F8B3,	//0x0d6c		VoC_shr16_ri(REG3,0xa,DEFAULT)	|	VoC_shr16_ri(REG3,0xfffffff6,DEFAULT)
0x230C0A84,	//0x0d6e		VoC_lw16i(REG4,0x230c)
0xFFC0C11C,	//0x0d70		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0xFFC05847,	//0x0d72		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
		//0x0d74		Coolsand_NoisePSDEst_L4
0xF5A046BB,	//0x0d74		VoC_lw16i_short(FORMAT16,0xfffffff4,IN_PARALLEL)	|	VoC_multf16_rr(REG3,REG2,REG7,DEFAULT)
0x25201404,	//0x0d76		VoC_lw16_d(REG4,0x2520)
0xF8E35F44,	//0x0d78		VoC_shr16_ri(REG3,0xfffffffc,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xDFC17AA1,	//0x0d7a		VoC_push16(REG1,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0x14,DEFAULT)
0x0D982B80,	//0x0d7c		VoC_jal(Coolsand_ShrinkBit)
0x5F07DF81,	//0x0d7e		VoC_pop32(RL7,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x3307F707,	//0x0d80		VoC_bez32_r(Coolsand_NoisePSDEst_Lx,RL7)(lo)	|	VoC_movreg16(REG7,ACC0_LO,IN_PARALLEL)
0x14020D90,	//0x0d82		VoC_lw16_d(REG2,0x2521)(lo)	|	VoC_bez32_r(Coolsand_NoisePSDEst_Lx,RL7)(hi)
0xCBEA2521,	//0x0d84		VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_lw16_d(REG2,0x2521)(hi)
0xE0F37BC2,	//0x0d86		VoC_lw16i_short(REG3,0xf,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xC29B7A3A,	//0x0d88		VoC_sub16_rr(REG3,REG2,REG3,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0x6059F90C,	//0x0d8a		VoC_movreg16(FORMAT32,REG2,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x607ACE27,	//0x0d8c		VoC_movreg16(FORMATX,REG3,DEFAULT)	|	VoC_mac32_rr(REG4,REG7,IN_PARALLEL)
0xFFC0CEAF,	//0x0d8e		VoC_NAD	|	VoC_macX_rr(REG5,REG7,IN_PARALLEL)
		//0x0d90		Coolsand_NoisePSDEst_Lx
0xE00D708C,	//0x0d90		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x4,DEFAULT)
0x0D95362E,	//0x0d92		VoC_bgt32_rr(Coolsand_NoisePSDEst_END,ACC1,RL6)
0xDFA9FF35,	//0x0d94		VoC_pop16(RA,DEFAULT)	|	VoC_movreg32(ACC1,RL6,DEFAULT)
		//0x0d95		Coolsand_NoisePSDEst_END
0xE580DD8D,	//0x0d96		VoC_return	|	VoC_sw32_p(ACC1,REG1,DEFAULT)
		//0x0d98		Coolsand_ShrinkBit
0xFAF97F0E,	//0x0d98		VoC_shr32_ri(REG23,0x1f,IN_PARALLEL)	|	VoC_movreg32(RL6,REG23,DEFAULT)
0xF6827F0F,	//0x0d9a		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0xDF465FE9,	//0x0d9c		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0C7A2B80,	//0x0d9e		VoC_jal(Coolsand_MSBPos)
0xDF065FA9,	//0x0da0		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE0147F44,	//0x0da2		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x0DAE3183,	//0x0da4		VoC_bez16_r(Coolsand_ShrinkBit_L0,REG3)
0xE005431A,	//0x0da6		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0xFE92657E,	//0x0da8		VoC_shr32_rr(REG45,REG2,IN_PARALLEL)	|	VoC_xor32_rr(RL6,RL7,DEFAULT)
0xE4F2CBBE,	//0x0daa		VoC_and32_rr(REG45,RL6,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,RL7,DEFAULT)
0xCABCE57A,	//0x0dac		VoC_sub32_rr(ACC0,REG45,RL7,DEFAULT)	|	VoC_xor32_rr(REG45,RL7,DEFAULT)
		//0x0dae		Coolsand_ShrinkBit_L0
0xDFE9E580,	//0x0dae		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0daf		Coolsand_PostFiltering
0x21BB1407,	//0x0db0		VoC_lw16_d(REG7,0x21bb)
0x24B00A80,	//0x0db2		VoC_lw16i(REG0,0x24b0)
0x21720A81,	//0x0db4		VoC_lw16i(REG1,0x2172)
0xC0794038,	//0x0db6		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x42621403,	//0x0db8		VoC_lw16_d(REG3,0x4262)
0xD811D800,	//0x0dba		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xC40844FB,	//0x0dbc		VoC_mult16_rr(REG0,REG0,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG3,REG3,REG7,DEFAULT)
0x007F0A84,	//0x0dbe		VoC_lw16i(REG4,0x7f)
0x424C071B,	//0x0dc0		VoC_add16_rd(REG3,REG3,0x424c)
0x0DC534A3,	//0x0dc2		VoC_bngt16_rr(Coolsand_PostFiltering_L0,REG4,REG3)
0xF8CCE064,	//0x0dc4		VoC_shr16_ri(REG4,0xfffffff9,DEFAULT)	|	VoC_movreg16(REG4,REG3,DEFAULT)
		//0x0dc5		Coolsand_PostFiltering_L0
0x0DCB3484,	//0x0dc6		VoC_bngt16_rr(Coolsand_PostFiltering_L1,REG0,REG4)
0x42530809,	//0x0dc8		VoC_mult16_rd(REG1,REG1,0x4253)
0xF8E1E5C2,	//0x0dca		VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)	|	VoC_jump(Coolsand_PostFiltering_L2)
		//0x0dcb		Coolsand_PostFiltering_L1
		//0x0dcc		Coolsand_PostFiltering_L2
0x217C0A82,	//0x0dcc		VoC_lw16i(REG2,0x217c)
0x0A83C0BA,	//0x0dce		VoC_lw16i(REG3,0x24b0)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x5C2124B0,	//0x0dd0		VoC_sw16_p(REG1,REG2,DEFAULT)	|	VoC_lw16i(REG3,0x24b0)(hi)
0x0A80C0FB,	//0x0dd2		VoC_lw16i(REG0,0x2080)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
0x0A812080,	//0x0dd4		VoC_lw16i(REG1,0x208a)(lo)	|	VoC_lw16i(REG0,0x2080)(hi)
0x4038208A,	//0x0dd6		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x208a)(hi)
0xF6F8C079,	//0x0dd8		VoC_lw16i_short(FORMAT16,0xfffffff7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0xD811D800,	//0x0dda		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x8C590C18,	//0x0ddc		VoC_multf16_rp(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_multf16_rp(REG0,REG0,REG3,DEFAULT)
0xFF07DF40,	//0x0dde		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x0D302B80,	//0x0de0		VoC_jal(Coolsand_CmplxAppxNorm)
0x6120FB84,	//0x0de2		VoC_movreg16(REG0,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x4C04F459,	//0x0de4		VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0x0A81F6E3,	//0x0de6		VoC_lw16i(REG1,0x2160)(lo)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0xF8FB2160,	//0x0de8		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_lw16i(REG1,0x2160)(hi)
0x0A82C059,	//0x0dea		VoC_lw16i(REG2,0x217c)(lo)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0xDD8C217C,	//0x0dec		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i(REG2,0x217c)(hi)
0xFF3840BA,	//0x0dee		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x0C10F778,	//0x0df0		VoC_multf16_rp(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xfffffffb,DEFAULT)
0xFFC08C51,	//0x0df2		VoC_NOP	|	VoC_multf16_rp(REG1,REG1,REG2,IN_PARALLEL)
0x2B80FF07,	//0x0df4		VoC_jal(Coolsand_CmplxAppxNorm)(lo)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xFB840D30,	//0x0df6		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm)(hi)
0x21720A82,	//0x0df8		VoC_lw16i(REG2,0x2172)
0xDF0040BA,	//0x0dfa		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xF5B85FC9,	//0x0dfc		VoC_lw16i_short(FORMAT16,0xfffffff7,IN_PARALLEL)	|	VoC_push16(ACC0_HI,DEFAULT)
0x8C510C10,	//0x0dfe		VoC_multf16_rp(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_multf16_rp(REG0,REG0,REG2,DEFAULT)
0x214E0A84,	//0x0e00		VoC_lw16i(REG4,0x214e)
0xFFC078FF,	//0x0e02		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x0D302B80,	//0x0e04		VoC_jal(Coolsand_CmplxAppxNorm)
0x23480A81,	//0x0e06		VoC_lw16i(REG1,0x2348)
0xC0797B84,	//0x0e08		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0xF4596120,	//0x0e0a		VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xC13C4C04,	//0x0e0c		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)
0xFF2ED98D,	//0x0e0e		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xD9A47F27,	//0x0e10		VoC_lw32_p(ACC0,REG4,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xDF475FC4,	//0x0e12		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xF5E27179,	//0x0e14		VoC_lw16i_short(FORMATX,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xb,DEFAULT)
0x42681401,	//0x0e16		VoC_lw16_d(REG1,0x4268)
0x0D422B80,	//0x0e18		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0xDF075F84,	//0x0e1a		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0x5DA4FF35,	//0x0e1c		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_movreg32(ACC1,RL6,DEFAULT)
0xFBE5FA25,	//0x0e1e		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,IN_PARALLEL)
0x42545025,	//0x0e20		VoC_bgt32_rd(Coolsand_PostFiltering_L3,ACC1,0x4254)
0x42541485,	//0x0e22		VoC_lw32_d(ACC1,0x4254)
		//0x0e24		Coolsand_PostFiltering_L3
0x42521402,	//0x0e24		VoC_lw16_d(REG2,0x4252)
0x7BF8FF28,	//0x0e26		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0x7908F5C1,	//0x0e28		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff8,IN_PARALLEL)
0xCC14F54A,	//0x0e2a		VoC_multf32_rr(ACC0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xffffffe9,IN_PARALLEL)
0x1406CE4A,	//0x0e2c		VoC_lw16_d(REG6,0x424c)(lo)	|	VoC_macX_rr(REG1,REG2,DEFAULT)
0xFA44424C,	//0x0e2e		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_lw16_d(REG6,0x424c)(hi)
0xE1827F26,	//0x0e30		VoC_lw16i_short(REG2,0x18,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0C7A2B80,	//0x0e32		VoC_jal(Coolsand_MSBPos)
0xE1817000,	//0x0e34		VoC_lw16i_short(REG1,0x18,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x0E4C3183,	//0x0e36		VoC_bez16_r(Coolsand_PostFiltering_L5,REG3)
0xE17442CA,	//0x0e38		VoC_lw16i_short(REG4,0x17,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG3,REG1,DEFAULT)
0x00011602,	//0x0e3a		VoC_and16_ri(REG2,0x1)
0x0E463182,	//0x0e3c		VoC_bez16_r(Coolsand_PostFiltering_L4,REG2)
0xE094431A,	//0x0e3e		VoC_lw16i_short(REG4,0x9,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0x42A2F80A,	//0x0e40		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFE10E030,	//0x0e42		VoC_shr16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x3,IN_PARALLEL)
0xFFC065C8,	//0x0e44		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_PostFiltering_L5)
		//0x0e46		Coolsand_PostFiltering_L4
0xE0B4425A,	//0x0e46		VoC_lw16i_short(REG4,0xb,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG1,REG3,DEFAULT)
0x42A2F80A,	//0x0e48		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFE10E010,	//0x0e4a		VoC_shr16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
		//0x0e4c		Coolsand_PostFiltering_L5
0xF4014C34,	//0x0e4c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG0,REG6,DEFAULT)
0x1E880A82,	//0x0e4e		VoC_lw16i(REG2,0x1e88)
0x1E980A83,	//0x0e50		VoC_lw16i(REG3,0x1e98)
0x21BB1407,	//0x0e52		VoC_lw16_d(REG7,0x21bb)
0xC0FB40BA,	//0x0e54		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xFF3A5F81,	//0x0e56		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x7805FF45,	//0x0e58		VoC_bez32_d(Coolsand_PostFiltering_L8,0x4254)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x0A8A4254,	//0x0e5a		VoC_lw16i(ACC1_LO,0x5b)(lo)	|	VoC_bez32_d(Coolsand_PostFiltering_L8,0x4254)(hi)
0xFFC0005B,	//0x0e5c		VoC_NAD	|	VoC_lw16i(ACC1_LO,0x5b)(hi)
		//0x0e5e		Coolsand_PostFiltering_L8
0x0E6136AC,	//0x0e5e		VoC_bngt32_rr(Coolsand_PostFiltering_L6,ACC1,ACC0)
0xFB9CFF2C,	//0x0e60		VoC_shr32_ri(ACC0,0xfffffff3,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x0e61		Coolsand_PostFiltering_L6
0xE0266120,	//0x0e62		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xF60C78F8,	//0x0e64		VoC_movreg16(RL6_LO,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
		//0x0e66		Coolsand_PostFiltering_End
0xDC24DFA9,	//0x0e66		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE580DC35,	//0x0e68		VoC_return	|	VoC_sw16_p(REG5,REG3,DEFAULT)
		//0x0e6a		Coolsand_Generate
0x21861804,	//0x0e6a		VoC_lw16i_set_inc(REG0,0x2186,0x1)
0x218A1805,	//0x0e6c		VoC_lw16i_set_inc(REG1,0x218a,0x1)
0xE0076884,	//0x0e6e		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFFC08246,	//0x0e70		VoC_NOP	|	VoC_add16inc_rp(REG6,REG1,REG0,DEFAULT)
		//0x0e72		VoC_endloop0
0x140A81F7,	//0x0e72		VoC_lw16_d(ACC1_LO,0x21a9)(lo)	|	VoC_add16_rp(REG7,REG7,REG6,DEFAULT)
0x140B21A9,	//0x0e74		VoC_lw16_d(ACC1_HI,0x21a4)(lo)	|	VoC_lw16_d(ACC1_LO,0x21a9)(hi)
0x1FBC21A4,	//0x0e76		VoC_lw16i_set_inc(REG0,0x21a9,0xffffffff)(lo)	|	VoC_lw16_d(ACC1_HI,0x21a4)(hi)
0x1FBD21A9,	//0x0e78		VoC_lw16i_set_inc(REG1,0x21a8,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x21a9,0xffffffff)(hi)
0x60E621A8,	//0x0e7a		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x21a8,0xffffffff)(hi)
0x1606F87F,	//0x0e7c		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_shr16_ri(REG7,0xf,IN_PARALLEL)
0x64BE0001,	//0x0e7e		VoC_xor16_rr(REG6,REG7,DEFAULT)	|	VoC_and16_ri(REG6,0x1)(hi)
0x6BE3D898,	//0x0e80		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG1,IN_PARALLEL)
0xD898C3BE,	//0x0e82		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)
		//0x0e84		VoC_endloop0
0x5C86DC88,	//0x0e84		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xE580FF28,	//0x0e86		VoC_return	|	VoC_movreg32(REG01,ACC1,IN_PARALLEL)
		//0x0e88		Coolsand_SumInstantPower
0xD8A0DFE9,	//0x0e88		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2B80D8B1,	//0x0e8a		VoC_jal(Coolsand_InstantPower)(lo)	|	VoC_lw16inc_p(REG1,REG3,DEFAULT)
0xDFA90E90,	//0x0e8c		VoC_pop16(RA,DEFAULT)	|	VoC_jal(Coolsand_InstantPower)(hi)
0xE580FFC0,	//0x0e8e		VoC_return	|	VoC_NOP
		//0x0e90		Coolsand_InstantPower
0xDF41DFE9,	//0x0e90		VoC_push32(REG23,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0D302B80,	//0x0e92		VoC_jal(Coolsand_CmplxAppxNorm)
0xFB845FA9,	//0x0e94		VoC_shr32_ri(ACC0,0xfffffff0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xF4396124,	//0x0e96		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xDF014D24,	//0x0e98		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG4,DEFAULT)
0xFFC06580,	//0x0e9a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0e9c		Coolsand_ControlLogicMergeChnlEnhancedDTD
0xDF445FE9,	//0x0e9c		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0F062B80,	//0x0e9e		VoC_jal(Coolsand_ControlLogicCalVarSub)
0x1407DF07,	//0x0ea0		VoC_lw16_d(REG7,0x4264)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x0A864264,	//0x0ea2		VoC_lw16i(REG6,0x24ba)(lo)	|	VoC_lw16_d(REG7,0x4264)(hi)
0xFFC024BA,	//0x0ea4		VoC_NAD	|	VoC_lw16i(REG6,0x24ba)(hi)
0x0FA82B80,	//0x0ea6		VoC_jal(Coolsand_SmoothPeakPower)
0x0F4A2B80,	//0x0ea8		VoC_jal(Coolsand_ControlLogicChnlDecisionEnhanced)
0xFFC0DFA9,	//0x0eaa		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0eac		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0eae		Coolsand_ControlLogicSingleChnlEnhanced
0xE0205FE9,	//0x0eae		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x234727BE,	//0x0eb0		VoC_lw16d_set_inc(REG2,0x2347,0xffffffff)
0x23444520,	//0x0eb2		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L1,REG0,0x2344)
0x24B91404,	//0x0eb4		VoC_lw16_d(REG4,0x24b9)
0x426D1405,	//0x0eb6		VoC_lw16_d(REG5,0x426d)
0x0EC0342C,	//0x0eb8		VoC_bgt16_rr(Coolsand_ControlLogicSingleChnl_L0,REG5,REG4)
0xF6A47041,	//0x0eba		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x426C1402,	//0x0ebc		VoC_lw16_d(REG2,0x426c)
0x0EFE2B00,	//0x0ebe		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0ec0		Coolsand_ControlLogicSingleChnl_L0
0xE0017026,	//0x0ec0		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xC1347002,	//0x0ec2		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x0EFE2B00,	//0x0ec4		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0ec6		Coolsand_ControlLogicSingleChnl_L1
0x4518F020,	//0x0ec6		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L4,REG0,0x2344)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x14042344,	//0x0ec8		VoC_lw16_d(REG4,0x24b9)(lo)	|	VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L4,REG0,0x2344)(hi)
0x140524B9,	//0x0eca		VoC_lw16_d(REG5,0x426d)(lo)	|	VoC_lw16_d(REG4,0x24b9)(hi)
0x34AC426D,	//0x0ecc		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L2,REG5,REG4)(lo)	|	VoC_lw16_d(REG5,0x426d)(hi)
0xF0040ED0,	//0x0ece		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L2,REG5,REG4)(hi)
		//0x0ed0		Coolsand_ControlLogicSingleChnl_L2
0x23476E06,	//0x0ed0		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L3,0x2347)
0xE0047021,	//0x0ed2		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x0EFE2B00,	//0x0ed4		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0ed6		Coolsand_ControlLogicSingleChnl_L3
0xDE107041,	//0x0ed6		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x0EFE2B00,	//0x0ed8		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0eda		Coolsand_ControlLogicSingleChnl_L4
0x4518F060,	//0x0eda		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L7,REG0,0x2344)(lo)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
0x14042344,	//0x0edc		VoC_lw16_d(REG4,0x24b9)(lo)	|	VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L7,REG0,0x2344)(hi)
0x140524B9,	//0x0ede		VoC_lw16_d(REG5,0x426d)(lo)	|	VoC_lw16_d(REG4,0x24b9)(hi)
0x34AC426D,	//0x0ee0		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L5,REG5,REG4)(lo)	|	VoC_lw16_d(REG5,0x426d)(hi)
0xF0040EE4,	//0x0ee2		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L5,REG5,REG4)(hi)
		//0x0ee4		Coolsand_ControlLogicSingleChnl_L5
0x23476E06,	//0x0ee4		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L6,0x2347)
0xE0047061,	//0x0ee6		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0xFFC065D6,	//0x0ee8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x0eea		Coolsand_ControlLogicSingleChnl_L6
0xDE107041,	//0x0eea		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC065D2,	//0x0eec		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x0eee		Coolsand_ControlLogicSingleChnl_L7
0x24B91404,	//0x0eee		VoC_lw16_d(REG4,0x24b9)
0x426D1405,	//0x0ef0		VoC_lw16_d(REG5,0x426d)
0x0EF634AC,	//0x0ef2		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L8,REG5,REG4)
0xFFC07004,	//0x0ef4		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0ef6		Coolsand_ControlLogicSingleChnl_L8
0x23476E06,	//0x0ef6		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L9,0x2347)
0xE0047001,	//0x0ef8		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC065C4,	//0x0efa		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x0efc		Coolsand_ControlLogicSingleChnl_L9
0xDE107041,	//0x0efc		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
		//0x0efe		Coolsand_ControlLogicSingleChnl_End
0x1501DFA9,	//0x0efe		VoC_sw16_d(REG1,0x2346)(lo)	|	VoC_pop16(RA,DEFAULT)
0x15022346,	//0x0f00		VoC_sw16_d(REG2,0x2347)(lo)	|	VoC_sw16_d(REG1,0x2346)(hi)
0x15042347,	//0x0f02		VoC_sw16_d(REG4,0x24b9)(lo)	|	VoC_sw16_d(REG2,0x2347)(hi)
0xE58024B9,	//0x0f04		VoC_return	|	VoC_sw16_d(REG4,0x24b9)(hi)
		//0x0f06		Coolsand_ControlLogicCalVarSub
0xDF465FE9,	//0x0f06		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x42641407,	//0x0f08		VoC_lw16_d(REG7,0x4264)
0x23340A86,	//0x0f0a		VoC_lw16i(REG6,0x2334)
0x0FA82B80,	//0x0f0c		VoC_jal(Coolsand_SmoothPeakPower)
0x23381484,	//0x0f0e		VoC_lw32_d(ACC0,0x2338)
0x23341485,	//0x0f10		VoC_lw32_d(ACC1,0x2334)
0x0FBE2B80,	//0x0f12		VoC_jal(Coolsand_InstantSNR)
0xE0B27187,	//0x0f14		VoC_lw16i_short(REG2,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x23340A80,	//0x0f16		VoC_lw16i(REG0,0x2334)
0x23380A81,	//0x0f18		VoC_lw16i(REG1,0x2338)
0x25201507,	//0x0f1a		VoC_sw16_d(REG7,0x2520)
0x25211502,	//0x0f1c		VoC_sw16_d(REG2,0x2521)
0x21851406,	//0x0f1e		VoC_lw16_d(REG6,0x2185)
0x233E0A87,	//0x0f20		VoC_lw16i(REG7,0x233e)
0x42651402,	//0x0f22		VoC_lw16_d(REG2,0x4265)
0x0FD02B80,	//0x0f24		VoC_jal(Coolsand_OverallNoiseEst)
0x1407DF07,	//0x0f26		VoC_lw16_d(REG7,0x4264)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x0A864264,	//0x0f28		VoC_lw16i(REG6,0x232c)(lo)	|	VoC_lw16_d(REG7,0x4264)(hi)
0xFFC0232C,	//0x0f2a		VoC_NAD	|	VoC_lw16i(REG6,0x232c)(hi)
0x0FA82B80,	//0x0f2c		VoC_jal(Coolsand_SmoothPeakPower)
0x23301484,	//0x0f2e		VoC_lw32_d(ACC0,0x2330)
0x232C1485,	//0x0f30		VoC_lw32_d(ACC1,0x232c)
0x0FBE2B80,	//0x0f32		VoC_jal(Coolsand_InstantSNR)
0xE0B27187,	//0x0f34		VoC_lw16i_short(REG2,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x232C0A80,	//0x0f36		VoC_lw16i(REG0,0x232c)
0x23300A81,	//0x0f38		VoC_lw16i(REG1,0x2330)
0x25201507,	//0x0f3a		VoC_sw16_d(REG7,0x2520)
0x25211502,	//0x0f3c		VoC_sw16_d(REG2,0x2521)
0x21851406,	//0x0f3e		VoC_lw16_d(REG6,0x2185)
0x233C0A87,	//0x0f40		VoC_lw16i(REG7,0x233c)
0x42651402,	//0x0f42		VoC_lw16_d(REG2,0x4265)
0x0FD02B80,	//0x0f44		VoC_jal(Coolsand_OverallNoiseEst)
0xFFC0DFA9,	//0x0f46		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0f48		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0f4a		Coolsand_ControlLogicChnlDecisionEnhanced
0x23301483,	//0x0f4a		VoC_lw32_d(REG67,0x2330)
0xFBFB5FE9,	//0x0f4c		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x42661405,	//0x0f4e		VoC_lw16_d(REG5,0x4266)
0xF401790E,	//0x0f50		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xF58A4DAC,	//0x0f52		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x1485CE7D,	//0x0f54		VoC_lw32_d(ACC1,0x232c)(lo)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0x7BE5232C,	//0x0f56		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_lw32_d(ACC1,0x232c)(hi)
0x36ACE004,	//0x0f58		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L0,ACC1,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xF0240F5C,	//0x0f5a		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L0,ACC1,ACC0)(hi)
		//0x0f5c		Coolsand_ControlLogicChnlDecisionEnhanced_L0
0x23381483,	//0x0f5c		VoC_lw32_d(REG67,0x2338)
0x23401504,	//0x0f5e		VoC_sw16_d(REG4,0x2340)
0x790EFBFB,	//0x0f60		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0x4DACF401,	//0x0f62		VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x4E7DF58A,	//0x0f64		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)
0x1485EFF0,	//0x0f66		VoC_lw32_d(ACC1,0x2334)(lo)	|	VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)
0x14862334,	//0x0f68		VoC_lw32_d(RL6,0x2330)(lo)	|	VoC_lw32_d(ACC1,0x2334)(hi)
0x7BE52330,	//0x0f6a		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_lw32_d(RL6,0x2330)(hi)
0x1483E004,	//0x0f6c		VoC_lw32_d(REG67,0x2330)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x36AC2330,	//0x0f6e		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L1,ACC1,ACC0)(lo)	|	VoC_lw32_d(REG67,0x2330)(hi)
0x642B0F76,	//0x0f70		VoC_bnlt32_rd(Coolsand_ControlLogicChnlDecisionEnhanced_L1,REG67,0x2334)(lo)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L1,ACC1,ACC0)(hi)
0xF0242334,	//0x0f72		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bnlt32_rd(Coolsand_ControlLogicChnlDecisionEnhanced_L1,REG67,0x2334)(hi)
0xFFC07FC0,	//0x0f74		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0f76		Coolsand_ControlLogicChnlDecisionEnhanced_L1
0x23421504,	//0x0f76		VoC_sw16_d(REG4,0x2342)
0x23426E16,	//0x0f78		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L2,0x2342)
0x23406C14,	//0x0f7a		VoC_bez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L2,0x2340)
0x24BA1483,	//0x0f7c		VoC_lw32_d(REG67,0x24ba)
0x426A1405,	//0x0f7e		VoC_lw16_d(REG5,0x426a)
0xF4017BFB,	//0x0f80		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xF58A790E,	//0x0f82		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xCE7DCDAC,	//0x0f84		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x23341485,	//0x0f86		VoC_lw32_d(ACC1,0x2334)
0x36A5FBE5,	//0x0f88		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L2,ACC0,ACC1)(lo)	|	VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)
0xF0200F8E,	//0x0f8a		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L2,ACC0,ACC1)(hi)
0xFFC065D8,	//0x0f8c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicChnlDecisionEnhanced_End)
		//0x0f8e		Coolsand_ControlLogicChnlDecisionEnhanced_L2
0x232C7A06,	//0x0f8e		VoC_bnez32_d(Coolsand_ControlLogicChnlDecisionEnhanced_L3,0x232c)
0x23347A04,	//0x0f90		VoC_bnez32_d(Coolsand_ControlLogicChnlDecisionEnhanced_L3,0x2334)
0xE5D1F060,	//0x0f92		VoC_jump(Coolsand_ControlLogicChnlDecisionEnhanced_End)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
		//0x0f94		Coolsand_ControlLogicChnlDecisionEnhanced_L3
0x23426E0C,	//0x0f94		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L4,0x2342)
0x23406E0A,	//0x0f96		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L4,0x2340)
0x232C1484,	//0x0f98		VoC_lw32_d(ACC0,0x232c)
0x23341485,	//0x0f9a		VoC_lw32_d(ACC1,0x2334)
0x0FA036A5,	//0x0f9c		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L4,ACC0,ACC1)
0xE5C5F060,	//0x0f9e		VoC_jump(Coolsand_ControlLogicChnlDecisionEnhanced_End)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
		//0x0fa0		Coolsand_ControlLogicChnlDecisionEnhanced_L4
0x6E03F040,	//0x0fa0		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_End,0x2528)(lo)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xF0002528,	//0x0fa2		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_End,0x2528)(hi)
		//0x0fa4		Coolsand_ControlLogicChnlDecisionEnhanced_End
0x1500DFA9,	//0x0fa4		VoC_sw16_d(REG0,0x2344)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5802344,	//0x0fa6		VoC_return	|	VoC_sw16_d(REG0,0x2344)(hi)
		//0x0fa8		Coolsand_SmoothPeakPower
0xE0085FE9,	//0x0fa8		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE40959B5,	//0x0faa		VoC_lw16i_short(ACC0_HI,0x40,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG6,DEFAULT)
0x0FB236BD,	//0x0fac		VoC_bngt32_rr(Coolsand_SmoothPeakPower_L0,RL7,ACC1)
0x0FB236A7,	//0x0fae		VoC_bngt32_rr(Coolsand_SmoothPeakPower_L0,ACC0,RL7)
0xE5C7FF3C,	//0x0fb0		VoC_jump(Coolsand_SmoothPeakPower_L1)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
		//0x0fb2		Coolsand_SmoothPeakPower_L0
0xFF2C60E1,	//0x0fb2		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0xF5E27179,	//0x0fb4		VoC_lw16i_short(FORMATX,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xb,DEFAULT)
0x0D422B80,	//0x0fb6		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
		//0x0fb8		Coolsand_SmoothPeakPower_L1
0x0FBB33C4,	//0x0fb8		VoC_bnltz32_r(Coolsand_SmoothPeakPower_L2,ACC0)
0xDFA9FF44,	//0x0fba		VoC_pop16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0fbb		Coolsand_SmoothPeakPower_L2
0xE580DDB4,	//0x0fbc		VoC_return	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x0fbe		Coolsand_InstantSNR
0xFA245FE9,	//0x0fbe		VoC_shr32_ri(ACC0,0x4,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0FC43344,	//0x0fc0		VoC_bnez32_r(Coolsand_InstantSNR_L0,ACC0)
0xE0097028,	//0x0fc2		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x0fc4		Coolsand_InstantSNR_L0
0xE1427F26,	//0x0fc4		VoC_lw16i_short(REG2,0x14,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0C7A2B80,	//0x0fc6		VoC_jal(Coolsand_MSBPos)
0xC2FBF7E7,	//0x0fc8		VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0xFB45FE9D,	//0x0fca		VoC_shr32_ri(ACC1,0xffffffe8,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xDFA97AC5,	//0x0fcc		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x18,DEFAULT)
0xE580E143,	//0x0fce		VoC_return	|	VoC_movreg16(REG3,ACC1_LO,DEFAULT)
		//0x0fd0		Coolsand_OverallNoiseEst
0xE105598C,	//0x0fd0		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xE1045FE9,	//0x0fd2		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xDF445FC3,	//0x0fd4		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xDF405FC7,	//0x0fd6		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x0D492B80,	//0x0fd8		VoC_jal(Coolsand_NoisePSDEst)
0xDF005F87,	//0x0fda		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF045F83,	//0x0fdc		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0x3305D985,	//0x0fde		VoC_bez32_r(Coolsand_OverallNoiseEst_L2,ACC1)(lo)	|	VoC_lw32_p(ACC1,REG0,DEFAULT)
0x70250FF3,	//0x0fe0		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bez32_r(Coolsand_OverallNoiseEst_L2,ACC1)(hi)
0x7006D98D,	//0x0fe2		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,IN_PARALLEL)
0x37ACE204,	//0x0fe4		VoC_bne32_rr(Coolsand_OverallNoiseEst_L0,ACC1,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x20,IN_PARALLEL)
0x349C0FEA,	//0x0fe6		VoC_bngt16_rr(Coolsand_OverallNoiseEst_L0,REG3,REG4)(lo)	|	VoC_bne32_rr(Coolsand_OverallNoiseEst_L0,ACC1,ACC0)(hi)
0x817E0FEA,	//0x0fe8		VoC_add16_rp(REG6,REG5,REG7,DEFAULT)	|	VoC_bngt16_rr(Coolsand_OverallNoiseEst_L0,REG3,REG4)(hi)
		//0x0fea		Coolsand_OverallNoiseEst_L0
0x0FA00A84,	//0x0fea		VoC_lw16i(REG4,0xfa0)
0xFBFDD98D,	//0x0fec		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x0FF234B4,	//0x0fee		VoC_bngt16_rr(Coolsand_OverallNoiseEst_L1,REG6,REG4)
0xDD8DF006,	//0x0ff0		VoC_sw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0ff2		Coolsand_OverallNoiseEst_L1
0xDFA9DC76,	//0x0ff2		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_p(REG6,REG7,DEFAULT)
		//0x0ff3		Coolsand_OverallNoiseEst_L2
0xE580FFC0,	//0x0ff4		VoC_return	|	VoC_NOP
		//0x0ff6		Coolsand_OverallNoiseEstwState
0x21BB1407,	//0x0ff6		VoC_lw16_d(REG7,0x21bb)
0xDFE978FF,	//0x0ff8		VoC_push16(RA,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x21160A80,	//0x0ffa		VoC_lw16i(REG0,0x2116)
0x21280A81,	//0x0ffc		VoC_lw16i(REG1,0x2128)
0xC0794038,	//0x0ffe		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xDFC77064,	//0x1000		VoC_push16(REG7,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x5F40D98C,	//0x1002		VoC_push32(REG01,DEFAULT)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDF44DFC3,	//0x1004		VoC_push32(ACC0,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0x42716C04,	//0x1006		VoC_bez16_d(Coolsand_OverallNoiseEstwState_L0_subL0,0x4271)
0x23464504,	//0x1008		VoC_bne16_rd(Coolsand_OverallNoiseEstwState_L0,REG4,0x2346)
		//0x100a		Coolsand_OverallNoiseEstwState_L0_subL0
0xE0B27186,	//0x100a		VoC_lw16i_short(REG2,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xc,DEFAULT)
0xE1057024,	//0x100c		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x25201506,	//0x100e		VoC_sw16_d(REG6,0x2520)
0x25211502,	//0x1010		VoC_sw16_d(REG2,0x2521)
0x21851406,	//0x1012		VoC_lw16_d(REG6,0x2185)
0x42481402,	//0x1014		VoC_lw16_d(REG2,0x4248)
0x0D492B80,	//0x1016		VoC_jal(Coolsand_NoisePSDEst)
		//0x1018		Coolsand_OverallNoiseEstwState_L0
0xDF045F83,	//0x1018		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xDF84DF00,	//0x101a		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0x23480A80,	//0x101c		VoC_lw16i(REG0,0x2348)
0xD9854020,	//0x101e		VoC_lw32_p(ACC1,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x0A87F80C,	//0x1020		VoC_lw16i(REG7,0x213a)(lo)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1E7213A,	//0x1022		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16i(REG7,0x213a)(hi)
0x103A3305,	//0x1024		VoC_bez32_r(Coolsand_OverallNoiseEstwState_L3,ACC1)
0xD98D7025,	//0x1026		VoC_lw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xE1047006,	//0x1028		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x103037AC,	//0x102a		VoC_bne32_rr(Coolsand_OverallNoiseEstwState_L1,ACC1,ACC0)
0x1030349C,	//0x102c		VoC_bngt16_rr(Coolsand_OverallNoiseEstwState_L1,REG3,REG4)
0xFFC0017E,	//0x102e		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rp(REG6,REG5,REG7,DEFAULT)
		//0x1030		Coolsand_OverallNoiseEstwState_L1
0x1F400A84,	//0x1030		VoC_lw16i(REG4,0x1f40)
0xFBFDD98D,	//0x1032		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x103934B4,	//0x1034		VoC_bngt16_rr(Coolsand_OverallNoiseEstwState_L2,REG6,REG4)
0xDD8D7006,	//0x1036		VoC_sw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xDC76DD85,	//0x1038		VoC_sw16_p(REG6,REG7,DEFAULT)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
		//0x1039		Coolsand_OverallNoiseEstwState_L2
		//0x103a		Coolsand_OverallNoiseEstwState_L3
0x00320A84,	//0x103a		VoC_lw16i(REG4,0x32)
0x3C1CD98C,	//0x103c		VoC_bngt16_rd(Coolsand_OverallNoiseEstwState_L4,REG4,0x2185)(lo)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDD842185,	//0x103e		VoC_sw32_p(ACC0,REG0,DEFAULT)	|	VoC_bngt16_rd(Coolsand_OverallNoiseEstwState_L4,REG4,0x2185)(hi)
		//0x1040		Coolsand_OverallNoiseEstwState_L4
0xE0365984,	//0x1040		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0xE0057044,	//0x1042		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x10483344,	//0x1044		VoC_bnez32_r(Coolsand_OverallNoiseEstwState_L5,ACC0)
0xFFC05D82,	//0x1046		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(REG45,REG0,DEFAULT)
		//0x1048		Coolsand_OverallNoiseEstwState_L5
0xE0345987,	//0x1048		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG0,DEFAULT)
0xFF3B598D,	//0x104a		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x42716C04,	//0x104c		VoC_bez16_d(Coolsand_OverallNoiseEstwState_L7,0x4271)
0x23464514,	//0x104e		VoC_bne16_rd(Coolsand_OverallNoiseEstwState_End,REG4,0x2346)
		//0x1050		Coolsand_OverallNoiseEstwState_L7
0x362BFBFB,	//0x1050		VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_L6,ACC1,REG67)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xFF2F1056,	//0x1052		VoC_movreg32(RL7,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_L6,ACC1,REG67)(hi)
0xFFC065CC,	//0x1054		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_OverallNoiseEstwState_End)
		//0x1056		Coolsand_OverallNoiseEstwState_L6
0xE325790E,	//0x1056		VoC_lw16i_short(REG5,0x32,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xF4014DAC,	//0x1058		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0xF58A4E7D,	//0x105a		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0x3625FFC0,	//0x105c		VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_End,ACC0,ACC1)(lo)	|	VoC_NOP
0xFF2F1060,	//0x105e		VoC_movreg32(RL7,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_End,ACC0,ACC1)(hi)
		//0x1060		Coolsand_OverallNoiseEstwState_End
0xDD87DFA9,	//0x1060		VoC_sw32_p(RL7,REG0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1062		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1063		Cooland_InstantPower
0x0D302B80,	//0x1064		VoC_jal(Coolsand_CmplxAppxNorm)
0xF4397B84,	//0x1066		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0xDFA96120,	//0x1068		VoC_pop16(RA,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xE580CC04,	//0x106a		VoC_return	|	VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)
		//0x106c		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL
0x1407DFE9,	//0x106c		VoC_lw16_d(REG7,0x21bb)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A8221BB,	//0x106e		VoC_lw16i(REG2,0x2080)(lo)	|	VoC_lw16_d(REG7,0x21bb)(hi)
0x0A832080,	//0x1070		VoC_lw16i(REG3,0x208a)(lo)	|	VoC_lw16i(REG2,0x2080)(hi)
0xC0BA208A,	//0x1072		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_lw16i(REG3,0x208a)(hi)
0x5820C0FB,	//0x1074		VoC_lw16_p(REG0,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x5831D824,	//0x1076		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_lw16_p(REG4,REG2,IN_PARALLEL)
0x2B80D835,	//0x1078		VoC_jal(Coolsand_CmplxAppxNorm)(lo)	|	VoC_lw16_p(REG5,REG3,IN_PARALLEL)
0xFB840D30,	//0x107a		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm)(hi)
0xF4396126,	//0x107c		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xFFC0CDB4,	//0x107e		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG6,DEFAULT)
0xFA44FBC4,	//0x1080		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xDF44FFC0,	//0x1082		VoC_push32(ACC0,DEFAULT)	|	VoC_NOP
0x111B2B80,	//0x1084		VoC_jal(Coolsand_EchoPSDEst_MFCOHFFix)
0x249E0A80,	//0x1086		VoC_lw16i(REG0,0x249e)
0x21BB1407,	//0x1088		VoC_lw16_d(REG7,0x21bb)
0x24B00A81,	//0x108a		VoC_lw16i(REG1,0x24b0)
0xC07978FF,	//0x108c		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xDF07C038,	//0x108e		VoC_pop32(RL7,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xFA11D981,	//0x1090		VoC_shr32_ri(REG23,0x2,DEFAULT)	|	VoC_lw32_p(REG23,REG0,DEFAULT)
0xDF4772C4,	//0x1092		VoC_push32(RL7,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x16,DEFAULT)
0x0D982B80,	//0x1094		VoC_jal(Coolsand_ShrinkBit)
0x3344F344,	//0x1096		VoC_bnez32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L0,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x1a,DEFAULT)
0xF324109C,	//0x1098		VoC_lw16i_short(REG4,0x19,DEFAULT)	|	VoC_bnez32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L0,ACC0)(hi)
0xE0097028,	//0x109a		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x109c		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L0
0xDF0342E4,	//0x109c		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)
0xFF1E7EA3,	//0x109e		VoC_movreg32(RL6,REG67,IN_PARALLEL)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
0xDFC47A83,	//0x10a0		VoC_push16(REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFBF37BF4,	//0x10a2		VoC_shr32_ri(REG67,0xfffffffe,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x3287CBA7,	//0x10a4		VoC_bgtz32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1,RL7)(lo)	|	VoC_sub32_rr(RL7,RL6,ACC0,DEFAULT)
0x702E10AA,	//0x10a6		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_bgtz32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1,RL7)(hi)
0xFFC0E00F,	//0x10a8		VoC_NAD	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
		//0x10aa		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1
0x21BB1402,	//0x10aa		VoC_lw16_d(REG2,0x21bb)
0xFA2778FA,	//0x10ac		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x21600A83,	//0x10ae		VoC_lw16i(REG3,0x2160)
0xFBA740D3,	//0x10b0		VoC_shr32_ri(RL7,0xfffffff4,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0x424E1401,	//0x10b2		VoC_lw16_d(REG1,0x424e)
0xFA67599D,	//0x10b4		VoC_shr32_ri(RL7,0xc,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG3,DEFAULT)
0x7BA2CBEA,	//0x10b6		VoC_shr32_ri(REG45,0xfffffff4,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)
0x7A5AFF2C,	//0x10b8		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x790CF439,	//0x10ba		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)
0xCE21F5C2,	//0x10bc		VoC_mac32_rr(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0xDF84CE69,	//0x10be		VoC_pop16(REG4,DEFAULT)	|	VoC_macX_rr(REG5,REG1,DEFAULT)
0x23630A80,	//0x10c0		VoC_lw16i(REG0,0x2363)
0x21BB0700,	//0x10c2		VoC_add16_rd(REG0,REG0,0x21bb)
0xFA64FBA4,	//0x10c4		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xE00F7EA4,	//0x10c6		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0x00000ACE,	//0x10c8		VoC_lw16i(RL7_LO,0x8000)
0xFF47493C,	//0x10ca		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xE1027A84,	//0x10cc		VoC_lw16i_short(REG2,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x00800A8E,	//0x10ce		VoC_lw16i(RL7_LO,0x80)
0xFF265C08,	//0x10d0		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B80C9BE,	//0x10d2		VoC_jal(Coolsand_MSBPos)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0xF1C00C7A,	//0x10d4		VoC_lw16i_short(REG0,0xe,DEFAULT)	|	VoC_jal(Coolsand_MSBPos)(hi)
0x1401C2C3,	//0x10d6		VoC_lw16_d(REG1,0x4250)(lo)	|	VoC_sub16_rr(REG3,REG3,REG0,DEFAULT)
0xFE194250,	//0x10d8		VoC_shr16_rr(REG1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x4250)(hi)
0xF841F8C1,	//0x10da		VoC_shr16_ri(REG1,0x8,DEFAULT)	|	VoC_shr16_ri(REG1,0xfffffff8,DEFAULT)
0x00800A82,	//0x10dc		VoC_lw16i(REG2,0x80)
0x0A81C28C,	//0x10de		VoC_lw16i(REG1,0x24b0)(lo)	|	VoC_sub16_rr(REG4,REG2,REG1,DEFAULT)
0x070924B0,	//0x10e0		VoC_add16_rd(REG1,REG1,0x21bb)(lo)	|	VoC_lw16i(REG1,0x24b0)(hi)
0x6E0F21BB,	//0x10e2		VoC_bnez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L3,0x4271)(lo)	|	VoC_add16_rd(REG1,REG1,0x21bb)(hi)
0xF8F44271,	//0x10e4		VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)	|	VoC_bnez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L3,0x4271)(hi)
0x42513824,	//0x10e6		VoC_bgt16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L2,REG4,0x4251)
0x42511404,	//0x10e8		VoC_lw16_d(REG4,0x4251)
		//0x10ea		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L2
0x6C2DF814,	//0x10ea		VoC_bez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,0x2346)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x0A842346,	//0x10ec		VoC_lw16i(REG4,0x7f)(lo)	|	VoC_bez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,0x2346)(hi)
0x2B00007F,	//0x10ee		VoC_jump_lg(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End)(lo)	|	VoC_lw16i(REG4,0x7f)(hi)
0xFFC01118,	//0x10f0		VoC_NAD	|	VoC_jump_lg(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End)(hi)
		//0x10f2		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L3
0xE0137042,	//0x10f2		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x42590A85,	//0x10f4		VoC_lw16i(REG5,0x4259)
0x21BB072D,	//0x10f6		VoC_add16_rd(REG5,REG5,0x21bb)
0x23464422,	//0x10f8		VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L4,REG2,0x2346)
0xFFC05853,	//0x10fa		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG3,REG5,DEFAULT)
		//0x10fc		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L4
0x4251081E,	//0x10fc		VoC_mult16_rd(REG6,REG3,0x4251)
0xE02778F4,	//0x10fe		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0x11043426,	//0x1100		VoC_bgt16_rr(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L5,REG4,REG6)
0xC13CE0C4,	//0x1102		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
		//0x1104		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L5
0xE1027814,	//0x1104		VoC_lw16i_short(REG2,0x10,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x110C3426,	//0x1106		VoC_bgt16_rr(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L7,REG4,REG6)
0xFFC0C524,	//0x1108		VoC_NOP	|	VoC_mult16_rr(REG4,REG4,REG4,DEFAULT)
0xFFC07824,	//0x110a		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x4,DEFAULT)
		//0x110c		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L7
0xE0337022,	//0x110c		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x23464432,	//0x110e		VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L6,REG2,0x2346)
0x007F0A84,	//0x1110		VoC_lw16i(REG4,0x7f)
0xFFC065C6,	//0x1112		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End)
		//0x1114		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L6
0x23464423,	//0x1114		VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,REG3,0x2346)
0x007F0A84,	//0x1116		VoC_lw16i(REG4,0x7f)
		//0x1118		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End
0xDC14DFA9,	//0x1118		VoC_sw16_p(REG4,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x111a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x111b		Coolsand_EchoPSDEst_MFCOHFFix
0x21BB1402,	//0x111c		VoC_lw16_d(REG2,0x21bb)
0xF8EA5F42,	//0x111e		VoC_shr16_ri(REG2,0xfffffffd,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x1EA80A86,	//0x1120		VoC_lw16i(REG6,0x1ea8)
0x1EF00A87,	//0x1122		VoC_lw16i(REG7,0x1ef0)
0xC1D7C196,	//0x1124		VoC_add16_rr(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0xF0065860,	//0x1126		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG6,DEFAULT)
0xF0075871,	//0x1128		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG7,DEFAULT)
0x0D302B80,	//0x112a		VoC_jal(Coolsand_CmplxAppxNorm)
0xF4196101,	//0x112c		VoC_lw16i_short(FORMAT32,0x3,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0x0A80CC4C,	//0x112e		VoC_lw16i(REG0,0x236c)(lo)	|	VoC_multf32_rr(ACC0,REG1,REG1,DEFAULT)
0x1401236C,	//0x1130		VoC_lw16_d(REG1,0x21bb)(lo)	|	VoC_lw16i(REG0,0x236c)(hi)
0x78F921BB,	//0x1132		VoC_shr16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG1,0x21bb)(hi)
0x4008FBB4,	//0x1134		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff6,IN_PARALLEL)
0x1401FA54,	//0x1136		VoC_lw16_d(REG1,0x424d)(lo)	|	VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)
0xD985424D,	//0x1138		VoC_lw32_p(ACC1,REG0,DEFAULT)	|	VoC_lw16_d(REG1,0x424d)(hi)
0xFF197F27,	//0x113a		VoC_movreg32(REG23,REG67,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x7BB2CBEA,	//0x113c		VoC_shr32_ri(REG45,0xfffffff6,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)
0x7A4AFF2C,	//0x113e		VoC_shr32_ri(REG45,0x9,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x790CF439,	//0x1140		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)
0xCE21F5C2,	//0x1142		VoC_mac32_rr(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0xFFC0CE69,	//0x1144		VoC_NOP	|	VoC_macX_rr(REG5,REG1,DEFAULT)
0xF4297BB4,	//0x1146		VoC_lw16i_short(FORMAT32,0x5,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)
0xFA547F47,	//0x1148		VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xFF265F02,	//0x114a		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xE0005D84,	//0x114c		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x21BB1407,	//0x114e		VoC_lw16_d(REG7,0x21bb)
0xF8E7422D,	//0x1150		VoC_shr16_ri(REG7,0xfffffffc,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)
0x237E1808,	//0x1152		VoC_lw16i_set_inc(REG0,0x237e,0x2)
0x240E1809,	//0x1154		VoC_lw16i_set_inc(REG1,0x240e,0x2)
0xC0794038,	//0x1156		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x424D1407,	//0x1158		VoC_lw16_d(REG7,0x424d)
0x11B32C10,	//0x115a		VoC_loop_i(0x0,0x8)
0x995D9914,	//0x115c		VoC_multf32_rp(ACC1,REG5,REG3,DEFAULT)	|	VoC_multf32_rp(ACC0,REG4,REG2,DEFAULT)
0xFBB5FBB4,	//0x115e		VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)
0xFA557A54,	//0x1160		VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xa,DEFAULT)
0xCB2E1B1C,	//0x1162		VoC_sub32_rr(RL6,ACC0,ACC1,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,DEFAULT)
0xFBB49B55,	//0x1164		VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG5,REG2,DEFAULT)
0xDF427BB5,	//0x1166		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)
0xFA557A54,	//0x1168		VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xa,DEFAULT)
0xDF41492D,	//0x116a		VoC_push32(REG23,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0xFBB57BB6,	//0x116c		VoC_shr32_ri(ACC1,0xfffffff6,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffff6,DEFAULT)
0xFA557A56,	//0x116e		VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xa,DEFAULT)
0xF4391581,	//0x1170		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_sub32_rp(REG23,RL6,REG0,DEFAULT)
0xF5C2154A,	//0x1172		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_sub32_rp(REG45,ACC1,REG1,DEFAULT)
0xFBB27BB1,	//0x1174		VoC_shr32_ri(REG45,0xfffffff6,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffff6,DEFAULT)
0xFA4A7A49,	//0x1176		VoC_shr32_ri(REG45,0x9,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0x9,DEFAULT)
0xF90C790A,	//0x1178		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCD3D4CBC,	//0x117a		VoC_multf32_rr(ACC1,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG7,DEFAULT)
0xCEAF4E5F,	//0x117c		VoC_macX_rr(REG5,REG7,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG7,DEFAULT)
0x7BB4FFC0,	//0x117e		VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)	|	VoC_NOP
0x7A54FBB5,	//0x1180		VoC_shr32_ri(ACC0,0xa,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff6,IN_PARALLEL)
0x9104FA55,	//0x1182		VoC_add32_rp(ACC0,ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)
0x7BB4914D,	//0x1184		VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)	|	VoC_add32_rp(ACC1,ACC1,REG1,DEFAULT)
0x7A54FBB5,	//0x1186		VoC_shr32_ri(ACC0,0xa,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff6,IN_PARALLEL)
0xFFC0FA55,	//0x1188		VoC_NOP	|	VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)
0xFA2C5DC4,	//0x118a		VoC_shr32_ri(ACC0,0x5,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xFA2D5DCD,	//0x118c		VoC_shr32_ri(ACC1,0x5,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0xFB7D7B7C,	//0x118e		VoC_shr32_ri(ACC1,0xffffffef,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffef,DEFAULT)
0xFA8D7A8C,	//0x1190		VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x11,DEFAULT)
0xFAFC7F22,	//0x1192		VoC_shr32_ri(ACC0,0x1f,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x7F2EE562,	//0x1194		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_xor32_rr(REG45,ACC0,DEFAULT)
0x656EFAFD,	//0x1196		VoC_xor32_rr(RL6,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x1f,IN_PARALLEL)
0xCBADCAA4,	//0x1198		VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)	|	VoC_sub32_rr(ACC0,REG45,ACC0,IN_PARALLEL)
0xFB7D7B7C,	//0x119a		VoC_shr32_ri(ACC1,0xffffffef,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffef,DEFAULT)
0xFA8D7A8C,	//0x119c		VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x11,DEFAULT)
0x11A23625,	//0x119e		VoC_bgt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L0,ACC0,ACC1)
0xFF257F2C,	//0x11a0		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x11a2		Coolsand_EchoPSDEst_MFCOHFFix_L0
0xFF2A7F26,	//0x11a2		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBFD7BDC,	//0x11a4		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffb,DEFAULT)
0xC9554B34,	//0x11a6		VoC_add32_rr(ACC1,ACC1,REG45,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFA1D7A2C,	//0x11a8		VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x5,DEFAULT)
0xFB7CC92C,	//0x11aa		VoC_shr32_ri(ACC0,0xffffffef,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xF4017A8C,	//0x11ac		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x11,DEFAULT)
0xFF3C6106,	//0x11ae		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x5F01CE36,	//0x11b0		VoC_pop32(REG23,DEFAULT)	|	VoC_mac32_rr(REG6,REG6,DEFAULT)
0x5F02F429,	//0x11b2		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x5,IN_PARALLEL)
		//0x11b3		VoC_endloop0
0x0A80FF27,	//0x11b4		VoC_lw16i(REG0,0x24d0)(lo)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0x0A8124D0,	//0x11b6		VoC_lw16i(REG1,0x24e2)(lo)	|	VoC_lw16i(REG0,0x24d0)(hi)
0x0A8224E2,	//0x11b8		VoC_lw16i(REG2,0x236c)(lo)	|	VoC_lw16i(REG1,0x24e2)(hi)
0x1404236C,	//0x11ba		VoC_lw16_d(REG4,0x21bb)(lo)	|	VoC_lw16i(REG2,0x236c)(hi)
0x704321BB,	//0x11bc		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_lw16_d(REG4,0x21bb)(hi)
0x4020F8FC,	//0x11be		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)
0xC0A2C061,	//0x11c0		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xD98CD986,	//0x11c2		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0x1404D995,	//0x11c4		VoC_lw16_d(REG4,0x2346)(lo)	|	VoC_lw32_p(ACC1,REG2,DEFAULT)
0x359C2346,	//0x11c6		VoC_bne16_rr(Coolsand_EchoPSDEst_MFCOHFFix_L4,REG3,REG4)(lo)	|	VoC_lw16_d(REG4,0x2346)(hi)
0x3306120C,	//0x11c8		VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L4,RL6)(lo)	|	VoC_bne16_rr(Coolsand_EchoPSDEst_MFCOHFFix_L4,REG3,REG4)(hi)
0xDF47120C,	//0x11ca		VoC_push32(RL7,DEFAULT)	|	VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L4,RL6)(hi)
0xDF467A24,	//0x11cc		VoC_push32(RL6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x4,DEFAULT)
0x11D23344,	//0x11ce		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L1,ACC0)
0xE0097028,	//0x11d0		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x11d2		Coolsand_EchoPSDEst_MFCOHFFix_L1
0xE1227F26,	//0x11d2		VoC_lw16i_short(REG2,0x12,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0C7A2B80,	//0x11d4		VoC_jal(Coolsand_MSBPos)
0xFF447107,	//0x11d6		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0xE01842FB,	//0x11d8		VoC_lw16i_short(ACC0_LO,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)
0xFBAC7E9D,	//0x11da		VoC_shr32_ri(ACC0,0xfffffff5,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xE0027BBD,	//0x11dc		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff7,DEFAULT)
0xDF007A4D,	//0x11de		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x9,DEFAULT)
0x11E336AC,	//0x11e0		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L2,ACC1,ACC0)
0xF0A4F102,	//0x11e2		VoC_lw16i_short(REG4,0x5,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x11e3		Coolsand_EchoPSDEst_MFCOHFFix_L2
0xFA307E95,	//0x11e4		VoC_shr32_ri(REG01,0x6,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG2,DEFAULT)
0xFB857B80,	//0x11e6		VoC_shr32_ri(ACC1,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffff0,DEFAULT)
0xC3146163,	//0x11e8		VoC_sub16_rr(REG4,REG4,REG2,IN_PARALLEL)	|	VoC_movreg16(REG3,ACC1_HI,DEFAULT)
0xF6994C58,	//0x11ea		VoC_movreg16(FORMAT32,REG4,IN_PARALLEL)	|	VoC_multf32_rr(REG01,REG1,REG3,DEFAULT)
0x42581403,	//0x11ec		VoC_lw16_d(REG3,0x4258)
0xF4097BC0,	//0x11ee		VoC_lw16i_short(FORMAT32,0x1,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffff8,DEFAULT)
0xF5927A38,	//0x11f0		VoC_lw16i_short(FORMATX,0xfffffff2,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0x7,DEFAULT)
0xCC1CF908,	//0x11f2		VoC_multf32_rr(ACC0,REG0,REG3,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xDF074E4B,	//0x11f4		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_macX_rr(REG1,REG3,DEFAULT)
0x249E0A80,	//0x11f6		VoC_lw16i(REG0,0x249e)
0x21BB1404,	//0x11f8		VoC_lw16_d(REG4,0x21bb)
0xF8FC7BC4,	//0x11fa		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xC0207A44,	//0x11fc		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0x5986FF25,	//0x11fe		VoC_lw32_p(RL6,REG0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x36B5FBF5,	//0x1200		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L3,RL6,ACC1)(lo)	|	VoC_shr32_ri(ACC1,0xfffffffe,IN_PARALLEL)
0xFA161206,	//0x1202		VoC_shr32_ri(RL6,0x2,DEFAULT)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L3,RL6,ACC1)(hi)
0xFFC07F34,	//0x1204		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x1206		Coolsand_EchoPSDEst_MFCOHFFix_L3
0x12383344,	//0x1206		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L7,ACC0)
0xE0097028,	//0x1208		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
0x12382B00,	//0x120a		VoC_jump_lg(Coolsand_EchoPSDEst_MFCOHFFix_L7)
		//0x120c		Coolsand_EchoPSDEst_MFCOHFFix_L4
0x708AFF2E,	//0x120c		VoC_lw16i_short(ACC1_LO,0x4,DEFAULT)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0x36B5E00B,	//0x120e		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL6,ACC1)(lo)	|	VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)
0x33471216,	//0x1210		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL7)(lo)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL6,ACC1)(hi)
0x700F1216,	//0x1212		VoC_lw16i_short(RL7_HI,0x0,DEFAULT)	|	VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL7)(hi)
0xFFC0E01E,	//0x1214		VoC_NAD	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
		//0x1216		Coolsand_EchoPSDEst_MFCOHFFix_L5
0x121C3346,	//0x1216		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L6,RL6)
0x23466C04,	//0x1218		VoC_bez16_d(Coolsand_EchoPSDEst_MFCOHFFix_L6,0x2346)
0xFFC07F47,	//0x121a		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
		//0x121c		Coolsand_EchoPSDEst_MFCOHFFix_L6
0xFF3572C2,	//0x121c		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x16,DEFAULT)
0x0C7A2B80,	//0x121e		VoC_jal(Coolsand_MSBPos)
0x0A80F164,	//0x1220		VoC_lw16i(REG0,0x249e)(lo)	|	VoC_lw16i_short(REG4,0xb,DEFAULT)
0x1407249E,	//0x1222		VoC_lw16_d(REG7,0x21bb)(lo)	|	VoC_lw16i(REG0,0x249e)(hi)
0x42E321BB,	//0x1224		VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16_d(REG7,0x21bb)(hi)
0x7E9FF8FF,	//0x1226		VoC_shr32_rr(RL7,REG3,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)
0x7BC7C038,	//0x1228		VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)
0x7A47E009,	//0x122a		VoC_shr32_ri(RL7,0x8,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
0x3307E018,	//0x122c		VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL7)(lo)	|	VoC_lw16i_short(ACC0_LO,0x1,IN_PARALLEL)
0x7F3C1238,	//0x122e		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL7)(hi)
0x7BF5FF3D,	//0x1230		VoC_shr32_ri(ACC1,0xfffffffe,DEFAULT)	|	VoC_movreg32(ACC1,RL7,IN_PARALLEL)
0x36B5D986,	//0x1232		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL6,ACC1)(lo)	|	VoC_lw32_p(RL6,REG0,IN_PARALLEL)
0xFA161238,	//0x1234		VoC_shr32_ri(RL6,0x2,DEFAULT)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL6,ACC1)(hi)
0xFFC07F34,	//0x1236		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x1238		Coolsand_EchoPSDEst_MFCOHFFix_L7
0x21BB1407,	//0x1238		VoC_lw16_d(REG7,0x21bb)
0xF8FF5D84,	//0x123a		VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x236C0A81,	//0x123c		VoC_lw16i(REG1,0x236c)
0x24E20A82,	//0x123e		VoC_lw16i(REG2,0x24e2)
0x24D00A83,	//0x1240		VoC_lw16i(REG3,0x24d0)
0xC0BA4079,	//0x1242		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x1486C0FB,	//0x1244		VoC_lw32_d(RL6,0x4256)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x598D4256,	//0x1246		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw32_d(RL6,0x4256)(hi)
0x6E08FBE6,	//0x1248		VoC_bnez16_d(Coolsand_EchoPSDEst_MFCOHFFix_End,0x2346)(lo)	|	VoC_shr32_ri(RL6,0xfffffffc,IN_PARALLEL)
0x36AE2346,	//0x124a		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC1,RL6)(lo)	|	VoC_bnez16_d(Coolsand_EchoPSDEst_MFCOHFFix_End,0x2346)(hi)
0x54241251,	//0x124c		VoC_bngt32_rd(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC0,0x4256)(lo)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC1,RL6)(hi)
0xDD954256,	//0x124e		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_bngt32_rd(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC0,0x4256)(hi)
0xDFA9DD9C,	//0x1250		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_p(ACC0,REG3,DEFAULT)
		//0x1251		Coolsand_EchoPSDEst_MFCOHFFix_End
0xE580FFC0,	//0x1252		VoC_return	|	VoC_NOP
		//0x1254		Coolsand_ControlLogicDTD
0x0A80DFE9,	//0x1254		VoC_lw16i(REG0,0x1e68)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A811E68,	//0x1256		VoC_lw16i(REG1,0x1e78)(lo)	|	VoC_lw16i(REG0,0x1e68)(hi)
0x07001E78,	//0x1258		VoC_add16_rd(REG0,REG0,0x214d)(lo)	|	VoC_lw16i(REG1,0x1e78)(hi)
0x0709214D,	//0x125a		VoC_add16_rd(REG1,REG1,0x214d)(lo)	|	VoC_add16_rd(REG0,REG0,0x214d)(hi)
0xD800214D,	//0x125c		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x214d)(hi)
0x2B80D811,	//0x125e		VoC_jal(Cooland_InstantPower)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xFF271063,	//0x1260		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_jal(Cooland_InstantPower)(hi)
0xF5C270F9,	//0x1262		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x7,DEFAULT)
0x25040A81,	//0x1264		VoC_lw16i(REG1,0x2504)
0x21430709,	//0x1266		VoC_add16_rd(REG1,REG1,0x2143)
0x426E1401,	//0x1268		VoC_lw16_d(REG1,0x426e)
0xFFC0598C,	//0x126a		VoC_NAD(IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0x0D422B80,	//0x126c		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0x12723344,	//0x126e		VoC_bnez32_r(Coolsand_ControlLogicDTD_L0,ACC0)
0xE0097028,	//0x1270		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x1272		Coolsand_ControlLogicDTD_L0
0x20800A80,	//0x1272		VoC_lw16i(REG0,0x2080)
0x208A0A81,	//0x1274		VoC_lw16i(REG1,0x208a)
0x214D0700,	//0x1276		VoC_add16_rd(REG0,REG0,0x214d)
0x214D0709,	//0x1278		VoC_add16_rd(REG1,REG1,0x214d)
0xD811D800,	//0x127a		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x25040A82,	//0x127c		VoC_lw16i(REG2,0x2504)
0x21430712,	//0x127e		VoC_add16_rd(REG2,REG2,0x2143)
0xDD94FFC0,	//0x1280		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x10632B80,	//0x1282		VoC_jal(Cooland_InstantPower)
0x70F9FF27,	//0x1284		VoC_lw16i_short(FORMAT32,0x7,DEFAULT)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0A81F5C2,	//0x1286		VoC_lw16i(REG1,0x2508)(lo)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0x07092508,	//0x1288		VoC_add16_rd(REG1,REG1,0x2143)(lo)	|	VoC_lw16i(REG1,0x2508)(hi)
0x14012143,	//0x128a		VoC_lw16_d(REG1,0x426e)(lo)	|	VoC_add16_rd(REG1,REG1,0x2143)(hi)
0xD98C426E,	//0x128c		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw16_d(REG1,0x426e)(hi)
0x0D422B80,	//0x128e		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0x12943344,	//0x1290		VoC_bnez32_r(Coolsand_ControlLogicDTD_L1,ACC0)
0xE0097028,	//0x1292		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x1294		Coolsand_ControlLogicDTD_L1
0x1E680A80,	//0x1294		VoC_lw16i(REG0,0x1e68)
0x1E780A81,	//0x1296		VoC_lw16i(REG1,0x1e78)
0x214D0700,	//0x1298		VoC_add16_rd(REG0,REG0,0x214d)
0x214D0709,	//0x129a		VoC_add16_rd(REG1,REG1,0x214d)
0xD811D800,	//0x129c		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x20800A82,	//0x129e		VoC_lw16i(REG2,0x2080)
0x208A0A83,	//0x12a0		VoC_lw16i(REG3,0x208a)
0x214D0712,	//0x12a2		VoC_add16_rd(REG2,REG2,0x214d)
0x214D071B,	//0x12a4		VoC_add16_rd(REG3,REG3,0x214d)
0xD833D822,	//0x12a6		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xC2C94210,	//0x12a8		VoC_sub16_rr(REG1,REG3,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)
0x25080A82,	//0x12aa		VoC_lw16i(REG2,0x2508)
0x21430712,	//0x12ac		VoC_add16_rd(REG2,REG2,0x2143)
0xDD94DF40,	//0x12ae		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x10632B80,	//0x12b0		VoC_jal(Cooland_InstantPower)
0x70F9FF27,	//0x12b2		VoC_lw16i_short(FORMAT32,0x7,DEFAULT)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0A81F5C2,	//0x12b4		VoC_lw16i(REG1,0x250c)(lo)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0x0709250C,	//0x12b6		VoC_add16_rd(REG1,REG1,0x2143)(lo)	|	VoC_lw16i(REG1,0x250c)(hi)
0x14012143,	//0x12b8		VoC_lw16_d(REG1,0x426e)(lo)	|	VoC_add16_rd(REG1,REG1,0x2143)(hi)
0xD98C426E,	//0x12ba		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw16_d(REG1,0x426e)(hi)
0x0D422B80,	//0x12bc		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0x12C23344,	//0x12be		VoC_bnez32_r(Coolsand_ControlLogicDTD_L2,ACC0)
0xE0097028,	//0x12c0		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x12c2		Coolsand_ControlLogicDTD_L2
0x250C0A82,	//0x12c2		VoC_lw16i(REG2,0x250c)
0x21430712,	//0x12c4		VoC_add16_rd(REG2,REG2,0x2143)
0xDD94FFC0,	//0x12c6		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x25040A82,	//0x12c8		VoC_lw16i(REG2,0x2504)
0x21430712,	//0x12ca		VoC_add16_rd(REG2,REG2,0x2143)
0xD995FFC0,	//0x12cc		VoC_lw32_p(ACC1,REG2,DEFAULT)	|	VoC_NOP
0x25100A82,	//0x12ce		VoC_lw16i(REG2,0x2510)
0x21430712,	//0x12d0		VoC_add16_rd(REG2,REG2,0x2143)
0xD994FFC0,	//0x12d2		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x0FBE2B80,	//0x12d4		VoC_jal(Coolsand_InstantSNR)
0xE0727107,	//0x12d6		VoC_lw16i_short(REG2,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x25040A80,	//0x12d8		VoC_lw16i(REG0,0x2504)
0x25100A81,	//0x12da		VoC_lw16i(REG1,0x2510)
0x21430700,	//0x12dc		VoC_add16_rd(REG0,REG0,0x2143)
0x21430709,	//0x12de		VoC_add16_rd(REG1,REG1,0x2143)
0x25201507,	//0x12e0		VoC_sw16_d(REG7,0x2520)
0x25211502,	//0x12e2		VoC_sw16_d(REG2,0x2521)
0x21851406,	//0x12e4		VoC_lw16_d(REG6,0x2185)
0x25140A87,	//0x12e6		VoC_lw16i(REG7,0x2514)
0x2143073F,	//0x12e8		VoC_add16_rd(REG7,REG7,0x2143)
0x426E1402,	//0x12ea		VoC_lw16_d(REG2,0x426e)
0x0FD02B80,	//0x12ec		VoC_jal(Coolsand_OverallNoiseEst)
0xF4397000,	//0x12ee		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x1E680A82,	//0x12f0		VoC_lw16i(REG2,0x1e68)
0x1E780A83,	//0x12f2		VoC_lw16i(REG3,0x1e78)
0x214D0712,	//0x12f4		VoC_add16_rd(REG2,REG2,0x214d)
0x214D071B,	//0x12f6		VoC_add16_rd(REG3,REG3,0x214d)
0xD833D822,	//0x12f8		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x20800A84,	//0x12fa		VoC_lw16i(REG4,0x2080)
0x208A0A85,	//0x12fc		VoC_lw16i(REG5,0x208a)
0x214D0724,	//0x12fe		VoC_add16_rd(REG4,REG4,0x214d)
0x214D072D,	//0x1300		VoC_add16_rd(REG5,REG5,0x214d)
0xD855D844,	//0x1302		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xFFC0422D,	//0x1304		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)
0x14022B80,	//0x1306		VoC_jal(Coolsand_CmplxMul)
0xF5C270F9,	//0x1308		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x7,DEFAULT)
0x426E1401,	//0x130a		VoC_lw16_d(REG1,0x426e)
0xFF2F7F26,	//0x130c		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x24F40A82,	//0x130e		VoC_lw16i(REG2,0x24f4)
0x24F80A83,	//0x1310		VoC_lw16i(REG3,0x24f8)
0x21430712,	//0x1312		VoC_add16_rd(REG2,REG2,0x2143)
0x2143071B,	//0x1314		VoC_add16_rd(REG3,REG3,0x2143)
0xD99DD994,	//0x1316		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0x14182B80,	//0x1318		VoC_jal(Coolsand_Double_FirstOrderIIRSmooth2)
0xF4395F02,	//0x131a		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0x24F40A82,	//0x131c		VoC_lw16i(REG2,0x24f4)
0x24F80A83,	//0x131e		VoC_lw16i(REG3,0x24f8)
0x21430712,	//0x1320		VoC_add16_rd(REG2,REG2,0x2143)
0x2143071B,	//0x1322		VoC_add16_rd(REG3,REG3,0x2143)
0xDD9DDD94,	//0x1324		VoC_sw32_p(ACC1,REG3,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0x1E680A82,	//0x1326		VoC_lw16i(REG2,0x1e68)
0x1E780A83,	//0x1328		VoC_lw16i(REG3,0x1e78)
0x214D0712,	//0x132a		VoC_add16_rd(REG2,REG2,0x214d)
0x214D071B,	//0x132c		VoC_add16_rd(REG3,REG3,0x214d)
0xD833D822,	//0x132e		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x14022B80,	//0x1330		VoC_jal(Coolsand_CmplxMul)
0xF5C270F9,	//0x1332		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x7,DEFAULT)
0x426E1401,	//0x1334		VoC_lw16_d(REG1,0x426e)
0xFF2F7F26,	//0x1336		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x24FC0A82,	//0x1338		VoC_lw16i(REG2,0x24fc)
0x25000A83,	//0x133a		VoC_lw16i(REG3,0x2500)
0x21430712,	//0x133c		VoC_add16_rd(REG2,REG2,0x2143)
0x2143071B,	//0x133e		VoC_add16_rd(REG3,REG3,0x2143)
0xD99DD994,	//0x1340		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0x14182B80,	//0x1342		VoC_jal(Coolsand_Double_FirstOrderIIRSmooth2)
0x24FC0A82,	//0x1344		VoC_lw16i(REG2,0x24fc)
0x25000A83,	//0x1346		VoC_lw16i(REG3,0x2500)
0x21430712,	//0x1348		VoC_add16_rd(REG2,REG2,0x2143)
0x2143071B,	//0x134a		VoC_add16_rd(REG3,REG3,0x2143)
0xDD9DDD94,	//0x134c		VoC_sw32_p(ACC1,REG3,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0x0C602B80,	//0x134e		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xE01A7BC4,	//0x1350		VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xE00B7A44,	//0x1352		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xE0877BB5,	//0x1354		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)
0x135A3625,	//0x1356		VoC_bgt32_rr(Coolsand_ControlLogicDTD_L3,ACC0,ACC1)
0xFFC07007,	//0x1358		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x135a		Coolsand_ControlLogicDTD_L3
0x25040A82,	//0x135a		VoC_lw16i(REG2,0x2504)
0x21430712,	//0x135c		VoC_add16_rd(REG2,REG2,0x2143)
0x25100A83,	//0x135e		VoC_lw16i(REG3,0x2510)
0x2143071B,	//0x1360		VoC_add16_rd(REG3,REG3,0x2143)
0x9599D996,	//0x1362		VoC_sub32_rp(REG23,RL6,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xF4017EBC,	//0x1364		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0xFBF96106,	//0x1366		VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0xF90A4DB6,	//0x1368		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_multf32_rr(RL6,REG6,REG6,DEFAULT)
0x426F1400,	//0x136a		VoC_lw16_d(REG0,0x426f)
0xE08170E6,	//0x136c		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0xC3C941BE,	//0x136e		VoC_sub16_rr(REG1,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x250C0A84,	//0x1370		VoC_lw16i(REG4,0x250c)
0x21430724,	//0x1372		VoC_add16_rd(REG4,REG4,0x2143)
0xD9A2FFC0,	//0x1374		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_NOP
0xFBFA60D9,	//0x1376		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(FORMAT32,REG6,DEFAULT)
0xF90C603A,	//0x1378		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(FORMATX,REG1,DEFAULT)
0xCD054C84,	//0x137a		VoC_multf32_rr(ACC1,REG4,REG0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)
0xCEA84E58,	//0x137c		VoC_macX_rr(REG5,REG0,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG0,DEFAULT)
0x7F21F019,	//0x137e		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x7B81FF2A,	//0x1380		VoC_shr32_ri(REG23,0xfffffff0,DEFAULT)	|	VoC_movreg32(REG45,ACC1,IN_PARALLEL)
0x3103FB82,	//0x1382		VoC_bgtz16_r(Coolsand_ControlLogicDTD_L4,REG3)(lo)	|	VoC_shr32_ri(REG45,0xfffffff0,IN_PARALLEL)
0xF0231386,	//0x1384		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bgtz16_r(Coolsand_ControlLogicDTD_L4,REG3)(hi)
		//0x1386		Coolsand_ControlLogicDTD_L4
0x138A31C5,	//0x1386		VoC_bnez16_r(Coolsand_ControlLogicDTD_L5,REG5)
0xFFC07025,	//0x1388		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x138a		Coolsand_ControlLogicDTD_L5
0xF5C272E6,	//0x138a		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x17,DEFAULT)
0xC3BE4CEA,	//0x138c		VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_multf32_rr(REG45,REG3,REG5,DEFAULT)
0xF8FE7327,	//0x138e		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x19,DEFAULT)
0xF4397BFA,	//0x1390		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xDF42790C,	//0x1392		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x42721402,	//0x1394		VoC_lw16_d(REG2,0x4272)
0xCE6ACD14,	//0x1396		VoC_macX_rr(REG5,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xFF22FFC0,	//0x1398		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_NOP
0xF90CFBFA,	//0x139a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE6ACD14,	//0x139c		VoC_macX_rr(REG5,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0x4BA7FFC0,	//0x139e		VoC_sub32_rr(RL7,RL6,ACC0,DEFAULT)	|	VoC_NOP
0x7EB7C3BE,	//0x13a0		VoC_shr32_rr(RL7,REG6,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)
0x0A84DF46,	//0x13a2		VoC_lw16i(REG4,0x24f4)(lo)	|	VoC_push32(RL6,IN_PARALLEL)
0x0A8524F4,	//0x13a4		VoC_lw16i(REG5,0x24f8)(lo)	|	VoC_lw16i(REG4,0x24f4)(hi)
0x0A8724F8,	//0x13a6		VoC_lw16i(REG7,0x2518)(lo)	|	VoC_lw16i(REG5,0x24f8)(hi)
0x07242518,	//0x13a8		VoC_add16_rd(REG4,REG4,0x2143)(lo)	|	VoC_lw16i(REG7,0x2518)(hi)
0x072D2143,	//0x13aa		VoC_add16_rd(REG5,REG5,0x2143)(lo)	|	VoC_add16_rd(REG4,REG4,0x2143)(hi)
0x073F2143,	//0x13ac		VoC_add16_rd(REG7,REG7,0x2143)(lo)	|	VoC_add16_rd(REG5,REG5,0x2143)(hi)
0xD9A42143,	//0x13ae		VoC_lw32_p(ACC0,REG4,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x2143)(hi)
0xDDBFD9AD,	//0x13b0		VoC_sw32_p(RL7,REG7,DEFAULT)	|	VoC_lw32_p(ACC1,REG5,DEFAULT)
0x0C602B80,	//0x13b2		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xE01A7BC4,	//0x13b4		VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xE00B7A44,	//0x13b6		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xE0877BB5,	//0x13b8		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)
0x13BE3625,	//0x13ba		VoC_bgt32_rr(Coolsand_ControlLogicDTD_L6,ACC0,ACC1)
0xFFC07007,	//0x13bc		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x13be		Coolsand_ControlLogicDTD_L6
0x25040A82,	//0x13be		VoC_lw16i(REG2,0x2504)
0x21430712,	//0x13c0		VoC_add16_rd(REG2,REG2,0x2143)
0xF4017EBC,	//0x13c2		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0x6106D991,	//0x13c4		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_lw32_p(REG23,REG2,DEFAULT)
0x4DB6FBF9,	//0x13c6		VoC_multf32_rr(RL6,REG6,REG6,DEFAULT)	|	VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)
0x1400F90A,	//0x13c8		VoC_lw16_d(REG0,0x4270)(lo)	|	VoC_shru16_ri(REG2,0x1,IN_PARALLEL)
0x70E64270,	//0x13ca		VoC_lw16i_short(REG6,0x7,DEFAULT)	|	VoC_lw16_d(REG0,0x4270)(hi)
0x41BEE081,	//0x13cc		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(REG1,0x8,IN_PARALLEL)
0x0A84C3C9,	//0x13ce		VoC_lw16i(REG4,0x2508)(lo)	|	VoC_sub16_rr(REG1,REG7,REG1,IN_PARALLEL)
0x07242508,	//0x13d0		VoC_add16_rd(REG4,REG4,0x2143)(lo)	|	VoC_lw16i(REG4,0x2508)(hi)
0xFFC02143,	//0x13d2		VoC_NOP	|	VoC_add16_rd(REG4,REG4,0x2143)(hi)
0x60D9D9A2,	//0x13d4		VoC_movreg16(FORMAT32,REG6,DEFAULT)	|	VoC_lw32_p(REG45,REG4,DEFAULT)
0x603AFBFA,	//0x13d6		VoC_movreg16(FORMATX,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)
0x4C84F90C,	//0x13d8		VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0x4E58CD05,	//0x13da		VoC_macX_rr(REG3,REG0,DEFAULT)	|	VoC_multf32_rr(ACC1,REG4,REG0,IN_PARALLEL)
0xF019CEA8,	//0x13dc		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_macX_rr(REG5,REG0,IN_PARALLEL)
0xFF2A7F21,	//0x13de		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0xFB827B81,	//0x13e0		VoC_shr32_ri(REG45,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffff0,DEFAULT)
0x13E631C3,	//0x13e2		VoC_bnez16_r(Coolsand_ControlLogicDTD_L7,REG3)
0xFFC07023,	//0x13e4		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x13e6		Coolsand_ControlLogicDTD_L7
0x13E931C5,	//0x13e6		VoC_bnez16_r(Coolsand_ControlLogicDTD_L8,REG5)
0xF2E6F025,	//0x13e8		VoC_lw16i_short(REG6,0x17,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x13e9		Coolsand_ControlLogicDTD_L8
0xC3BE4CEC,	//0x13ea		VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)
0xF8FE7325,	//0x13ec		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x19,DEFAULT)
0xC3AE4BA5,	//0x13ee		VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,RL6,ACC0,DEFAULT)
0xDF077EB5,	//0x13f0		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG6,DEFAULT)
0x251C0A86,	//0x13f2		VoC_lw16i(REG6,0x251c)
0x21430736,	//0x13f4		VoC_add16_rd(REG6,REG6,0x2143)
0xDF057000,	//0x13f6		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x36AFDDB5,	//0x13f8		VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,ACC1,RL7)(lo)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0x36B413FE,	//0x13fa		VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,RL6,ACC0)(lo)	|	VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,ACC1,RL7)(hi)
0xF02013FE,	//0x13fc		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,RL6,ACC0)(hi)
		//0x13fe		Coolsand_ControlLogicDTD_L9
0xFFC0DFA9,	//0x13fe		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1400		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1402		Coolsand_CmplxMul
0xCD5D4D14,	//0x1402		VoC_multf32_rr(ACC1,REG5,REG3,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xCD554D1C,	//0x1404		VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG3,DEFAULT)
0xFF2F7F26,	//0x1406		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBC57BC4,	//0x1408		VoC_shr32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xFA457A44,	//0x140a		VoC_shr32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xFBC77BC6,	//0x140c		VoC_shr32_ri(RL7,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)
0xFA477A46,	//0x140e		VoC_shr32_ri(RL7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x8,DEFAULT)
0xC92D4BBC,	//0x1410		VoC_add32_rr(ACC1,ACC0,ACC1,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,RL6,RL7,DEFAULT)
0xFBC57BC4,	//0x1412		VoC_shr32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xFA457A44,	//0x1414		VoC_shr32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xFFC06580,	//0x1416		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1418		Coolsand_Double_FirstOrderIIRSmooth2
0xCBEA4BA1,	//0x1418		VoC_sub32_rr(REG45,RL7,ACC1,IN_PARALLEL)	|	VoC_sub32_rr(REG23,RL6,ACC0,DEFAULT)
0xFBC2FBC1,	//0x141a		VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_shr32_ri(REG23,0xfffffff8,DEFAULT)
0xFA3A7A39,	//0x141c		VoC_shr32_ri(REG45,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0x7,DEFAULT)
0xF90C790A,	//0x141e		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCE214E11,	//0x1420		VoC_mac32_rr(REG4,REG1,IN_PARALLEL)	|	VoC_mac32_rr(REG2,REG1,DEFAULT)
0xCEA94E59,	//0x1422		VoC_macX_rr(REG5,REG1,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG1,DEFAULT)
0xDFE9E580,	//0x1424		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1425		CVSD_LowPass_Filter1
0xF401701A,	//0x1426		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0x14F92C04,	//0x1428		VoC_loop_i(0x0,0x2)
0xD885D884,	//0x142a		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x63901484,	//0x142c		VoC_lw32_d(ACC0,0x6390)
0x63901485,	//0x142e		VoC_lw32_d(ACC1,0x6390)
0x63946C06,	//0x1430		VoC_bez16_d(CVSD_DEC_LOWPASS_filter1,0x6394)
0x00010A86,	//0x1432		VoC_lw16i(REG6,0x1)
0xF6854230,	//0x1434		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)
		//0x1436		CVSD_DEC_LOWPASS_filter1
0x63B60E20,	//0x1436		VoC_mac32_rd(REG4,0x63b6)
0x7FC0D99B,	//0x1438		VoC_NOP	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0xDCB4D16A,	//0x143a		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)
0x63B70E30,	//0x143c		VoC_mac32_rd(REG6,0x63b7)
0x7FC0DCB5,	//0x143e		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x1440		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x1442		VoC_mac32_rd(REG4,0x63b8)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763B8,	//0x1444		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63b8)(hi)
0xD16A7FC0,	//0x1446		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x1448		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63B90E30,	//0x144a		VoC_mac32_rd(REG6,0x63b9)
0x7FC0DCB5,	//0x144c		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x144e		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x1450		VoC_mac32_rd(REG4,0x63ba)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763BA,	//0x1452		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63ba)(hi)
0xD16A7FC0,	//0x1454		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x1456		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63BB0E30,	//0x1458		VoC_mac32_rd(REG6,0x63bb)
0x7FC0DCB5,	//0x145a		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x145c		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x145e		VoC_mac32_rd(REG4,0x63bc)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763BC,	//0x1460		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63bc)(hi)
0xD16A7FC0,	//0x1462		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x1464		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63BD0E30,	//0x1466		VoC_mac32_rd(REG6,0x63bd)
0x7FC0DCB5,	//0x1468		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x146a		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x146c		VoC_mac32_rd(REG4,0x63be)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763BE,	//0x146e		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63be)(hi)
0xD16A7FC0,	//0x1470		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x1472		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63BF0E30,	//0x1474		VoC_mac32_rd(REG6,0x63bf)
0x7FC0DCB5,	//0x1476		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x1478		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x147a		VoC_mac32_rd(REG4,0x63c0)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763C0,	//0x147c		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63c0)(hi)
0xD16A7FC0,	//0x147e		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x1480		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63C10E30,	//0x1482		VoC_mac32_rd(REG6,0x63c1)
0x7FC0DCB5,	//0x1484		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x1486		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x1488		VoC_mac32_rd(REG4,0x63c2)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763C2,	//0x148a		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63c2)(hi)
0xD16A7FC0,	//0x148c		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x148e		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63C30E30,	//0x1490		VoC_mac32_rd(REG6,0x63c3)
0x7FC0DCB5,	//0x1492		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x1494		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x1496		VoC_mac32_rd(REG4,0x63c4)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763C4,	//0x1498		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63c4)(hi)
0xD16A7FC0,	//0x149a		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x149c		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63C50E30,	//0x149e		VoC_mac32_rd(REG6,0x63c5)
0x7FC0DCB5,	//0x14a0		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x14a2		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x14a4		VoC_mac32_rd(REG4,0x63c6)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763C6,	//0x14a6		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63c6)(hi)
0xD16A7FC0,	//0x14a8		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x14aa		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63C70E30,	//0x14ac		VoC_mac32_rd(REG6,0x63c7)
0x7FC0DCB5,	//0x14ae		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x14b0		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x14b2		VoC_mac32_rd(REG4,0x63c8)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763C8,	//0x14b4		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63c8)(hi)
0xD16A7FC0,	//0x14b6		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x14b8		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63C90E30,	//0x14ba		VoC_mac32_rd(REG6,0x63c9)
0x7FC0DCB5,	//0x14bc		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x14be		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x14c0		VoC_mac32_rd(REG4,0x63ca)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763CA,	//0x14c2		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63ca)(hi)
0xD16A7FC0,	//0x14c4		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xFF42FA64,	//0x14c6		VoC_lw32z(REG45,DEFAULT)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0x14CE33C4,	//0x14c8		VoC_bnltz32_r(LOWPASS_LIMIT_POSTIVE_VALUE100,ACC0)
0x0A85CAA4,	//0x14ca		VoC_lw16i(REG5,0x1)(lo)	|	VoC_sub32_rr(ACC0,REG45,ACC0,DEFAULT)
0xFFC00001,	//0x14cc		VoC_NAD	|	VoC_lw16i(REG5,0x1)(hi)
		//0x14ce		LOWPASS_LIMIT_POSTIVE_VALUE100
0x7FFF0A87,	//0x14ce		VoC_lw16i(REG7,0x7fff)
0x3623FC83,	//0x14d0		VoC_bgt32_rr(LOWPASS_LIMIT_VALUE100,ACC0,REG67)(lo)	|	VoC_shru32_ri(REG67,0x10,DEFAULT)
0xFF2314D4,	//0x14d2		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_bgt32_rr(LOWPASS_LIMIT_VALUE100,ACC0,REG67)(hi)
		//0x14d4		LOWPASS_LIMIT_VALUE100
0x14DA3185,	//0x14d4		VoC_bez16_r(LOWPASS_LIMIT_POSTIVE_VALUE110,REG5)
0x00000A85,	//0x14d6		VoC_lw16i(REG5,0x0)
0xFFC04376,	//0x14d8		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x14da		LOWPASS_LIMIT_POSTIVE_VALUE110
0x63CC0836,	//0x14da		VoC_mult16_rd(REG6,REG6,0x63cc)
0x00150A84,	//0x14dc		VoC_lw16i(REG4,0x15)
0x5C96FFC0,	//0x14de		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_NOP
0xFA65C0A2,	//0x14e0		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0x33C5FF42,	//0x14e2		VoC_bnltz32_r(LOWPASS_LIMIT_POSTIVE_VALUE101,ACC1)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0xCAAD14E8,	//0x14e4		VoC_sub32_rr(ACC1,REG45,ACC1,DEFAULT)	|	VoC_bnltz32_r(LOWPASS_LIMIT_POSTIVE_VALUE101,ACC1)(hi)
0x00010A85,	//0x14e6		VoC_lw16i(REG5,0x1)
		//0x14e8		LOWPASS_LIMIT_POSTIVE_VALUE101
0x7FFF0A87,	//0x14e8		VoC_lw16i(REG7,0x7fff)
0x362BFC83,	//0x14ea		VoC_bgt32_rr(LOWPASS_LIMIT_VALUE101,ACC1,REG67)(lo)	|	VoC_shru32_ri(REG67,0x10,DEFAULT)
0xFF2B14EE,	//0x14ec		VoC_movreg32(REG67,ACC1,DEFAULT)	|	VoC_bgt32_rr(LOWPASS_LIMIT_VALUE101,ACC1,REG67)(hi)
		//0x14ee		LOWPASS_LIMIT_VALUE101
0x14F43185,	//0x14ee		VoC_bez16_r(LOWPASS_LIMIT_POSTIVE_VALUE111,REG5)
0x00000A85,	//0x14f0		VoC_lw16i(REG5,0x0)
0xFFC04376,	//0x14f2		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x14f4		LOWPASS_LIMIT_POSTIVE_VALUE111
0x63CC0836,	//0x14f4		VoC_mult16_rd(REG6,REG6,0x63cc)
0x00280A84,	//0x14f6		VoC_lw16i(REG4,0x28)
0x5C96FFC0,	//0x14f8		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_NOP
		//0x14f9		VoC_endloop0
0xDFA9C2E3,	//0x14fa		VoC_pop16(RA,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xE580FFC0,	//0x14fc		VoC_return	|	VoC_NOP
		//0x14fe		CVSD_LowPass_Filter2
0x701ADFE9,	//0x14fe		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2C08F401,	//0x1500		VoC_loop_i(0x0,0x4)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xD8841571,	//0x1502		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x4)(hi)
0x1484D885,	//0x1504		VoC_lw32_d(ACC0,0x6390)(lo)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0x14856390,	//0x1506		VoC_lw32_d(ACC1,0x6390)(lo)	|	VoC_lw32_d(ACC0,0x6390)(hi)
0x6C076390,	//0x1508		VoC_bez16_d(CVSD_DEC_LOWPASS_filter2,0x6394)(lo)	|	VoC_lw32_d(ACC1,0x6390)(hi)
0x0A866394,	//0x150a		VoC_lw16i(REG6,0x1)(lo)	|	VoC_bez16_d(CVSD_DEC_LOWPASS_filter2,0x6394)(hi)
0x42300001,	//0x150c		VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x1)(hi)
0xFFC0F685,	//0x150e		VoC_NAD	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
		//0x1510		CVSD_DEC_LOWPASS_filter2
0x63AF0E20,	//0x1510		VoC_mac32_rd(REG4,0x63af)
0x7FC0D99B,	//0x1512		VoC_NOP	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0xDCB4D16A,	//0x1514		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)
0x63B00E30,	//0x1516		VoC_mac32_rd(REG6,0x63b0)
0x7FC0DCB5,	//0x1518		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x151a		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x151c		VoC_mac32_rd(REG4,0x63b1)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763B1,	//0x151e		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63b1)(hi)
0xD16A7FC0,	//0x1520		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x1522		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63B20E30,	//0x1524		VoC_mac32_rd(REG6,0x63b2)
0x7FC0DCB5,	//0x1526		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x1528		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x152a		VoC_mac32_rd(REG4,0x63b3)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763B3,	//0x152c		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63b3)(hi)
0xD16A7FC0,	//0x152e		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x1530		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63B40E30,	//0x1532		VoC_mac32_rd(REG6,0x63b4)
0x7FC0DCB5,	//0x1534		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x1536		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x1538		VoC_mac32_rd(REG4,0x63b5)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763B5,	//0x153a		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63b5)(hi)
0xD16A7FC0,	//0x153c		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xFF42FA64,	//0x153e		VoC_lw32z(REG45,DEFAULT)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0x154633C4,	//0x1540		VoC_bnltz32_r(LOWPASS_LIMIT_POSTIVE_VALUE200,ACC0)
0x0A85CAA4,	//0x1542		VoC_lw16i(REG5,0x1)(lo)	|	VoC_sub32_rr(ACC0,REG45,ACC0,DEFAULT)
0xFFC00001,	//0x1544		VoC_NAD	|	VoC_lw16i(REG5,0x1)(hi)
		//0x1546		LOWPASS_LIMIT_POSTIVE_VALUE200
0x7FFF0A87,	//0x1546		VoC_lw16i(REG7,0x7fff)
0x3623FC83,	//0x1548		VoC_bgt32_rr(LOWPASS_LIMIT_VALUE200,ACC0,REG67)(lo)	|	VoC_shru32_ri(REG67,0x10,DEFAULT)
0xFF23154C,	//0x154a		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_bgt32_rr(LOWPASS_LIMIT_VALUE200,ACC0,REG67)(hi)
		//0x154c		LOWPASS_LIMIT_VALUE200
0x15523185,	//0x154c		VoC_bez16_r(LOWPASS_LIMIT_POSTIVE_VALUE210,REG5)
0x00000A85,	//0x154e		VoC_lw16i(REG5,0x0)
0xFFC04376,	//0x1550		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x1552		LOWPASS_LIMIT_POSTIVE_VALUE210
0x63CD0836,	//0x1552		VoC_mult16_rd(REG6,REG6,0x63cd)
0x00070A84,	//0x1554		VoC_lw16i(REG4,0x7)
0x5C96FFC0,	//0x1556		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_NOP
0xFA65C0A2,	//0x1558		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0x33C5FF42,	//0x155a		VoC_bnltz32_r(LOWPASS_LIMIT_POSTIVE_VALUE201,ACC1)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0xCAAD1560,	//0x155c		VoC_sub32_rr(ACC1,REG45,ACC1,DEFAULT)	|	VoC_bnltz32_r(LOWPASS_LIMIT_POSTIVE_VALUE201,ACC1)(hi)
0x00010A85,	//0x155e		VoC_lw16i(REG5,0x1)
		//0x1560		LOWPASS_LIMIT_POSTIVE_VALUE201
0x7FFF0A87,	//0x1560		VoC_lw16i(REG7,0x7fff)
0x362BFC83,	//0x1562		VoC_bgt32_rr(LOWPASS_LIMIT_VALUE201,ACC1,REG67)(lo)	|	VoC_shru32_ri(REG67,0x10,DEFAULT)
0xFF2B1566,	//0x1564		VoC_movreg32(REG67,ACC1,DEFAULT)	|	VoC_bgt32_rr(LOWPASS_LIMIT_VALUE201,ACC1,REG67)(hi)
		//0x1566		LOWPASS_LIMIT_VALUE201
0x156C3185,	//0x1566		VoC_bez16_r(LOWPASS_LIMIT_POSTIVE_VALUE211,REG5)
0x00000A85,	//0x1568		VoC_lw16i(REG5,0x0)
0xFFC04376,	//0x156a		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x156c		LOWPASS_LIMIT_POSTIVE_VALUE211
0x63CD0836,	//0x156c		VoC_mult16_rd(REG6,REG6,0x63cd)
0x000C0A84,	//0x156e		VoC_lw16i(REG4,0xc)
0x5C96FFC0,	//0x1570		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_NOP
		//0x1571		VoC_endloop0
0xDFA9C2E3,	//0x1572		VoC_pop16(RA,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xE580FFC0,	//0x1574		VoC_return	|	VoC_NOP
		//0x1576		CVSD_LowPass_Filter3
0x701ADFE9,	//0x1576		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2C10F401,	//0x1578		VoC_loop_i(0x0,0x8)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xD88415DB,	//0x157a		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x8)(hi)
0x1484D885,	//0x157c		VoC_lw32_d(ACC0,0x6390)(lo)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0x14856390,	//0x157e		VoC_lw32_d(ACC1,0x6390)(lo)	|	VoC_lw32_d(ACC0,0x6390)(hi)
0x6C076390,	//0x1580		VoC_bez16_d(CVSD_DEC_LOWPASS_filter3,0x6394)(lo)	|	VoC_lw32_d(ACC1,0x6390)(hi)
0x0A866394,	//0x1582		VoC_lw16i(REG6,0x1)(lo)	|	VoC_bez16_d(CVSD_DEC_LOWPASS_filter3,0x6394)(hi)
0x42300001,	//0x1584		VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x1)(hi)
0xFFC0F685,	//0x1586		VoC_NAD	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
		//0x1588		CVSD_DEC_LOWPASS_filter3
0x63AA0E20,	//0x1588		VoC_mac32_rd(REG4,0x63aa)
0x7FC0D99B,	//0x158a		VoC_NOP	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0xDCB4D16A,	//0x158c		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)
0x63AB0E30,	//0x158e		VoC_mac32_rd(REG6,0x63ab)
0x7FC0DCB5,	//0x1590		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x1592		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x1594		VoC_mac32_rd(REG4,0x63ac)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763AC,	//0x1596		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63ac)(hi)
0xD16A7FC0,	//0x1598		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xDCB4D99B,	//0x159a		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x63AD0E30,	//0x159c		VoC_mac32_rd(REG6,0x63ad)
0x7FC0DCB5,	//0x159e		VoC_NOP	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xD99AD17A,	//0x15a0		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)
0x0E20DCB6,	//0x15a2		VoC_mac32_rd(REG4,0x63ae)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCB763AE,	//0x15a4		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_mac32_rd(REG4,0x63ae)(hi)
0xD16A7FC0,	//0x15a6		VoC_macXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0xFF42FA64,	//0x15a8		VoC_lw32z(REG45,DEFAULT)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0x15B033C4,	//0x15aa		VoC_bnltz32_r(LOWPASS_LIMIT_POSTIVE_VALUE300,ACC0)
0x0A85CAA4,	//0x15ac		VoC_lw16i(REG5,0x1)(lo)	|	VoC_sub32_rr(ACC0,REG45,ACC0,DEFAULT)
0xFFC00001,	//0x15ae		VoC_NAD	|	VoC_lw16i(REG5,0x1)(hi)
		//0x15b0		LOWPASS_LIMIT_POSTIVE_VALUE300
0x7FFF0A87,	//0x15b0		VoC_lw16i(REG7,0x7fff)
0x3623FC83,	//0x15b2		VoC_bgt32_rr(LOWPASS_LIMIT_VALUE300,ACC0,REG67)(lo)	|	VoC_shru32_ri(REG67,0x10,DEFAULT)
0xFF2315B6,	//0x15b4		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_bgt32_rr(LOWPASS_LIMIT_VALUE300,ACC0,REG67)(hi)
		//0x15b6		LOWPASS_LIMIT_VALUE300
0x15BC3185,	//0x15b6		VoC_bez16_r(LOWPASS_LIMIT_POSTIVE_VALUE310,REG5)
0x00000A85,	//0x15b8		VoC_lw16i(REG5,0x0)
0xFFC04376,	//0x15ba		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x15bc		LOWPASS_LIMIT_POSTIVE_VALUE310
0x63CE0836,	//0x15bc		VoC_mult16_rd(REG6,REG6,0x63ce)
0x00050A84,	//0x15be		VoC_lw16i(REG4,0x5)
0x5C96FFC0,	//0x15c0		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_NOP
0xFA65C0A2,	//0x15c2		VoC_shr32_ri(ACC1,0xc,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0x33C5FF42,	//0x15c4		VoC_bnltz32_r(LOWPASS_LIMIT_POSTIVE_VALUE301,ACC1)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0xCAAD15CA,	//0x15c6		VoC_sub32_rr(ACC1,REG45,ACC1,DEFAULT)	|	VoC_bnltz32_r(LOWPASS_LIMIT_POSTIVE_VALUE301,ACC1)(hi)
0x00010A85,	//0x15c8		VoC_lw16i(REG5,0x1)
		//0x15ca		LOWPASS_LIMIT_POSTIVE_VALUE301
0x7FFF0A87,	//0x15ca		VoC_lw16i(REG7,0x7fff)
0x362BFC83,	//0x15cc		VoC_bgt32_rr(LOWPASS_LIMIT_VALUE301,ACC1,REG67)(lo)	|	VoC_shru32_ri(REG67,0x10,DEFAULT)
0xFF2B15D0,	//0x15ce		VoC_movreg32(REG67,ACC1,DEFAULT)	|	VoC_bgt32_rr(LOWPASS_LIMIT_VALUE301,ACC1,REG67)(hi)
		//0x15d0		LOWPASS_LIMIT_VALUE301
0x15D63185,	//0x15d0		VoC_bez16_r(LOWPASS_LIMIT_POSTIVE_VALUE311,REG5)
0x00000A85,	//0x15d2		VoC_lw16i(REG5,0x0)
0xFFC04376,	//0x15d4		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x15d6		LOWPASS_LIMIT_POSTIVE_VALUE311
0x63CE0836,	//0x15d6		VoC_mult16_rd(REG6,REG6,0x63ce)
0x00080A84,	//0x15d8		VoC_lw16i(REG4,0x8)
0x5C96FFC0,	//0x15da		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_NOP
		//0x15db		VoC_endloop0
0xDFA9C2E3,	//0x15dc		VoC_pop16(RA,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xE580FFC0,	//0x15de		VoC_return	|	VoC_NOP
		//0x15e0		CVSD_encode
0x7002DFE9,	//0x15e0		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1407E013,	//0x15e2		VoC_lw16_d(REG7,0x63a6)(lo)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0xFFC063A6,	//0x15e4		VoC_NAD	|	VoC_lw16_d(REG7,0x63a6)(hi)
0x163A2C20,	//0x15e6		VoC_loop_i(0x0,0x10)
0x00000A84,	//0x15e8		VoC_lw16i(REG4,0x0)
0x79FFD885,	//0x15ea		VoC_shru16_ri(REG7,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFA32F90A,	//0x15ec		VoC_shr32_ri(REG45,0x6,DEFAULT)	|	VoC_shru16_ri(REG2,0x1,IN_PARALLEL)
0x00010A86,	//0x15ee		VoC_lw16i(REG6,0x1)
0x63A20992,	//0x15f0		VoC_sub32_rd(REG45,REG45,0x63a2)
0x15FA33C2,	//0x15f2		VoC_bnltz32_r(csdv_b0_e_1,REG45)
0x00011687,	//0x15f4		VoC_or16_ri(REG7,0x1)
0x000016C2,	//0x15f6		VoC_or16_ri(REG2,0x8000)
0x00000A86,	//0x15f8		VoC_lw16i(REG6,0x0)
		//0x15fa		csdv_b0_e_1
0x63CB2807,	//0x15fa		VoC_and16_rd(REG7,0x63cb)
0x63961482,	//0x15fc		VoC_lw32_d(REG45,0x6396)
0x63A61507,	//0x15fe		VoC_sw16_d(REG7,0x63a6)
0x16103187,	//0x1600		VoC_bez16_r(cvsd_alpha_eq_1,REG7)
0x63CB40B7,	//0x1602		VoC_be16_rd(cvsd_alpha_eq_1,REG7,0x63cb)
0x0B92FA52,	//0x1604		VoC_sub32_dr(REG45,0x6396,REG45)(lo)	|	VoC_shr32_ri(REG45,0xa,DEFAULT)
0x14846396,	//0x1606		VoC_lw32_d(ACC0,0x639a)(lo)	|	VoC_sub32_dr(REG45,0x6396,REG45)(hi)
0x1582639A,	//0x1608		VoC_sw32_d(REG45,0x6396)(lo)	|	VoC_lw32_d(ACC0,0x639a)(hi)
0x36146396,	//0x160a		VoC_bgt32_rr(cvsd_alpha_judge_end,REG45,ACC0)(lo)	|	VoC_sw32_d(REG45,0x6396)(hi)
0x1584161A,	//0x160c		VoC_sw32_d(ACC0,0x6396)(lo)	|	VoC_bgt32_rr(cvsd_alpha_judge_end,REG45,ACC0)(hi)
0xE5CB6396,	//0x160e		VoC_jump(cvsd_alpha_judge_end)	|	VoC_sw32_d(ACC0,0x6396)(hi)
		//0x1610		cvsd_alpha_eq_1
0x639A0912,	//0x1610		VoC_add32_rd(REG45,REG45,0x639a)
0x639C1484,	//0x1612		VoC_lw32_d(ACC0,0x639c)
0x63961582,	//0x1614		VoC_sw32_d(REG45,0x6396)
0x161A3622,	//0x1616		VoC_bgt32_rr(cvsd_alpha_judge_end,ACC0,REG45)
0x63961584,	//0x1618		VoC_sw32_d(ACC0,0x6396)
		//0x161a		cvsd_alpha_judge_end
0x63A86E08,	//0x161a		VoC_bnez16_d(cvsd_not_first_frame_1,0x63a8)
0x1503FF42,	//0x161c		VoC_sw16_d(REG3,0x63a8)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0x158263A8,	//0x161e		VoC_sw32_d(REG45,0x63a2)(lo)	|	VoC_sw16_d(REG3,0x63a8)(hi)
0xE5D963A2,	//0x1620		VoC_jump(cvsd_xest_judge_end)	|	VoC_sw32_d(REG45,0x63a2)(hi)
		//0x1622		cvsd_not_first_frame_1
0x63A21482,	//0x1622		VoC_lw32_d(REG45,0x63a2)
0x63961484,	//0x1624		VoC_lw32_d(ACC0,0x6396)
0x162A3186,	//0x1626		VoC_bez16_r(csdv_encode_b0_e_0,REG6)
0xE5C3C8A2,	//0x1628		VoC_jump(csdv_encode_b0_e_end)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
		//0x162a		csdv_encode_b0_e_0
0xFFC04AA2,	//0x162a		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(REG45,REG45,ACC0,DEFAULT)
		//0x162c		csdv_encode_b0_e_end
0x639E5022,	//0x162c		VoC_bgt32_rd(csdv_encode_y_e_min,REG45,0x639e)
0x639E1482,	//0x162e		VoC_lw32_d(REG45,0x639e)
		//0x1630		csdv_encode_y_e_min
0x63A06022,	//0x1630		VoC_blt32_rd(csdv_encode_y_e_max,REG45,0x63a0)
0x63A01482,	//0x1632		VoC_lw32_d(REG45,0x63a0)
		//0x1634		csdv_encode_y_e_max
0xFA2CFF14,	//0x1634		VoC_shr32_ri(ACC0,0x5,DEFAULT)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xFFC0CAA2,	//0x1636		VoC_NOP	|	VoC_sub32_rr(REG45,REG45,ACC0,DEFAULT)
0x63A21582,	//0x1638		VoC_sw32_d(REG45,0x63a2)
		//0x163a		cvsd_xest_judge_end
		//0x163a		VoC_endloop0
0xDC92FFC0,	//0x163a		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_NOP
0xFFC0DFA9,	//0x163c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x163e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x163f		CVSD_decode
0x1407D882,	//0x1640		VoC_lw16_d(REG7,0x63a7)(lo)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0x2C2063A7,	//0x1642		VoC_loop_i(0x0,0x10)(lo)	|	VoC_lw16_d(REG7,0x63a7)(hi)
0xE0461690,	//0x1644		VoC_movreg16(REG6,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x10)(hi)
0x00011606,	//0x1646		VoC_and16_ri(REG6,0x1)
0xF9FF790A,	//0x1648		VoC_shru16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0x00000A84,	//0x164a		VoC_lw16i(REG4,0x0)
0x2807E477,	//0x164c		VoC_and16_rd(REG7,0x63cb)(lo)	|	VoC_or16_rr(REG7,REG6,DEFAULT)
0x148263CB,	//0x164e		VoC_lw32_d(REG45,0x6398)(lo)	|	VoC_and16_rd(REG7,0x63cb)(hi)
0x15076398,	//0x1650		VoC_sw16_d(REG7,0x63a7)(lo)	|	VoC_lw32_d(REG45,0x6398)(hi)
0x318763A7,	//0x1652		VoC_bez16_r(cvsd_dec_alpha_eq_1,REG7)(lo)	|	VoC_sw16_d(REG7,0x63a7)(hi)
0x40BF1664,	//0x1654		VoC_be16_rd(cvsd_dec_alpha_eq_1,REG7,0x63cb)(lo)	|	VoC_bez16_r(cvsd_dec_alpha_eq_1,REG7)(hi)
0xFA5263CB,	//0x1656		VoC_shr32_ri(REG45,0xa,DEFAULT)	|	VoC_be16_rd(cvsd_dec_alpha_eq_1,REG7,0x63cb)(hi)
0x63980B92,	//0x1658		VoC_sub32_dr(REG45,0x6398,REG45)
0x639A1484,	//0x165a		VoC_lw32_d(ACC0,0x639a)
0x63981582,	//0x165c		VoC_sw32_d(REG45,0x6398)
0x166E3614,	//0x165e		VoC_bgt32_rr(cvsd_dec_alpha_judge_end,REG45,ACC0)
0x63981584,	//0x1660		VoC_sw32_d(ACC0,0x6398)
0xFFC065CC,	//0x1662		VoC_NAD(IN_PARALLEL)	|	VoC_jump(cvsd_dec_alpha_judge_end)
		//0x1664		cvsd_dec_alpha_eq_1
0x639A0912,	//0x1664		VoC_add32_rd(REG45,REG45,0x639a)
0x639C1484,	//0x1666		VoC_lw32_d(ACC0,0x639c)
0x63981582,	//0x1668		VoC_sw32_d(REG45,0x6398)
0x166E3622,	//0x166a		VoC_bgt32_rr(cvsd_dec_alpha_judge_end,ACC0,REG45)
0x63981584,	//0x166c		VoC_sw32_d(ACC0,0x6398)
		//0x166e		cvsd_dec_alpha_judge_end
0x63A41482,	//0x166e		VoC_lw32_d(REG45,0x63a4)
0x63981484,	//0x1670		VoC_lw32_d(ACC0,0x6398)
0x167631C6,	//0x1672		VoC_bnez16_r(csdv_decode_b0_e_0,REG6)
0xE5C3C8A2,	//0x1674		VoC_jump(csdv_decode_b0_e_end)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
		//0x1676		csdv_decode_b0_e_0
0xFFC04AA2,	//0x1676		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(REG45,REG45,ACC0,DEFAULT)
		//0x1678		csdv_decode_b0_e_end
0x639E5022,	//0x1678		VoC_bgt32_rd(csdv_decode_y_e_min,REG45,0x639e)
0x639E1482,	//0x167a		VoC_lw32_d(REG45,0x639e)
		//0x167c		csdv_decode_y_e_min
0x63A06022,	//0x167c		VoC_blt32_rd(csdv_decode_y_e_max,REG45,0x63a0)
0x63A01482,	//0x167e		VoC_lw32_d(REG45,0x63a0)
		//0x1680		csdv_decode_y_e_max
0xFA2CFF14,	//0x1680		VoC_shr32_ri(ACC0,0x5,DEFAULT)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xFFC0CAA2,	//0x1682		VoC_NOP	|	VoC_sub32_rr(REG45,REG45,ACC0,DEFAULT)
0x63A41582,	//0x1684		VoC_sw32_d(REG45,0x63a4)
0x168C3282,	//0x1686		VoC_bgtz32_r(csdv_decode_x_g_round,REG45)
0x63920992,	//0x1688		VoC_sub32_rd(REG45,REG45,0x6392)
0xFFC065C4,	//0x168a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(csdv_decode_x_g_round_end)
		//0x168c		csdv_decode_x_g_round
0x63920912,	//0x168c		VoC_add32_rd(REG45,REG45,0x6392)
		//0x168e		csdv_decode_x_g_round_end
0xFFC0FA52,	//0x168e		VoC_NOP	|	VoC_shr32_ri(REG45,0xa,DEFAULT)
		//0x168f		cvsd_dec_xest_judge_end
		//0x1690		VoC_endloop0
0xDFA9DC94,	//0x1690		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xE580FFC0,	//0x1692		VoC_return	|	VoC_NOP
