		//0x1800		VoC_code_section_2
		//0x1800		Rda_NoiseSuppress
0x2008DFE9,	//0x1800		VoC_lw16d_set_inc(REG0,0x427d,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0x1809427D,	//0x1802		VoC_lw16i_set_inc(REG1,0xb42,0x2)(lo)	|	VoC_lw16d_set_inc(REG0,0x427d,0x2)(hi)
0xD9C40B42,	//0x1804		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xb42,0x2)(hi)
0x18092C50,	//0x1806		VoC_loop_i(0x0,0x28)
0xDDCCD9C4,	//0x1808		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1809		VoC_endloop0
0x41812008,	//0x180a		VoC_lw16d_set_inc(REG0,0x4181,0x2)
0x0C541809,	//0x180c		VoC_lw16i_set_inc(REG1,0xc54,0x2)
0x2C06D9C4,	//0x180e		VoC_loop_i(0x0,0x3)(lo)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C41812,	//0x1810		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x3)(hi)
		//0x1812		VoC_endloop0
0x1809DDCC,	//0x1812		VoC_lw16i_set_inc(REG1,0xaf2,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x18080AF2,	//0x1814		VoC_lw16i_set_inc(REG0,0xaa2,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0xaf2,0x2)(hi)
0xD9CC0AA2,	//0x1816		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xaa2,0x2)(hi)
0x181B2C50,	//0x1818		VoC_loop_i(0x0,0x28)
0xDDC4D9CC,	//0x181a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
		//0x181b		VoC_endloop0
0x0BBA1808,	//0x181c		VoC_lw16i_set_inc(REG0,0xbba,0x2)
0x0AF21809,	//0x181e		VoC_lw16i_set_inc(REG1,0xaf2,0x2)
0x2C50D9C4,	//0x1820		VoC_loop_i(0x0,0x28)(lo)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C41824,	//0x1822		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x28)(hi)
		//0x1824		VoC_endloop0
0xFFC05DCC,	//0x1824		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x18C32B80,	//0x1826		VoC_jal(speex_preprocess_run)
0x0B421808,	//0x1828		VoC_lw16i_set_inc(REG0,0xb42,0x2)
0x427D2009,	//0x182a		VoC_lw16d_set_inc(REG1,0x427d,0x2)
0x2C50D9C4,	//0x182c		VoC_loop_i(0x0,0x28)(lo)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C41830,	//0x182e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x28)(hi)
		//0x1830		VoC_endloop0
0x1808DDCC,	//0x1830		VoC_lw16i_set_inc(REG0,0x50,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x07000050,	//0x1832		VoC_add16_rd(REG0,REG0,0x427d)(lo)	|	VoC_lw16i_set_inc(REG0,0x50,0x2)(hi)
0x1809427D,	//0x1834		VoC_lw16i_set_inc(REG1,0xb42,0x2)(lo)	|	VoC_add16_rd(REG0,REG0,0x427d)(hi)
0xD9C40B42,	//0x1836		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xb42,0x2)(hi)
0x183B2C50,	//0x1838		VoC_loop_i(0x0,0x28)
0xDDCCD9C4,	//0x183a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x183b		VoC_endloop0
0x0AF21809,	//0x183c		VoC_lw16i_set_inc(REG1,0xaf2,0x2)
0x0AA21808,	//0x183e		VoC_lw16i_set_inc(REG0,0xaa2,0x2)
0x2C50D9CC,	//0x1840		VoC_loop_i(0x0,0x28)(lo)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xD9CC1844,	//0x1842		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x28)(hi)
		//0x1844		VoC_endloop0
0x1808DDC4,	//0x1844		VoC_lw16i_set_inc(REG0,0xc0a,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x18090C0A,	//0x1846		VoC_lw16i_set_inc(REG1,0xaf2,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xc0a,0x2)(hi)
0xD9C40AF2,	//0x1848		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xaf2,0x2)(hi)
0x184D2C50,	//0x184a		VoC_loop_i(0x0,0x28)
0xDDCCD9C4,	//0x184c		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x184d		VoC_endloop0
0x18C32B80,	//0x184e		VoC_jal(speex_preprocess_run)
0x0B421808,	//0x1850		VoC_lw16i_set_inc(REG0,0xb42,0x2)
0x427D2009,	//0x1852		VoC_lw16d_set_inc(REG1,0x427d,0x2)
0x00500A82,	//0x1854		VoC_lw16i(REG2,0x50)
0xC05159C4,	//0x1856		VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x185B2C50,	//0x1858		VoC_loop_i(0x0,0x28)
0xDDCCD9C4,	//0x185a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x185b		VoC_endloop0
0x41812008,	//0x185c		VoC_lw16d_set_inc(REG0,0x4181,0x2)
0x00060A81,	//0x185e		VoC_lw16i(REG1,0x6)
0x1809C008,	//0x1860		VoC_lw16i_set_inc(REG1,0xbba,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0xD9C40BBA,	//0x1862		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xbba,0x2)(hi)
0x18672C9A,	//0x1864		VoC_loop_i(0x0,0x4d)
0xDDCCD9C4,	//0x1866		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1867		VoC_endloop0
0xFFC0DFA9,	//0x1868		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xE580FFC0,	//0x186a		VoC_return	|	VoC_NOP
		//0x186c		power_spectrum
0xF4015FE9,	//0x186c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0A001804,	//0x186e		VoC_lw16i_set_inc(REG0,0xa00,0x1)
0x10D81809,	//0x1870		VoC_lw16i_set_inc(REG1,0x10d8,0x2)
0xCD6CD885,	//0x1872		VoC_multf32_rr(ACC0,REG5,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFFC0FFC0,	//0x1874		VoC_NOP	|	VoC_NOP
0x1404DDCC,	//0x1876		VoC_lw16_d(REG4,0xc60)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x07A40C60,	//0x1878		VoC_sub16_rd(REG4,REG4,0x4a06)(lo)	|	VoC_lw16_d(REG4,0xc60)(hi)
0xE7084A06,	//0x187a		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x4a06)(hi)
0xFF445885,	//0x187c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xD885CE2D,	//0x187e		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_mac32_rr(REG5,REG5,DEFAULT)
0xFFC0CE2D,	//0x1880		VoC_NOP	|	VoC_mac32_rr(REG5,REG5,DEFAULT)
0xDDCCFFC0,	//0x1882		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
		//0x1883		VoC_endloop0
0xCD6CD885,	//0x1884		VoC_multf32_rr(ACC0,REG5,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFFC0FFC0,	//0x1886		VoC_NOP	|	VoC_NOP
0xDFA9DDCC,	//0x1888		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xE580FFC0,	//0x188a		VoC_return	|	VoC_NOP
		//0x188c		speex_echo_get_residual
0x1404DFE9,	//0x188c		VoC_lw16_d(REG4,0xc60)(lo)	|	VoC_push16(RA,DEFAULT)
0xF8FC0C60,	//0x188e		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG4,0xc60)(hi)
0x49301804,	//0x1890		VoC_lw16i_set_inc(REG0,0x4930,0x1)
0x0AA21805,	//0x1892		VoC_lw16i_set_inc(REG1,0xaa2,0x1)
0x09601806,	//0x1894		VoC_lw16i_set_inc(REG2,0x960,0x1)
0xF4796709,	//0x1896		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0x9B4BD885,	//0x1898		VoC_multf32inc_rp(REG67,REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0x0836FFC0,	//0x189a		VoC_mult16_rd(REG6,REG6,0x417e)(lo)	|	VoC_NOP
0xFFC0417E,	//0x189c		VoC_NOP	|	VoC_mult16_rd(REG6,REG6,0x417e)(hi)
0xDCA6FFC0,	//0x189e		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_NOP
		//0x189f		VoC_endloop0
0x09600A80,	//0x18a0		VoC_lw16i(REG0,0x960)
0x0A000A81,	//0x18a2		VoC_lw16i(REG1,0xa00)
0x095C1500,	//0x18a4		VoC_sw16_d(REG0,0x95c)
0x095D1501,	//0x18a6		VoC_sw16_d(REG1,0x95d)
0x1DC22B80,	//0x18a8		VoC_jal(spx_fft)
0x186C2B80,	//0x18aa		VoC_jal(power_spectrum)
0x417F1402,	//0x18ac		VoC_lw16_d(REG2,0x417f)
0x10D81808,	//0x18ae		VoC_lw16i_set_inc(REG0,0x10d8,0x2)
0x10D81809,	//0x18b0		VoC_lw16i_set_inc(REG1,0x10d8,0x2)
0x0C601406,	//0x18b2		VoC_lw16_d(REG6,0xc60)
0xF47A7019,	//0x18b4		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFFC0D9CA,	//0x18b6		VoC_NAD	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xFBFA6787,	//0x18b8		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xCCAC790C,	//0x18ba		VoC_multf32_rr(ACC0,REG2,REG5,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xD9CACE54,	//0x18bc		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_macX_rr(REG2,REG4,DEFAULT)
0xDDC4FBFA,	//0x18be		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
		//0x18bf		VoC_endloop0
0xFFC0DFA9,	//0x18c0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x18c2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x18c3		speex_preprocess_run
0x427C6C04,	//0x18c4		VoC_bez16_d(speex_preprocess_run_L0,0x427c)
0x269A2B80,	//0x18c6		VoC_jal(Rda_speex_preprocess_state_reset)
		//0x18c8		speex_preprocess_run_L0
0x04381404,	//0x18c8		VoC_lw16_d(REG4,0x438)
0x043A1405,	//0x18ca		VoC_lw16_d(REG5,0x43a)
0x4A040724,	//0x18cc		VoC_add16_rd(REG4,REG4,0x4a04)
0x4A04072D,	//0x18ce		VoC_add16_rd(REG5,REG5,0x4a04)
0x4A4C3C24,	//0x18d0		VoC_bngt16_rd(SPEEX_PRE_NB_ADAPT_NGT_20000,REG4,0x4a4c)
0x4E200A84,	//0x18d2		VoC_lw16i(REG4,0x4e20)
		//0x18d4		SPEEX_PRE_NB_ADAPT_NGT_20000
0x043A1505,	//0x18d4		VoC_sw16_d(REG5,0x43a)
0x04381504,	//0x18d6		VoC_sw16_d(REG4,0x438)
0x0C611404,	//0x18d8		VoC_lw16_d(REG4,0xc61)
0x0C631405,	//0x18da		VoC_lw16_d(REG5,0xc63)
0x6C23C165,	//0x18dc		VoC_bez16_d(SPEEX_PRE_ECHO_STATE_EZ,0x4180)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xFFC04180,	//0x18de		VoC_NAD	|	VoC_bez16_d(SPEEX_PRE_ECHO_STATE_EZ,0x4180)(hi)
0x188C2B80,	//0x18e0		VoC_jal(speex_echo_get_residual)
0x10081808,	//0x18e2		VoC_lw16i_set_inc(REG0,0x1008,0x2)
0x10D81809,	//0x18e4		VoC_lw16i_set_inc(REG1,0x10d8,0x2)
0xF47A7019,	//0x18e6		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x0C601404,	//0x18e8		VoC_lw16_d(REG4,0xc60)
0xD982E70E,	//0x18ea		VoC_lw32_p(REG45,REG0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x4CCD0A82,	//0x18ec		VoC_lw16i(REG2,0x4ccd)
0xF90CFBFA,	//0x18ee		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x4E54CCAC,	//0x18f0		VoC_macX_rr(REG2,REG4,DEFAULT)	|	VoC_multf32_rr(ACC0,REG2,REG5,DEFAULT)
0xFFC0D9CD,	//0x18f2		VoC_NOP	|	VoC_lw32inc_p(ACC1,REG1,IN_PARALLEL)
0x18F8362C,	//0x18f4		VoC_bgt32_rr(SPEEX_PRE_ECHO_NOISE_MAX,ACC1,ACC0)
0xFFC0FF25,	//0x18f6		VoC_NOP	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
		//0x18f8		SPEEX_PRE_ECHO_NOISE_MAX
		//0x18f8		VoC_endloop0
0x0A84DDC5,	//0x18f8		VoC_lw16i(REG4,0x1008)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x0A851008,	//0x18fa		VoC_lw16i(REG5,0x10a8)(lo)	|	VoC_lw16i(REG4,0x1008)(hi)
0x2B8010A8,	//0x18fc		VoC_jal(filterbank_compute_bank32)(lo)	|	VoC_lw16i(REG5,0x10a8)(hi)
0xE5C71E0F,	//0x18fe		VoC_jump(SPEEX_PRE_ECHO_STATE_END)	|	VoC_jal(filterbank_compute_bank32)(hi)
		//0x1900		SPEEX_PRE_ECHO_STATE_EZ
0x10081809,	//0x1900		VoC_lw16i_set_inc(REG1,0x1008,0x2)
0xE741FF47,	//0x1902		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
		//0x1904		VoC_endloop0
0xFFC05DCF,	//0x1904		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x1906		SPEEX_PRE_ECHO_STATE_END
0x1CB32B80,	//0x1906		VoC_jal(preprocess_analysis)
0x1E762B80,	//0x1908		VoC_jal(update_noise_prob)
0x4A661486,	//0x190a		VoC_lw32_d(RL6,0x4a66)
0x04381404,	//0x190c		VoC_lw16_d(REG4,0x438)
0xFF17F005,	//0x190e		VoC_movreg32(RL7,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x1C1C2B80,	//0x1910		VoC_jal(speex_div32_16)
0x4A303820,	//0x1912		VoC_bgt16_rd(SPEEX_PRE_GT_983,REG0,0x4a30)
0x03D70A80,	//0x1914		VoC_lw16i(REG0,0x3d7)
		//0x1916		SPEEX_PRE_GT_983
0x4A660B07,	//0x1916		VoC_sub16_dr(REG7,0x4a66,REG0)
0x0C611404,	//0x1918		VoC_lw16_d(REG4,0xc61)
0x043C1809,	//0x191a		VoC_lw16i_set_inc(REG1,0x43c,0x2)
0x0FB81806,	//0x191c		VoC_lw16i_set_inc(REG2,0xfb8,0x1)
0x06AC180B,	//0x191e		VoC_lw16i_set_inc(REG3,0x6ac,0x2)
0xF47A7019,	//0x1920		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xDFC7E726,	//0x1922		VoC_push16(REG7,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD98FDFC0,	//0x1924		VoC_lw32_p(RL7,REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x4A041486,	//0x1926		VoC_lw32_d(RL6,0x4a04)
0xC9F7FBD6,	//0x1928		VoC_add32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0xfffffffa,DEFAULT)
0xD8A5FA3F,	//0x192a		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_shr32_ri(RL7,0x7,DEFAULT)
0x3185D9DE,	//0x192c		VoC_bez16_r(SPEEX_PRE_UPDATE_PROB_EZ,REG5)(lo)	|	VoC_lw32inc_p(RL6,REG3,DEFAULT)
0x363E1933,	//0x192e		VoC_bgt32_rr(SPEEX_PRE_UPDATE_PROB_EZ,RL7,RL6)(lo)	|	VoC_bez16_r(SPEEX_PRE_UPDATE_PROB_EZ,REG5)(hi)
0xD98C1933,	//0x1930		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_bgt32_rr(SPEEX_PRE_UPDATE_PROB_EZ,RL7,RL6)(hi)
0xFBCEE5D4,	//0x1932		VoC_shr32_ri(RL6,0xfffffff9,DEFAULT)	|	VoC_jump(SPEEX_PRE_NOISE_EST_END)
		//0x1933		SPEEX_PRE_UPDATE_PROB_EZ
0xFBFAFF32,	//0x1934		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0xCD44F90C,	//0x1936		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0CE60,	//0x1938		VoC_NOP	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0x598AFF26,	//0x193a		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBFAF6E0,	//0x193c		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_movreg16(REG0,REG7,IN_PARALLEL)
0xCD44F90C,	//0x193e		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0CE60,	//0x1940		VoC_NOP	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0x3284C934,	//0x1942		VoC_bgtz32_r(SPEEX_PRE_NOISE_EST_END,ACC0)(lo)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFF441946,	//0x1944		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bgtz32_r(SPEEX_PRE_NOISE_EST_END,ACC0)(hi)
		//0x1946		SPEEX_PRE_NOISE_EST_END
0xDF80DDCC,	//0x1946		VoC_pop16(REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x1948		VoC_endloop0
0x0A84DF87,	//0x1948		VoC_lw16i(REG4,0x43c)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x0A85043C,	//0x194a		VoC_lw16i(REG5,0x4dc)(lo)	|	VoC_lw16i(REG4,0x43c)(hi)
0xFFC004DC,	//0x194c		VoC_NAD	|	VoC_lw16i(REG5,0x4dc)(hi)
0x1E0F2B80,	//0x194e		VoC_jal(filterbank_compute_bank32)
0x04381404,	//0x1950		VoC_lw16_d(REG4,0x438)
0x00680A85,	//0x1952		VoC_lw16i(REG5,0x68)
0x4A044494,	//0x1954		VoC_bne16_rd(SPEEX_PRE_NB_ADAPT_E_1,REG4,0x4a04)
0x06AC1808,	//0x1956		VoC_lw16i_set_inc(REG0,0x6ac,0x2)
0x05DC1809,	//0x1958		VoC_lw16i_set_inc(REG1,0x5dc,0x2)
0xD9C36743,	//0x195a		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0xDDCBD9C3,	//0x195c		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x195d		VoC_endloop0
		//0x195e		SPEEX_PRE_NB_ADAPT_E_1
0x043C1808,	//0x195e		VoC_lw16i_set_inc(REG0,0x43c,0x2)
0x10081809,	//0x1960		VoC_lw16i_set_inc(REG1,0x1008,0x2)
0x050C180A,	//0x1962		VoC_lw16i_set_inc(REG2,0x50c,0x2)
0x06AC180B,	//0x1964		VoC_lw16i_set_inc(REG3,0x6ac,0x2)
0x2E28F004,	//0x1966		VoC_loop_r(0,REG5)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xDFC419BD,	//0x1968		VoC_push16(REG4,DEFAULT)	|	VoC_loop_r(0,REG5)(hi)
0xE00D702C,	//0x196a		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
0xFBD659C7,	//0x196c		VoC_shr32_ri(RL6,0xfffffffa,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFA3FC9F7,	//0x196e		VoC_shr32_ri(RL7,0x7,DEFAULT)	|	VoC_add32_rr(RL7,RL7,RL6,DEFAULT)
0x4A04093F,	//0x1970		VoC_add32_rd(RL7,RL7,0x4a04)
0xD9D3D9CE,	//0x1972		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0x49F7C99E,	//0x1974		VoC_add32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG67,DEFAULT)
0xD9DEDF40,	//0x1976		VoC_lw32inc_p(RL6,REG3,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0x1F6A2B80,	//0x1978		VoC_jal(spx_DIV32_16_Q8)
0xE00D702C,	//0x197a		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
0xCA30FBC6,	//0x197c		VoC_sub32_rr(REG01,REG01,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)
0x4A241407,	//0x197e		VoC_lw16_d(REG7,0x4a24)
0x0A85F8C7,	//0x1980		VoC_lw16i(REG5,0xe80)(lo)	|	VoC_shr16_ri(REG7,0xfffffff8,DEFAULT)
0xC1650E80,	//0x1982		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0xe80)(hi)
0x19883438,	//0x1984		VoC_bgt16_rr(SPEEX_PRE_POST,REG7,REG0)
0xFFC0E0E0,	//0x1986		VoC_NOP	|	VoC_movreg16(REG0,REG7,DEFAULT)
		//0x1988		SPEEX_PRE_POST
0xDC50DFC0,	//0x1988		VoC_sw16_p(REG0,REG5,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x05DC0A85,	//0x198a		VoC_lw16i(REG5,0x5dc)
0xC17DC127,	//0x198c		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG4,REG4,DEFAULT)
0xD9AEFFC0,	//0x198e		VoC_lw32_p(RL6,REG5,DEFAULT)	|	VoC_NOP
0x2B80C9BF,	//0x1990		VoC_jal(spx_DIV32_16_Q15)(lo)	|	VoC_add32_rr(RL7,RL6,RL7,DEFAULT)
0xF1F91F44,	//0x1992		VoC_lw16i_short(FORMAT32,0xf,DEFAULT)	|	VoC_jal(spx_DIV32_16_Q15)(hi)
0xFFC0CC02,	//0x1994		VoC_NOP	|	VoC_multf32_rr(REG45,REG0,REG0,DEFAULT)
0x4A5E0A22,	//0x1996		VoC_multf32_rd(REG45,REG4,0x4a5e)
0x0724FFC0,	//0x1998		VoC_add16_rd(REG4,REG4,0x4a36)(lo)	|	VoC_NOP
0xDF804A36,	//0x199a		VoC_pop16(REG0,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x4a36)(hi)
0x19A03100,	//0x199c		VoC_bgtz16_r(SPEEX_PRE_POST_GTZ,REG0)
0xFFC07000,	//0x199e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x19a0		SPEEX_PRE_POST_GTZ
0xF4017F44,	//0x19a0		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCBF74E20,	//0x19a2		VoC_sub32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG0,DEFAULT)
0x1F6A2B80,	//0x19a4		VoC_jal(spx_DIV32_16_Q8)
0x4A660B25,	//0x19a6		VoC_sub16_dr(REG5,0x4a66,REG4)
0xFFC0CE28,	//0x19a8		VoC_NOP	|	VoC_mac32_rr(REG5,REG0,DEFAULT)
0x4A460924,	//0x19aa		VoC_add32_rd(ACC0,ACC0,0x4a46)
0xFF22FA7C,	//0x19ac		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0x00640A85,	//0x19ae		VoC_lw16i(REG5,0x64)
0xF68678C5,	//0x19b0		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xfffffff8,DEFAULT)
0x19B6342C,	//0x19b2		VoC_bgt16_rr(SPEEX_PRE_PRIOR_END,REG5,REG4)
0xFFC060A6,	//0x19b4		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x19b6		SPEEX_PRE_PRIOR_END
0xDF845F00,	//0x19b6		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x0E180A85,	//0x19b8		VoC_lw16i(REG5,0xe18)
0x0724C165,	//0x19ba		VoC_add16_rd(REG4,REG4,0x4a04)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDC564A04,	//0x19bc		VoC_sw16_p(REG6,REG5,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x4a04)(hi)
		//0x19bd		VoC_endloop0
0x0E181804,	//0x19be		VoC_lw16i_set_inc(REG0,0xe18,0x1)
0x03301805,	//0x19c0		VoC_lw16i_set_inc(REG1,0x330,0x1)
0xD8047F44,	//0x19c2		VoC_lw16_p(REG4,REG0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xF4015815,	//0x19c4		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0x4A400E20,	//0x19c6		VoC_mac32_rd(REG4,0x4a40)
0x4A540E28,	//0x19c8		VoC_mac32_rd(REG5,0x4a54)
0x0924FFC0,	//0x19ca		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0xFA7C4A46,	//0x19cc		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0xFFC0FF22,	//0x19ce		VoC_NOP	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x1406DC94,	//0x19d0		VoC_lw16_d(REG6,0xc61)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x07B60C61,	//0x19d2		VoC_sub16_rd(REG6,REG6,0x4a06)(lo)	|	VoC_lw16_d(REG6,0xc61)(hi)
0xE7954A06,	//0x19d4		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub16_rd(REG6,REG6,0x4a06)(hi)
0xD815FF44,	//0x19d6		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x4A540E28,	//0x19d8		VoC_mac32_rd(REG5,0x4a54)
0x0E20D884,	//0x19da		VoC_mac32_rd(REG4,0x4a34)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD8844A34,	//0x19dc		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_mac32_rd(REG4,0x4a34)(hi)
0x4A380E20,	//0x19de		VoC_mac32_rd(REG4,0x4a38)
0x0E20D884,	//0x19e0		VoC_mac32_rd(REG4,0x4a34)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xFFC04A34,	//0x19e2		VoC_NOP	|	VoC_mac32_rd(REG4,0x4a34)(hi)
0x4A460924,	//0x19e4		VoC_add32_rd(ACC0,ACC0,0x4a46)
0xFF22FA7C,	//0x19e6		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xDC94FFC0,	//0x19e8		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_NOP
		//0x19ea		VoC_endloop0
0x4A060780,	//0x19ea		VoC_sub16_rd(REG0,REG0,0x4a06)
0x0C631407,	//0x19ec		VoC_lw16_d(REG7,0xc63)
0x4A04073F,	//0x19ee		VoC_add16_rd(REG7,REG7,0x4a04)
0x67CEFF44,	//0x19f0		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xD815DE00,	//0x19f2		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_inc_p(REG0,IN_PARALLEL)
0x4A540E28,	//0x19f4		VoC_mac32_rd(REG5,0x4a54)
0x0E20D884,	//0x19f6		VoC_mac32_rd(REG4,0x4a40)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xFFC04A40,	//0x19f8		VoC_NOP	|	VoC_mac32_rd(REG4,0x4a40)(hi)
0x4A460924,	//0x19fa		VoC_add32_rd(ACC0,ACC0,0x4a46)
0xFF22FA7C,	//0x19fc		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xDC94FF44,	//0x19fe		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x19ff		VoC_endloop0
0x03801805,	//0x1a00		VoC_lw16i_set_inc(REG1,0x380,0x1)
0x0C631407,	//0x1a02		VoC_lw16_d(REG7,0xc63)
0xFF467F47,	//0x1a04		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xE7C7FFC0,	//0x1a06		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_NAD
0xE0055894,	//0x1a08		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x1A0E3244,	//0x1a0a		VoC_bnltz16_r(SPEEX_PRE_EXTEND_ZETA_M,REG4)
0x7FFF0AC5,	//0x1a0c		VoC_lw16i(REG5,0xffff)
		//0x1a0e		SPEEX_PRE_EXTEND_ZETA_M
		//0x1a0e		VoC_endloop0
0x140EC996,	//0x1a0e		VoC_lw16_d(RL7_LO,0xc63)(lo)	|	VoC_add32_rr(RL6,RL6,REG45,DEFAULT)
0xFFC00C63,	//0x1a10		VoC_NAD	|	VoC_lw16_d(RL7_LO,0xc63)(hi)
0x1C1C2B80,	//0x1a12		VoC_jal(speex_div32_16)
0x20832B80,	//0x1a14		VoC_jal(spx_qcurve)
0x0A02F1F9,	//0x1a16		VoC_multf32_rd(REG45,REG0,0x4a60)(lo)	|	VoC_lw16i_short(FORMAT32,0xf,DEFAULT)
0xFFC04A60,	//0x1a18		VoC_NOP	|	VoC_multf32_rd(REG45,REG0,0x4a60)(hi)
0x4A360724,	//0x1a1a		VoC_add16_rd(REG4,REG4,0x4a36)
0x1504FFC0,	//0x1a1c		VoC_sw16_d(REG4,0xc6f)(lo)	|	VoC_NOP
0x7F440C6F,	//0x1a1e		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sw16_d(REG4,0xc6f)(hi)
0x0E20F401,	//0x1a20		VoC_mac32_rd(REG4,0xc6d)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x0B240C6D,	//0x1a22		VoC_sub16_dr(REG4,0x4a66,REG4)(lo)	|	VoC_mac32_rd(REG4,0xc6d)(hi)
0x0E204A66,	//0x1a24		VoC_mac32_rd(REG4,0xc6c)(lo)	|	VoC_sub16_dr(REG4,0x4a66,REG4)(hi)
0xFFC00C6C,	//0x1a26		VoC_NOP	|	VoC_mac32_rd(REG4,0xc6c)(hi)
0x4A460924,	//0x1a28		VoC_add32_rd(ACC0,ACC0,0x4a46)
0xFF22FA7C,	//0x1a2a		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0x1F902B80,	//0x1a2c		VoC_jal(compute_gain_floor)
0x0C611406,	//0x1a2e		VoC_lw16_d(REG6,0xc61)
0x0C631407,	//0x1a30		VoC_lw16_d(REG7,0xc63)
0x0E001804,	//0x1a32		VoC_lw16i_set_inc(REG0,0xe00,0x1)
0x067C1809,	//0x1a34		VoC_lw16i_set_inc(REG1,0x67c,0x2)
0x0E681806,	//0x1a36		VoC_lw16i_set_inc(REG2,0xe68,0x1)
0x0ED01807,	//0x1a38		VoC_lw16i_set_inc(REG3,0xed0,0x1)
0xFFC07006,	//0x1a3a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1AED2E38,	//0x1a3c		VoC_loop_r(0,REG7)
0xDF405FC6,	//0x1a3e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xE00F702E,	//0x1a40		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
0x5824FBC7,	//0x1a42		VoC_lw16_p(REG4,REG2,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)
0x3244E005,	//0x1a44		VoC_bnltz16_r(SPEEX_PRE_EXTEND_PRIOR_M,REG4)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0AC51A49,	//0x1a46		VoC_lw16i(REG5,0xffff)(lo)	|	VoC_bnltz16_r(SPEEX_PRE_EXTEND_PRIOR_M,REG4)(hi)
0xFF167FFF,	//0x1a48		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_lw16i(REG5,0xffff)(hi)
		//0x1a49		SPEEX_PRE_EXTEND_PRIOR_M
0xFB8E48BF,	//0x1a4a		VoC_shr32_ri(RL6,0xfffffff1,IN_PARALLEL)	|	VoC_add32_rr(RL7,REG45,RL7,DEFAULT)
0xFA0AFF3A,	//0x1a4c		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x2B80C996,	//0x1a4e		VoC_jal(speex_div32_16)(lo)	|	VoC_add32_rr(RL6,RL6,REG45,DEFAULT)
0xDFC01C1C,	//0x1a50		VoC_push16(REG0,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
0xE00558B4,	//0x1a52		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x1A583244,	//0x1a54		VoC_bnltz16_r(SPEEX_PRE_EXTEND_POST_M,REG4)
0x7FFF0AC5,	//0x1a56		VoC_lw16i(REG5,0xffff)
		//0x1a58		SPEEX_PRE_EXTEND_POST_M
0x702CFBEA,	//0x1a58		VoC_lw16i_short(RL6_LO,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
0xFBAEE00D,	//0x1a5a		VoC_shr32_ri(RL6,0xfffffff5,DEFAULT)	|	VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)
0x2B80C8B2,	//0x1a5c		VoC_jal(spx_mult16_32_p15)(lo)	|	VoC_add32_rr(REG45,REG45,RL6,DEFAULT)
0xFF261E66,	//0x1a5e		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_jal(spx_mult16_32_p15)(hi)
0x203D2B80,	//0x1a60		VoC_jal(hypergeom_gain)
0xDF80FF02,	//0x1a62		VoC_pop16(REG0,DEFAULT)	|	VoC_movreg32(REG45,REG01,DEFAULT)
0xF47A7019,	//0x1a64		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xF90CFBFA,	//0x1a66		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CD44,	//0x1a68		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0x602CFFC0,	//0x1a6a		VoC_blt32_rd(SPEEX_PRE_GAIN,ACC0,0x4a66)(lo)	|	VoC_NOP
0x14844A66,	//0x1a6c		VoC_lw32_d(ACC0,0x4a66)(lo)	|	VoC_blt32_rd(SPEEX_PRE_GAIN,ACC0,0x4a66)(hi)
0xFFC04A66,	//0x1a6e		VoC_NAD	|	VoC_lw32_d(ACC0,0x4a66)(hi)
		//0x1a70		SPEEX_PRE_GAIN
0xDF007F22,	//0x1a70		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDC84FFC0,	//0x1a72		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
0xF1F9DF40,	//0x1a74		VoC_lw16i_short(FORMAT32,0xf,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xF019CD22,	//0x1a76		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_multf32_rr(REG45,REG4,REG4,DEFAULT)
0x4A5C0A20,	//0x1a78		VoC_multf32_rd(REG01,REG4,0x4a5c)
0x0900FFC0,	//0x1a7a		VoC_add32_rd(REG01,REG01,0x4a46)(lo)	|	VoC_NOP
0xFA784A46,	//0x1a7c		VoC_shr32_ri(REG01,0xf,DEFAULT)	|	VoC_add32_rd(REG01,REG01,0x4a46)(hi)
0x0A81DF86,	//0x1a7e		VoC_lw16i(REG1,0x74c)(lo)	|	VoC_pop16(REG6,DEFAULT)
0xC1B4074C,	//0x1a80		VoC_add16_rr(REG4,REG6,REG6,DEFAULT)	|	VoC_lw16i(REG1,0x74c)(hi)
0xFFC0C061,	//0x1a82		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0xFFC0598A,	//0x1a84		VoC_NAD(IN_PARALLEL)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0x1E662B80,	//0x1a86		VoC_jal(spx_mult16_32_p15)
0xDF007F25,	//0x1a88		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xDF40DFC6,	//0x1a8a		VoC_push32(REG01,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x199A0A80,	//0x1a8c		VoC_lw16i(REG0,0x199a)
0xDF45D98A,	//0x1a8e		VoC_push32(ACC1,DEFAULT)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0x1E662B80,	//0x1a90		VoC_jal(spx_mult16_32_p15)
0x492CDF05,	//0x1a92		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_pop32(ACC1,DEFAULT)
0xFFC0DF00,	//0x1a94		VoC_NOP	|	VoC_pop32(REG01,IN_PARALLEL)
0xDF40DDCC,	//0x1a96		VoC_push32(REG01,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x03800A81,	//0x1a98		VoC_lw16i(REG1,0x380)
0xFFC0C071,	//0x1a9a		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x2B80D810,	//0x1a9c		VoC_jal(spx_qcurve)(lo)	|	VoC_lw16_p(REG0,REG1,DEFAULT)
0xF1F92083,	//0x1a9e		VoC_lw16i_short(FORMAT32,0xf,DEFAULT)	|	VoC_jal(spx_qcurve)(hi)
0x4A5C0A00,	//0x1aa0		VoC_multf32_rd(REG01,REG0,0x4a5c)
0x0900FFC0,	//0x1aa2		VoC_add32_rd(REG01,REG01,0x4a3a)(lo)	|	VoC_NOP
0x0A004A3A,	//0x1aa4		VoC_multf32_rd(REG01,REG0,0xc6f)(lo)	|	VoC_add32_rd(REG01,REG01,0x4a3a)(hi)
0xFFC00C6F,	//0x1aa6		VoC_NOP	|	VoC_multf32_rd(REG01,REG0,0xc6f)(hi)
0x4A660B04,	//0x1aa8		VoC_sub16_dr(REG4,0x4a66,REG0)
0x4A666026,	//0x1aaa		VoC_blt32_rd(SPEEX_PRE_THETA,RL6,0x4a66)
0x4A661486,	//0x1aac		VoC_lw32_d(RL6,0x4a66)
		//0x1aae		SPEEX_PRE_THETA
0x0B00FF30,	//0x1aae		VoC_sub16_dr(REG0,0x4a02,REG0)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x2B804A02,	//0x1ab0		VoC_jal(spx_exp)(lo)	|	VoC_sub16_dr(REG0,0x4a02,REG0)(hi)
0xFA0F20A5,	//0x1ab2		VoC_shr32_ri(RL7,0x1,DEFAULT)	|	VoC_jal(spx_exp)(hi)
0x4A666027,	//0x1ab4		VoC_blt32_rd(SPEEX_PRE_TMP_MIN32,RL7,0x4a66)
0x4A661487,	//0x1ab6		VoC_lw32_d(RL7,0x4a66)
		//0x1ab8		SPEEX_PRE_TMP_MIN32
0xF021FF38,	//0x1ab8		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0x8251F8C1,	//0x1aba		VoC_add16inc_rp(REG1,REG1,REG2,DEFAULT)	|	VoC_shr16_ri(REG1,0xfffffff8,DEFAULT)
0xCC08F1F9,	//0x1abc		VoC_multf32_rr(REG01,REG0,REG1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xf,DEFAULT)
0xF061FFC0,	//0x1abe		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_NOP
0x3408F8C1,	//0x1ac0		VoC_bgt16_rr(SPEEX_PRE_TMP_MIN16,REG1,REG0)(lo)	|	VoC_shr16_ri(REG1,0xfffffff8,DEFAULT)
0xE0201AC5,	//0x1ac2		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_bgt16_rr(SPEEX_PRE_TMP_MIN16,REG1,REG0)(hi)
0xDFC0FFC0,	//0x1ac4		VoC_push16(REG0,DEFAULT)	|	VoC_NOP
		//0x1ac5		SPEEX_PRE_TMP_MIN16
0xF68C700D,	//0x1ac6		VoC_movreg16(RL6_LO,REG4,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x1ACC3244,	//0x1ac8		VoC_bnltz16_r(SPEEX_PRE_EXTEND_Q,REG4)
0x7FFF0ACD,	//0x1aca		VoC_lw16i(RL6_HI,0xffff)
		//0x1acc		SPEEX_PRE_EXTEND_Q
0xFBC6FF37,	//0x1acc		VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)	|	VoC_movreg32(RL7,RL6,DEFAULT)
0x4A660BBF,	//0x1ace		VoC_sub32_dr(RL7,0x4a66,RL7)
0xFA0AFF3A,	//0x1ad0		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x2B80C996,	//0x1ad2		VoC_jal(speex_div32_16)(lo)	|	VoC_add32_rr(RL6,RL6,REG45,DEFAULT)
0xFF021C1C,	//0x1ad4		VoC_movreg32(REG45,REG01,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
0xF019DF80,	//0x1ad6		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xFFC0CC27,	//0x1ad8		VoC_NOP	|	VoC_multf32_rr(RL7,REG0,REG4,DEFAULT)
0x4A26093F,	//0x1ada		VoC_add32_rd(RL7,RL7,0x4a26)
0x1486FA47,	//0x1adc		VoC_lw32_d(RL6,0x4a66)(lo)	|	VoC_shr32_ri(RL7,0x8,DEFAULT)
0xFBC64A66,	//0x1ade		VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)	|	VoC_lw32_d(RL6,0x4a66)(hi)
0x4A2A093F,	//0x1ae0		VoC_add32_rd(RL7,RL7,0x4a2a)
0x1C1C2B80,	//0x1ae2		VoC_jal(speex_div32_16)
0x0F380A81,	//0x1ae4		VoC_lw16i(REG1,0xf38)
0xFFC0C071,	//0x1ae6		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xDF00DC90,	//0x1ae8		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG0,REG1,DEFAULT)
0x0736DF86,	//0x1aea		VoC_add16_rd(REG6,REG6,0x4a04)(lo)	|	VoC_pop16(REG6,DEFAULT)
0xFFC04A04,	//0x1aec		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0x4a04)(hi)
		//0x1aed		VoC_endloop0
0x0F380A84,	//0x1aee		VoC_lw16i(REG4,0xf38)
0x0EE80A85,	//0x1af0		VoC_lw16i(REG5,0xee8)
0x1F1E2B80,	//0x1af2		VoC_jal(filterbank_compute_psd16)
0x0E000A84,	//0x1af4		VoC_lw16i(REG4,0xe00)
0x0DB00A85,	//0x1af6		VoC_lw16i(REG5,0xdb0)
0x1F1E2B80,	//0x1af8		VoC_jal(filterbank_compute_psd16)
0x0FA00A84,	//0x1afa		VoC_lw16i(REG4,0xfa0)
0x0F500A85,	//0x1afc		VoC_lw16i(REG5,0xf50)
0x1F1E2B80,	//0x1afe		VoC_jal(filterbank_compute_psd16)
0x0C611404,	//0x1b00		VoC_lw16_d(REG4,0xc61)
0x0E181804,	//0x1b02		VoC_lw16i_set_inc(REG0,0xe18,0x1)
0x0F501805,	//0x1b04		VoC_lw16i_set_inc(REG1,0xf50,0x1)
0x0EE81806,	//0x1b06		VoC_lw16i_set_inc(REG2,0xee8,0x1)
0x0DB01807,	//0x1b08		VoC_lw16i_set_inc(REG3,0xdb0,0x1)
0x2E20F007,	//0x1b0a		VoC_loop_r(0,REG4)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xDFC71BA4,	//0x1b0c		VoC_push16(REG7,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0xE00F702E,	//0x1b0e		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
0xD8847BC7,	//0x1b10		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)
0x3244F005,	//0x1b12		VoC_bnltz16_r(SPEEX_PRE_EXTEND_PRIOR_N,REG4)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x0AC51B17,	//0x1b14		VoC_lw16i(REG5,0xffff)(lo)	|	VoC_bnltz16_r(SPEEX_PRE_EXTEND_PRIOR_N,REG4)(hi)
0xFF167FFF,	//0x1b16		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_lw16i(REG5,0xffff)(hi)
		//0x1b17		SPEEX_PRE_EXTEND_PRIOR_N
0xFB8EC8BF,	//0x1b18		VoC_shr32_ri(RL6,0xfffffff1,DEFAULT)	|	VoC_add32_rr(RL7,REG45,RL7,DEFAULT)
0xFA0AFF3A,	//0x1b1a		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xDF404996,	//0x1b1c		VoC_push32(REG01,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,REG45,DEFAULT)
0x1C1C2B80,	//0x1b1e		VoC_jal(speex_div32_16)
0x0A84DFC0,	//0x1b20		VoC_lw16i(REG4,0xe80)(lo)	|	VoC_push16(REG0,DEFAULT)
0xC13C0E80,	//0x1b22		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i(REG4,0xe80)(hi)
0x5844FFC0,	//0x1b24		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_NOP
0x3244E005,	//0x1b26		VoC_bnltz16_r(SPEEX_PRE_EXTEND_POST_N,REG4)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0AC51B2B,	//0x1b28		VoC_lw16i(REG5,0xffff)(lo)	|	VoC_bnltz16_r(SPEEX_PRE_EXTEND_POST_N,REG4)(hi)
0xFBEA7FFF,	//0x1b2a		VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)	|	VoC_lw16i(REG5,0xffff)(hi)
		//0x1b2b		SPEEX_PRE_EXTEND_POST_N
0x4A041487,	//0x1b2c		VoC_lw32_d(RL7,0x4a04)
0xC8BAFBAF,	//0x1b2e		VoC_add32_rr(REG45,REG45,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffff5,DEFAULT)
0x1E662B80,	//0x1b30		VoC_jal(spx_mult16_32_p15)
0x2B80FF26,	//0x1b32		VoC_jal(hypergeom_gain)(lo)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFF02203D,	//0x1b34		VoC_movreg32(REG45,REG01,DEFAULT)	|	VoC_jal(hypergeom_gain)(hi)
0x7019DF80,	//0x1b36		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xFBFAF47A,	//0x1b38		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)
0xCD44F90C,	//0x1b3a		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0CE60,	//0x1b3c		VoC_NOP	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0xFF20FFC0,	//0x1b3e		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0x4A666020,	//0x1b40		VoC_blt32_rd(SPEEX_PRE_G,REG01,0x4a66)
0x4A661480,	//0x1b42		VoC_lw32_d(REG01,0x4a66)
		//0x1b44		SPEEX_PRE_G
0x0A02F1F9,	//0x1b44		VoC_multf32_rd(REG45,REG0,0x4a44)(lo)	|	VoC_lw16i_short(FORMAT32,0xf,DEFAULT)
0xD8364A44,	//0x1b46		VoC_lw16_p(REG6,REG3,DEFAULT)	|	VoC_multf32_rd(REG45,REG0,0x4a44)(hi)
0x1B4D34A6,	//0x1b48		VoC_bngt16_rr(SPEEX_PRE_G2,REG4,REG6)
0x4A080830,	//0x1b4a		VoC_mult16_rd(REG0,REG6,0x4a08)
0xE006FFC0,	//0x1b4c		VoC_movreg16(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x1b4d		SPEEX_PRE_G2
0xFFC0CDB0,	//0x1b4e		VoC_NOP	|	VoC_multf32_rr(REG01,REG6,REG6,DEFAULT)
0x0A00F019,	//0x1b50		VoC_multf32_rd(REG01,REG0,0x4a5c)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFFC04A5C,	//0x1b52		VoC_NOP	|	VoC_multf32_rd(REG01,REG0,0x4a5c)(hi)
0x4A460900,	//0x1b54		VoC_add32_rd(REG01,REG01,0x4a46)
0xDF877A78,	//0x1b56		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xf,DEFAULT)
0x06AC0A84,	//0x1b58		VoC_lw16i(REG4,0x6ac)
0xFFC0C1FD,	//0x1b5a		VoC_NOP	|	VoC_add16_rr(REG5,REG7,REG7,DEFAULT)
0xC12CDFC5,	//0x1b5c		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xD9A2FFC0,	//0x1b5e		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_NOP
0x1E662B80,	//0x1b60		VoC_jal(spx_mult16_32_p15)
0x0A80FF27,	//0x1b62		VoC_lw16i(REG0,0x199a)(lo)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0A84199A,	//0x1b64		VoC_lw16i(REG4,0x5dc)(lo)	|	VoC_lw16i(REG0,0x199a)(hi)
0xDF8505DC,	//0x1b66		VoC_pop16(REG5,DEFAULT)	|	VoC_lw16i(REG4,0x5dc)(hi)
0xDFC7C12C,	//0x1b68		VoC_push16(REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xD9A2DFC4,	//0x1b6a		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x1E662B80,	//0x1b6c		VoC_jal(spx_mult16_32_p15)
0xDF84C9E7,	//0x1b6e		VoC_pop16(REG4,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0xDDA7FFC0,	//0x1b70		VoC_sw32_p(RL7,REG4,DEFAULT)	|	VoC_NOP
0xFFC0DF00,	//0x1b72		VoC_NOP	|	VoC_pop32(REG01,DEFAULT)
0x3437D897,	//0x1b74		VoC_bgt16_rr(SPEEX_PRE_GAIN_GT_FLOOR,REG6,REG7)(lo)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xE0E61B78,	//0x1b76		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_bgt16_rr(SPEEX_PRE_GAIN_GT_FLOOR,REG6,REG7)(hi)
		//0x1b78		SPEEX_PRE_GAIN_GT_FLOOR
0xDCB6FFC0,	//0x1b78		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
0x700FDFC6,	//0x1b7a		VoC_lw16i_short(RL7_HI,0x0,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xDF40F6EE,	//0x1b7c		VoC_push32(REG01,DEFAULT)	|	VoC_movreg16(RL7_LO,REG7,IN_PARALLEL)
0xFF38FB8F,	//0x1b7e		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffff1,DEFAULT)
0x1C932B80,	//0x1b80		VoC_jal(spx_sqrt)
0x0B3ED827,	//0x1b82		VoC_sub16_dr(REG6,0x4a66,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0xF0194A66,	//0x1b84		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_sub16_dr(REG6,0x4a66,REG7)(hi)
0xFFC0CC32,	//0x1b86		VoC_NOP	|	VoC_multf32_rr(REG45,REG0,REG6,DEFAULT)
0x4A460912,	//0x1b88		VoC_add32_rd(REG45,REG45,0x4a46)
0xDF867A7A,	//0x1b8a		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0xF6CE700F,	//0x1b8c		VoC_movreg16(RL7_LO,REG6,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0xFF38FB8F,	//0x1b8e		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffff1,DEFAULT)
0x1C932B80,	//0x1b90		VoC_jal(spx_sqrt)
0xCE47FF44,	//0x1b92		VoC_macX_rr(REG0,REG7,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x0924FFC0,	//0x1b94		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0xFA7C4A46,	//0x1b96		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0x7F44C8A2,	//0x1b98		VoC_lw32z(ACC0,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xCE24F479,	//0x1b9a		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)
0xFF22FFC0,	//0x1b9c		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_NOP
0x5CA4FFC0,	//0x1b9e		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_NOP
0xDF87DF00,	//0x1ba0		VoC_pop16(REG7,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0x4A04073F,	//0x1ba2		VoC_add16_rd(REG7,REG7,0x4a04)
		//0x1ba4		VoC_endloop0
0x6E0DFFC0,	//0x1ba4		VoC_bnez16_d(SPEEX_PRE_DENOISE,0xc64)(lo)	|	VoC_NOP
0x14040C64,	//0x1ba6		VoC_lw16_d(REG4,0xc61)(lo)	|	VoC_bnez16_d(SPEEX_PRE_DENOISE,0xc64)(hi)
0x0A850C61,	//0x1ba8		VoC_lw16i(REG5,0x7fff)(lo)	|	VoC_lw16_d(REG4,0xc61)(hi)
0x07247FFF,	//0x1baa		VoC_add16_rd(REG4,REG4,0xc63)(lo)	|	VoC_lw16i(REG5,0x7fff)(hi)
0x18040C63,	//0x1bac		VoC_lw16i_set_inc(REG0,0xee8,0x1)(lo)	|	VoC_add16_rd(REG4,REG4,0xc63)(hi)
0xE7010EE8,	//0x1bae		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xee8,0x1)(hi)
		//0x1bb0		VoC_endloop0
0xFFC05C85,	//0x1bb0		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x1bb2		SPEEX_PRE_DENOISE
0x0D101804,	//0x1bb2		VoC_lw16i_set_inc(REG0,0xd10,0x1)
0x0EE81805,	//0x1bb4		VoC_lw16i_set_inc(REG1,0xee8,0x1)
0xD8077019,	//0x1bb6		VoC_lw16_p(REG7,REG0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFFC099CA,	//0x1bb8		VoC_NOP	|	VoC_multf32_rp(REG45,REG7,REG1,DEFAULT)
0x4A460912,	//0x1bba		VoC_add32_rd(REG45,REG45,0x4a46)
0xFFC0FA7A,	//0x1bbc		VoC_NOP	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0xDE08DC84,	//0x1bbe		VoC_inc_p(REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x0C611406,	//0x1bc0		VoC_lw16_d(REG6,0xc61)
0x4A0407B6,	//0x1bc2		VoC_sub16_rd(REG6,REG6,0x4a04)
0x1BD52E31,	//0x1bc4		VoC_loop_r(1,REG6)
0x99CAD807,	//0x1bc6		VoC_multf32_rp(REG45,REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x0912FFC0,	//0x1bc8		VoC_add32_rd(REG45,REG45,0x4a46)(lo)	|	VoC_NOP
0xFA7A4A46,	//0x1bca		VoC_shr32_ri(REG45,0xf,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x4a46)(hi)
0xDC84FFC0,	//0x1bcc		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
0x9BCAD807,	//0x1bce		VoC_multf32inc_rp(REG45,REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x0912FFC0,	//0x1bd0		VoC_add32_rd(REG45,REG45,0x4a46)(lo)	|	VoC_NOP
0xFA7A4A46,	//0x1bd2		VoC_shr32_ri(REG45,0xf,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x4a46)(hi)
0xDC84FFC0,	//0x1bd4		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
		//0x1bd5		VoC_endloop1
0x4A040789,	//0x1bd6		VoC_sub16_rd(REG1,REG1,0x4a04)
0x99CAD807,	//0x1bd8		VoC_multf32_rp(REG45,REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x0912FFC0,	//0x1bda		VoC_add32_rd(REG45,REG45,0x4a46)(lo)	|	VoC_NOP
0xFA7A4A46,	//0x1bdc		VoC_shr32_ri(REG45,0xf,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x4a46)(hi)
0xDC04FFC0,	//0x1bde		VoC_sw16_p(REG4,REG0,DEFAULT)	|	VoC_NOP
0x0D100A80,	//0x1be0		VoC_lw16i(REG0,0xd10)
0x0C700A81,	//0x1be2		VoC_lw16i(REG1,0xc70)
0x095E1500,	//0x1be4		VoC_sw16_d(REG0,0x95e)
0x095F1501,	//0x1be6		VoC_sw16_d(REG1,0x95f)
0x20EF2B80,	//0x1be8		VoC_jal(spx_kiss_fftri2)
0x0C701804,	//0x1bea		VoC_lw16i_set_inc(REG0,0xc70,0x1)
0x43081805,	//0x1bec		VoC_lw16i_set_inc(REG1,0x4308,0x1)
0x043B1402,	//0x1bee		VoC_lw16_d(REG2,0x43b)
0x0C611404,	//0x1bf0		VoC_lw16_d(REG4,0xc61)
0x702EF8FC,	//0x1bf2		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x0B13E00F,	//0x1bf4		VoC_sub16_dr(REG3,0x4a04,REG2)(lo)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0xFE9F4A04,	//0x1bf6		VoC_shr32_rr(RL7,REG3,DEFAULT)	|	VoC_sub16_dr(REG3,0x4a04,REG2)(hi)
0xF4796710,	//0x1bf8		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xE0075806,	//0x1bfa		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x1C003246,	//0x1bfc		VoC_bnltz16_r(SPEEX_PRE_EXTEND_FRAME,REG6)
0x7FFF0AC7,	//0x1bfe		VoC_lw16i(REG7,0xffff)
		//0x1c00		SPEEX_PRE_EXTEND_FRAME
0xFE93C8FB,	//0x1c00		VoC_shr32_rr(REG67,REG2,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
0xF4797F44,	//0x1c02		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC0D131,	//0x1c04		VoC_NOP	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0xFFC0FF23,	//0x1c06		VoC_NOP	|	VoC_movreg32(REG67,ACC0,DEFAULT)
		//0x1c08		VoC_endloop0
0x1804DC86,	//0x1c08		VoC_lw16i_set_inc(REG0,0xb42,0x1)(lo)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x18050B42,	//0x1c0a		VoC_lw16i_set_inc(REG1,0xc70,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xb42,0x1)(hi)
0x18060C70,	//0x1c0c		VoC_lw16i_set_inc(REG2,0xcc0,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xc70,0x1)(hi)
0x18070CC0,	//0x1c0e		VoC_lw16i_set_inc(REG3,0x3e8,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0xcc0,0x1)(hi)
0x140403E8,	//0x1c10		VoC_lw16_d(REG4,0xc61)(lo)	|	VoC_lw16i_set_inc(REG3,0x3e8,0x1)(hi)
0xE7050C61,	//0x1c12		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16_d(REG4,0xc61)(hi)
0xD8A5D836,	//0x1c14		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16_p(REG6,REG3,DEFAULT)
0xDCB5838C,	//0x1c16		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_add16inc_rp(REG4,REG6,REG1,DEFAULT)
		//0x1c18		VoC_endloop0
0xDFA9DC84,	//0x1c18		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xE580FFC0,	//0x1c1a		VoC_return	|	VoC_NOP
		//0x1c1c		speex_div32_16
0x5F41DF44,	//0x1c1c		VoC_push32(REG23,DEFAULT)	|	VoC_push32(ACC0,DEFAULT)
0x5F43E014,	//0x1c1e		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x7F40E005,	//0x1c20		VoC_lw32z(REG01,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x73E6FF34,	//0x1c22		VoC_lw16i_short(REG6,0x1f,DEFAULT)	|	VoC_movreg32(ACC0,RL6,IN_PARALLEL)
0x5F46FAFC,	//0x1c24		VoC_push32(RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1f,IN_PARALLEL)
0x602EE007,	//0x1c26		VoC_blt32_rd(SPX_DIV_INT32_LT_65536,RL6,0x4a6c)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xFA864A6C,	//0x1c28		VoC_shr32_ri(RL6,0x10,DEFAULT)	|	VoC_blt32_rd(SPX_DIV_INT32_LT_65536,RL6,0x4a6c)(hi)
0x4A16073F,	//0x1c2a		VoC_add16_rd(REG7,REG7,0x4a16)
		//0x1c2c		SPX_DIV_INT32_LT_65536
0x4A2A6036,	//0x1c2c		VoC_blt32_rd(SPX_DIV_INT32_LT_256,RL6,0x4a2a)
0x073FFA46,	//0x1c2e		VoC_add16_rd(REG7,REG7,0x4a12)(lo)	|	VoC_shr32_ri(RL6,0x8,DEFAULT)
0xFFC04A12,	//0x1c30		VoC_NAD	|	VoC_add16_rd(REG7,REG7,0x4a12)(hi)
		//0x1c32		SPX_DIV_INT32_LT_256
0x4A166036,	//0x1c32		VoC_blt32_rd(SPX_DIV_INT32_LT_16,RL6,0x4a16)
0x073FFA26,	//0x1c34		VoC_add16_rd(REG7,REG7,0x4a0a)(lo)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
0xFFC04A0A,	//0x1c36		VoC_NAD	|	VoC_add16_rd(REG7,REG7,0x4a0a)(hi)
		//0x1c38		SPX_DIV_INT32_LT_16
0x4A0A6036,	//0x1c38		VoC_blt32_rd(SPX_DIV_INT32_LT_4,RL6,0x4a0a)
0x073FFA16,	//0x1c3a		VoC_add16_rd(REG7,REG7,0x4a06)(lo)	|	VoC_shr32_ri(RL6,0x2,DEFAULT)
0xFFC04A06,	//0x1c3c		VoC_NAD	|	VoC_add16_rd(REG7,REG7,0x4a06)(hi)
		//0x1c3e		SPX_DIV_INT32_LT_4
0x4A066023,	//0x1c3e		VoC_blt32_rd(SPX_DIV_INT32_LT_2,REG67,0x4a06)
0xFFC041E7,	//0x1c40		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
		//0x1c42		SPX_DIV_INT32_LT_2
0xDF0641E7,	//0x1c42		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0xC1E760E6,	//0x1c44		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x1C522E39,	//0x1c46		VoC_loop_r(1,REG7)
0xFF3143A6,	//0x1c48		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x64D1FEB1,	//0x1c4a		VoC_and32_rr(REG23,REG45,DEFAULT)	|	VoC_shr32_rr(REG23,REG6,DEFAULT)
0x363CFBF8,	//0x1c4c		VoC_bgt32_rr(SPX_DIV32_TMP_LT_DIVISOR,RL7,ACC0)(lo)	|	VoC_shr32_ri(REG01,0xffffffff,IN_PARALLEL)
0x48101C51,	//0x1c4e		VoC_add32_rr(REG01,REG01,REG45,DEFAULT)	|	VoC_bgt32_rr(SPX_DIV32_TMP_LT_DIVISOR,RL7,ACC0)(hi)
0xFBFCCB3C,	//0x1c50		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,RL7,IN_PARALLEL)
		//0x1c51		SPX_DIV32_TMP_LT_DIVISOR
		//0x1c52		VoC_endloop1
0x7A0CC90C,	//0x1c52		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG23,DEFAULT)
0x7F22DF03,	//0x1c54		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0xDF04DF01,	//0x1c56		VoC_pop32(ACC0,DEFAULT)	|	VoC_pop32(REG23,IN_PARALLEL)
0xDF43E580,	//0x1c58		VoC_push32(REG67,DEFAULT)	|	VoC_return
		//0x1c59		spx_ilog2
0x602BF001,	//0x1c5a		VoC_blt32_rd(SPX_ILOG2_INT32_LT_65536,REG67,0x4a6c)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFA834A6C,	//0x1c5c		VoC_shr32_ri(REG67,0x10,DEFAULT)	|	VoC_blt32_rd(SPX_ILOG2_INT32_LT_65536,REG67,0x4a6c)(hi)
0x4A160709,	//0x1c5e		VoC_add16_rd(REG1,REG1,0x4a16)
		//0x1c60		SPX_ILOG2_INT32_LT_65536
0x4A2A6033,	//0x1c60		VoC_blt32_rd(SPX_ILOG2_INT32_LT_256,REG67,0x4a2a)
0x0709FA43,	//0x1c62		VoC_add16_rd(REG1,REG1,0x4a12)(lo)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0xFFC04A12,	//0x1c64		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x4a12)(hi)
		//0x1c66		SPX_ILOG2_INT32_LT_256
0x4A166033,	//0x1c66		VoC_blt32_rd(SPX_ILOG2_INT32_LT_16,REG67,0x4a16)
0x0709FA23,	//0x1c68		VoC_add16_rd(REG1,REG1,0x4a0a)(lo)	|	VoC_shr32_ri(REG67,0x4,DEFAULT)
0xFFC04A0A,	//0x1c6a		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x4a0a)(hi)
		//0x1c6c		SPX_ILOG2_INT32_LT_16
0x4A0A6033,	//0x1c6c		VoC_blt32_rd(SPX_ILOG2_INT32_LT_4,REG67,0x4a0a)
0x0709FA13,	//0x1c6e		VoC_add16_rd(REG1,REG1,0x4a06)(lo)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
0xFFC04A06,	//0x1c70		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x4a06)(hi)
		//0x1c72		SPX_ILOG2_INT32_LT_4
0x4A066023,	//0x1c72		VoC_blt32_rd(SPX_ILOG2_INT32_LT_2,REG67,0x4a06)
0x4A040709,	//0x1c74		VoC_add16_rd(REG1,REG1,0x4a04)
		//0x1c76		SPX_ILOG2_INT32_LT_2
0xE580DF03,	//0x1c76		VoC_return	|	VoC_pop32(REG67,DEFAULT)
		//0x1c78		spx_ilog4
0xF002DF43,	//0x1c78		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x4A6C6033,	//0x1c7a		VoC_blt32_rd(SPX_ILOG4_INT32_LT_65536,REG67,0x4a6c)
0x0712FA83,	//0x1c7c		VoC_add16_rd(REG2,REG2,0x4a12)(lo)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFFC04A12,	//0x1c7e		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x4a12)(hi)
		//0x1c80		SPX_ILOG4_INT32_LT_65536
0x4A2A6033,	//0x1c80		VoC_blt32_rd(SPX_ILOG4_INT32_LT_256,REG67,0x4a2a)
0x0712FA43,	//0x1c82		VoC_add16_rd(REG2,REG2,0x4a0a)(lo)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0xFFC04A0A,	//0x1c84		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x4a0a)(hi)
		//0x1c86		SPX_ILOG4_INT32_LT_256
0x4A166033,	//0x1c86		VoC_blt32_rd(SPX_ILOG4_INT32_LT_16,REG67,0x4a16)
0x0712FA23,	//0x1c88		VoC_add16_rd(REG2,REG2,0x4a06)(lo)	|	VoC_shr32_ri(REG67,0x4,DEFAULT)
0xFFC04A06,	//0x1c8a		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x4a06)(hi)
		//0x1c8c		SPX_ILOG4_INT32_LT_16
0x4A0A602B,	//0x1c8c		VoC_blt32_rd(SPX_ILOG4_INT32_LT_4,REG67,0x4a0a)
0x0712FA13,	//0x1c8e		VoC_add16_rd(REG2,REG2,0x4a04)(lo)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
0xDF034A04,	//0x1c90		VoC_pop32(REG67,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x4a04)(hi)
		//0x1c91		SPX_ILOG4_INT32_LT_4
0xDFE9E580,	//0x1c92		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1c93		spx_sqrt
0xDF43DF41,	//0x1c94		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFFC07F03,	//0x1c96		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG67,REG01,DEFAULT)
0x1C782B80,	//0x1c98		VoC_jal(spx_ilog4)
0x4A0E0792,	//0x1c9a		VoC_sub16_rd(REG2,REG2,0x4a0e)
0xF8FAE043,	//0x1c9c		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x1806FE90,	//0x1c9e		VoC_lw16i_set_inc(REG2,0x49e0,0x1)(lo)	|	VoC_shr32_rr(REG01,REG2,DEFAULT)
0xF1D949E0,	//0x1ca0		VoC_lw16i_short(FORMAT32,0xe,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x49e0,0x1)(hi)
0xFFC09A13,	//0x1ca2		VoC_NOP	|	VoC_multf32inc_rp(REG67,REG0,REG2,DEFAULT)
0xCC338396,	//0x1ca4		VoC_multf32_rr(REG67,REG0,REG6,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0x8396FFC0,	//0x1ca6		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_NOP
0xFFC0CC33,	//0x1ca8		VoC_NOP	|	VoC_multf32_rr(REG67,REG0,REG6,DEFAULT)
0x0B1B8390,	//0x1caa		VoC_sub16_dr(REG3,0x4a10,REG3)(lo)	|	VoC_add16inc_rp(REG0,REG6,REG2,DEFAULT)
0xFE184A10,	//0x1cac		VoC_shr16_rr(REG0,REG3,DEFAULT)	|	VoC_sub16_dr(REG3,0x4a10,REG3)(hi)
0xDF01DF03,	//0x1cae		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xFFC0DFA9,	//0x1cb0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1cb2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1cb3		preprocess_analysis
0x0C611400,	//0x1cb4		VoC_lw16_d(REG0,0xc61)
0x03981809,	//0x1cb6		VoC_lw16i_set_inc(REG1,0x398,0x2)
0x0C70180A,	//0x1cb8		VoC_lw16i_set_inc(REG2,0xc70,0x2)
0x0B42180B,	//0x1cba		VoC_lw16i_set_inc(REG3,0xb42,0x2)
0xF6056004,	//0x1cbc		VoC_movreg16(REG5,REG0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0x6703F80C,	//0x1cbe		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xD9CFD9CF,	//0x1cc0		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG1,IN_PARALLEL)
		//0x1cc2		VoC_endloop0
0x1809DDD7,	//0x1cc2		VoC_lw16i_set_inc(REG1,0x398,0x2)(lo)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0xE7040398,	//0x1cc4		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x398,0x2)(hi)
0xFFC0D9DF,	//0x1cc6		VoC_NOP	|	VoC_lw32inc_p(RL7,REG3,DEFAULT)
0xDDCFDDD7,	//0x1cc8		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x1cc9		VoC_endloop0
0x0C701806,	//0x1cca		VoC_lw16i_set_inc(REG2,0xc70,0x1)
0x43081807,	//0x1ccc		VoC_lw16i_set_inc(REG3,0x4308,0x1)
0xF8FD7004,	//0x1cce		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xFF4371F9,	//0x1cd0		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xf,DEFAULT)
0xE750FFC0,	//0x1cd2		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_NAD
0xD8B47F44,	//0x1cd4		VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC0D022,	//0x1cd6		VoC_NOP	|	VoC_mac32_rp(REG4,REG2,DEFAULT)
0xFFC0FF20,	//0x1cd8		VoC_NOP	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0x3100DCA0,	//0x1cda		VoC_bgtz16_r(Pp_analysis_Frame_gtz,REG0)(lo)	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
0x0B001CE0,	//0x1cdc		VoC_sub16_dr(REG0,0x4a02,REG0)(lo)	|	VoC_bgtz16_r(Pp_analysis_Frame_gtz,REG0)(hi)
0xFFC04A02,	//0x1cde		VoC_NAD	|	VoC_sub16_dr(REG0,0x4a02,REG0)(hi)
		//0x1ce0		Pp_analysis_Frame_gtz
0x1CE33430,	//0x1ce0		VoC_bgt16_rr(Pp_analysis_max_val,REG6,REG0)
0xFFC0E006,	//0x1ce2		VoC_NOP	|	VoC_movreg16(REG6,REG0,DEFAULT)
		//0x1ce3		Pp_analysis_max_val
		//0x1ce3		VoC_endloop0
0x1CE83246,	//0x1ce4		VoC_bnltz16_r(SPEEX_PRE_EXTEND_MAX_VAL,REG6)
0x7FFF0AC7,	//0x1ce6		VoC_lw16i(REG7,0xffff)
		//0x1ce8		SPEEX_PRE_EXTEND_MAX_VAL
0x1C592B80,	//0x1ce8		VoC_jal(spx_ilog2)
0x4A140B0A,	//0x1cea		VoC_sub16_dr(REG2,0x4a14,REG1)
0x4A140789,	//0x1cec		VoC_sub16_rd(REG1,REG1,0x4a14)
0x043B1502,	//0x1cee		VoC_sw16_d(REG2,0x43b)
0x0C611400,	//0x1cf0		VoC_lw16_d(REG0,0xc61)
0x0C70180A,	//0x1cf2		VoC_lw16i_set_inc(REG2,0xc70,0x2)
0x0C70180B,	//0x1cf4		VoC_lw16i_set_inc(REG3,0xc70,0x2)
0xD9D36605,	//0x1cf6		VoC_lw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0xFE0F7E0E,	//0x1cf8		VoC_shr16_rr(REG7,REG1,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG1,DEFAULT)
0xDDDBD9D3,	//0x1cfa		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
		//0x1cfb		VoC_endloop0
0x0C700A80,	//0x1cfc		VoC_lw16i(REG0,0xc70)
0x0D100A81,	//0x1cfe		VoC_lw16i(REG1,0xd10)
0x095C1500,	//0x1d00		VoC_sw16_d(REG0,0x95c)
0x095D1501,	//0x1d02		VoC_sw16_d(REG1,0x95d)
0x1D2F2B80,	//0x1d04		VoC_jal(spx_kiss_fftr2)
0x043B1401,	//0x1d06		VoC_lw16_d(REG1,0x43b)
0xE01478F9,	//0x1d08		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xF6227005,	//0x1d0a		VoC_movreg16(REG2,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x1804C312,	//0x1d0c		VoC_lw16i_set_inc(REG0,0xd10,0x1)(lo)	|	VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)
0x180B0D10,	//0x1d0e		VoC_lw16i_set_inc(REG3,0x6ac,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xd10,0x1)(hi)
0x588606AC,	//0x1d10		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x6ac,0x2)(hi)
0x7F14FE92,	//0x1d12		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_shr32_rr(REG45,REG2,IN_PARALLEL)
0xCE36F401,	//0x1d14		VoC_mac32_rr(REG6,REG6,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xFE8CFFC0,	//0x1d16		VoC_shr32_rr(ACC0,REG1,DEFAULT)	|	VoC_NOP
0xDDDCFFC0,	//0x1d18		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_NOP
0x0C611406,	//0x1d1a		VoC_lw16_d(REG6,0xc61)
0x4A0407B6,	//0x1d1c		VoC_sub16_rd(REG6,REG6,0x4a04)
0xFF14E787,	//0x1d1e		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD400D400,	//0x1d20		VoC_mac32inc_pp(REG0,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG0,DEFAULT)
0xFE8CFFC0,	//0x1d22		VoC_shr32_rr(ACC0,REG1,DEFAULT)	|	VoC_NOP
0xDDDCFFC0,	//0x1d24		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_NOP
		//0x1d25		VoC_endloop0
0x06AC0A84,	//0x1d26		VoC_lw16i(REG4,0x6ac)
0x074C0A85,	//0x1d28		VoC_lw16i(REG5,0x74c)
0x1E0F2B80,	//0x1d2a		VoC_jal(filterbank_compute_bank32)
0xFFC0DFA9,	//0x1d2c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1d2e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1d2f		spx_kiss_fftr2
0xDFC5DF40,	//0x1d30		VoC_push16(REG5,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x44EA1804,	//0x1d32		VoC_lw16i_set_inc(REG0,0x44ea,0x1)
0x44EC1809,	//0x1d34		VoC_lw16i_set_inc(REG1,0x44ec,0x2)
0x45CC180A,	//0x1d36		VoC_lw16i_set_inc(REG2,0x45cc,0x2)
0x095C200B,	//0x1d38		VoC_lw16d_set_inc(REG3,0x95c,0x2)
0xE0277024,	//0x1d3a		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x21522B80,	//0x1d3c		VoC_jal(spx_kf_shuffle)
0x702EF026,	//0x1d3e		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xFFC0E01F,	//0x1d40		VoC_NAD	|	VoC_lw16i_short(RL7_HI,0x1,IN_PARALLEL)
0x26422B80,	//0x1d42		VoC_jal(spx_kf_work)
0x44EA1400,	//0x1d44		VoC_lw16_d(REG0,0x44ea)
0x095D2007,	//0x1d46		VoC_lw16d_set_inc(REG3,0x95d,0x1)
0x45CC180A,	//0x1d48		VoC_lw16i_set_inc(REG2,0x45cc,0x2)
0x4019F8F8,	//0x1d4a		VoC_add16_rr(REG1,REG0,REG3,DEFAULT)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x0789C010,	//0x1d4c		VoC_sub16_rd(REG1,REG1,0x4a04)(lo)	|	VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)
0xF7D04A04,	//0x1d4e		VoC_lw16i_short(INC0,0xfffffffe,DEFAULT)	|	VoC_sub16_rd(REG1,REG1,0x4a04)(hi)
0x59D2F7F1,	//0x1d50		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
0x0A86DE00,	//0x1d52		VoC_lw16i(REG6,0x3fff)(lo)	|	VoC_inc_p(REG0,IN_PARALLEL)
0x7F443FFF,	//0x1d54		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i(REG6,0x3fff)(hi)
0xF019FF45,	//0x1d56		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xCE2E4E26,	//0x1d58		VoC_mac32_rr(REG5,REG6,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG6,DEFAULT)
0x0924FFC0,	//0x1d5a		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0x092D4A46,	//0x1d5c		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0x7A7C4A46,	//0x1d5e		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0x7F26FA7D,	//0x1d60		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x6184FF2F,	//0x1d62		VoC_movreg16(REG4,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0x412EF7C5,	//0x1d64		VoC_add16_rr(REG6,REG4,REG5,DEFAULT)	|	VoC_movreg16(REG5,RL7_LO,IN_PARALLEL)
0xFFC0C32F,	//0x1d66		VoC_NOP	|	VoC_sub16_rr(REG7,REG4,REG5,IN_PARALLEL)
0xDC97DCB6,	//0x1d68		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x44EA1406,	//0x1d6a		VoC_lw16_d(REG6,0x44ea)
0x0A87F80E,	//0x1d6c		VoC_lw16i(REG7,0x466c)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x073F466C,	//0x1d6e		VoC_add16_rd(REG7,REG7,0x4a06)(lo)	|	VoC_lw16i(REG7,0x466c)(hi)
0xF0304A06,	//0x1d70		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x4a06)(hi)
0x2E30F032,	//0x1d72		VoC_loop_r(0,REG6)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xD9BA1DBB,	//0x1d74		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_loop_r(0,REG6)(hi)
0xDF42DFC7,	//0x1d76		VoC_push32(REG45,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xFF477F46,	//0x1d78		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xD885D8A4,	//0x1d7a		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xC12F432E,	//0x1d7c		VoC_add16_rr(REG7,REG4,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG5,DEFAULT)
0xF6EC780E,	//0x1d7e		VoC_movreg16(RL6_LO,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x1D843247,	//0x1d80		VoC_bnltz16_r(SPX_KISS_FFTR2_NEG_EXTEND1,REG7)
0x7FFF0ACD,	//0x1d82		VoC_lw16i(RL6_HI,0xffff)
		//0x1d84		SPX_KISS_FFTR2_NEG_EXTEND1
0xDFC6FB9E,	//0x1d84		VoC_push16(REG6,DEFAULT)	|	VoC_shr32_ri(RL6,0xfffffff3,DEFAULT)
0xD885D8A4,	//0x1d86		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xC32E412F,	//0x1d88		VoC_sub16_rr(REG6,REG4,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG4,REG5,DEFAULT)
0x4A04073F,	//0x1d8a		VoC_add16_rd(REG7,REG7,0x4a04)
0x3246E0CE,	//0x1d8c		VoC_bnltz16_r(SPX_KISS_FFTR2_NEG_EXTEND2,REG6)(lo)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
0x0ACF1D92,	//0x1d8e		VoC_lw16i(RL7_HI,0xffff)(lo)	|	VoC_bnltz16_r(SPX_KISS_FFTR2_NEG_EXTEND2,REG6)(hi)
0xFFC07FFF,	//0x1d90		VoC_NAD	|	VoC_lw16i(RL7_HI,0xffff)(hi)
		//0x1d92		SPX_KISS_FFTR2_NEG_EXTEND2
0xFB9F780F,	//0x1d92		VoC_shr32_ri(RL7,0xfffffff3,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xDF02DF86,	//0x1d94		VoC_pop32(REG45,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xFF457F44,	//0x1d96		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE274E2F,	//0x1d98		VoC_mac32_rr(REG4,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG7,DEFAULT)
0x0BA4FFC0,	//0x1d9a		VoC_sub32_dr(ACC0,0x4a02,ACC0)(lo)	|	VoC_NOP
0x4E264A02,	//0x1d9c		VoC_mac32_rr(REG4,REG6,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4a02,ACC0)(hi)
0xFFC0CE2E,	//0x1d9e		VoC_NOP	|	VoC_mac32_rr(REG5,REG6,IN_PARALLEL)
0xFA0D7A0C,	//0x1da0		VoC_shr32_ri(ACC1,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xCB7B49A2,	//0x1da2		VoC_sub32_rr(REG67,ACC1,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL6,ACC0,DEFAULT)
0x4A460912,	//0x1da4		VoC_add32_rd(REG45,REG45,0x4a46)
0x4A46091B,	//0x1da6		VoC_add32_rd(REG67,REG67,0x4a46)
0xFA7B7A7A,	//0x1da8		VoC_shr32_ri(REG67,0xf,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0xDCB4FFC0,	//0x1daa		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_NOP
0x49EADC96,	//0x1dac		VoC_add32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x0912CBA3,	//0x1dae		VoC_add32_rd(REG45,REG45,0x4a46)(lo)	|	VoC_sub32_rr(REG67,RL6,ACC0,IN_PARALLEL)
0x091B4A46,	//0x1db0		VoC_add32_rd(REG67,REG67,0x4a46)(lo)	|	VoC_add32_rd(REG45,REG45,0x4a46)(hi)
0x7A7A4A46,	//0x1db2		VoC_shr32_ri(REG45,0xf,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x4a46)(hi)
0xFFC0FA7B,	//0x1db4		VoC_NOP	|	VoC_shr32_ri(REG67,0xf,IN_PARALLEL)
0xDC96DCB4,	//0x1db6		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x073FDF87,	//0x1db8		VoC_add16_rd(REG7,REG7,0x4a06)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x07804A06,	//0x1dba		VoC_sub16_rd(REG0,REG0,0x4a0a)(lo)	|	VoC_add16_rd(REG7,REG7,0x4a06)(hi)
		//0x1dbb		VoC_endloop0
0xDF854A0A,	//0x1dbc		VoC_pop16(REG5,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x4a0a)(hi)
0xDFA9DF00,	//0x1dbe		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xE580FFC0,	//0x1dc0		VoC_return	|	VoC_NOP
		//0x1dc2		spx_fft
0xDF40DFE9,	//0x1dc2		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x095C2004,	//0x1dc4		VoC_lw16d_set_inc(REG0,0x95c,0x1)
0x095D2005,	//0x1dc6		VoC_lw16d_set_inc(REG1,0x95d,0x1)
0x492E1404,	//0x1dc8		VoC_lw16_d(REG4,0x492e)
0xDFC07F43,	//0x1dca		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0xD885E709,	//0x1dcc		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x1DD23105,	//0x1dce		VoC_bgtz16_r(SPX_FFT_IN_GTZ,REG5)
0x4A020B2D,	//0x1dd0		VoC_sub16_dr(REG5,0x4a02,REG5)
		//0x1dd2		SPX_FFT_IN_GTZ
0x1DD53435,	//0x1dd2		VoC_bgt16_rr(SPX_FFT_MAX_VAL_MAX16,REG6,REG5)
0xFFC0E0A6,	//0x1dd4		VoC_NOP	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x1dd5		SPX_FFT_MAX_VAL_MAX16
		//0x1dd5		VoC_endloop0
0x0A84DF80,	//0x1dd6		VoC_lw16i(REG4,0x3e80)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xF0053E80,	//0x1dd8		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16i(REG4,0x3e80)(hi)
		//0x1dda		SPX_FFT_SHIFT_WHILE
0x1DE23434,	//0x1dda		VoC_bgt16_rr(SPX_FFT_SHIFT,REG6,REG4)
0x1DE23186,	//0x1ddc		VoC_bez16_r(SPX_FFT_SHIFT,REG6)
0x072DF8FE,	//0x1dde		VoC_add16_rd(REG5,REG5,0x4a04)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xE5F94A04,	//0x1de0		VoC_jump(SPX_FFT_SHIFT_WHILE)	|	VoC_add16_rd(REG5,REG5,0x4a04)(hi)
		//0x1de2		SPX_FFT_SHIFT
0x095C2008,	//0x1de2		VoC_lw16d_set_inc(REG0,0x95c,0x2)
0x095C200A,	//0x1de4		VoC_lw16d_set_inc(REG2,0x95c,0x2)
0x492E1404,	//0x1de6		VoC_lw16_d(REG4,0x492e)
0xF80C5FC5,	//0x1de8		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0x4A020B2D,	//0x1dea		VoC_sub16_dr(REG5,0x4a02,REG5)
0xD9D36705,	//0x1dec		VoC_lw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xFE2F7E2E,	//0x1dee		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0xDDC3D9D3,	//0x1df0		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
		//0x1df1		VoC_endloop0
0xFFC05F85,	//0x1df2		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(REG5,DEFAULT)
0x1D2F2B80,	//0x1df4		VoC_jal(spx_kiss_fftr2)
0x492E1404,	//0x1df6		VoC_lw16_d(REG4,0x492e)
0x4A040B2A,	//0x1df8		VoC_sub16_dr(REG2,0x4a04,REG5)
0xE0167007,	//0x1dfa		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x095C2004,	//0x1dfc		VoC_lw16d_set_inc(REG0,0x95c,0x1)
0x095D2005,	//0x1dfe		VoC_lw16d_set_inc(REG1,0x95d,0x1)
0xFE16670A,	//0x1e00		VoC_shr16_rr(REG6,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD813D802,	//0x1e02		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16_p(REG2,REG0,DEFAULT)
0xC0F340B2,	//0x1e04		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xFE2B7E2A,	//0x1e06		VoC_shr16_rr(REG3,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG2,REG5,DEFAULT)
0xDC82FFC0,	//0x1e08		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_NOP
		//0x1e0a		VoC_endloop0
0xDF00DC93,	//0x1e0a		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xFFC0DFA9,	//0x1e0c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDF40E580,	//0x1e0e		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x1e0f		filterbank_compute_bank32
0x5F42DF41,	//0x1e10		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x5F43F008,	//0x1e12		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xE0A0FF47,	//0x1e14		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_lw32z(RL7,IN_PARALLEL)
0x44E81406,	//0x1e16		VoC_lw16_d(REG6,0x44e8)
0xE782FFC0,	//0x1e18		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_NOP
0xFFC0DDC7,	//0x1e1a		VoC_NOP	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
		//0x1e1b		VoC_endloop0
0x44E91406,	//0x1e1c		VoC_lw16_d(REG6,0x44e9)
0x43A81804,	//0x1e1e		VoC_lw16i_set_inc(REG0,0x43a8,0x1)
0x43F81805,	//0x1e20		VoC_lw16i_set_inc(REG1,0x43f8,0x1)
0x44481806,	//0x1e22		VoC_lw16i_set_inc(REG2,0x4448,0x1)
0x44981807,	//0x1e24		VoC_lw16i_set_inc(REG3,0x4498,0x1)
0xE7AFF007,	//0x1e26		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x7F44DFC7,	//0x1e28		VoC_lw32z(ACC0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xD9A3FF45,	//0x1e2a		VoC_lw32_p(REG67,REG4,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFA7FFF1F,	//0x1e2c		VoC_shr32_ri(RL7,0xf,DEFAULT)	|	VoC_movreg32(RL7,REG67,DEFAULT)
0x4A662983,	//0x1e2e		VoC_and32_rd(REG67,0x4a66)
0x503AE1C7,	//0x1e30		VoC_mac32_rp(REG7,REG2,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0xFFC0D132,	//0x1e32		VoC_NOP	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
0x4A46092D,	//0x1e34		VoC_add32_rd(ACC1,ACC1,0x4a46)
0x492CFA7D,	//0x1e36		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,DEFAULT)
0xC176A206,	//0x1e38		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_add16inc_pp(REG6,REG0,REG0,IN_PARALLEL)
0x9134FFC0,	//0x1e3a		VoC_add32_rp(ACC0,ACC0,REG6,DEFAULT)	|	VoC_NOP
0xDDB4FFC0,	//0x1e3c		VoC_sw32_p(ACC0,REG6,DEFAULT)	|	VoC_NOP
0xFF457F44,	//0x1e3e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFF1FD9A3,	//0x1e40		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_lw32_p(REG67,REG4,DEFAULT)
0x2983FA7F,	//0x1e42		VoC_and32_rd(REG67,0x4a66)(lo)	|	VoC_shr32_ri(RL7,0xf,DEFAULT)
0xE1C74A66,	//0x1e44		VoC_movreg16(REG7,RL7_LO,DEFAULT)	|	VoC_and32_rd(REG67,0x4a66)(hi)
0xD133503B,	//0x1e46		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG3,DEFAULT)
0x092DFFC0,	//0x1e48		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_NOP
0xFA7D4A46,	//0x1e4a		VoC_shr32_ri(ACC1,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0xA24E492C,	//0x1e4c		VoC_add16inc_pp(REG6,REG1,REG1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFFC0C176,	//0x1e4e		VoC_NOP	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0xFFC09134,	//0x1e50		VoC_NOP	|	VoC_add32_rp(ACC0,ACC0,REG6,DEFAULT)
0xDF87DDB4,	//0x1e52		VoC_pop16(REG7,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x4A060724,	//0x1e54		VoC_add16_rd(REG4,REG4,0x4a06)
		//0x1e56		VoC_endloop0
0x4A04073F,	//0x1e56		VoC_add16_rd(REG7,REG7,0x4a04)
0xDF02DF03,	//0x1e58		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF00DF01,	//0x1e5a		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xDF42E580,	//0x1e5c		VoC_push32(REG45,DEFAULT)	|	VoC_return
		//0x1e5d		spx_mult16_32_q15
0xF90CFBFA,	//0x1e5e		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xF47A7019,	//0x1e60		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xCE60CD44,	//0x1e62		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0xE580DF02,	//0x1e64		VoC_return	|	VoC_pop32(REG45,DEFAULT)
		//0x1e66		spx_mult16_32_p15
0xDF42DFC0,	//0x1e66		VoC_push32(REG45,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x790CFBFA,	//0x1e68		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x7019FF45,	//0x1e6a		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x4D44F402,	//0x1e6c		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xDF02CE20,	//0x1e6e		VoC_pop32(REG45,DEFAULT)	|	VoC_mac32_rr(REG4,REG0,IN_PARALLEL)
0x4A46092D,	//0x1e70		VoC_add32_rd(ACC1,ACC1,0x4a46)
0x492CFA7D,	//0x1e72		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,DEFAULT)
0xE580DF80,	//0x1e74		VoC_return	|	VoC_pop16(REG0,IN_PARALLEL)
		//0x1e76		update_noise_prob
0x1407DFE9,	//0x1e76		VoC_lw16_d(REG7,0xc61)(lo)	|	VoC_push16(RA,DEFAULT)
0x18090C61,	//0x1e78		VoC_lw16i_set_inc(REG1,0x77c,0x2)(lo)	|	VoC_lw16_d(REG7,0xc61)(hi)
0x180A077C,	//0x1e7a		VoC_lw16i_set_inc(REG2,0x6ac,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x77c,0x2)(hi)
0x180706AC,	//0x1e7c		VoC_lw16i_set_inc(REG3,0x49e4,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x6ac,0x2)(hi)
0x701949E4,	//0x1e7e		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x49e4,0x1)(hi)
0x0A80F47A,	//0x1e80		VoC_lw16i(REG0,0x6666)(lo)	|	VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)
0xD98A6666,	//0x1e82		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_lw16i(REG0,0x6666)(hi)
0xF90CFBFA,	//0x1e84		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CD44,	//0x1e86		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0x0A80FFC0,	//0x1e88		VoC_lw16i(REG0,0x199a)(lo)	|	VoC_NOP
0xD992199A,	//0x1e8a		VoC_lw32_p(REG45,REG2,DEFAULT)	|	VoC_lw16i(REG0,0x199a)(hi)
0xF90CFBFA,	//0x1e8c		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CE28,	//0x1e8e		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_mac32_rr(REG5,REG0,DEFAULT)
0xFFC0FFC0,	//0x1e90		VoC_NOP	|	VoC_NOP
0x07BEDDCC,	//0x1e92		VoC_sub16_rd(REG6,REG7,0x4a06)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xE7954A06,	//0x1e94		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub16_rd(REG6,REG7,0x4a06)(hi)
0x66660A80,	//0x1e96		VoC_lw16i(REG0,0x6666)
0xFBFAD98A,	//0x1e98		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0xCD44F90C,	//0x1e9a		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x2C07CE60,	//0x1e9c		VoC_loop_i(0x1,0x3)(lo)	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0xFFC01EA5,	//0x1e9e		VoC_NOP	|	VoC_loop_i(0x1,0x3)(hi)
0xD9D2D8B0,	//0x1ea0		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16inc_p(REG0,REG3,DEFAULT)
0xF90CFBFA,	//0x1ea2		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CE28,	//0x1ea4		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_mac32_rr(REG5,REG0,DEFAULT)
		//0x1ea5		VoC_endloop1
0x4A0A0792,	//0x1ea6		VoC_sub16_rd(REG2,REG2,0x4a0a)
0x4A08079B,	//0x1ea8		VoC_sub16_rd(REG3,REG3,0x4a08)
		//0x1eaa		VoC_endloop0
0x0712DDCC,	//0x1eaa		VoC_add16_rd(REG2,REG2,0x4a06)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x0A804A06,	//0x1eac		VoC_lw16i(REG0,0x6666)(lo)	|	VoC_add16_rd(REG2,REG2,0x4a06)(hi)
0xD98A6666,	//0x1eae		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_lw16i(REG0,0x6666)(hi)
0xF90CFBFA,	//0x1eb0		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CD44,	//0x1eb2		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0x199A0A80,	//0x1eb4		VoC_lw16i(REG0,0x199a)
0xFBFAD9D2,	//0x1eb6		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xCE28F90C,	//0x1eb8		VoC_mac32_rr(REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0CE60,	//0x1eba		VoC_NOP	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0xDDCCFFC0,	//0x1ebc		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
0x04381401,	//0x1ebe		VoC_lw16_d(REG1,0x438)
0x4A0444A1,	//0x1ec0		VoC_bne16_rd(UPDATE_NOISE_ADAPT_NE1,REG1,0x4a04)
0x1407FF47,	//0x1ec2		VoC_lw16_d(REG7,0xc61)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x18080C61,	//0x1ec4		VoC_lw16i_set_inc(REG0,0x8bc,0x2)(lo)	|	VoC_lw16_d(REG7,0xc61)(hi)
0x180A08BC,	//0x1ec6		VoC_lw16i_set_inc(REG2,0x81c,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x8bc,0x2)(hi)
0xE7C2081C,	//0x1ec8		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x81c,0x2)(hi)
0xDDD7DDC7,	//0x1eca		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
		//0x1ecb		VoC_endloop0
		//0x1ecc		UPDATE_NOISE_ADAPT_NE1
0x4A244C21,	//0x1ecc		VoC_bnlt16_rd(UPDATE_NOISE_NLT_100,REG1,0x4a24)
0xE5CFF1E4,	//0x1ece		VoC_jump(UPDATE_NOISE_MIN_RANGE_END)	|	VoC_lw16i_short(REG4,0xf,DEFAULT)
		//0x1ed0		UPDATE_NOISE_NLT_100
0x4A324C31,	//0x1ed0		VoC_bnlt16_rd(UPDATE_NOISE_NLT_1000,REG1,0x4a32)
0x00320A84,	//0x1ed2		VoC_lw16i(REG4,0x32)
0xFFC065CA,	//0x1ed4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(UPDATE_NOISE_MIN_RANGE_END)
		//0x1ed6		UPDATE_NOISE_NLT_1000
0x4A424C31,	//0x1ed6		VoC_bnlt16_rd(UPDATE_NOISE_NLT_10000,REG1,0x4a42)
0x00960A84,	//0x1ed8		VoC_lw16i(REG4,0x96)
0xFFC065C4,	//0x1eda		VoC_NAD(IN_PARALLEL)	|	VoC_jump(UPDATE_NOISE_MIN_RANGE_END)
		//0x1edc		UPDATE_NOISE_NLT_10000
0x012C0A84,	//0x1edc		VoC_lw16i(REG4,0x12c)
		//0x1ede		UPDATE_NOISE_MIN_RANGE_END
0x043A1406,	//0x1ede		VoC_lw16_d(REG6,0x43a)
0x08BC1808,	//0x1ee0		VoC_lw16i_set_inc(REG0,0x8bc,0x2)
0x077C1809,	//0x1ee2		VoC_lw16i_set_inc(REG1,0x77c,0x2)
0x081C180A,	//0x1ee4		VoC_lw16i_set_inc(REG2,0x81c,0x2)
0x0C611407,	//0x1ee6		VoC_lw16_d(REG7,0xc61)
0x1EF834B4,	//0x1ee8		VoC_bngt16_rr(UPDATE_NOISE_COUNT_NGT_RANGE,REG6,REG4)
0xFFC0F006,	//0x1eea		VoC_NOP	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x043A1506,	//0x1eec		VoC_sw16_d(REG6,0x43a)
0xD9CFE7C8,	//0x1eee		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xDDC7D982,	//0x1ef0		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0x1EF63617,	//0x1ef2		VoC_bgt32_rr(UPDATE_NOISE_Stmp_GT_S,REG45,RL7)
0xFFC0FF17,	//0x1ef4		VoC_NOP	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x1ef6		UPDATE_NOISE_Stmp_GT_S
		//0x1ef6		VoC_endloop0
0xE5CFDDD7,	//0x1ef6		VoC_jump(UPDATE_NOISE_COUNT_END)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x1ef8		UPDATE_NOISE_COUNT_NGT_RANGE
0xD992E7CD,	//0x1ef8		VoC_lw32_p(REG45,REG2,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0x363AD9CF,	//0x1efa		VoC_bgt32_rr(UPDATE_NOISE_Smin_GT_S,RL7,REG45)(lo)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xFF3A1EFF,	//0x1efc		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_bgt32_rr(UPDATE_NOISE_Smin_GT_S,RL7,REG45)(hi)
0xDDD2FFC0,	//0x1efe		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_NOP
		//0x1eff		UPDATE_NOISE_Smin_GT_S
0x363AD982,	//0x1f00		VoC_bgt32_rr(UPDATE_NOISE_Stmp_GT_S2,RL7,REG45)(lo)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFF3A1F05,	//0x1f02		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_bgt32_rr(UPDATE_NOISE_Stmp_GT_S2,RL7,REG45)(hi)
0xDDC2FFC0,	//0x1f04		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_NOP
		//0x1f05		UPDATE_NOISE_Stmp_GT_S2
		//0x1f05		VoC_endloop0
		//0x1f06		UPDATE_NOISE_COUNT_END
0x077C180B,	//0x1f06		VoC_lw16i_set_inc(REG3,0x77c,0x2)
0x081C1809,	//0x1f08		VoC_lw16i_set_inc(REG1,0x81c,0x2)
0x0FB81806,	//0x1f0a		VoC_lw16i_set_inc(REG2,0xfb8,0x1)
0xD9DAE7CE,	//0x1f0c		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0x33330A80,	//0x1f0e		VoC_lw16i(REG0,0x3333)
0xF90CFBFA,	//0x1f10		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CD44,	//0x1f12		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0xF026D9CF,	//0x1f14		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0x1F1A3627,	//0x1f16		VoC_bgt32_rr(UPDATE_NOISE_UPDATE_PROB,ACC0,RL7)
0xFFC0F006,	//0x1f18		VoC_NOP	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x1f1a		UPDATE_NOISE_UPDATE_PROB
		//0x1f1a		VoC_endloop0
0xDFA9DCA6,	//0x1f1a		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xE580FFC0,	//0x1f1c		VoC_return	|	VoC_NOP
		//0x1f1e		filterbank_compute_psd16
0xDF41DF40,	//0x1f1e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x1406DF43,	//0x1f20		VoC_lw16_d(REG6,0x44e9)(lo)	|	VoC_push32(REG67,DEFAULT)
0x180444E9,	//0x1f22		VoC_lw16i_set_inc(REG0,0x43a8,0x1)(lo)	|	VoC_lw16_d(REG6,0x44e9)(hi)
0x180543A8,	//0x1f24		VoC_lw16i_set_inc(REG1,0x4448,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x43a8,0x1)(hi)
0x18064448,	//0x1f26		VoC_lw16i_set_inc(REG2,0x43f8,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x4448,0x1)(hi)
0x180743F8,	//0x1f28		VoC_lw16i_set_inc(REG3,0x4498,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x43f8,0x1)(hi)
0xFFC04498,	//0x1f2a		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x4498,0x1)(hi)
0xF4016793,	//0x1f2c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD8867F44,	//0x1f2e		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC0C137,	//0x1f30		VoC_NOP	|	VoC_add16_rr(REG7,REG4,REG6,DEFAULT)
0xD139D877,	//0x1f32		VoC_mac32inc_rp(REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xC137D8A6,	//0x1f34		VoC_add16_rr(REG7,REG4,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xD877FFC0,	//0x1f36		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_NOP
0xFFC0D13B,	//0x1f38		VoC_NOP	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
0x4A460923,	//0x1f3a		VoC_add32_rd(REG67,ACC0,0x4a46)
0x072DFA7B,	//0x1f3c		VoC_add16_rd(REG5,REG5,0x4a04)(lo)	|	VoC_shr32_ri(REG67,0xf,DEFAULT)
0xDC564A04,	//0x1f3e		VoC_sw16_p(REG6,REG5,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x4a04)(hi)
		//0x1f3f		VoC_endloop0
0xDF01DF03,	//0x1f40		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xE580DF00,	//0x1f42		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x1f44		spx_DIV32_16_Q15
0xDF435FE9,	//0x1f44		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF335F46,	//0x1f46		VoC_movreg32(REG67,RL6,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xFA7B5F47,	//0x1f48		VoC_shr32_ri(REG67,0xf,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0x1F50363B,	//0x1f4a		VoC_bgt32_rr(DIV32_16_Q15_LT_B,RL7,REG67)
0x7FFF0A80,	//0x1f4c		VoC_lw16i(REG0,0x7fff)
0xFFC065D5,	//0x1f4e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DIV32_16_Q15_END)
		//0x1f50		DIV32_16_Q15_LT_B
0x4A766027,	//0x1f50		VoC_blt32_rd(DIV32_16_Q15_IF1,RL7,0x4a76)
0xFA477A46,	//0x1f52		VoC_shr32_ri(RL7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x8,DEFAULT)
		//0x1f54		DIV32_16_Q15_IF1
0x4A726027,	//0x1f54		VoC_blt32_rd(DIV32_16_Q15_IF2,RL7,0x4a72)
0xFA277A26,	//0x1f56		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
		//0x1f58		DIV32_16_Q15_IF2
0x4A686027,	//0x1f58		VoC_blt32_rd(DIV32_16_Q15_IF3,RL7,0x4a68)
0xFA277A26,	//0x1f5a		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
		//0x1f5c		DIV32_16_Q15_IF3
0xFB8BFF33,	//0x1f5c		VoC_shr32_ri(REG67,0xfffffff1,DEFAULT)	|	VoC_movreg32(REG67,RL6,DEFAULT)
0xDF424AF6,	//0x1f5e		VoC_push32(REG45,IN_PARALLEL)	|	VoC_sub32_rr(RL6,REG67,RL6,DEFAULT)
0x1C1C2B80,	//0x1f60		VoC_jal(speex_div32_16)
0xDF07DF02,	//0x1f62		VoC_pop32(RL7,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
		//0x1f63		DIV32_16_Q15_END
0x5F03DF06,	//0x1f64		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xFFC0DFA9,	//0x1f66		VoC_NOP	|	VoC_pop16(RA,IN_PARALLEL)
0xFFC06580,	//0x1f68		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1f6a		spx_DIV32_16_Q8
0xDF435FE9,	//0x1f6a		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF335F46,	//0x1f6c		VoC_movreg32(REG67,RL6,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xFA3B5F47,	//0x1f6e		VoC_shr32_ri(REG67,0x7,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0x1F76363B,	//0x1f70		VoC_bgt32_rr(DIV32_16_Q8_LT_B,RL7,REG67)
0x7FFF0A80,	//0x1f72		VoC_lw16i(REG0,0x7fff)
0xFFC065D6,	//0x1f74		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DIV32_16_Q8_END)
		//0x1f76		DIV32_16_Q8_LT_B
0x4A766027,	//0x1f76		VoC_blt32_rd(DIV32_16_Q8_IF1,RL7,0x4a76)
0xFA477A46,	//0x1f78		VoC_shr32_ri(RL7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x8,DEFAULT)
		//0x1f7a		DIV32_16_Q8_IF1
0x4A726027,	//0x1f7a		VoC_blt32_rd(DIV32_16_Q8_IF2,RL7,0x4a72)
0xFA277A26,	//0x1f7c		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
		//0x1f7e		DIV32_16_Q8_IF2
0x4A686027,	//0x1f7e		VoC_blt32_rd(DIV32_16_Q8_IF3,RL7,0x4a68)
0xFA277A26,	//0x1f80		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
		//0x1f82		DIV32_16_Q8_IF3
0xFF3B7BC6,	//0x1f82		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)
0xDF427A0B,	//0x1f84		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x1,DEFAULT)
0x2B80C99E,	//0x1f86		VoC_jal(speex_div32_16)(lo)	|	VoC_add32_rr(RL6,RL6,REG67,DEFAULT)
0xDF021C1C,	//0x1f88		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
		//0x1f8a		DIV32_16_Q8_END
0xDF06DF07,	//0x1f8a		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDFA95F03,	//0x1f8c		VoC_pop16(RA,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xE580FFC0,	//0x1f8e		VoC_return	|	VoC_NOP
		//0x1f90		compute_gain_floor
0x1405DFE9,	//0x1f90		VoC_lw16_d(REG5,0xc6b)(lo)	|	VoC_push16(RA,DEFAULT)
0x7F440C6B,	//0x1f92		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16_d(REG5,0xc6b)(hi)
0x34ACF401,	//0x1f94		VoC_bngt16_rr(COMPUTE_GAIN_FLOOR_IF1,REG5,REG4)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x0E281FEC,	//0x1f96		VoC_mac32_rd(REG5,0x4a28)(lo)	|	VoC_bngt16_rr(COMPUTE_GAIN_FLOOR_IF1,REG5,REG4)(hi)
0xFFC04A28,	//0x1f98		VoC_NOP	|	VoC_mac32_rd(REG5,0x4a28)(hi)
0x2B80FF20,	//0x1f9a		VoC_jal(spx_exp)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFA0F20A5,	//0x1f9c		VoC_shr32_ri(RL7,0x1,DEFAULT)	|	VoC_jal(spx_exp)(hi)
0x4A666037,	//0x1f9e		VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE1,RL7,0x4a66)
0x4A661487,	//0x1fa0		VoC_lw32_d(RL7,0x4a66)
0xFFC07FC0,	//0x1fa2		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x1fa4		COMPUTE_GAIN_FLOOR_Q15ONE1
0x0B921587,	//0x1fa4		VoC_sw32_d(RL7,0xb92)
0x7F44C32C,	//0x1fa6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)
0x0E20F401,	//0x1fa8		VoC_mac32_rd(REG4,0x4a2c)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xFFC04A2C,	//0x1faa		VoC_NOP	|	VoC_mac32_rd(REG4,0x4a2c)(hi)
0x2B80FF20,	//0x1fac		VoC_jal(spx_exp)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFA0F20A5,	//0x1fae		VoC_shr32_ri(RL7,0x1,DEFAULT)	|	VoC_jal(spx_exp)(hi)
0x4A666027,	//0x1fb0		VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE2,RL7,0x4a66)
0x4A661487,	//0x1fb2		VoC_lw32_d(RL7,0x4a66)
		//0x1fb4		COMPUTE_GAIN_FLOOR_Q15ONE2
0x1403FF3A,	//0x1fb4		VoC_lw16_d(REG3,0xc63)(lo)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x18080C63,	//0x1fb6		VoC_lw16i_set_inc(REG0,0x4dc,0x2)(lo)	|	VoC_lw16_d(REG3,0xc63)(hi)
0x180904DC,	//0x1fb8		VoC_lw16i_set_inc(REG1,0x10a8,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x4dc,0x2)(hi)
0x180610A8,	//0x1fba		VoC_lw16i_set_inc(REG2,0xfa0,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x10a8,0x2)(hi)
0xE6EB0FA0,	//0x1fbc		VoC_loop_r_short(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xfa0,0x1)(hi)
0xD9C6DFC4,	//0x1fbe		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x4A041487,	//0x1fc0		VoC_lw32_d(RL7,0x4a04)
0xC9BEFBD7,	//0x1fc2		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffffa,DEFAULT)
0xDF40FA3E,	//0x1fc4		VoC_push32(REG01,DEFAULT)	|	VoC_shr32_ri(RL6,0x7,DEFAULT)
0xD9CAE080,	//0x1fc6		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0xDF42FFC0,	//0x1fc8		VoC_push32(REG45,DEFAULT)	|	VoC_NOP
0xF90CFBFA,	//0x1fca		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xF47A7019,	//0x1fcc		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xCE60CD44,	//0x1fce		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0xC9A7DF02,	//0x1fd0		VoC_add32_rr(RL7,RL6,ACC0,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDF47FFC0,	//0x1fd2		VoC_push32(RL7,DEFAULT)	|	VoC_NOP
0x093FC997,	//0x1fd4		VoC_add32_rd(RL7,RL7,0x4a04)(lo)	|	VoC_add32_rr(RL7,RL6,REG45,DEFAULT)
0xDF064A04,	//0x1fd6		VoC_pop32(RL6,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x4a04)(hi)
0x1F442B80,	//0x1fd8		VoC_jal(spx_DIV32_16_Q15)
0xFFC07B88,	//0x1fda		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffff1,DEFAULT)
0x1C932B80,	//0x1fdc		VoC_jal(spx_sqrt)
0xF4797F44,	//0x1fde		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x0B920E00,	//0x1fe0		VoC_mac32_rd(REG0,0xb92)
0xFF20FFC0,	//0x1fe2		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0xDCA0FFC0,	//0x1fe4		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_NOP
0xDF84DF00,	//0x1fe6		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
		//0x1fe8		VoC_endloop0
0x4A060709,	//0x1fe8		VoC_add16_rd(REG1,REG1,0x4a06)
0x203A2B00,	//0x1fea		VoC_jump_lg(COMPUTE_GAIN_FLOOR_END)
		//0x1fec		COMPUTE_GAIN_FLOOR_IF1
0x4A280E20,	//0x1fec		VoC_mac32_rd(REG4,0x4a28)
0xFF20FFC0,	//0x1fee		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0x20A52B80,	//0x1ff0		VoC_jal(spx_exp)
0x602FFA0F,	//0x1ff2		VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE3,RL7,0x4a66)(lo)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
0x14874A66,	//0x1ff4		VoC_lw32_d(RL7,0x4a66)(lo)	|	VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE3,RL7,0x4a66)(hi)
0xFFC04A66,	//0x1ff6		VoC_NOP	|	VoC_lw32_d(RL7,0x4a66)(hi)
		//0x1ff8		COMPUTE_GAIN_FLOOR_Q15ONE3
0x0B921587,	//0x1ff8		VoC_sw32_d(RL7,0xb92)
0xFF444364,	//0x1ffa		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)
0x4A2C0E20,	//0x1ffc		VoC_mac32_rd(REG4,0x4a2c)
0xFF20FFC0,	//0x1ffe		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0x20A52B80,	//0x2000		VoC_jal(spx_exp)
0x6027FA0F,	//0x2002		VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE4,RL7,0x4a66)(lo)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
0x14874A66,	//0x2004		VoC_lw32_d(RL7,0x4a66)(lo)	|	VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE4,RL7,0x4a66)(hi)
0xFF3A4A66,	//0x2006		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_lw32_d(RL7,0x4a66)(hi)
		//0x2007		COMPUTE_GAIN_FLOOR_Q15ONE4
0x0C631403,	//0x2008		VoC_lw16_d(REG3,0xc63)
0x04DC1808,	//0x200a		VoC_lw16i_set_inc(REG0,0x4dc,0x2)
0x10A81809,	//0x200c		VoC_lw16i_set_inc(REG1,0x10a8,0x2)
0x0FA01806,	//0x200e		VoC_lw16i_set_inc(REG2,0xfa0,0x1)
0xDFC4E6E8,	//0x2010		VoC_push16(REG4,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0x1487D9C6,	//0x2012		VoC_lw32_d(RL7,0x4a04)(lo)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xFBD74A04,	//0x2014		VoC_shr32_ri(RL7,0xfffffffa,DEFAULT)	|	VoC_lw32_d(RL7,0x4a04)(hi)
0xFA3EC9BE,	//0x2016		VoC_shr32_ri(RL6,0x7,DEFAULT)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0xE080DF40,	//0x2018		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xFBFAFF32,	//0x201a		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x7019F90C,	//0x201c		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCD44F47A,	//0x201e		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)
0xD98ACE60,	//0x2020		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0xFFC0C8A7,	//0x2022		VoC_NOP	|	VoC_add32_rr(RL7,REG45,ACC0,DEFAULT)
0xC997DF47,	//0x2024		VoC_add32_rr(RL7,RL6,REG45,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x4A04093F,	//0x2026		VoC_add32_rd(RL7,RL7,0x4a04)
0x2B80DF06,	//0x2028		VoC_jal(spx_DIV32_16_Q15)(lo)	|	VoC_pop32(RL6,DEFAULT)
0xFB881F44,	//0x202a		VoC_shr32_ri(REG01,0xfffffff1,DEFAULT)	|	VoC_jal(spx_DIV32_16_Q15)(hi)
0x1C932B80,	//0x202c		VoC_jal(spx_sqrt)
0xF4797F44,	//0x202e		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x0B920E00,	//0x2030		VoC_mac32_rd(REG0,0xb92)
0xFF20FFC0,	//0x2032		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0xDCA0FFC0,	//0x2034		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_NOP
0xDF84DF00,	//0x2036		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
		//0x2038		VoC_endloop0
0x4A060709,	//0x2038		VoC_add16_rd(REG1,REG1,0x4a06)
		//0x203a		COMPUTE_GAIN_FLOOR_END
0xFFC0DFA9,	//0x203a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x203c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x203d		hypergeom_gain
0xDF42DF41,	//0x203e		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xDF46DF43,	//0x2040		VoC_push32(RL6,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7F33DF47,	//0x2042		VoC_movreg32(REG67,RL6,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0xFA53FF32,	//0x2044		VoC_shr32_ri(REG67,0xa,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0x204E3246,	//0x2046		VoC_bnltz16_r(HYPERGEOM_GAIN_IND_NLT_0,REG6)
0x7FFF0A80,	//0x2048		VoC_lw16i(REG0,0x7fff)
0x2B00F001,	//0x204a		VoC_jump_lg(HYPERGEOM_GAIN_END)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC0207B,	//0x204c		VoC_NAD	|	VoC_jump_lg(HYPERGEOM_GAIN_END)(hi)
		//0x204e		HYPERGEOM_GAIN_IND_NLT_0
0x4A1A3CB6,	//0x204e		VoC_bngt16_rd(HYPERGEOM_GAIN_IND_NGT_19,REG6,0x4a1a)
0xDF467A1A,	//0x2050		VoC_push32(RL6,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x4A741486,	//0x2052		VoC_lw32_d(RL6,0x4a74)
0x2B80FF17,	//0x2054		VoC_jal(speex_div32_16)(lo)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xDF061C1C,	//0x2056		VoC_pop32(RL6,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
0x4A660900,	//0x2058		VoC_add32_rd(REG01,REG01,0x4a66)
0x207B2B00,	//0x205a		VoC_jump_lg(HYPERGEOM_GAIN_END)
		//0x205c		HYPERGEOM_GAIN_IND_NGT_19
0xFBB3DF43,	//0x205c		VoC_shr32_ri(REG67,0xfffffff6,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7BD9CB99,	//0x205e		VoC_shr32_ri(REG23,0xfffffffb,DEFAULT)	|	VoC_sub32_rr(REG23,RL6,REG67,DEFAULT)
0x1804DF03,	//0x2060		VoC_lw16i_set_inc(REG0,0x49e8,0x1)(lo)	|	VoC_pop32(REG67,IN_PARALLEL)
0xC03049E8,	//0x2062		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x49e8,0x1)(hi)
0x4A660B13,	//0x2064		VoC_sub16_dr(REG3,0x4a66,REG2)
0xF4017F44,	//0x2066		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xD110D118,	//0x2068		VoC_mac32inc_rp(REG2,REG0,DEFAULT)	|	VoC_mac32inc_rp(REG3,REG0,DEFAULT)
0x0924FFC0,	//0x206a		VoC_add32_rd(ACC0,ACC0,0x4a20)(lo)	|	VoC_NOP
0xFA3C4A20,	//0x206c		VoC_shr32_ri(ACC0,0x7,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x4a20)(hi)
0x0930FB8E,	//0x206e		VoC_add32_rd(REG01,RL6,0x4a3c)(lo)	|	VoC_shr32_ri(RL6,0xfffffff1,DEFAULT)
0xDF444A3C,	//0x2070		VoC_push32(ACC0,DEFAULT)	|	VoC_add32_rd(REG01,RL6,0x4a3c)(hi)
0x1C932B80,	//0x2072		VoC_jal(spx_sqrt)
0x600EDF04,	//0x2074		VoC_movreg16(RL7_LO,REG0,DEFAULT)	|	VoC_pop32(ACC0,DEFAULT)
0xFF26E00F,	//0x2076		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0x1C1C2B80,	//0x2078		VoC_jal(speex_div32_16)
0xDF07FBC8,	//0x207a		VoC_pop32(RL7,DEFAULT)	|	VoC_shr32_ri(REG01,0xfffffff9,DEFAULT)
		//0x207b		HYPERGEOM_GAIN_END
0xDF03DF06,	//0x207c		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xDF01DF02,	//0x207e		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xFFC0DFA9,	//0x2080		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x2082		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2083		spx_qcurve
0xDF47DF46,	//0x2084		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x3818DF42,	//0x2086		VoC_bgt16_rd(SPX_QCURVE_X_GT_1,REG0,0x4a04)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF0204A04,	//0x2088		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bgt16_rd(SPX_QCURVE_X_GT_1,REG0,0x4a04)(hi)
		//0x208a		SPX_QCURVE_X_GT_1
0x4A661486,	//0x208a		VoC_lw32_d(RL6,0x4a66)
0x3240E00E,	//0x208c		VoC_bnltz16_r(SPX_QCURVE_EXTEND_X,REG0)(lo)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
0xF00F2090,	//0x208e		VoC_lw16i_short(RL7_HI,0x0,DEFAULT)	|	VoC_bnltz16_r(SPX_QCURVE_EXTEND_X,REG0)(hi)
		//0x2090		SPX_QCURVE_EXTEND_X
0x1C1C2B80,	//0x2090		VoC_jal(speex_div32_16)
0xF4797F44,	//0x2092		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x4A4A0E00,	//0x2094		VoC_mac32_rd(REG0,0x4a4a)
0x0927FFC0,	//0x2096		VoC_add32_rd(RL7,ACC0,0x4a2e)(lo)	|	VoC_NOP
0x0ACC4A2E,	//0x2098		VoC_lw16i(RL6_LO,0xfe00)(lo)	|	VoC_add32_rd(RL7,ACC0,0x4a2e)(hi)
0x0A8D7E00,	//0x209a		VoC_lw16i(RL6_HI,0xff)(lo)	|	VoC_lw16i(RL6_LO,0xfe00)(hi)
0x2B8000FF,	//0x209c		VoC_jal(speex_div32_16)(lo)	|	VoC_lw16i(RL6_HI,0xff)(hi)
0xDF021C1C,	//0x209e		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
0xDF06DF07,	//0x20a0		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xFFC0DFA9,	//0x20a2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDF42E580,	//0x20a4		VoC_push32(REG45,DEFAULT)	|	VoC_return
		//0x20a5		spx_exp
0xDF46DF43,	//0x20a6		VoC_push32(RL6,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x4A503C30,	//0x20a8		VoC_bngt16_rd(SPX_EXP_X_NGT_21290,REG0,0x4a50)
0x4A781487,	//0x20aa		VoC_lw32_d(RL7,0x4a78)
0x20EB2B00,	//0x20ac		VoC_jump_lg(SPX_EXP_END)
		//0x20ae		SPX_EXP_X_NGT_21290
0x4A7A3830,	//0x20ae		VoC_bgt16_rd(SPX_EXP_X_NLT_NEG21290,REG0,0x4a7a)
0x2B00FF47,	//0x20b0		VoC_jump_lg(SPX_EXP_END)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xFFC020EB,	//0x20b2		VoC_NAD	|	VoC_jump_lg(SPX_EXP_END)(hi)
		//0x20b4		SPX_EXP_X_NLT_NEG21290
0xF4017F44,	//0x20b4		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x4A560E00,	//0x20b6		VoC_mac32_rd(REG0,0x4a56)
0x0924FFC0,	//0x20b8		VoC_add32_rd(ACC0,ACC0,0x4a3e)(lo)	|	VoC_NOP
0xFA744A3E,	//0x20ba		VoC_shr32_ri(ACC0,0xe,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x4a3e)(hi)
0xFA5BFF23,	//0x20bc		VoC_shr32_ri(REG67,0xb,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x4A145433,	//0x20be		VoC_bngt32_rd(SPX_EXP_X_NGT_14,REG67,0x4a14)
0x4A781487,	//0x20c0		VoC_lw32_d(RL7,0x4a78)
0x20EB2B00,	//0x20c2		VoC_jump_lg(SPX_EXP_END)
		//0x20c4		SPX_EXP_X_NGT_14
0x4A7C642B,	//0x20c4		VoC_bnlt32_rd(SPX_EXP_X_NLT_NEG15,REG67,0x4a7c)
0x2B00FF47,	//0x20c6		VoC_jump_lg(SPX_EXP_END)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xDF4320EB,	//0x20c8		VoC_push32(REG67,DEFAULT)	|	VoC_jump_lg(SPX_EXP_END)(hi)
		//0x20c9		SPX_EXP_X_NLT_NEG15
0xCB1FFBAB,	//0x20ca		VoC_sub32_rr(RL7,ACC0,REG67,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff5,DEFAULT)
0x7F3BFBEF,	//0x20cc		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffffd,DEFAULT)
0x1804F471,	//0x20ce		VoC_lw16i_set_inc(REG0,0x49fe,0x1)(lo)	|	VoC_lw16i_short(FORMAT32,0xe,IN_PARALLEL)
0xFF4449FE,	//0x20d0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x49fe,0x1)(hi)
0xFFC0D130,	//0x20d2		VoC_NOP	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0x8304FF22,	//0x20d4		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xCE34FF44,	//0x20d6		VoC_mac32_rr(REG6,REG4,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xFF22FFC0,	//0x20d8		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_NOP
0xFF448304,	//0x20da		VoC_lw32z(ACC0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
0xFFC0CE34,	//0x20dc		VoC_NOP	|	VoC_mac32_rr(REG6,REG4,DEFAULT)
0x8304FF22,	//0x20de		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x20E43244,	//0x20e0		VoC_bnltz16_r(SPX_EXP_EXTEND_FRAC,REG4)
0x7FFF0AC5,	//0x20e2		VoC_lw16i(REG5,0xffff)
		//0x20e4		SPX_EXP_EXTEND_FRAC
0x0736DF03,	//0x20e4		VoC_add16_rd(REG6,REG6,0x4a06)(lo)	|	VoC_pop32(REG67,DEFAULT)
0x0B364A06,	//0x20e6		VoC_sub16_dr(REG6,0x4a02,REG6)(lo)	|	VoC_add16_rd(REG6,REG6,0x4a06)(hi)
0xFEB24A02,	//0x20e8		VoC_shr32_rr(REG45,REG6,DEFAULT)	|	VoC_sub16_dr(REG6,0x4a02,REG6)(hi)
0xDF06FF17,	//0x20ea		VoC_pop32(RL6,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x20eb		SPX_EXP_END
0xDF02DF03,	//0x20ec		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDFE9E580,	//0x20ee		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x20ef		spx_kiss_fftri2
0x2006DFC0,	//0x20f0		VoC_lw16d_set_inc(REG2,0x95e,0x1)(lo)	|	VoC_push16(REG0,DEFAULT)
0x1808095E,	//0x20f2		VoC_lw16i_set_inc(REG0,0x47ee,0x2)(lo)	|	VoC_lw16d_set_inc(REG2,0x95e,0x1)(hi)
0x140447EE,	//0x20f4		VoC_lw16_d(REG4,0x470c)(lo)	|	VoC_lw16i_set_inc(REG0,0x47ee,0x2)(hi)
0xC125470C,	//0x20f6		VoC_add16_rr(REG5,REG4,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x470c)(hi)
0xC0AB4029,	//0x20f8		VoC_add16_rr(REG3,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG5,DEFAULT)
0xF3F977F3,	//0x20fa		VoC_lw16i_short(INC1,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x5E18FFC0,	//0x20fc		VoC_inc_p(REG3,DEFAULT)	|	VoC_NOP
0xD8A5DE08,	//0x20fe		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
0x855F015E,	//0x2100		VoC_sub16_rp(REG7,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG5,REG3,DEFAULT)
0xDDC3DE18,	//0x2102		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0x488E0A85,	//0x2104		VoC_lw16i(REG5,0x488e)
0x4A06072D,	//0x2106		VoC_add16_rd(REG5,REG5,0x4a06)
0xF401780C,	//0x2108		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xDF40E731,	//0x210a		VoC_push32(REG01,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD8A4DFC5,	//0x210c		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xD8B1D8A5,	//0x210e		VoC_lw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x4106D8B0,	//0x2110		VoC_add16_rr(REG6,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG0,REG3,DEFAULT)
0xFF1FC34F,	//0x2112		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_sub16_rr(REG7,REG5,REG1,IN_PARALLEL)
0xC14F4306,	//0x2114		VoC_add16_rr(REG7,REG5,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG0,DEFAULT)
0xFFC0DF85,	//0x2116		VoC_NOP	|	VoC_pop16(REG5,DEFAULT)
0xDFC5D9A8,	//0x2118		VoC_push16(REG5,DEFAULT)	|	VoC_lw32_p(REG01,REG5,DEFAULT)
0xFF457F44,	//0x211a		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE384E39,	//0x211c		VoC_mac32_rr(REG7,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG1,DEFAULT)
0x0BA4FFC0,	//0x211e		VoC_sub32_dr(ACC0,0x4a02,ACC0)(lo)	|	VoC_NOP
0x4E304A02,	//0x2120		VoC_mac32_rr(REG6,REG0,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4a02,ACC0)(hi)
0xFFC0CE31,	//0x2122		VoC_NOP	|	VoC_mac32_rr(REG6,REG1,IN_PARALLEL)
0x4A460924,	//0x2124		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x2126		VoC_add32_rd(ACC1,ACC1,0x4a46)
0xFA7D7A7C,	//0x2128		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2B7F22,	//0x212a		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDF00E0C5,	//0x212c		VoC_pop32(REG01,DEFAULT)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xFF3B7F0E,	//0x212e		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_movreg32(RL6,REG23,DEFAULT)
0xC1EB41A2,	//0x2130		VoC_add16_rr(REG3,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG4,DEFAULT)
0xDDC1FFC0,	//0x2132		VoC_sw32inc_p(REG23,REG0,DEFAULT)	|	VoC_NOP
0x43A2FFC0,	//0x2134		VoC_sub16_rr(REG2,REG6,REG4,DEFAULT)	|	VoC_NOP
0xFFC0C37B,	//0x2136		VoC_NOP	|	VoC_sub16_rr(REG3,REG5,REG7,IN_PARALLEL)
0xFF31DDC9,	//0x2138		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0x072DDF85,	//0x213a		VoC_add16_rd(REG5,REG5,0x4a06)(lo)	|	VoC_pop16(REG5,DEFAULT)
		//0x213b		VoC_endloop0
0x200A4A06,	//0x213c		VoC_lw16d_set_inc(REG2,0x95f,0x2)(lo)	|	VoC_add16_rd(REG5,REG5,0x4a06)(hi)
0x180B095F,	//0x213e		VoC_lw16i_set_inc(REG3,0x47ee,0x2)(lo)	|	VoC_lw16d_set_inc(REG2,0x95f,0x2)(hi)
0xF04747EE,	//0x2140		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x47ee,0x2)(hi)
0x470C1804,	//0x2142		VoC_lw16i_set_inc(REG0,0x470c,0x1)
0x470E1809,	//0x2144		VoC_lw16i_set_inc(REG1,0x470e,0x2)
0x2B80F024,	//0x2146		VoC_jal(spx_kf_shuffle)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xF0262152,	//0x2148		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_jal(spx_kf_shuffle)(hi)
0xF02FF02E,	//0x214a		VoC_lw16i_short(RL7_HI,0x1,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
0x26422B80,	//0x214c		VoC_jal(spx_kf_work)
0xDFA9DF80,	//0x214e		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xE580FFC0,	//0x2150		VoC_return	|	VoC_NOP
		//0x2152		spx_kf_shuffle
0xDF40DFE9,	//0x2152		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xDF42DF41,	//0x2154		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xC5E7DF43,	//0x2156		VoC_mult16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xF8FDD9CA,	//0x2158		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x4A0644B5,	//0x215a		VoC_bne16_rd(SPX_KF_SHUFFLE_IF,REG5,0x4a06)
0xFFC07006,	//0x215c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x215e		SPX_KF_SHUFFLE_FOR1_BEGIN
0x21673534,	//0x215e		VoC_be16_rr(SPX_KF_SHUFFLE_FOR1_END,REG6,REG4)
0xFFC0D99F,	//0x2160		VoC_NOP	|	VoC_lw32_p(RL7,REG3,DEFAULT)
0xC0FB5DD7,	//0x2162		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x4A040736,	//0x2164		VoC_add16_rd(REG6,REG6,0x4a04)
0xE5CCE5F8,	//0x2166		VoC_jump(SPX_KF_SHUFFLE_END)	|	VoC_jump(SPX_KF_SHUFFLE_FOR1_BEGIN)
		//0x2167		SPX_KF_SHUFFLE_FOR1_END
		//0x2168		SPX_KF_SHUFFLE_IF
0xFFC07006,	//0x2168		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x216a		SPX_KF_SHUFFLE_FOR2_BEGIN
0x21733534,	//0x216a		VoC_be16_rr(SPX_KF_SHUFFLE_FOR2_END,REG6,REG4)
0x21522B80,	//0x216c		VoC_jal(spx_kf_shuffle)
0xC0AA40FB,	//0x216e		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x4A040736,	//0x2170		VoC_add16_rd(REG6,REG6,0x4a04)
0xDF03E5F8,	//0x2172		VoC_pop32(REG67,DEFAULT)	|	VoC_jump(SPX_KF_SHUFFLE_FOR2_BEGIN)
		//0x2173		SPX_KF_SHUFFLE_FOR2_END
		//0x2173		SPX_KF_SHUFFLE_END
0xDF01DF02,	//0x2174		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDFA9DF00,	//0x2176		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xE580FFC0,	//0x2178		VoC_return	|	VoC_NOP
		//0x217a		spx_kf_bfly2
0xDF40DFE9,	//0x217a		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xDF42DF41,	//0x217c		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xDF46DF43,	//0x217e		VoC_push32(RL6,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xE1E4DF47,	//0x2180		VoC_movreg16(REG4,RL7_HI,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x00010A83,	//0x2182		VoC_lw16i(REG3,0x1)
0xFFC0C019,	//0x2184		VoC_NOP	|	VoC_add16_rr(REG1,REG0,REG3,DEFAULT)
0xF0085811,	//0x2186		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xF0067031,	//0x2188		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x21D431C1,	//0x218a		VoC_bnez16_r(SPX_KF_BFLY2_IF,REG1)
0x21D12E31,	//0x218c		VoC_loop_r(1,REG6)
0xDFC2DFC0,	//0x218e		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xC069C0A9,	//0x2190		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_add16_rr(REG1,REG2,REG5,DEFAULT)
0x00420A83,	//0x2192		VoC_lw16i(REG3,0x42)
0xDF424018,	//0x2194		VoC_push32(REG45,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x21CC2E28,	//0x2196		VoC_loop_r(0,REG5)
0x7F44DF43,	//0x2198		VoC_lw32z(ACC0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xD98AFF45,	//0x219a		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x4E2FD983,	//0x219c		VoC_mac32_rr(REG5,REG7,DEFAULT)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xFFC0CE27,	//0x219e		VoC_NOP	|	VoC_mac32_rr(REG4,REG7,IN_PARALLEL)
0x4A020BA4,	//0x21a0		VoC_sub32_dr(ACC0,0x4a02,ACC0)
0xCE2E4E26,	//0x21a2		VoC_mac32_rr(REG5,REG6,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG6,DEFAULT)
0x7A0CFFC0,	//0x21a4		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_NOP
0xF007FA0D,	//0x21a6		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x1,IN_PARALLEL)
0x3246D826,	//0x21a8		VoC_bnltz16_r(SPX_KF_BFLY2_EXTEND32,REG6)(lo)	|	VoC_lw16_p(REG6,REG2,DEFAULT)
0x0AC721AD,	//0x21aa		VoC_lw16i(REG7,0xffff)(lo)	|	VoC_bnltz16_r(SPX_KF_BFLY2_EXTEND32,REG6)(hi)
0xFB937FFF,	//0x21ac		VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)	|	VoC_lw16i(REG7,0xffff)(hi)
		//0x21ad		SPX_KF_BFLY2_EXTEND32
0xC8E64AE7,	//0x21ae		VoC_add32_rr(RL6,REG67,ACC0,IN_PARALLEL)	|	VoC_sub32_rr(RL7,REG67,ACC0,DEFAULT)
0x4A460936,	//0x21b0		VoC_add32_rd(RL6,RL6,0x4a46)
0x4A46093F,	//0x21b2		VoC_add32_rd(RL7,RL7,0x4a46)
0xFA7F7A7E,	//0x21b4		VoC_shr32_ri(RL7,0xf,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xf,DEFAULT)
0xDCACFFC0,	//0x21b6		VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)	|	VoC_NOP
0xD826DC9E,	//0x21b8		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(RL7_LO,REG1,DEFAULT)
0x3246F007,	//0x21ba		VoC_bnltz16_r(SPX_KF_BFLY2_EXTEND32_2,REG6)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x0AC721BF,	//0x21bc		VoC_lw16i(REG7,0xffff)(lo)	|	VoC_bnltz16_r(SPX_KF_BFLY2_EXTEND32_2,REG6)(hi)
0xFB937FFF,	//0x21be		VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)	|	VoC_lw16i(REG7,0xffff)(hi)
		//0x21bf		SPX_KF_BFLY2_EXTEND32_2
0xC8EECAEF,	//0x21c0		VoC_add32_rr(RL6,REG67,ACC1,DEFAULT)	|	VoC_sub32_rr(RL7,REG67,ACC1,DEFAULT)
0x4A460936,	//0x21c2		VoC_add32_rd(RL6,RL6,0x4a46)
0x4A46093F,	//0x21c4		VoC_add32_rd(RL7,RL7,0x4a46)
0xFA7F7A7E,	//0x21c6		VoC_shr32_ri(RL7,0xf,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xf,DEFAULT)
0xDCACFFC0,	//0x21c8		VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)	|	VoC_NOP
0xDF03DC9E,	//0x21ca		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16inc_p(RL7_LO,REG1,DEFAULT)
		//0x21cc		VoC_endloop0
0xDF02C038,	//0x21cc		VoC_pop32(REG45,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xDF80DF82,	//0x21ce		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xC0A2C0A2,	//0x21d0		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
		//0x21d1		VoC_endloop1
0x220C2B00,	//0x21d2		VoC_jump_lg(SPX_KF_BFLY2_END)
		//0x21d4		SPX_KF_BFLY2_IF
0xF00A7051,	//0x21d4		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x220B2E31,	//0x21d6		VoC_loop_r(1,REG6)
0xDFC2DFC0,	//0x21d8		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xC069C0A9,	//0x21da		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_add16_rr(REG1,REG2,REG5,DEFAULT)
0x00420A83,	//0x21dc		VoC_lw16i(REG3,0x42)
0xDF424018,	//0x21de		VoC_push32(REG45,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x22062E28,	//0x21e0		VoC_loop_r(0,REG5)
0x7F44DF43,	//0x21e2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xD98AFF45,	//0x21e4		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x4E2FD983,	//0x21e6		VoC_mac32_rr(REG5,REG7,DEFAULT)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xFFC0CE27,	//0x21e8		VoC_NOP	|	VoC_mac32_rr(REG4,REG7,IN_PARALLEL)
0x4A020BA4,	//0x21ea		VoC_sub32_dr(ACC0,0x4a02,ACC0)
0xCE2E4E26,	//0x21ec		VoC_mac32_rr(REG5,REG6,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG6,DEFAULT)
0x0924FFC0,	//0x21ee		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0x092D4A46,	//0x21f0		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0x7A7C4A46,	//0x21f2		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0x7F26FA7D,	//0x21f4		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x6186FF2F,	//0x21f6		VoC_movreg16(REG6,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xDF40F7C7,	//0x21f8		VoC_push32(REG01,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,IN_PARALLEL)
0x4330D992,	//0x21fa		VoC_sub16_rr(REG0,REG4,REG6,DEFAULT)	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0xFF07C379,	//0x21fc		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_sub16_rr(REG1,REG5,REG7,IN_PARALLEL)
0xFFC0DF00,	//0x21fe		VoC_NOP	|	VoC_pop32(REG01,DEFAULT)
0x4134DDCF,	//0x2200		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0xFFC0C17D,	//0x2202		VoC_NOP	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xDF03DDD2,	//0x2204		VoC_pop32(REG67,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x2206		VoC_endloop0
0xDF02C038,	//0x2206		VoC_pop32(REG45,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xDF80DF82,	//0x2208		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xC0A2C0A2,	//0x220a		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
		//0x220b		VoC_endloop1
		//0x220c		SPX_KF_BFLY2_END
0xDF06DF07,	//0x220c		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF02DF03,	//0x220e		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF00DF01,	//0x2210		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xFFC0DFA9,	//0x2212		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x2214		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2215		spx_kf_bfly3
0xDF41DF40,	//0x2216		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x2218		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xDF47DF46,	//0x221a		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x0BB51405,	//0x221c		VoC_lw16_d(REG5,0xbb5)
0x0BB4082C,	//0x221e		VoC_mult16_rd(REG4,REG5,0xbb4)
0x00420A83,	//0x2220		VoC_lw16i(REG3,0x42)
0xC11CC01B,	//0x2222		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG3,REG0,REG3,DEFAULT)
0xD9A3FFC0,	//0x2224		VoC_lw32_p(REG67,REG4,DEFAULT)	|	VoC_NOP
0x1583FFC0,	//0x2226		VoC_sw32_d(REG67,0xb94)(lo)	|	VoC_NOP
0xE0A40B94,	//0x2228		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_sw32_d(REG67,0xb94)(hi)
0x1504F8FC,	//0x222a		VoC_sw16_d(REG4,0xbb5)(lo)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x2E290BB5,	//0x222c		VoC_loop_r(1,REG5)(lo)	|	VoC_sw16_d(REG4,0xbb5)(hi)
0xDFC722D7,	//0x222e		VoC_push16(REG7,DEFAULT)	|	VoC_loop_r(1,REG5)(hi)
0x00010A87,	//0x2230		VoC_lw16i(REG7,0x1)
0xD877C1C7,	//0x2232		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG0,DEFAULT)
0xFFC0F006,	//0x2234		VoC_NOP	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0BB81506,	//0x2236		VoC_sw16_d(REG6,0xbb8)
0x225131C7,	//0x2238		VoC_bnez16_r(SPX_KF_BFLY3_IF,REG7)
0xE8D4F019,	//0x223a		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x0A87D992,	//0x223c		VoC_lw16i(REG7,0x2aaa)(lo)	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0x7F442AAA,	//0x223e		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i(REG7,0x2aaa)(hi)
0x4E27FF45,	//0x2240		VoC_mac32_rr(REG4,REG7,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE2F,	//0x2242		VoC_NOP	|	VoC_mac32_rr(REG5,REG7,IN_PARALLEL)
0xFF2F7F26,	//0x2244		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x4A460936,	//0x2246		VoC_add32_rd(RL6,RL6,0x4a46)
0x4A46093F,	//0x2248		VoC_add32_rd(RL7,RL7,0x4a46)
0xFA7F7A7E,	//0x224a		VoC_shr32_ri(RL7,0xf,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xf,DEFAULT)
0xF7C56184,	//0x224c		VoC_movreg16(REG5,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG4,RL6_LO,DEFAULT)
0x0712DD92,	//0x224e		VoC_add16_rd(REG2,REG2,0xbb5)(lo)	|	VoC_sw32_p(REG45,REG2,DEFAULT)
		//0x224f		VoC_endloop0
0xDFC20BB5,	//0x2250		VoC_push16(REG2,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0xbb5)(hi)
		//0x2251		SPX_KF_BFLY3_IF
0x0BB50716,	//0x2252		VoC_add16_rd(REG6,REG2,0xbb5)
0x0BB8071F,	//0x2254		VoC_add16_rd(REG7,REG3,0xbb8)
0xD9BAD9B0,	//0x2256		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_lw32_p(REG01,REG6,DEFAULT)
0xFF457F44,	//0x2258		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE054E0D,	//0x225a		VoC_mac32_rr(REG0,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG5,DEFAULT)
0x0BA4FFC0,	//0x225c		VoC_sub32_dr(ACC0,0x4a02,ACC0)(lo)	|	VoC_NOP
0x4E044A02,	//0x225e		VoC_mac32_rr(REG0,REG4,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4a02,ACC0)(hi)
0xFFC0CE0C,	//0x2260		VoC_NOP	|	VoC_mac32_rr(REG1,REG4,IN_PARALLEL)
0x4A460924,	//0x2262		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x2264		VoC_add32_rd(ACC1,ACC1,0x4a46)
0xFA7D7A7C,	//0x2266		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2F7F26,	//0x2268		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xF7C16180,	//0x226a		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x1580FFC0,	//0x226c		VoC_sw32_d(REG01,0xb98)(lo)	|	VoC_NOP
0x07360B98,	//0x226e		VoC_add16_rd(REG6,REG6,0xbb5)(lo)	|	VoC_sw32_d(REG01,0xb98)(hi)
0x073F0BB5,	//0x2270		VoC_add16_rd(REG7,REG7,0xbb8)(lo)	|	VoC_add16_rd(REG6,REG6,0xbb5)(hi)
0xD9B00BB8,	//0x2272		VoC_lw32_p(REG01,REG6,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0xbb8)(hi)
0x4E0DD9BA,	//0x2274		VoC_mac32_rr(REG1,REG5,DEFAULT)	|	VoC_lw32_p(REG45,REG7,DEFAULT)
0xFFC0CE05,	//0x2276		VoC_NOP	|	VoC_mac32_rr(REG0,REG5,IN_PARALLEL)
0x4A020BA4,	//0x2278		VoC_sub32_dr(ACC0,0x4a02,ACC0)
0xCE0C4E04,	//0x227a		VoC_mac32_rr(REG1,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG4,DEFAULT)
0x0924FFC0,	//0x227c		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0x092D4A46,	//0x227e		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0x7A7C4A46,	//0x2280		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0x7F26FA7D,	//0x2282		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x6180FF2F,	//0x2284		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C1,	//0x2286		VoC_NOP	|	VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)
0x0B9A1580,	//0x2288		VoC_sw32_d(REG01,0xb9a)
0x0B980B06,	//0x228a		VoC_sub16_dr(REG6,0xb98,REG0)
0x0B990B0F,	//0x228c		VoC_sub16_dr(REG7,0xb99,REG1)
0x1583FFC0,	//0x228e		VoC_sw32_d(REG67,0xb96)(lo)	|	VoC_NOP
0x07000B96,	//0x2290		VoC_add16_rd(REG0,REG0,0xb98)(lo)	|	VoC_sw32_d(REG67,0xb96)(hi)
0x07090B98,	//0x2292		VoC_add16_rd(REG1,REG1,0xb99)(lo)	|	VoC_add16_rd(REG0,REG0,0xb98)(hi)
0xFFC00B99,	//0x2294		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0xb99)(hi)
0x0B9C1580,	//0x2296		VoC_sw32_d(REG01,0xb9c)
0x5993DF82,	//0x2298		VoC_lw32_p(REG67,REG2,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x7808DFC2,	//0x229a		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_push16(REG2,IN_PARALLEL)
0x4380F809,	//0x229c		VoC_sub16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,IN_PARALLEL)
0x0712C3C9,	//0x229e		VoC_add16_rd(REG2,REG2,0xbb5)(lo)	|	VoC_sub16_rr(REG1,REG7,REG1,IN_PARALLEL)
0xFFC00BB5,	//0x22a0		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0xbb5)(hi)
0xDF82DD90,	//0x22a2		VoC_pop16(REG2,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x0B9C0736,	//0x22a4		VoC_add16_rd(REG6,REG6,0xb9c)
0x0B9D073F,	//0x22a6		VoC_add16_rd(REG7,REG7,0xb9d)
0xDD93DFC2,	//0x22a8		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x0B961480,	//0x22aa		VoC_lw32_d(REG01,0xb96)
0x0B941483,	//0x22ac		VoC_lw32_d(REG67,0xb94)
0xFF457F44,	//0x22ae		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE0F4E07,	//0x22b0		VoC_mac32_rr(REG1,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG7,DEFAULT)
0x0924FFC0,	//0x22b2		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0x092D4A46,	//0x22b4		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0x7A7C4A46,	//0x22b6		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0x7F26FA7D,	//0x22b8		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x6186FF2F,	//0x22ba		VoC_movreg16(REG6,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C7,	//0x22bc		VoC_NOP	|	VoC_movreg16(REG7,RL7_LO,IN_PARALLEL)
0x0B961583,	//0x22be		VoC_sw32_d(REG67,0xb96)
0xDFC2DF82,	//0x22c0		VoC_push16(REG2,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x0BB50712,	//0x22c2		VoC_add16_rd(REG2,REG2,0xbb5)
0x4032D990,	//0x22c4		VoC_add16_rr(REG2,REG0,REG6,DEFAULT)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0x4236C27B,	//0x22c6		VoC_sub16_rr(REG6,REG0,REG6,DEFAULT)	|	VoC_sub16_rr(REG3,REG1,REG7,IN_PARALLEL)
0xFFC0C07F,	//0x22c8		VoC_NOP	|	VoC_add16_rr(REG7,REG1,REG7,IN_PARALLEL)
0x0712DD93,	//0x22ca		VoC_add16_rd(REG2,REG2,0xbb5)(lo)	|	VoC_sw32_p(REG67,REG2,DEFAULT)
0xFFC00BB5,	//0x22cc		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0xbb5)(hi)
0xDF82DD91,	//0x22ce		VoC_pop16(REG2,DEFAULT)	|	VoC_sw32_p(REG23,REG2,DEFAULT)
0xFFC0DF87,	//0x22d0		VoC_NOP	|	VoC_pop16(REG7,DEFAULT)
0x0BB4073F,	//0x22d2		VoC_add16_rd(REG7,REG7,0xbb4)
0x1507FFC0,	//0x22d4		VoC_sw16_d(REG7,0xbb8)(lo)	|	VoC_NOP
0xFFC00BB8,	//0x22d6		VoC_NOP	|	VoC_sw16_d(REG7,0xbb8)(hi)
		//0x22d7		VoC_endloop1
0xDF06DF07,	//0x22d8		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF02DF03,	//0x22da		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF00DF01,	//0x22dc		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xFFC0DFA9,	//0x22de		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x22e0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x22e1		spx_kf_bfly4
0xDF41DF40,	//0x22e2		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x22e4		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xDF47DF46,	//0x22e6		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x0BB71405,	//0x22e8		VoC_lw16_d(REG5,0xbb7)
0xFFC0F8FD,	//0x22ea		VoC_NOP	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0x0BB71505,	//0x22ec		VoC_sw16_d(REG5,0xbb7)
0x0BB61406,	//0x22ee		VoC_lw16_d(REG6,0xbb6)
0x0BB51407,	//0x22f0		VoC_lw16_d(REG7,0xbb5)
0xF8FDE0E5,	//0x22f2		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_movreg16(REG5,REG7,DEFAULT)
0x1505FFC0,	//0x22f4		VoC_sw16_d(REG5,0xbb5)(lo)	|	VoC_NOP
0x0A850BB5,	//0x22f6		VoC_lw16i(REG5,0x1)(lo)	|	VoC_sw16_d(REG5,0xbb5)(hi)
0xC02D0001,	//0x22f8		VoC_add16_rr(REG5,REG0,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x1)(hi)
0xD855FFC0,	//0x22fa		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_NOP
0x3185F019,	//0x22fc		VoC_bez16_r(SPX_KF_BFLY4_IF,REG5)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x2E3123CC,	//0x22fe		VoC_loop_r(1,REG6)(lo)	|	VoC_bez16_r(SPX_KF_BFLY4_IF,REG5)(hi)
0xDFC023C8,	//0x2300		VoC_push16(REG0,DEFAULT)	|	VoC_loop_r(1,REG6)(hi)
0x0A83DFC2,	//0x2302		VoC_lw16i(REG3,0x42)(lo)	|	VoC_push16(REG2,DEFAULT)
0xC01B0042,	//0x2304		VoC_add16_rr(REG3,REG0,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x42)(hi)
0x0BB51407,	//0x2306		VoC_lw16_d(REG7,0xbb5)
0xF006F80F,	//0x2308		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0x1506FFC0,	//0x230a		VoC_sw16_d(REG6,0xbb8)(lo)	|	VoC_NOP
0x2E380BB8,	//0x230c		VoC_loop_r(0,REG7)(lo)	|	VoC_sw16_d(REG6,0xbb8)(hi)
0xDFC323C4,	//0x230e		VoC_push16(REG3,DEFAULT)	|	VoC_loop_r(0,REG7)(hi)
0x0716DFC2,	//0x2310		VoC_add16_rd(REG6,REG2,0xbb5)(lo)	|	VoC_push16(REG2,DEFAULT)
0x071F0BB5,	//0x2312		VoC_add16_rd(REG7,REG3,0xbb8)(lo)	|	VoC_add16_rd(REG6,REG2,0xbb5)(hi)
0xFFC00BB8,	//0x2314		VoC_NOP	|	VoC_add16_rd(REG7,REG3,0xbb8)(hi)
0xD9BAD9B0,	//0x2316		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_lw32_p(REG01,REG6,DEFAULT)
0xFF457F44,	//0x2318		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE054E0D,	//0x231a		VoC_mac32_rr(REG0,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG5,DEFAULT)
0x0BA4FFC0,	//0x231c		VoC_sub32_dr(ACC0,0x4a02,ACC0)(lo)	|	VoC_NOP
0x4E044A02,	//0x231e		VoC_mac32_rr(REG0,REG4,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4a02,ACC0)(hi)
0xFFC0CE0C,	//0x2320		VoC_NOP	|	VoC_mac32_rr(REG1,REG4,IN_PARALLEL)
0x4A460924,	//0x2322		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x2324		VoC_add32_rd(ACC1,ACC1,0x4a46)
0xFA7D7A7C,	//0x2326		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2F7F26,	//0x2328		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xF7C16180,	//0x232a		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x1580FFC0,	//0x232c		VoC_sw32_d(REG01,0xb96)(lo)	|	VoC_NOP
0x07360B96,	//0x232e		VoC_add16_rd(REG6,REG6,0xbb5)(lo)	|	VoC_sw32_d(REG01,0xb96)(hi)
0x073F0BB5,	//0x2330		VoC_add16_rd(REG7,REG7,0xbb8)(lo)	|	VoC_add16_rd(REG6,REG6,0xbb5)(hi)
0xFFC00BB8,	//0x2332		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0xbb8)(hi)
0xD9BAD9B0,	//0x2334		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_lw32_p(REG01,REG6,DEFAULT)
0xFF457F44,	//0x2336		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE054E0D,	//0x2338		VoC_mac32_rr(REG0,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG5,DEFAULT)
0x0BA4FFC0,	//0x233a		VoC_sub32_dr(ACC0,0x4a02,ACC0)(lo)	|	VoC_NOP
0x4E044A02,	//0x233c		VoC_mac32_rr(REG0,REG4,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4a02,ACC0)(hi)
0xFFC0CE0C,	//0x233e		VoC_NOP	|	VoC_mac32_rr(REG1,REG4,IN_PARALLEL)
0x4A460924,	//0x2340		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x2342		VoC_add32_rd(ACC1,ACC1,0x4a46)
0xFA7D7A7C,	//0x2344		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2F7F26,	//0x2346		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xF7C16180,	//0x2348		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x1580FFC0,	//0x234a		VoC_sw32_d(REG01,0xb98)(lo)	|	VoC_NOP
0x07360B98,	//0x234c		VoC_add16_rd(REG6,REG6,0xbb5)(lo)	|	VoC_sw32_d(REG01,0xb98)(hi)
0x073F0BB5,	//0x234e		VoC_add16_rd(REG7,REG7,0xbb8)(lo)	|	VoC_add16_rd(REG6,REG6,0xbb5)(hi)
0xFFC00BB8,	//0x2350		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0xbb8)(hi)
0xD9BAD9B0,	//0x2352		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_lw32_p(REG01,REG6,DEFAULT)
0xFF457F44,	//0x2354		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE054E0D,	//0x2356		VoC_mac32_rr(REG0,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG5,DEFAULT)
0x0BA4FFC0,	//0x2358		VoC_sub32_dr(ACC0,0x4a02,ACC0)(lo)	|	VoC_NOP
0x4E044A02,	//0x235a		VoC_mac32_rr(REG0,REG4,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4a02,ACC0)(hi)
0xFFC0CE0C,	//0x235c		VoC_NOP	|	VoC_mac32_rr(REG1,REG4,IN_PARALLEL)
0x4A460924,	//0x235e		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x2360		VoC_add32_rd(ACC1,ACC1,0x4a46)
0xFA7D7A7C,	//0x2362		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2F7F26,	//0x2364		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xF7C16180,	//0x2366		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x1580FFC0,	//0x2368		VoC_sw32_d(REG01,0xb9a)(lo)	|	VoC_NOP
0x07040B9A,	//0x236a		VoC_add16_rd(REG4,REG0,0xb96)(lo)	|	VoC_sw32_d(REG01,0xb9a)(hi)
0x070D0B96,	//0x236c		VoC_add16_rd(REG5,REG1,0xb97)(lo)	|	VoC_add16_rd(REG4,REG0,0xb96)(hi)
0xFFC00B97,	//0x236e		VoC_NOP	|	VoC_add16_rd(REG5,REG1,0xb97)(hi)
0x0B9C1582,	//0x2370		VoC_sw32_d(REG45,0xb9c)
0x0B960B04,	//0x2372		VoC_sub16_dr(REG4,0xb96,REG0)
0x0B970B0D,	//0x2374		VoC_sub16_dr(REG5,0xb97,REG1)
0x1582FFC0,	//0x2376		VoC_sw32_d(REG45,0xb9e)(lo)	|	VoC_NOP
0xDF820B9E,	//0x2378		VoC_pop16(REG2,DEFAULT)	|	VoC_sw32_d(REG45,0xb9e)(hi)
0xD826FFC0,	//0x237a		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_NOP
0x0B9807B0,	//0x237c		VoC_sub16_rd(REG0,REG6,0xb98)
0x0B980736,	//0x237e		VoC_add16_rd(REG6,REG6,0xb98)
0x07B4DFC2,	//0x2380		VoC_sub16_rd(REG4,REG6,0xb9c)(lo)	|	VoC_push16(REG2,DEFAULT)
0x07120B9C,	//0x2382		VoC_add16_rd(REG2,REG2,0x4a04)(lo)	|	VoC_sub16_rd(REG4,REG6,0xb9c)(hi)
0xFFC04A04,	//0x2384		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0x4a04)(hi)
0x07B9D827,	//0x2386		VoC_sub16_rd(REG1,REG7,0xb99)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0x073F0B99,	//0x2388		VoC_add16_rd(REG7,REG7,0xb99)(lo)	|	VoC_sub16_rd(REG1,REG7,0xb99)(hi)
0xFFC00B99,	//0x238a		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0xb99)(hi)
0x0B9D07BD,	//0x238c		VoC_sub16_rd(REG5,REG7,0xb9d)
0x0BA01580,	//0x238e		VoC_sw32_d(REG01,0xba0)
0x4A040792,	//0x2390		VoC_sub16_rd(REG2,REG2,0x4a04)
0xDD93FFC0,	//0x2392		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_NOP
0x0BB50712,	//0x2394		VoC_add16_rd(REG2,REG2,0xbb5)
0x0BB50712,	//0x2396		VoC_add16_rd(REG2,REG2,0xbb5)
0xDD92FFC0,	//0x2398		VoC_sw32_p(REG45,REG2,DEFAULT)	|	VoC_NOP
0xFFC0DF82,	//0x239a		VoC_NOP	|	VoC_pop16(REG2,DEFAULT)
0xF0065FC2,	//0x239c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xD8A0FFC0,	//0x239e		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_NOP
0x0B9C0700,	//0x23a0		VoC_add16_rd(REG0,REG0,0xb9c)
0x0709D821,	//0x23a2		VoC_add16_rd(REG1,REG1,0xb9d)(lo)	|	VoC_lw16_p(REG1,REG2,DEFAULT)
0xDF820B9D,	//0x23a4		VoC_pop16(REG2,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0xb9d)(hi)
0xDD90FFC0,	//0x23a6		VoC_sw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0x1483DFC2,	//0x23a8		VoC_lw32_d(REG67,0xba0)(lo)	|	VoC_push16(REG2,DEFAULT)
0x14820BA0,	//0x23aa		VoC_lw32_d(REG45,0xb9e)(lo)	|	VoC_lw32_d(REG67,0xba0)(hi)
0x43A80B9E,	//0x23ac		VoC_sub16_rr(REG0,REG6,REG5,DEFAULT)	|	VoC_lw32_d(REG45,0xb9e)(hi)
0x0712C1E1,	//0x23ae		VoC_add16_rd(REG2,REG2,0xbb5)(lo)	|	VoC_add16_rr(REG1,REG7,REG4,IN_PARALLEL)
0xFFC00BB5,	//0x23b0		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0xbb5)(hi)
0x41A8DD90,	//0x23b2		VoC_add16_rr(REG0,REG6,REG5,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x0712C3E1,	//0x23b4		VoC_add16_rd(REG2,REG2,0xbb5)(lo)	|	VoC_sub16_rr(REG1,REG7,REG4,IN_PARALLEL)
0x07120BB5,	//0x23b6		VoC_add16_rd(REG2,REG2,0xbb5)(lo)	|	VoC_add16_rd(REG2,REG2,0xbb5)(hi)
0xFFC00BB5,	//0x23b8		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0xbb5)(hi)
0xDF82DD90,	//0x23ba		VoC_pop16(REG2,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x1407DF83,	//0x23bc		VoC_lw16_d(REG7,0xbb8)(lo)	|	VoC_pop16(REG3,DEFAULT)
0x07120BB8,	//0x23be		VoC_add16_rd(REG2,REG2,0x4a06)(lo)	|	VoC_lw16_d(REG7,0xbb8)(hi)
0x073F4A06,	//0x23c0		VoC_add16_rd(REG7,REG7,0xbb4)(lo)	|	VoC_add16_rd(REG2,REG2,0x4a06)(hi)
0xFFC00BB4,	//0x23c2		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0xbb4)(hi)
		//0x23c4		VoC_endloop0
0x0BB81507,	//0x23c4		VoC_sw16_d(REG7,0xbb8)
0xDF80DF82,	//0x23c6		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x23c8		VoC_endloop1
0x0BB70712,	//0x23c8		VoC_add16_rd(REG2,REG2,0xbb7)
0x248E2B00,	//0x23ca		VoC_jump_lg(SPX_KF_BFLY4_END)
		//0x23cc		SPX_KF_BFLY4_IF
0x248C2E31,	//0x23cc		VoC_loop_r(1,REG6)
0xDFC2DFC0,	//0x23ce		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x00420A83,	//0x23d0		VoC_lw16i(REG3,0x42)
0x1407C01B,	//0x23d2		VoC_lw16_d(REG7,0xbb5)(lo)	|	VoC_add16_rr(REG3,REG0,REG3,DEFAULT)
0xF80F0BB5,	//0x23d4		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_lw16_d(REG7,0xbb5)(hi)
0xFFC0F006,	//0x23d6		VoC_NOP	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0BB81506,	//0x23d8		VoC_sw16_d(REG6,0xbb8)
0x24872E38,	//0x23da		VoC_loop_r(0,REG7)
0xDFC2DFC3,	//0x23dc		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x0BB50716,	//0x23de		VoC_add16_rd(REG6,REG2,0xbb5)
0x0BB8071F,	//0x23e0		VoC_add16_rd(REG7,REG3,0xbb8)
0xD9B0FFC0,	//0x23e2		VoC_lw32_p(REG01,REG6,DEFAULT)	|	VoC_NOP
0x7F44D9BA,	//0x23e4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_p(REG45,REG7,DEFAULT)
0x4E0DFF45,	//0x23e6		VoC_mac32_rr(REG1,REG5,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE05,	//0x23e8		VoC_NOP	|	VoC_mac32_rr(REG0,REG5,IN_PARALLEL)
0x4A020BA4,	//0x23ea		VoC_sub32_dr(ACC0,0x4a02,ACC0)
0xCE0C4E04,	//0x23ec		VoC_mac32_rr(REG1,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG4,DEFAULT)
0x0924FFC0,	//0x23ee		VoC_add32_rd(ACC0,ACC0,0x4a6c)(lo)	|	VoC_NOP
0x092D4A6C,	//0x23f0		VoC_add32_rd(ACC1,ACC1,0x4a6c)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a6c)(hi)
0x7A8C4A6C,	//0x23f2		VoC_shr32_ri(ACC0,0x11,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a6c)(hi)
0x7F26FA8D,	//0x23f4		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)
0x6180FF2F,	//0x23f6		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C1,	//0x23f8		VoC_NOP	|	VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)
0x0B961580,	//0x23fa		VoC_sw32_d(REG01,0xb96)
0x0BB50736,	//0x23fc		VoC_add16_rd(REG6,REG6,0xbb5)
0x0BB8073F,	//0x23fe		VoC_add16_rd(REG7,REG7,0xbb8)
0xD9B0FFC0,	//0x2400		VoC_lw32_p(REG01,REG6,DEFAULT)	|	VoC_NOP
0x7F44D9BA,	//0x2402		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_p(REG45,REG7,DEFAULT)
0x4E0DFF45,	//0x2404		VoC_mac32_rr(REG1,REG5,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE05,	//0x2406		VoC_NOP	|	VoC_mac32_rr(REG0,REG5,IN_PARALLEL)
0x4A020BA4,	//0x2408		VoC_sub32_dr(ACC0,0x4a02,ACC0)
0xCE0C4E04,	//0x240a		VoC_mac32_rr(REG1,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG4,DEFAULT)
0x0924FFC0,	//0x240c		VoC_add32_rd(ACC0,ACC0,0x4a6c)(lo)	|	VoC_NOP
0x092D4A6C,	//0x240e		VoC_add32_rd(ACC1,ACC1,0x4a6c)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a6c)(hi)
0x7A8C4A6C,	//0x2410		VoC_shr32_ri(ACC0,0x11,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a6c)(hi)
0x7F26FA8D,	//0x2412		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)
0x6180FF2F,	//0x2414		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C1,	//0x2416		VoC_NOP	|	VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)
0x0B981580,	//0x2418		VoC_sw32_d(REG01,0xb98)
0x0BB50736,	//0x241a		VoC_add16_rd(REG6,REG6,0xbb5)
0x0BB8073F,	//0x241c		VoC_add16_rd(REG7,REG7,0xbb8)
0xD9B0FFC0,	//0x241e		VoC_lw32_p(REG01,REG6,DEFAULT)	|	VoC_NOP
0x7F44D9BA,	//0x2420		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_p(REG45,REG7,DEFAULT)
0x4E0DFF45,	//0x2422		VoC_mac32_rr(REG1,REG5,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE05,	//0x2424		VoC_NOP	|	VoC_mac32_rr(REG0,REG5,IN_PARALLEL)
0x4A020BA4,	//0x2426		VoC_sub32_dr(ACC0,0x4a02,ACC0)
0xCE0C4E04,	//0x2428		VoC_mac32_rr(REG1,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG4,DEFAULT)
0x0924FFC0,	//0x242a		VoC_add32_rd(ACC0,ACC0,0x4a6c)(lo)	|	VoC_NOP
0x092D4A6C,	//0x242c		VoC_add32_rd(ACC1,ACC1,0x4a6c)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a6c)(hi)
0x7A8C4A6C,	//0x242e		VoC_shr32_ri(ACC0,0x11,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a6c)(hi)
0x7F26FA8D,	//0x2430		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)
0x6180FF2F,	//0x2432		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C1,	//0x2434		VoC_NOP	|	VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)
0x0B9A1580,	//0x2436		VoC_sw32_d(REG01,0xb9a)
0x0B960704,	//0x2438		VoC_add16_rd(REG4,REG0,0xb96)
0x0B97070D,	//0x243a		VoC_add16_rd(REG5,REG1,0xb97)
0x1582FFC0,	//0x243c		VoC_sw32_d(REG45,0xb9c)(lo)	|	VoC_NOP
0x0B040B9C,	//0x243e		VoC_sub16_dr(REG4,0xb96,REG0)(lo)	|	VoC_sw32_d(REG45,0xb9c)(hi)
0x0B0D0B96,	//0x2440		VoC_sub16_dr(REG5,0xb97,REG1)(lo)	|	VoC_sub16_dr(REG4,0xb96,REG0)(hi)
0xFFC00B97,	//0x2442		VoC_NOP	|	VoC_sub16_dr(REG5,0xb97,REG1)(hi)
0x0B9E1582,	//0x2444		VoC_sw32_d(REG45,0xb9e)
0x0700D990,	//0x2446		VoC_add16_rd(REG0,REG0,0x4a06)(lo)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0x07094A06,	//0x2448		VoC_add16_rd(REG1,REG1,0x4a06)(lo)	|	VoC_add16_rd(REG0,REG0,0x4a06)(hi)
0x78104A06,	//0x244a		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x4a06)(hi)
0x0786F811,	//0x244c		VoC_sub16_rd(REG6,REG0,0xb98)(lo)	|	VoC_shr16_ri(REG1,0x2,IN_PARALLEL)
0x078F0B98,	//0x244e		VoC_sub16_rd(REG7,REG1,0xb99)(lo)	|	VoC_sub16_rd(REG6,REG0,0xb98)(hi)
0xFFC00B99,	//0x2450		VoC_NOP	|	VoC_sub16_rd(REG7,REG1,0xb99)(hi)
0x0BA01583,	//0x2452		VoC_sw32_d(REG67,0xba0)
0x0B980700,	//0x2454		VoC_add16_rd(REG0,REG0,0xb98)
0x0B990709,	//0x2456		VoC_add16_rd(REG1,REG1,0xb99)
0xDD90FFC0,	//0x2458		VoC_sw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0x0BB50712,	//0x245a		VoC_add16_rd(REG2,REG2,0xbb5)
0x0B9C0786,	//0x245c		VoC_sub16_rd(REG6,REG0,0xb9c)
0x0BB50712,	//0x245e		VoC_add16_rd(REG2,REG2,0xbb5)
0x0B9D078F,	//0x2460		VoC_sub16_rd(REG7,REG1,0xb9d)
0xDD93FFC0,	//0x2462		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_NOP
0x0700DF82,	//0x2464		VoC_add16_rd(REG0,REG0,0xb9c)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x07090B9C,	//0x2466		VoC_add16_rd(REG1,REG1,0xb9d)(lo)	|	VoC_add16_rd(REG0,REG0,0xb9c)(hi)
0xFFC00B9D,	//0x2468		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0xb9d)(hi)
0xDFC2DD90,	//0x246a		VoC_push16(REG2,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x0BA01483,	//0x246c		VoC_lw32_d(REG67,0xba0)
0x0B9E1482,	//0x246e		VoC_lw32_d(REG45,0xb9e)
0x0BB50712,	//0x2470		VoC_add16_rd(REG2,REG2,0xbb5)
0xC3E141A8,	//0x2472		VoC_sub16_rr(REG1,REG7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG6,REG5,DEFAULT)
0xDD90FFC0,	//0x2474		VoC_sw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0x0BB50712,	//0x2476		VoC_add16_rd(REG2,REG2,0xbb5)
0xC1E143A8,	//0x2478		VoC_add16_rr(REG1,REG7,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG6,REG5,DEFAULT)
0x0BB50712,	//0x247a		VoC_add16_rd(REG2,REG2,0xbb5)
0xDD90FFC0,	//0x247c		VoC_sw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0xDF83DF82,	//0x247e		VoC_pop16(REG3,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x0BB81407,	//0x2480		VoC_lw16_d(REG7,0xbb8)
0x4A060712,	//0x2482		VoC_add16_rd(REG2,REG2,0x4a06)
0x0BB4073F,	//0x2484		VoC_add16_rd(REG7,REG7,0xbb4)
0x1507FFC0,	//0x2486		VoC_sw16_d(REG7,0xbb8)(lo)	|	VoC_NOP
		//0x2487		VoC_endloop0
0xFFC00BB8,	//0x2488		VoC_NOP	|	VoC_sw16_d(REG7,0xbb8)(hi)
0xDF80DF82,	//0x248a		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x248c		VoC_endloop1
0x0BB70712,	//0x248c		VoC_add16_rd(REG2,REG2,0xbb7)
		//0x248e		SPX_KF_BFLY4_END
0xDF06DF07,	//0x248e		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF02DF03,	//0x2490		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF00DF01,	//0x2492		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xFFC0DFA9,	//0x2494		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x2496		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2497		spx_kf_bfly5
0xDF41DF40,	//0x2498		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x249a		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xDF47DF46,	//0x249c		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x0BB51405,	//0x249e		VoC_lw16_d(REG5,0xbb5)
0xC5ECFFC0,	//0x24a0		VoC_mult16_rr(REG4,REG7,REG5,DEFAULT)	|	VoC_NOP
0x00420A86,	//0x24a2		VoC_lw16i(REG6,0x42)
0xC0E6C033,	//0x24a4		VoC_add16_rr(REG6,REG3,REG4,DEFAULT)	|	VoC_add16_rr(REG3,REG0,REG6,DEFAULT)
0xD9B7FFC0,	//0x24a6		VoC_lw32_p(RL7,REG6,DEFAULT)	|	VoC_NOP
0x1587FFC0,	//0x24a8		VoC_sw32_d(RL7,0xbb0)(lo)	|	VoC_NOP
0xC1A60BB0,	//0x24aa		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_sw32_d(RL7,0xbb0)(hi)
0xD9B7FFC0,	//0x24ac		VoC_lw32_p(RL7,REG6,DEFAULT)	|	VoC_NOP
0x1587FFC0,	//0x24ae		VoC_sw32_d(RL7,0xbb2)(lo)	|	VoC_NOP
0x70320BB2,	//0x24b0		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_sw32_d(RL7,0xbb2)(hi)
0xFFC0F401,	//0x24b2		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x26332E29,	//0x24b4		VoC_loop_r(1,REG5)
0x00010A86,	//0x24b6		VoC_lw16i(REG6,0x1)
0xFFC0C030,	//0x24b8		VoC_NOP	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0xDFC2D800,	//0x24ba		VoC_push16(REG2,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x24CD31C0,	//0x24bc		VoC_bnez16_r(SPX_KF_BFLY5_IF,REG0)
0xF401694E,	//0x24be		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD820FF44,	//0x24c0		VoC_lw16_p(REG0,REG2,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x19990A86,	//0x24c2		VoC_lw16i(REG6,0x1999)
0xFFC0CE06,	//0x24c4		VoC_NOP	|	VoC_mac32_rr(REG0,REG6,DEFAULT)
0x0900FF20,	//0x24c6		VoC_add32_rd(REG01,REG01,0x4a46)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFA784A46,	//0x24c8		VoC_shr32_ri(REG01,0xf,DEFAULT)	|	VoC_add32_rd(REG01,REG01,0x4a46)(hi)
0xDC20FFC0,	//0x24ca		VoC_sw16_p(REG0,REG2,DEFAULT)	|	VoC_NOP
		//0x24cc		VoC_endloop0
0xDF82C0AA,	//0x24cc		VoC_pop16(REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
		//0x24cd		SPX_KF_BFLY5_IF
0xF004F8FD,	//0x24ce		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0xD997DF41,	//0x24d0		VoC_lw32_p(RL7,REG2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x1587DF42,	//0x24d2		VoC_sw32_d(RL7,0xb96)(lo)	|	VoC_push32(REG45,DEFAULT)
0xDF410B96,	//0x24d4		VoC_push32(REG23,DEFAULT)	|	VoC_sw32_d(RL7,0xb96)(hi)
0xFF457F44,	//0x24d6		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC0C0AA,	//0x24d8		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xD99BD990,	//0x24da		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0xCE074E0F,	//0x24dc		VoC_mac32_rr(REG0,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0x0BA4FFC0,	//0x24de		VoC_sub32_dr(ACC0,0x4a02,ACC0)(lo)	|	VoC_NOP
0x4E064A02,	//0x24e0		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4a02,ACC0)(hi)
0xFFC0CE0E,	//0x24e2		VoC_NOP	|	VoC_mac32_rr(REG1,REG6,IN_PARALLEL)
0xFF2F7F26,	//0x24e4		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x4A460936,	//0x24e6		VoC_add32_rd(RL6,RL6,0x4a46)
0x4A46093F,	//0x24e8		VoC_add32_rd(RL7,RL7,0x4a46)
0xFA7F7A7E,	//0x24ea		VoC_shr32_ri(RL7,0xf,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xf,DEFAULT)
0x0B98150C,	//0x24ec		VoC_sw16_d(RL6_LO,0xb98)
0x0B99150E,	//0x24ee		VoC_sw16_d(RL7_LO,0xb99)
0x7F44DF01,	//0x24f0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x78F5FF45,	//0x24f2		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x40AAF8F4,	//0x24f4		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_shr16_ri(REG4,0xfffffffe,IN_PARALLEL)
0xFFC0C0E3,	//0x24f6		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xD99BD990,	//0x24f8		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0xCE074E0F,	//0x24fa		VoC_mac32_rr(REG0,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0x0BA4FFC0,	//0x24fc		VoC_sub32_dr(ACC0,0x4a02,ACC0)(lo)	|	VoC_NOP
0x4E064A02,	//0x24fe		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4a02,ACC0)(hi)
0xFFC0CE0E,	//0x2500		VoC_NOP	|	VoC_mac32_rr(REG1,REG6,IN_PARALLEL)
0x4A460924,	//0x2502		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x2504		VoC_add32_rd(ACC1,ACC1,0x4a46)
0xFA7DFA7C,	//0x2506		VoC_shr32_ri(ACC1,0xf,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xC9EB49A0,	//0x2508		VoC_add32_rr(REG67,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(REG01,RL6,ACC0,DEFAULT)
0xFFC0E0C1,	//0x250a		VoC_NOP	|	VoC_movreg16(REG1,REG6,DEFAULT)
0x0BA41580,	//0x250c		VoC_sw32_d(REG01,0xba4)
0xCBEB4BA0,	//0x250e		VoC_sub32_rr(REG67,RL7,ACC1,IN_PARALLEL)	|	VoC_sub32_rr(REG01,RL6,ACC0,DEFAULT)
0xFFC0E0C1,	//0x2510		VoC_NOP	|	VoC_movreg16(REG1,REG6,DEFAULT)
0x0BAA1580,	//0x2512		VoC_sw32_d(REG01,0xbaa)
0x7F44DF02,	//0x2514		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x42AAFF45,	//0x2516		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0C2E3,	//0x2518		VoC_NOP	|	VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xD99BD990,	//0x251a		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0xCE074E0F,	//0x251c		VoC_mac32_rr(REG0,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0x0BA4FFC0,	//0x251e		VoC_sub32_dr(ACC0,0x4a02,ACC0)(lo)	|	VoC_NOP
0x4E064A02,	//0x2520		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_sub32_dr(ACC0,0x4a02,ACC0)(hi)
0xFFC0CE0E,	//0x2522		VoC_NOP	|	VoC_mac32_rr(REG1,REG6,IN_PARALLEL)
0xFF2F7F26,	//0x2524		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x4A460936,	//0x2526		VoC_add32_rd(RL6,RL6,0x4a46)
0x4A46093F,	//0x2528		VoC_add32_rd(RL7,RL7,0x4a46)
0xFA7F7A7E,	//0x252a		VoC_shr32_ri(RL7,0xf,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xf,DEFAULT)
0xFF457F44,	//0x252c		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xC2E342AA,	//0x252e		VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)
0xD990FFC0,	//0x2530		VoC_lw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0x4E0FD99B,	//0x2532		VoC_mac32_rr(REG1,REG7,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0xFFC0CE07,	//0x2534		VoC_NOP	|	VoC_mac32_rr(REG0,REG7,IN_PARALLEL)
0x4A020BA4,	//0x2536		VoC_sub32_dr(ACC0,0x4a02,ACC0)
0xCE0E4E06,	//0x2538		VoC_mac32_rr(REG1,REG6,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG6,DEFAULT)
0x0924FFC0,	//0x253a		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0x092D4A46,	//0x253c		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0xFA7C4A46,	//0x253e		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0x4930FA7D,	//0x2540		VoC_add32_rr(REG01,ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,DEFAULT)
0xE0C1C97B,	//0x2542		VoC_movreg16(REG1,REG6,DEFAULT)	|	VoC_add32_rr(REG67,ACC1,RL7,IN_PARALLEL)
0x1580FFC0,	//0x2544		VoC_sw32_d(REG01,0xba6)(lo)	|	VoC_NOP
0x4B300BA6,	//0x2546		VoC_sub32_rr(REG01,ACC0,RL6,DEFAULT)	|	VoC_sw32_d(REG01,0xba6)(hi)
0xE0C1CB7B,	//0x2548		VoC_movreg16(REG1,REG6,DEFAULT)	|	VoC_sub32_rr(REG67,ACC1,RL7,IN_PARALLEL)
0x1580FFC0,	//0x254a		VoC_sw32_d(REG01,0xba8)(lo)	|	VoC_NOP
0xDF010BA8,	//0x254c		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32_d(REG01,0xba8)(hi)
0x0BA41406,	//0x254e		VoC_lw16_d(REG6,0xba4)
0x07368196,	//0x2550		VoC_add16_rd(REG6,REG6,0xba6)(lo)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
0xFFC00BA6,	//0x2552		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0xba6)(hi)
0x0712DC26,	//0x2554		VoC_add16_rd(REG2,REG2,0x4a04)(lo)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
0x14074A04,	//0x2556		VoC_lw16_d(REG7,0xba5)(lo)	|	VoC_add16_rd(REG2,REG2,0x4a04)(hi)
0x81D70BA5,	//0x2558		VoC_add16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16_d(REG7,0xba5)(hi)
0x0BA7073F,	//0x255a		VoC_add16_rd(REG7,REG7,0xba7)
0xDC27FFC0,	//0x255c		VoC_sw16_p(REG7,REG2,DEFAULT)	|	VoC_NOP
0x0792DF42,	//0x255e		VoC_sub16_rd(REG2,REG2,0x4a04)(lo)	|	VoC_push32(REG45,DEFAULT)
0xFFC04A04,	//0x2560		VoC_NOP	|	VoC_sub16_rd(REG2,REG2,0x4a04)(hi)
0x1480DF41,	//0x2562		VoC_lw32_d(REG01,0xbb0)(lo)	|	VoC_push32(REG23,DEFAULT)
0x14810BB0,	//0x2564		VoC_lw32_d(REG23,0xbb2)(lo)	|	VoC_lw32_d(REG01,0xbb0)(hi)
0x14820BB2,	//0x2566		VoC_lw32_d(REG45,0xba4)(lo)	|	VoC_lw32_d(REG23,0xbb2)(hi)
0x14830BA4,	//0x2568		VoC_lw32_d(REG67,0xba6)(lo)	|	VoC_lw32_d(REG45,0xba4)(hi)
0x7F440BA6,	//0x256a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_d(REG67,0xba6)(hi)
0x4E20FF45,	//0x256c		VoC_mac32_rr(REG4,REG0,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE32,	//0x256e		VoC_NOP	|	VoC_mac32_rr(REG6,REG2,IN_PARALLEL)
0x4A460924,	//0x2570		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x2572		VoC_add32_rd(ACC1,ACC1,0x4a46)
0x7A7CDF43,	//0x2574		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xC92BFA7D,	//0x2576		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x0B960736,	//0x2578		VoC_add16_rd(REG6,REG6,0xb96)
0x1506FFC0,	//0x257a		VoC_sw16_d(REG6,0xba0)(lo)	|	VoC_NOP
0xDF030BA0,	//0x257c		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_d(REG6,0xba0)(hi)
0xFF457F44,	//0x257e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE3A4E28,	//0x2580		VoC_mac32_rr(REG7,REG2,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG0,DEFAULT)
0x0924FFC0,	//0x2582		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0x092D4A46,	//0x2584		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0x7A7C4A46,	//0x2586		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0xC92BFA7D,	//0x2588		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x0B970736,	//0x258a		VoC_add16_rd(REG6,REG6,0xb97)
0x1506FFC0,	//0x258c		VoC_sw16_d(REG6,0xba1)(lo)	|	VoC_NOP
0x14820BA1,	//0x258e		VoC_lw32_d(REG45,0xba8)(lo)	|	VoC_sw16_d(REG6,0xba1)(hi)
0x14830BA8,	//0x2590		VoC_lw32_d(REG67,0xbaa)(lo)	|	VoC_lw32_d(REG45,0xba8)(hi)
0x7F440BAA,	//0x2592		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_d(REG67,0xbaa)(hi)
0x4E39FF45,	//0x2594		VoC_mac32_rr(REG7,REG1,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE2B,	//0x2596		VoC_NOP	|	VoC_mac32_rr(REG5,REG3,IN_PARALLEL)
0x4A460924,	//0x2598		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x259a		VoC_add32_rd(ACC1,ACC1,0x4a46)
0x7A7CDF43,	//0x259c		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xC92BFA7D,	//0x259e		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x1506FFC0,	//0x25a0		VoC_sw16_d(REG6,0xba2)(lo)	|	VoC_NOP
0xDF030BA2,	//0x25a2		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_d(REG6,0xba2)(hi)
0xFF457F44,	//0x25a4		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE234E31,	//0x25a6		VoC_mac32_rr(REG4,REG3,IN_PARALLEL)	|	VoC_mac32_rr(REG6,REG1,DEFAULT)
0x0924FFC0,	//0x25a8		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0x092D4A46,	//0x25aa		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0x7A7C4A46,	//0x25ac		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0xC92BFA7D,	//0x25ae		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x4A020B9B,	//0x25b0		VoC_sub32_dr(REG67,0x4a02,REG67)
0x1506FFC0,	//0x25b2		VoC_sw16_d(REG6,0xba3)(lo)	|	VoC_NOP
0xDF010BA3,	//0x25b4		VoC_pop32(REG23,DEFAULT)	|	VoC_sw16_d(REG6,0xba3)(hi)
0x0BA01482,	//0x25b6		VoC_lw32_d(REG45,0xba0)
0x0BA21483,	//0x25b8		VoC_lw32_d(REG67,0xba2)
0xC3794330,	//0x25ba		VoC_sub16_rr(REG1,REG5,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG4,REG6,DEFAULT)
0xC17F4136,	//0x25bc		VoC_add16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG6,DEFAULT)
0xFFC0DF02,	//0x25be		VoC_NOP	|	VoC_pop32(REG45,DEFAULT)
0xDF41DF42,	//0x25c0		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xFFC0C0AA,	//0x25c2		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xC0AADD90,	//0x25c4		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0xC0AAC0AA,	//0x25c6		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xDD93FFC0,	//0x25c8		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_NOP
0x0BB01480,	//0x25ca		VoC_lw32_d(REG01,0xbb0)
0x0BB21481,	//0x25cc		VoC_lw32_d(REG23,0xbb2)
0x0BA41482,	//0x25ce		VoC_lw32_d(REG45,0xba4)
0x0BA61483,	//0x25d0		VoC_lw32_d(REG67,0xba6)
0xFF457F44,	//0x25d2		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE304E22,	//0x25d4		VoC_mac32_rr(REG6,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG2,DEFAULT)
0x0924FFC0,	//0x25d6		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0x092D4A46,	//0x25d8		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0xDF434A46,	//0x25da		VoC_push32(REG67,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0xFA7D7A7C,	//0x25dc		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0x0736C92B,	//0x25de		VoC_add16_rd(REG6,REG6,0xb96)(lo)	|	VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)
0xFFC00B96,	//0x25e0		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0xb96)(hi)
0x0BAC1506,	//0x25e2		VoC_sw16_d(REG6,0xbac)
0x7F44DF03,	//0x25e4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x4E2AFF45,	//0x25e6		VoC_mac32_rr(REG5,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE38,	//0x25e8		VoC_NOP	|	VoC_mac32_rr(REG7,REG0,IN_PARALLEL)
0x4A460924,	//0x25ea		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x25ec		VoC_add32_rd(ACC1,ACC1,0x4a46)
0xFA7D7A7C,	//0x25ee		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0x0736C92B,	//0x25f0		VoC_add16_rd(REG6,REG6,0xb97)(lo)	|	VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)
0xFFC00B97,	//0x25f2		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0xb97)(hi)
0x0BAD1506,	//0x25f4		VoC_sw16_d(REG6,0xbad)
0x0BA81482,	//0x25f6		VoC_lw32_d(REG45,0xba8)
0x0BAA1483,	//0x25f8		VoC_lw32_d(REG67,0xbaa)
0xFF457F44,	//0x25fa		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE294E3B,	//0x25fc		VoC_mac32_rr(REG5,REG1,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG3,DEFAULT)
0x0924FFC0,	//0x25fe		VoC_add32_rd(ACC0,ACC0,0x4a46)(lo)	|	VoC_NOP
0x092D4A46,	//0x2600		VoC_add32_rd(ACC1,ACC1,0x4a46)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x4a46)(hi)
0xDF434A46,	//0x2602		VoC_push32(REG67,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x4a46)(hi)
0xFA7D7A7C,	//0x2604		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFFC0CB63,	//0x2606		VoC_NOP	|	VoC_sub32_rr(REG67,ACC1,ACC0,DEFAULT)
0x0BAE1506,	//0x2608		VoC_sw16_d(REG6,0xbae)
0x7F44DF03,	//0x260a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x4E33FF45,	//0x260c		VoC_mac32_rr(REG6,REG3,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE21,	//0x260e		VoC_NOP	|	VoC_mac32_rr(REG4,REG1,IN_PARALLEL)
0x4A460924,	//0x2610		VoC_add32_rd(ACC0,ACC0,0x4a46)
0x4A46092D,	//0x2612		VoC_add32_rd(ACC1,ACC1,0x4a46)
0xFA7D7A7C,	//0x2614		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFFC0CB2B,	//0x2616		VoC_NOP	|	VoC_sub32_rr(REG67,ACC0,ACC1,DEFAULT)
0x0BAF1506,	//0x2618		VoC_sw16_d(REG6,0xbaf)
0x1482DF01,	//0x261a		VoC_lw32_d(REG45,0xbac)(lo)	|	VoC_pop32(REG23,DEFAULT)
0x14830BAC,	//0x261c		VoC_lw32_d(REG67,0xbae)(lo)	|	VoC_lw32_d(REG45,0xbac)(hi)
0x43300BAE,	//0x261e		VoC_sub16_rr(REG0,REG4,REG6,DEFAULT)	|	VoC_lw32_d(REG67,0xbae)(hi)
0x4136C379,	//0x2620		VoC_add16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_sub16_rr(REG1,REG5,REG7,IN_PARALLEL)
0xDF02C17F,	//0x2622		VoC_pop32(REG45,DEFAULT)	|	VoC_add16_rr(REG7,REG5,REG7,IN_PARALLEL)
0xDF41DF42,	//0x2624		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xC0AAC0AA,	//0x2626		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xDD93FFC0,	//0x2628		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_NOP
0xFFC0C0AA,	//0x262a		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xDF01DD90,	//0x262c		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x0724DF02,	//0x262e		VoC_add16_rd(REG4,REG4,0xbb4)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x07120BB4,	//0x2630		VoC_add16_rd(REG2,REG2,0x4a06)(lo)	|	VoC_add16_rd(REG4,REG4,0xbb4)(hi)
0x07244A06,	//0x2632		VoC_add16_rd(REG4,REG4,0xbb4)(lo)	|	VoC_add16_rd(REG2,REG2,0x4a06)(hi)
		//0x2633		VoC_endloop1
0xDF070BB4,	//0x2634		VoC_pop32(RL7,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0xbb4)(hi)
0xDF03DF06,	//0x2636		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xDF01DF02,	//0x2638		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDFA9DF00,	//0x263a		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xE580FFC0,	//0x263c		VoC_return	|	VoC_NOP
		//0x263e		spx_kf_bfly_generic
0xDFA9DFE9,	//0x263e		VoC_pop16(RA,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xE580FFC0,	//0x2640		VoC_return	|	VoC_NOP
		//0x2642		spx_kf_work
0xDF40DFE9,	//0x2642		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xDF42DF41,	//0x2644		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xDF47DF43,	//0x2646		VoC_push32(RL7,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xF6AF60EE,	//0x2648		VoC_movreg16(RL7_HI,REG5,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG7,DEFAULT)
0xC5A645E7,	//0x264a		VoC_mult16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_mult16_rr(REG7,REG7,REG4,DEFAULT)
0x402DD9CA,	//0x264c		VoC_be16_rd(SPX_KF_WORK_IF,REG5,0x4a04)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xFFC04A04,	//0x264e		VoC_NAD	|	VoC_be16_rd(SPX_KF_WORK_IF,REG5,0x4a04)(hi)
0x26422B80,	//0x2650		VoC_jal(spx_kf_work)
		//0x2652		SPX_KF_WORK_IF
0x0BB41507,	//0x2652		VoC_sw16_d(REG7,0xbb4)
0x0BB51505,	//0x2654		VoC_sw16_d(REG5,0xbb5)
0x0BB61506,	//0x2656		VoC_sw16_d(REG6,0xbb6)
0x0BB7150F,	//0x2658		VoC_sw16_d(RL7_HI,0xbb7)
0x4A064434,	//0x265a		VoC_bne16_rd(SPX_KF_SWITCH_P2,REG4,0x4a06)
0x217A2B80,	//0x265c		VoC_jal(spx_kf_bfly2)
0x26922B00,	//0x265e		VoC_jump_lg(SPX_KF_SWITCH_END)
		//0x2660		SPX_KF_SWITCH_P2
0x4A084504,	//0x2660		VoC_bne16_rd(SPX_KF_SWITCH_P3,REG4,0x4a08)
0xF005DF42,	//0x2662		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
		//0x2664		SPX_KF_SWITCH_P2_LOOP_BEGIN
0x266D352E,	//0x2664		VoC_be16_rr(SPX_KF_SWITCH_P2_LOOP_END,REG5,REG6)
0x22152B80,	//0x2666		VoC_jal(spx_kf_bfly3)
0xC0A2E1E4,	//0x2668		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0x4A04072D,	//0x266a		VoC_add16_rd(REG5,REG5,0x4a04)
0xDF02E5F8,	//0x266c		VoC_pop32(REG45,DEFAULT)	|	VoC_jump(SPX_KF_SWITCH_P2_LOOP_BEGIN)
		//0x266d		SPX_KF_SWITCH_P2_LOOP_END
0x26922B00,	//0x266e		VoC_jump_lg(SPX_KF_SWITCH_END)
		//0x2670		SPX_KF_SWITCH_P3
0x4A0A4434,	//0x2670		VoC_bne16_rd(SPX_KF_SWITCH_P4,REG4,0x4a0a)
0x22E12B80,	//0x2672		VoC_jal(spx_kf_bfly4)
0xFFC065DE,	//0x2674		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SPX_KF_SWITCH_END)
		//0x2676		SPX_KF_SWITCH_P4
0x4A0C4504,	//0x2676		VoC_bne16_rd(SPX_KF_SWITCH_P5,REG4,0x4a0c)
0xF005DF42,	//0x2678		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
		//0x267a		SPX_KF_SWITCH_P4_LOOP_BEGIN
0x2684352E,	//0x267a		VoC_be16_rr(SPX_KF_SWITCH_P4_LOOP_END,REG5,REG6)
0x24972B80,	//0x267c		VoC_jal(spx_kf_bfly5)
0xF8FCE1E4,	//0x267e		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0x072DC0A2,	//0x2680		VoC_add16_rd(REG5,REG5,0x4a04)(lo)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xE5F74A04,	//0x2682		VoC_jump(SPX_KF_SWITCH_P4_LOOP_BEGIN)	|	VoC_add16_rd(REG5,REG5,0x4a04)(hi)
		//0x2684		SPX_KF_SWITCH_P4_LOOP_END
0xE5CDDF02,	//0x2684		VoC_jump(SPX_KF_SWITCH_END)	|	VoC_pop32(REG45,DEFAULT)
		//0x2686		SPX_KF_SWITCH_P5
0xF005DF42,	//0x2686		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
		//0x2688		SPX_KF_SWITCH_DEFAULT_LOOP_BEGIN
0x2691352E,	//0x2688		VoC_be16_rr(SPX_KF_SWITCH_DEFAULT_LOOP_END,REG5,REG6)
0x263E2B80,	//0x268a		VoC_jal(spx_kf_bfly_generic)
0xC0A2E1E4,	//0x268c		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0x4A04072D,	//0x268e		VoC_add16_rd(REG5,REG5,0x4a04)
0xDF02E5F8,	//0x2690		VoC_pop32(REG45,DEFAULT)	|	VoC_jump(SPX_KF_SWITCH_DEFAULT_LOOP_BEGIN)
		//0x2691		SPX_KF_SWITCH_DEFAULT_LOOP_END
		//0x2692		SPX_KF_SWITCH_END
0xDF03DF07,	//0x2692		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF01DF02,	//0x2694		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDFA9DF00,	//0x2696		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xE580FFC0,	//0x2698		VoC_return	|	VoC_NOP
		//0x269a		Rda_speex_preprocess_state_reset
0x7000DFE9,	//0x269a		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF01CE001,	//0x269c		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0xF01EF01D,	//0x269e		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0xF01BF01F,	//0x26a0		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x7FC11540,	//0x26a2		VoC_sw16_d(REG0,0xffc1)
0x427C1500,	//0x26a4		VoC_sw16_d(REG0,0x427c)
0x043B1500,	//0x26a6		VoC_sw16_d(REG0,0x43b)
0x003F0A96,	//0x26a8		VoC_lw16i(STATUS,0x3f)
0x1808FF44,	//0x26aa		VoC_lw16i_set_inc(REG0,0xc60,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x0A860C60,	//0x26ac		VoC_lw16i(REG6,0x50)(lo)	|	VoC_lw16i_set_inc(REG0,0xc60,0x2)(hi)
0x0A870050,	//0x26ae		VoC_lw16i(REG7,0x1f40)(lo)	|	VoC_lw16i(REG6,0x50)(hi)
0xFFC01F40,	//0x26b0		VoC_NAD	|	VoC_lw16i(REG7,0x1f40)(hi)
0x26B72C11,	//0x26b2		VoC_loop_i(0x1,0x8)
0x26B62D96,	//0x26b4		VoC_loop_i(0x0,0xcb)
		//0x26b6		VoC_endloop0
0xFFC0DDC4,	//0x26b6		VoC_NOP	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x26b7		VoC_endloop1
0xDDC4DDC4,	//0x26b8		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC4DDC4,	//0x26ba		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x1506DDC4,	//0x26bc		VoC_sw16_d(REG6,0xc60)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x15060C60,	//0x26be		VoC_sw16_d(REG6,0xc61)(lo)	|	VoC_sw16_d(REG6,0xc60)(hi)
0x15070C61,	//0x26c0		VoC_sw16_d(REG7,0xc62)(lo)	|	VoC_sw16_d(REG6,0xc61)(hi)
0x0A810C62,	//0x26c2		VoC_lw16i(REG1,0x1)(lo)	|	VoC_sw16_d(REG7,0xc62)(hi)
0x0AC20001,	//0x26c4		VoC_lw16i(REG2,0xffffffe2)(lo)	|	VoC_lw16i(REG1,0x1)(hi)
0x0AC37FE2,	//0x26c6		VoC_lw16i(REG3,0xffffffc4)(lo)	|	VoC_lw16i(REG2,0xffffffe2)(hi)
0x0AC47FC4,	//0x26c8		VoC_lw16i(REG4,0xffffffd8)(lo)	|	VoC_lw16i(REG3,0xffffffc4)(hi)
0x0A857FD8,	//0x26ca		VoC_lw16i(REG5,0x2ccd)(lo)	|	VoC_lw16i(REG4,0xffffffd8)(hi)
0x0A862CCD,	//0x26cc		VoC_lw16i(REG6,0x199a)(lo)	|	VoC_lw16i(REG5,0x2ccd)(hi)
0x0A87199A,	//0x26ce		VoC_lw16i(REG7,0x18)(lo)	|	VoC_lw16i(REG6,0x199a)(hi)
0x15010018,	//0x26d0		VoC_sw16_d(REG1,0xc64)(lo)	|	VoC_lw16i(REG7,0x18)(hi)
0x15020C64,	//0x26d2		VoC_sw16_d(REG2,0xc6b)(lo)	|	VoC_sw16_d(REG1,0xc64)(hi)
0x15030C6B,	//0x26d4		VoC_sw16_d(REG3,0xc6c)(lo)	|	VoC_sw16_d(REG2,0xc6b)(hi)
0x15040C6C,	//0x26d6		VoC_sw16_d(REG4,0xc6d)(lo)	|	VoC_sw16_d(REG3,0xc6c)(hi)
0x15050C6D,	//0x26d8		VoC_sw16_d(REG5,0xc69)(lo)	|	VoC_sw16_d(REG4,0xc6d)(hi)
0x15060C69,	//0x26da		VoC_sw16_d(REG6,0xc6a)(lo)	|	VoC_sw16_d(REG5,0xc69)(hi)
0x15070C6A,	//0x26dc		VoC_sw16_d(REG7,0xc63)(lo)	|	VoC_sw16_d(REG6,0xc6a)(hi)
0x0A8A0C63,	//0x26de		VoC_lw16i(ACC1_LO,0x80)(lo)	|	VoC_sw16_d(REG7,0xc63)(hi)
0x0A8B0080,	//0x26e0		VoC_lw16i(ACC1_HI,0x0)(lo)	|	VoC_lw16i(ACC1_LO,0x80)(hi)
0x18080000,	//0x26e2		VoC_lw16i_set_inc(REG0,0x43c,0x2)(lo)	|	VoC_lw16i(ACC1_HI,0x0)(hi)
0x2CD0043C,	//0x26e4		VoC_loop_i(0x0,0x68)(lo)	|	VoC_lw16i_set_inc(REG0,0x43c,0x2)(hi)
0xDDC526E7,	//0x26e6		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x68)(hi)
		//0x26e7		VoC_endloop0
0x00010A8A,	//0x26e8		VoC_lw16i(ACC1_LO,0x1)
0x00000A8B,	//0x26ea		VoC_lw16i(ACC1_HI,0x0)
0x05DC1808,	//0x26ec		VoC_lw16i_set_inc(REG0,0x5dc,0x2)
0x26F02CD0,	//0x26ee		VoC_loop_i(0x0,0x68)
		//0x26f0		VoC_endloop0
0x0A8ADDC5,	//0x26f0		VoC_lw16i(ACC1_LO,0x7fff)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x18047FFF,	//0x26f2		VoC_lw16i_set_inc(REG0,0xdb0,0x1)(lo)	|	VoC_lw16i(ACC1_LO,0x7fff)(hi)
0x2CD00DB0,	//0x26f4		VoC_loop_i(0x0,0x68)(lo)	|	VoC_lw16i_set_inc(REG0,0xdb0,0x1)(hi)
0xDC8A26F7,	//0x26f6		VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x68)(hi)
		//0x26f7		VoC_endloop0
0x01000A8A,	//0x26f8		VoC_lw16i(ACC1_LO,0x100)
0x0E801804,	//0x26fa		VoC_lw16i_set_inc(REG0,0xe80,0x1)
0x26FE2CD0,	//0x26fc		VoC_loop_i(0x0,0x68)
		//0x26fe		VoC_endloop0
0x0A8ADC8A,	//0x26fe		VoC_lw16i(ACC1_LO,0x100)(lo)	|	VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)
0x18040100,	//0x2700		VoC_lw16i_set_inc(REG0,0xe18,0x1)(lo)	|	VoC_lw16i(ACC1_LO,0x100)(hi)
0x2CD00E18,	//0x2702		VoC_loop_i(0x0,0x68)(lo)	|	VoC_lw16i_set_inc(REG0,0xe18,0x1)(hi)
0xDC8A2705,	//0x2704		VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x68)(hi)
		//0x2705		VoC_endloop0
0x00010A8A,	//0x2706		VoC_lw16i(ACC1_LO,0x1)
0x0FB81804,	//0x2708		VoC_lw16i_set_inc(REG0,0xfb8,0x1)
0x270C2CA0,	//0x270a		VoC_loop_i(0x0,0x50)
		//0x270c		VoC_endloop0
0x1804DC8A,	//0x270c		VoC_lw16i_set_inc(REG0,0xaa2,0x1)(lo)	|	VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)
0x2CA00AA2,	//0x270e		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16i_set_inc(REG0,0xaa2,0x1)(hi)
0xDC8A2711,	//0x2710		VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x2711		VoC_endloop0
0xFFC0DFA9,	//0x2712		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x2714		VoC_NAD	|	VoC_return
