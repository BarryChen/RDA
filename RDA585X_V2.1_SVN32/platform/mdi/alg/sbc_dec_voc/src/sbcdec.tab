		//0x0230		VoC_code_section_1
		//0x0230		Coolsand_SBC2PCM_DECODE
0x1404DFE9,	//0x0230		VoC_lw16_d(REG4,0x404a)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A80404A,	//0x0232		VoC_lw16i(REG0,0x4888)(lo)	|	VoC_lw16_d(REG4,0x404a)(hi)
0x15044888,	//0x0234		VoC_sw16_d(REG4,0x4060)(lo)	|	VoC_lw16i(REG0,0x4888)(hi)
0xF9144060,	//0x0236		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_sw16_d(REG4,0x4060)(hi)
0x24440A85,	//0x0238		VoC_lw16i(REG5,0x2444)
0x40041484,	//0x023a		VoC_lw32_d(ACC0,0x4004)
0x404C1500,	//0x023c		VoC_sw16_d(REG0,0x404c)
0x7FC215C2,	//0x023e		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x0240		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0242		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0244		VoC_cfg_lg(0x8,)
0xFF46701B,	//0x0246		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x48881807,	//0x0248		VoC_lw16i_set_inc(REG3,0x4888,0x1)
0x1586F006,	//0x024a		VoC_sw32_d(RL6,0x404e)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1506404E,	//0x024c		VoC_sw16_d(REG6,0x4062)(lo)	|	VoC_sw32_d(RL6,0x404e)(hi)
0x15064062,	//0x024e		VoC_sw16_d(REG6,0x405d)(lo)	|	VoC_sw16_d(REG6,0x4062)(hi)
0xF020405D,	//0x0250		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_sw16_d(REG6,0x405d)(hi)
0xE0857101,	//0x0252		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0x00804430,	//0x0254		VoC_bne16_rd(SBC_DEC_RAM_X_EXTER_WRONG,REG0,0x80)
0x00834421,	//0x0256		VoC_bne16_rd(SBC_DEC_RAM_X_EXTER_WRONG,REG1,0x83)
0xFFC065C6,	//0x0258		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SBC_DEC_START_DECODE)
		//0x025a		SBC_DEC_RAM_X_EXTER_WRONG
0x401D1505,	//0x025a		VoC_sw16_d(REG5,0x401d)
0x034B2B00,	//0x025c		VoC_jump_lg(SBC_DECODE_END)
		//0x025e		SBC_DEC_START_DECODE
0x050E2B80,	//0x025e		VoC_jal(sbc_unpack_frame)
0x401D6C04,	//0x0260		VoC_bez16_d(SBC_DEC_UNPACK_NO_ERROR,0x401d)
0x034B2B00,	//0x0262		VoC_jump_lg(SBC_DECODE_END)
		//0x0264		SBC_DEC_UNPACK_NO_ERROR
0x06952B80,	//0x0264		VoC_jal(sbc_decoder_init)
0x07C42B80,	//0x0266		VoC_jal(sbc_synthesize_audio)
0x081F2B80,	//0x0268		VoC_jal(sbc_mixing_audio)
0x09902B80,	//0x026a		VoC_jal(sbc_detect_mute)
0x55966C06,	//0x026c		VoC_bez16_d(SBC_DEC_EQ_end,0x5596)
0x09112B80,	//0x026e		VoC_jal(get_coeffs)
0x08322B80,	//0x0270		VoC_jal(sbc_eq_iir)
		//0x0272		SBC_DEC_EQ_end
0x7101F020,	//0x0272		VoC_lw16i_short(REG1,0x8,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x4428E085,	//0x0274		VoC_bne16_rd(SBC_DEC_RAM_X_INTER_WRONG,REG0,0x80)(lo)	|	VoC_lw16i_short(REG5,0x8,IN_PARALLEL)
0x44190080,	//0x0276		VoC_bne16_rd(SBC_DEC_RAM_X_INTER_WRONG,REG1,0x83)(lo)	|	VoC_bne16_rd(SBC_DEC_RAM_X_INTER_WRONG,REG0,0x80)(hi)
0xE5C50083,	//0x0278		VoC_jump(SBC_DEC_CHECK_DATA_OUT_ADDR)	|	VoC_bne16_rd(SBC_DEC_RAM_X_INTER_WRONG,REG1,0x83)(hi)
		//0x027a		SBC_DEC_RAM_X_INTER_WRONG
0x401D1505,	//0x027a		VoC_sw16_d(REG5,0x401d)
0x034B2B00,	//0x027c		VoC_jump_lg(SBC_DECODE_END)
		//0x027e		SBC_DEC_CHECK_DATA_OUT_ADDR
0x40061480,	//0x027e		VoC_lw32_d(REG01,0x4006)
0x6028F125,	//0x0280		VoC_blt32_rd(SBC_DEC_OUT_PCM_ADDR_WRONG,REG01,0x50e2)(lo)	|	VoC_lw16i_short(REG5,0x9,DEFAULT)
0x501850E2,	//0x0282		VoC_bgt32_rd(SBC_DEC_OUT_PCM_ADDR_WRONG,REG01,0x50e4)(lo)	|	VoC_blt32_rd(SBC_DEC_OUT_PCM_ADDR_WRONG,REG01,0x50e2)(hi)
0xE5C550E4,	//0x0284		VoC_jump(SBC_DEC_CHECK_DATA_OUT_LENGTH)	|	VoC_bgt32_rd(SBC_DEC_OUT_PCM_ADDR_WRONG,REG01,0x50e4)(hi)
		//0x0286		SBC_DEC_OUT_PCM_ADDR_WRONG
0x401D1505,	//0x0286		VoC_sw16_d(REG5,0x401d)
0x034B2B00,	//0x0288		VoC_jump_lg(SBC_DECODE_END)
		//0x028a		SBC_DEC_CHECK_DATA_OUT_LENGTH
0x405E1404,	//0x028a		VoC_lw16_d(REG4,0x405e)
0x00800A80,	//0x028c		VoC_lw16i(REG0,0x80)
0x032B3420,	//0x028e		VoC_bgt16_rr(SBC_DEC_WRONG_DATA_LEN,REG4,REG0)
0x032B3204,	//0x0290		VoC_bltz16_r(SBC_DEC_WRONG_DATA_LEN,REG4)
0x21540A85,	//0x0292		VoC_lw16i(REG5,0x2154)
0x4438F040,	//0x0294		VoC_bne16_rd(SBC_44_1K_TO_48K_freq_no_44_1,REG0,0x4052)(lo)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0x44284052,	//0x0296		VoC_bne16_rd(SBC_44_1K_TO_48K_freq_no_44_1,REG0,0x4056)(lo)	|	VoC_bne16_rd(SBC_44_1K_TO_48K_freq_no_44_1,REG0,0x4052)(hi)
0x6E054056,	//0x0298		VoC_bnez16_d(SBC_44_1K_TO_48K_START,0x50f0)(lo)	|	VoC_bne16_rd(SBC_44_1K_TO_48K_freq_no_44_1,REG0,0x4056)(hi)
0xFFC050F0,	//0x029a		VoC_NAD	|	VoC_bnez16_d(SBC_44_1K_TO_48K_START,0x50f0)(hi)
		//0x029c		SBC_44_1K_TO_48K_freq_no_44_1
0x03202B00,	//0x029c		VoC_jump_lg(SBC_44_1K_TO_48K_END)
		//0x029e		SBC_44_1K_TO_48K_START
0x50EC1504,	//0x029e		VoC_sw16_d(REG4,0x50ec)
0x09A62B80,	//0x02a0		VoC_jal(sbc_44_1k_to_48k_filter)
0x50E86E0E,	//0x02a2		VoC_bnez16_d(SBC_44_1K_TO_48K_SET_DMA_OUT_LENGTH_OK,0x50e8)
0x008007B6,	//0x02a4		VoC_sub16_rd(REG6,REG6,0x80)
0x008B0A80,	//0x02a6		VoC_lw16i(REG0,0x8b)
0x50EA1506,	//0x02a8		VoC_sw16_d(REG6,0x50ea)
0x032B3430,	//0x02aa		VoC_bgt16_rr(SBC_DEC_WRONG_DATA_LEN,REG6,REG0)
0x032B3206,	//0x02ac		VoC_bltz16_r(SBC_DEC_WRONG_DATA_LEN,REG6)
0x50E81506,	//0x02ae		VoC_sw16_d(REG6,0x50e8)
		//0x02b0		SBC_44_1K_TO_48K_SET_DMA_OUT_LENGTH_OK
0x511A1808,	//0x02b0		VoC_lw16i_set_inc(REG0,0x511a,0x2)
0x52341809,	//0x02b2		VoC_lw16i_set_inc(REG1,0x5234,0x2)
0x52331402,	//0x02b4		VoC_lw16_d(REG2,0x5233)
0xC051F8FA,	//0x02b6		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x405E1402,	//0x02b8		VoC_lw16_d(REG2,0x405e)
0x52330713,	//0x02ba		VoC_add16_rd(REG3,REG2,0x5233)
0x1503D9C4,	//0x02bc		VoC_sw16_d(REG3,0x5233)(lo)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x2E105233,	//0x02be		VoC_loop_r(0,REG2)(lo)	|	VoC_sw16_d(REG3,0x5233)(hi)
0xD9C402C2,	//0x02c0		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_r(0,REG2)(hi)
		//0x02c2		VoC_endloop0
0x1407DDCC,	//0x02c2		VoC_lw16_d(REG7,0x50ea)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xF8FF50EA,	//0x02c4		VoC_shr16_ri(REG7,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG7,0x50ea)(hi)
0x52333C27,	//0x02c6		VoC_bngt16_rd(SBC_44_1K_TO_48K_DMA_START,REG7,0x5233)
0x02FC2B00,	//0x02c8		VoC_jump_lg(SBC_44_1K_TO_48K_DMA_END)
		//0x02ca		SBC_44_1K_TO_48K_DMA_START
0x50EA1404,	//0x02ca		VoC_lw16_d(REG4,0x50ea)
0x291A0A85,	//0x02cc		VoC_lw16i(REG5,0x291a)
0x40061484,	//0x02ce		VoC_lw32_d(ACC0,0x4006)
0x7FC215C2,	//0x02d0		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x02d2		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x02d4		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x02d6		VoC_cfg_lg(0x8,)
0x52341809,	//0x02d8		VoC_lw16i_set_inc(REG1,0x5234,0x2)
0x52341808,	//0x02da		VoC_lw16i_set_inc(REG0,0x5234,0x2)
0x1402C079,	//0x02dc		VoC_lw16_d(REG2,0x50ea)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x0B1250EA,	//0x02de		VoC_sub16_dr(REG2,0x5233,REG2)(lo)	|	VoC_lw16_d(REG2,0x50ea)(hi)
0xD9CD5233,	//0x02e0		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sub16_dr(REG2,0x5233,REG2)(hi)
0x52331502,	//0x02e2		VoC_sw16_d(REG2,0x5233)
0x02E72E10,	//0x02e4		VoC_loop_r(0,REG2)
0xDDC5D9CD,	//0x02e6		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG1,DEFAULT)
		//0x02e7		VoC_endloop0
0xE00579F4,	//0x02e8		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffe,DEFAULT)
0x404E0727,	//0x02ea		VoC_add16_rd(REG7,REG4,0x404e)
0x1507C8A4,	//0x02ec		VoC_sw16_d(REG7,0x404e)(lo)	|	VoC_add32_rr(ACC0,REG45,ACC0,DEFAULT)
0x1406404E,	//0x02ee		VoC_lw16_d(REG6,0x4062)(lo)	|	VoC_sw16_d(REG7,0x404e)(hi)
0x15844062,	//0x02f0		VoC_sw32_d(ACC0,0x4006)(lo)	|	VoC_lw16_d(REG6,0x4062)(hi)
0x07364006,	//0x02f2		VoC_add16_rd(REG6,REG6,0x80)(lo)	|	VoC_sw32_d(ACC0,0x4006)(hi)
0xFFC00080,	//0x02f4		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0x80)(hi)
0x40621506,	//0x02f6		VoC_sw16_d(REG6,0x4062)
0x00834426,	//0x02f8		VoC_bne16_rd(SBC_44_1K_TO_48K_DMA_END,REG6,0x83)
0x034B2B00,	//0x02fa		VoC_jump_lg(SBC_DECODE_END)
		//0x02fc		SBC_44_1K_TO_48K_DMA_END
0x52341809,	//0x02fc		VoC_lw16i_set_inc(REG1,0x5234,0x2)
0x511A1808,	//0x02fe		VoC_lw16i_set_inc(REG0,0x511a,0x2)
0x50EA1407,	//0x0300		VoC_lw16_d(REG7,0x50ea)
0xF6E259CC,	//0x0302		VoC_movreg16(REG2,REG7,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0x03072E38,	//0x0304		VoC_loop_r(0,REG7)
0xDDC4D9CC,	//0x0306		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
		//0x0307		VoC_endloop0
0x52341809,	//0x0308		VoC_lw16i_set_inc(REG1,0x5234,0x2)
0x52341808,	//0x030a		VoC_lw16i_set_inc(REG0,0x5234,0x2)
0xC079F8FF,	//0x030c		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x52330B12,	//0x030e		VoC_sub16_dr(REG2,0x5233,REG2)
0x405E1502,	//0x0310		VoC_sw16_d(REG2,0x405e)
0x52331502,	//0x0312		VoC_sw16_d(REG2,0x5233)
0x031C3182,	//0x0314		VoC_bez16_r(SBC_44_1K_TO_48K_BACKUP_END,REG2)
0x2E10D9CC,	//0x0316		VoC_loop_r(0,REG2)(lo)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xD9CC031A,	//0x0318		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r(0,REG2)(hi)
		//0x031a		VoC_endloop0
0xFFC05DC4,	//0x031a		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x031c		SBC_44_1K_TO_48K_BACKUP_END
0x50EA1404,	//0x031c		VoC_lw16_d(REG4,0x50ea)
0x288D0A85,	//0x031e		VoC_lw16i(REG5,0x288d)
		//0x0320		SBC_44_1K_TO_48K_END
0x40061484,	//0x0320		VoC_lw32_d(ACC0,0x4006)
0x7FC215C2,	//0x0322		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x0324		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0326		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0328		VoC_cfg_lg(0x8,)
0xF0C5E5C6,	//0x032a		VoC_lw16i_short(REG5,0x6,DEFAULT)	|	VoC_jump(SBC_DEC_RIGHT_DATA_LEN)
		//0x032b		SBC_DEC_WRONG_DATA_LEN
0x401D1505,	//0x032c		VoC_sw16_d(REG5,0x401d)
0xFFC065DD,	//0x032e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SBC_DECODE_END)
		//0x0330		SBC_DEC_RIGHT_DATA_LEN
0xFF4579F4,	//0x0330		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffe,DEFAULT)
0x404E1407,	//0x0332		VoC_lw16_d(REG7,0x404e)
0xC1E7E08A,	//0x0334		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG4,DEFAULT)
0x1507C965,	//0x0336		VoC_sw16_d(REG7,0x404e)(lo)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x1406404E,	//0x0338		VoC_lw16_d(REG6,0x4062)(lo)	|	VoC_sw16_d(REG7,0x404e)(hi)
0x15854062,	//0x033a		VoC_sw32_d(ACC1,0x4006)(lo)	|	VoC_lw16_d(REG6,0x4062)(hi)
0x07364006,	//0x033c		VoC_add16_rd(REG6,REG6,0x80)(lo)	|	VoC_sw32_d(ACC1,0x4006)(hi)
0xFFC00080,	//0x033e		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0x80)(hi)
0x40621506,	//0x0340		VoC_sw16_d(REG6,0x4062)
0x0083408E,	//0x0342		VoC_be16_rd(SBC_DECODE_END,REG6,0x83)
0x40611403,	//0x0344		VoC_lw16_d(REG3,0x4061)
0x40641486,	//0x0346		VoC_lw32_d(RL6,0x4064)
0x2B00F033,	//0x0348		VoC_jump_lg(SBC_DEC_START_DECODE)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xDFA9025E,	//0x034a		VoC_pop16(RA,DEFAULT)	|	VoC_jump_lg(SBC_DEC_START_DECODE)(hi)
		//0x034b		SBC_DECODE_END
0xE580FFC0,	//0x034c		VoC_return	|	VoC_NOP
		//0x034e		sbc_crc8
0x1404DFE9,	//0x034e		VoC_lw16_d(REG4,0x4066)(lo)	|	VoC_push16(RA,DEFAULT)
0x18044066,	//0x0350		VoC_lw16i_set_inc(REG0,0x4870,0x1)(lo)	|	VoC_lw16_d(REG4,0x4066)(hi)
0x0A814870,	//0x0352		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i_set_inc(REG0,0x4870,0x1)(hi)
0x781C0000,	//0x0354		VoC_shr16_ri(REG4,0x3,DEFAULT)	|	VoC_lw16i(REG1,0x0)(hi)
0xFFC0E0F5,	//0x0356		VoC_NAD	|	VoC_lw16i_short(REG5,0xf,IN_PARALLEL)
0xD884670D,	//0x0358		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xE01664A5,	//0x035a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_xor16_rr(REG5,REG4,DEFAULT)
0xF90D642E,	//0x035c		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG5,DEFAULT)
0xD884406D,	//0x035e		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG1,REG5,DEFAULT)
0x008007B6,	//0x0360		VoC_sub16_rd(REG6,REG6,0x80)
0xD85579EE,	//0x0362		VoC_lw16_p(REG5,REG5,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffffd,DEFAULT)
0xF945FE75,	//0x0364		VoC_shru16_ri(REG5,0x8,DEFAULT)	|	VoC_shru16_rr(REG5,REG6,DEFAULT)
		//0x0365		VoC_endloop0
0x40661400,	//0x0366		VoC_lw16_d(REG0,0x4066)
0x00071600,	//0x0368		VoC_and16_ri(REG0,0x7)
0x037C3180,	//0x036a		VoC_bez16_r(LABLE_CRC8_ZERO,REG0)
0xF6A0660F,	//0x036c		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0xF8FC64A5,	//0x036e		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_xor16_rr(REG5,REG4,DEFAULT)
0x00801605,	//0x0370		VoC_and16_ri(REG5,0x80)
0x007F1600,	//0x0372		VoC_and16_ri(REG0,0x7f)
0xF8F8783D,	//0x0374		VoC_shr16_ri(REG0,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x7,DEFAULT)
0x037A3185,	//0x0376		VoC_bez16_r(LABLE_BIT_ZERO,REG5)
0x001D0A85,	//0x0378		VoC_lw16i(REG5,0x1d)
		//0x037a		LABLE_BIT_ZERO
0xE005E4A8,	//0x037a		VoC_movreg16(REG5,REG0,DEFAULT)	|	VoC_xor16_rr(REG0,REG5,DEFAULT)
		//0x037b		VoC_endloop0
		//0x037c		LABLE_CRC8_ZERO
0xFFC0DFA9,	//0x037c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x037e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x037f		SBC_DECODE_Calculate_Bits
0xE0157004,	//0x0380		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x40554034,	//0x0382		VoC_be16_rd(LABLE_Caculatebit_MONO_DUAL,REG4,0x4055)
0x40554025,	//0x0384		VoC_be16_rd(LABLE_Caculatebit_MONO_DUAL,REG5,0x4055)
0x043C2B00,	//0x0386		VoC_jump_lg(LABLE_Caculatebit_STEREO)
		//0x0388		LABLE_Caculatebit_MONO_DUAL
0x40561404,	//0x0388		VoC_lw16_d(REG4,0x4056)
0xFFC07005,	//0x038a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x04372E21,	//0x038c		VoC_loop_r(1,REG4)
0x40981808,	//0x038e		VoC_lw16i_set_inc(REG0,0x4098,0x2)
0x40681809,	//0x0390		VoC_lw16i_set_inc(REG1,0x4068,0x2)
0x4028DFC5,	//0x0392		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x7006C069,	//0x0394		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x1407E014,	//0x0396		VoC_lw16_d(REG7,0x4059)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x449C4059,	//0x0398		VoC_bne16_rd(LABLE_Calculate_Bits_Else1,REG4,0x4057)(lo)	|	VoC_lw16_d(REG7,0x4059)(hi)
0xF0054057,	//0x039a		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bne16_rd(LABLE_Calculate_Bits_Else1,REG4,0x4057)(hi)
0xD894E7C5,	//0x039c		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0x03A134A5,	//0x039e		VoC_bngt16_rr(LABLE_MAX_BITNEED,REG4,REG5)
0xDC84E085,	//0x03a0		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x03a1		LABLE_MAX_BITNEED
		//0x03a1		VoC_endloop0
0x03C22B00,	//0x03a2		VoC_jump_lg(LABLE_Calculate_Bits_Else1_END)
		//0x03a4		LABLE_Calculate_Bits_Else1
0x40521404,	//0x03a4		VoC_lw16_d(REG4,0x4052)
0x40591407,	//0x03a6		VoC_lw16_d(REG7,0x4059)
0x4437F005,	//0x03a8		VoC_bne16_rd(LABLE_SUBBAND_8,REG7,0x82)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF9F40082,	//0x03aa		VoC_shru16_ri(REG4,0xfffffffe,DEFAULT)	|	VoC_bne16_rd(LABLE_SUBBAND_8,REG7,0x82)(hi)
0x008E1806,	//0x03ac		VoC_lw16i_set_inc(REG2,0x8e,0x1)
0xF9ECE5C4,	//0x03ae		VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)	|	VoC_jump(LABLE_SUBBAND_END)
		//0x03af		LABLE_SUBBAND_8
0x009E1806,	//0x03b0		VoC_lw16i_set_inc(REG2,0x9e,0x1)
		//0x03b2		LABLE_SUBBAND_END
0xE7CDC0A2,	//0x03b2		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xEFB45896,	//0x03b4		VoC_lw16i_short(REG4,0xfffffffb,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x03BC3186,	//0x03b6		VoC_bez16_r(LABLE_Calculate_Bits_Else2_END,REG6)
0x31448594,	//0x03b8		VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END,REG4)(lo)	|	VoC_sub16_rp(REG4,REG6,REG2,DEFAULT)
0xF80C03BC,	//0x03ba		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END,REG4)(hi)
		//0x03bc		LABLE_Calculate_Bits_Else2_END
0x03C034A5,	//0x03bc		VoC_bngt16_rr(LABLE_Calculate_Bits_Else3_END,REG4,REG5)
0xFFC06085,	//0x03be		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x03c0		LABLE_Calculate_Bits_Else3_END
		//0x03c0		VoC_endloop0
0xDE105C84,	//0x03c0		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x03c2		LABLE_Calculate_Bits_Else1_END
0xF3FE7F43,	//0x03c2		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x0080072A,	//0x03c4		VoC_add16_rd(REG2,REG5,0x80)
		//0x03c6		LABLE_Caculate_Bits_Do
0x40981808,	//0x03c6		VoC_lw16i_set_inc(REG0,0x4098,0x2)
0xDE105614,	//0x03c8		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xC1BE4020,	//0x03ca		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x40591405,	//0x03cc		VoC_lw16_d(REG5,0x4059)
0xF007D883,	//0x03ce		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE751FFC0,	//0x03d0		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_NAD
0x00800714,	//0x03d2		VoC_add16_rd(REG4,REG2,0x80)
0x00840715,	//0x03d4		VoC_add16_rd(REG5,REG2,0x84)
0x03DE349C,	//0x03d6		VoC_bngt16_rr(LABLE_Calculate_Bits_Else4,REG3,REG4)
0x03DE34AB,	//0x03d8		VoC_bngt16_rr(LABLE_Calculate_Bits_Else4,REG5,REG3)
0x0080073F,	//0x03da		VoC_add16_rd(REG7,REG7,0x80)
0xFFC065C6,	//0x03dc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABLE_Calculate_Bits_Else4_END)
		//0x03de		LABLE_Calculate_Bits_Else4
0x03E2359C,	//0x03de		VoC_bne16_rr(LABLE_Calculate_Bits_Else4_END,REG3,REG4)
0x0081073F,	//0x03e0		VoC_add16_rd(REG7,REG7,0x81)
		//0x03e2		LABLE_Calculate_Bits_Else4_END
		//0x03e2		VoC_endloop0
0xFFC0D883,	//0x03e2		VoC_NOP	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0x4A0BC1BB,	//0x03e4		VoC_blt16_rd(LABLE_Caculate_Bits_Do,REG3,0x405a)(lo)	|	VoC_add16_rr(REG3,REG6,REG7,DEFAULT)
0x442B405A,	//0x03e6		VoC_bne16_rd(LABLE_Caculate_Bits_ELSE5_END,REG3,0x405a)(lo)	|	VoC_blt16_rd(LABLE_Caculate_Bits_Do,REG3,0x405a)(hi)
0x41BE405A,	//0x03e8		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_bne16_rd(LABLE_Caculate_Bits_ELSE5_END,REG3,0x405a)(hi)
0xFFC0DE10,	//0x03ea		VoC_NAD	|	VoC_inc_p(REG2,IN_PARALLEL)
		//0x03ec		LABLE_Caculate_Bits_ELSE5_END
0x40981808,	//0x03ec		VoC_lw16i_set_inc(REG0,0x4098,0x2)
0x40781809,	//0x03ee		VoC_lw16i_set_inc(REG1,0x4078,0x2)
0x4061D614,	//0x03f0		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0x1407C020,	//0x03f2		VoC_lw16_d(REG7,0x4059)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)
0x07154059,	//0x03f4		VoC_add16_rd(REG5,REG2,0x81)(lo)	|	VoC_lw16_d(REG7,0x4059)(hi)
0xDF400081,	//0x03f6		VoC_push32(REG01,DEFAULT)	|	VoC_add16_rd(REG5,REG2,0x81)(hi)
0xE7CBFFC0,	//0x03f8		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_NAD
0xE0075884,	//0x03fa		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x0400342C,	//0x03fc		VoC_bgt16_rr(LABLE_Caculate_Bits_ELSE6_END,REG5,REG4)
0xFFC042A7,	//0x03fe		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG2,REG4,DEFAULT)
		//0x0400		LABLE_Caculate_Bits_ELSE6_END
0x00884C27,	//0x0400		VoC_bnlt16_rd(LABLE_Caculate_Bits_ELSE7_END,REG7,0x88)
0xFFC0F607,	//0x0402		VoC_NOP	|	VoC_lw16i_short(REG7,0xfffffff0,DEFAULT)
		//0x0404		LABLE_Caculate_Bits_ELSE7_END
		//0x0404		VoC_endloop0
0x1407DC97,	//0x0404		VoC_lw16_d(REG7,0x4059)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x77C54059,	//0x0406		VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG7,0x4059)(hi)
0xD908EF03,	//0x0408		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw16i_short(REG3,0xfffffff0,IN_PARALLEL)
0xE7D5FFC0,	//0x040a		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_NAD
0x405A4D36,	//0x040c		VoC_bnlt16_rd(LABLE_Caculate_Bits_out,REG6,0x405a)
0xE0175814,	//0x040e		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG1,DEFAULT)
0x04173425,	//0x0410		VoC_bgt16_rr(LABLE_Caculate_Bits_ELSE8,REG4,REG5)
0x041734A3,	//0x0412		VoC_bngt16_rr(LABLE_Caculate_Bits_ELSE8,REG4,REG3)
0xC1BE433C,	//0x0414		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG7,DEFAULT)
0xB817E5CA,	//0x0416		VoC_sub16_pr(REG7,REG0,REG2,DEFAULT)	|	VoC_jump(LABLE_Caculate_Bits_ELSE8_END)
		//0x0417		LABLE_Caculate_Bits_ELSE8
0x00804487,	//0x0418		VoC_bne16_rd(LABLE_Caculate_Bits_ELSE8_END,REG7,0x80)
0x405A0B37,	//0x041a		VoC_sub16_dr(REG7,0x405a,REG6)
0x00803C27,	//0x041c		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE8_END,REG7,0x80)
0xC3AEE0A4,	//0x041e		VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x0420		LABLE_Caculate_Bits_ELSE8_END
		//0x0420		VoC_endloop0
0xDE005C94,	//0x0420		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0422		LABLE_Caculate_Bits_out
0x1407DF00,	//0x0422		VoC_lw16_d(REG7,0x4059)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x60234059,	//0x0424		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_lw16_d(REG7,0x4059)(hi)
0xD894F007,	//0x0426		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xE7CBFFC0,	//0x0428		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_NAD
0x405A4CA6,	//0x042a		VoC_bnlt16_rd(LABLE_Caculate_Bits_out_2,REG6,0x405a)
0x00883C84,	//0x042c		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE9_END,REG4,0x88)
0x008007A4,	//0x042e		VoC_sub16_rd(REG4,REG4,0x80)
0x00800736,	//0x0430		VoC_add16_rd(REG6,REG6,0x80)
0xFFC05C34,	//0x0432		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
		//0x0434		LABLE_Caculate_Bits_ELSE9_END
		//0x0434		VoC_endloop0
0xDE185894,	//0x0434		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x0436		LABLE_Caculate_Bits_out_2
0x072DDF85,	//0x0436		VoC_add16_rd(REG5,REG5,0x80)(lo)	|	VoC_pop16(REG5,DEFAULT)
		//0x0437		VoC_endloop1
0xDFA90080,	//0x0438		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x80)(hi)
0xE580FFC0,	//0x043a		VoC_return	|	VoC_NOP
		//0x043c		LABLE_Caculatebit_STEREO
0x40981804,	//0x043c		VoC_lw16i_set_inc(REG0,0x4098,0x1)
0x40681805,	//0x043e		VoC_lw16i_set_inc(REG1,0x4068,0x1)
0x40591407,	//0x0440		VoC_lw16_d(REG7,0x4059)
0xE0147006,	//0x0442		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x405744A4,	//0x0444		VoC_bne16_rd(LABLE_Calculate_Bits_Else1_STEREO,REG4,0x4057)
0xF005F9FF,	//0x0446		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_shru16_ri(REG7,0xffffffff,DEFAULT)
0xD894E7C5,	//0x0448		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0x044D34A5,	//0x044a		VoC_bngt16_rr(LABLE_MAX_BITNEED_STEREO,REG4,REG5)
0xDC84E085,	//0x044c		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x044d		LABLE_MAX_BITNEED_STEREO
		//0x044d		VoC_endloop0
0x04782B00,	//0x044e		VoC_jump_lg(LABLE_Calculate_Bits_Else1_END_STEREO)
		//0x0450		LABLE_Calculate_Bits_Else1_STEREO
0x40521404,	//0x0450		VoC_lw16_d(REG4,0x4052)
0x4037F005,	//0x0452		VoC_be16_rd(LABLE_SET_OFFSET_SUBBANDS8,REG7,0x83)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF9F40083,	//0x0454		VoC_shru16_ri(REG4,0xfffffffe,DEFAULT)	|	VoC_be16_rd(LABLE_SET_OFFSET_SUBBANDS8,REG7,0x83)(hi)
0x008E1806,	//0x0456		VoC_lw16i_set_inc(REG2,0x8e,0x1)
0xF9ECE5C4,	//0x0458		VoC_shru16_ri(REG4,0xfffffffd,DEFAULT)	|	VoC_jump(LABLE_SET_OFFSET_SUBBANDS_END)
		//0x0459		LABLE_SET_OFFSET_SUBBANDS8
0x009E1806,	//0x045a		VoC_lw16i_set_inc(REG2,0x9e,0x1)
		//0x045c		LABLE_SET_OFFSET_SUBBANDS_END
0xE7D9C0A2,	//0x045c		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xEFB45896,	//0x045e		VoC_lw16i_short(REG4,0xfffffffb,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x04663186,	//0x0460		VoC_bez16_r(LABLE_Calculate_Bits_Else2_END_STEREO,REG6)
0x31448594,	//0x0462		VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END_STEREO,REG4)(lo)	|	VoC_sub16_rp(REG4,REG6,REG2,DEFAULT)
0xF80C0466,	//0x0464		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END_STEREO,REG4)(hi)
		//0x0466		LABLE_Calculate_Bits_Else2_END_STEREO
0x046934A5,	//0x0466		VoC_bngt16_rr(LABLE_Calculate_Bits_Else3_END_STEREO,REG4,REG5)
0xDC84E085,	//0x0468		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x0469		LABLE_Calculate_Bits_Else3_END_STEREO
0xEFB45896,	//0x046a		VoC_lw16i_short(REG4,0xfffffffb,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x04723186,	//0x046c		VoC_bez16_r(LABLE_Calculate_Bits_Else2_END_STEREO_ch1,REG6)
0x31448594,	//0x046e		VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END_STEREO_ch1,REG4)(lo)	|	VoC_sub16_rp(REG4,REG6,REG2,DEFAULT)
0xF80C0472,	//0x0470		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_bngtz16_r(LABLE_Calculate_Bits_Else2_END_STEREO_ch1,REG4)(hi)
		//0x0472		LABLE_Calculate_Bits_Else2_END_STEREO_ch1
0x047634A5,	//0x0472		VoC_bngt16_rr(LABLE_Calculate_Bits_Else3_END_STEREO_ch1,REG4,REG5)
0xFFC06085,	//0x0474		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x0476		LABLE_Calculate_Bits_Else3_END_STEREO_ch1
		//0x0476		VoC_endloop0
0xDE105C84,	//0x0476		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0478		LABLE_Calculate_Bits_Else1_END_STEREO
0xF3FE7F43,	//0x0478		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x0080072A,	//0x047a		VoC_add16_rd(REG2,REG5,0x80)
		//0x047c		LABLE_Caculate_Bits_Do_STEREO
0x40981804,	//0x047c		VoC_lw16i_set_inc(REG0,0x4098,0x1)
0xC1BE5E10,	//0x047e		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x40591405,	//0x0480		VoC_lw16_d(REG5,0x4059)
0x5883F9FD,	//0x0482		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_shru16_ri(REG5,0xffffffff,DEFAULT)
0xE751E007,	//0x0484		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x00800714,	//0x0486		VoC_add16_rd(REG4,REG2,0x80)
0x00840715,	//0x0488		VoC_add16_rd(REG5,REG2,0x84)
0x0492349C,	//0x048a		VoC_bngt16_rr(LABLE_Calculate_Bits_Else4_STEREO,REG3,REG4)
0x049234AB,	//0x048c		VoC_bngt16_rr(LABLE_Calculate_Bits_Else4_STEREO,REG5,REG3)
0x0080073F,	//0x048e		VoC_add16_rd(REG7,REG7,0x80)
0xFFC065C6,	//0x0490		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABLE_Calculate_Bits_Else4_END_STEREO)
		//0x0492		LABLE_Calculate_Bits_Else4_STEREO
0x0496359C,	//0x0492		VoC_bne16_rr(LABLE_Calculate_Bits_Else4_END_STEREO,REG3,REG4)
0x0081073F,	//0x0494		VoC_add16_rd(REG7,REG7,0x81)
		//0x0496		LABLE_Calculate_Bits_Else4_END_STEREO
		//0x0496		VoC_endloop0
0xC1BBD883,	//0x0496		VoC_add16_rr(REG3,REG6,REG7,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0x405A4A23,	//0x0498		VoC_blt16_rd(LABLE_Caculate_Bits_Do_STEREO,REG3,0x405a)
0x405A4423,	//0x049a		VoC_bne16_rd(LABLE_Caculate_Bits_ELSE5_END_STEREO,REG3,0x405a)
0xDE1041BE,	//0x049c		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
		//0x049e		LABLE_Caculate_Bits_ELSE5_END_STEREO
0x40591407,	//0x049e		VoC_lw16_d(REG7,0x4059)
0x40981804,	//0x04a0		VoC_lw16i_set_inc(REG0,0x4098,0x1)
0x40781805,	//0x04a2		VoC_lw16i_set_inc(REG1,0x4078,0x1)
0x0715F9FF,	//0x04a4		VoC_add16_rd(REG5,REG2,0x81)(lo)	|	VoC_shru16_ri(REG7,0xffffffff,DEFAULT)
0xDF400081,	//0x04a6		VoC_push32(REG01,DEFAULT)	|	VoC_add16_rd(REG5,REG2,0x81)(hi)
0xE7CBFFC0,	//0x04a8		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_NAD
0xE0075884,	//0x04aa		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x04B0342C,	//0x04ac		VoC_bgt16_rr(LABLE_Caculate_Bits_ELSE6_END_STEREO,REG5,REG4)
0xFFC042A7,	//0x04ae		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG2,REG4,DEFAULT)
		//0x04b0		LABLE_Caculate_Bits_ELSE6_END_STEREO
0x00884C27,	//0x04b0		VoC_bnlt16_rd(LABLE_Caculate_Bits_ELSE7_END_STEREO,REG7,0x88)
0xFFC0F607,	//0x04b2		VoC_NOP	|	VoC_lw16i_short(REG7,0xfffffff0,DEFAULT)
		//0x04b4		LABLE_Caculate_Bits_ELSE7_END_STEREO
		//0x04b4		VoC_endloop0
0x1407DC97,	//0x04b4		VoC_lw16_d(REG7,0x4059)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xF7C54059,	//0x04b6		VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG7,0x4059)(hi)
0xD908F9FF,	//0x04b8		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_shru16_ri(REG7,0xffffffff,DEFAULT)
0xE7D7FFC0,	//0x04ba		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_NAD
0x405A4D86,	//0x04bc		VoC_bnlt16_rd(LABLE_Caculate_Bits_out_STEREO,REG6,0x405a)
0xE0175814,	//0x04be		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG1,DEFAULT)
0x04C93425,	//0x04c0		VoC_bgt16_rr(LABLE_Caculate_Bits_ELSE8_STEREO,REG4,REG5)
0x00883C3C,	//0x04c2		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE8_STEREO,REG4,0x88)
0x008007A4,	//0x04c4		VoC_sub16_rd(REG4,REG4,0x80)
0x00800736,	//0x04c6		VoC_add16_rd(REG6,REG6,0x80)
0xB817E5CA,	//0x04c8		VoC_sub16_pr(REG7,REG0,REG2,DEFAULT)	|	VoC_jump(LABLE_Caculate_Bits_ELSE8_END_STEREO)
		//0x04c9		LABLE_Caculate_Bits_ELSE8_STEREO
0x00804487,	//0x04ca		VoC_bne16_rd(LABLE_Caculate_Bits_ELSE8_END_STEREO,REG7,0x80)
0x405A0B37,	//0x04cc		VoC_sub16_dr(REG7,0x405a,REG6)
0x00803C27,	//0x04ce		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE8_END_STEREO,REG7,0x80)
0xC3AEE0A4,	//0x04d0		VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x04d2		LABLE_Caculate_Bits_ELSE8_END_STEREO
		//0x04d2		VoC_endloop0
0xDE005C94,	//0x04d2		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x04d4		LABLE_Caculate_Bits_out_STEREO
0x40591407,	//0x04d4		VoC_lw16_d(REG7,0x4059)
0xF9FFDF00,	//0x04d6		VoC_shru16_ri(REG7,0xffffffff,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xF0076023,	//0x04d8		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0xE7CBD894,	//0x04da		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x405A4CA6,	//0x04dc		VoC_bnlt16_rd(LABLE_Caculate_Bits_out_STEREO_2,REG6,0x405a)
0x00883C84,	//0x04de		VoC_bngt16_rd(LABLE_Caculate_Bits_ELSE9_END_STEREO,REG4,0x88)
0x008007A4,	//0x04e0		VoC_sub16_rd(REG4,REG4,0x80)
0x00800736,	//0x04e2		VoC_add16_rd(REG6,REG6,0x80)
0xFFC05C34,	//0x04e4		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
		//0x04e6		LABLE_Caculate_Bits_ELSE9_END_STEREO
		//0x04e6		VoC_endloop0
0xDE185894,	//0x04e6		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x04e8		LABLE_Caculate_Bits_out_STEREO_2
0xFFC0DFA9,	//0x04e8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x04ea		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x04ec		SBC_DEC_DIV32
0xDF465FE9,	//0x04ec		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x7F43DF42,	//0x04ee		VoC_lw32z(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xF3E4EE15,	//0x04f0		VoC_lw16i_short(REG4,0x1f,DEFAULT)	|	VoC_lw16i_short(REG5,0xffffffe1,IN_PARALLEL)
		//0x04f2		LABLE_DIV_START
0xFF277F2E,	//0x04f2		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0x008007A4,	//0x04f4		VoC_sub16_rd(REG4,REG4,0x80)
0x0080072D,	//0x04f6		VoC_add16_rd(REG5,REG5,0x80)
0x3634FEE6,	//0x04f8		VoC_bgt32_rr(LABLE_DIV_1,RL6,ACC0)(lo)	|	VoC_shru32_rr(RL6,REG4,DEFAULT)
0x37340501,	//0x04fa		VoC_be32_rr(LABLE_DIV_1,RL6,ACC0)(lo)	|	VoC_bgt32_rr(LABLE_DIV_1,RL6,ACC0)(hi)
0x31C40501,	//0x04fc		VoC_bnez16_r(LABLE_DIV_START,REG4)(lo)	|	VoC_be32_rr(LABLE_DIV_1,RL6,ACC0)(hi)
0x318404F2,	//0x04fe		VoC_bez16_r(LABLE_DIV_END,REG4)(lo)	|	VoC_bnez16_r(LABLE_DIV_START,REG4)(hi)
0xFEEF0509,	//0x0500		VoC_shru32_rr(RL7,REG5,DEFAULT)	|	VoC_bez16_r(LABLE_DIV_END,REG4)(hi)
		//0x0501		LABLE_DIV_1
0x008A1486,	//0x0502		VoC_lw32_d(RL6,0x8a)
0xFEEE4B7D,	//0x0504		VoC_shru32_rr(RL6,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0x31C4C8F3,	//0x0506		VoC_bnez16_r(LABLE_DIV_START,REG4)(lo)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xDF0204F2,	//0x0508		VoC_pop32(REG45,DEFAULT)	|	VoC_bnez16_r(LABLE_DIV_START,REG4)(hi)
		//0x0509		LABLE_DIV_END
0xDF065FA9,	//0x050a		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE580FFC0,	//0x050c		VoC_return	|	VoC_NOP
		//0x050e		sbc_unpack_frame
0xE0415FE9,	//0x050e		VoC_lw16i_short(REG1,0x4,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x40601400,	//0x0510		VoC_lw16_d(REG0,0x4060)
0x3408E243,	//0x0512		VoC_bgt16_rr(SBC_DECODE_ERROR_OUT1,REG1,REG0)(lo)	|	VoC_lbinc_p(REG3)
0xE2A0068B,	//0x0514		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_bgt16_rr(SBC_DECODE_ERROR_OUT1,REG1,REG0)(hi)
0x009C0A81,	//0x0516		VoC_lw16i(REG1,0x9c)
0x068D358C,	//0x0518		VoC_bne16_rr(SBC_DECODE_ERROR_OUT2,REG1,REG4)
0x1804E2E2,	//0x051a		VoC_lw16i_set_inc(REG0,0x4870,0x1)(lo)	|	VoC_rb_i(REG6,0x8,DEFAULT)
0x62884870,	//0x051c		VoC_rbinc_i(REG4,0x2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x4870,0x1)(hi)
0xE289E101,	//0x051e		VoC_rbinc_i(REG5,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x10,IN_PARALLEL)
0x40521504,	//0x0520		VoC_sw16_d(REG4,0x4052)
0xE024628B,	//0x0522		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_rbinc_i(REG7,0x2,DEFAULT)
0x408DDC86,	//0x0524		VoC_be16_rd(SBC_DECODE_BLOCKS_STORE,REG5,0x86)(lo)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xF1810086,	//0x0526		VoC_lw16i_short(REG1,0xc,DEFAULT)	|	VoC_be16_rd(SBC_DECODE_BLOCKS_STORE,REG5,0x86)(hi)
0x00814035,	//0x0528		VoC_be16_rd(SBC_DECODE_BLOCKS_STORE,REG5,0x81)
0x401DF101,	//0x052a		VoC_be16_rd(SBC_DECODE_BLOCKS_STORE,REG5,0x80)(lo)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0xF0810080,	//0x052c		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_be16_rd(SBC_DECODE_BLOCKS_STORE,REG5,0x80)(hi)
		//0x052e		SBC_DECODE_BLOCKS_STORE
0x40531505,	//0x052e		VoC_sw16_d(REG5,0x4053)
0x40541501,	//0x0530		VoC_sw16_d(REG1,0x4054)
0x053631C7,	//0x0532		VoC_bnez16_r(SBC_DECODE_CHANNEL_MODE_STORE,REG7)
0xFFC07024,	//0x0534		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
		//0x0536		SBC_DECODE_CHANNEL_MODE_STORE
0x40551507,	//0x0536		VoC_sw16_d(REG7,0x4055)
0x1504E286,	//0x0538		VoC_sw16_d(REG4,0x4056)(lo)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0x62874056,	//0x053a		VoC_rbinc_i(REG7,0x1,DEFAULT)	|	VoC_sw16_d(REG4,0x4056)(hi)
0x1506E085,	//0x053c		VoC_sw16_d(REG6,0x4057)(lo)	|	VoC_lw16i_short(REG5,0x8,IN_PARALLEL)
0x31C74057,	//0x053e		VoC_bnez16_r(SBC_DECODE_SUBBAND_STORE,REG7)(lo)	|	VoC_sw16_d(REG6,0x4057)(hi)
0xF0850542,	//0x0540		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_bnez16_r(SBC_DECODE_SUBBAND_STORE,REG7)(hi)
		//0x0542		SBC_DECODE_SUBBAND_STORE
0x40581507,	//0x0542		VoC_sw16_d(REG7,0x4058)
0x1505E243,	//0x0544		VoC_sw16_d(REG5,0x4059)(lo)	|	VoC_lbinc_p(REG3)
0xE2A04059,	//0x0546		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_sw16_d(REG5,0x4059)(hi)
0xE243FFC0,	//0x0548		VoC_lbinc_p(REG3)	|	VoC_NOP
0x62A3DC84,	//0x054a		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x1504E036,	//0x054c		VoC_sw16_d(REG4,0x405a)(lo)	|	VoC_lw16i_short(REG6,0x3,IN_PARALLEL)
0x1507405A,	//0x054e		VoC_sw16_d(REG7,0x405c)(lo)	|	VoC_sw16_d(REG4,0x405a)(hi)
0xE243405C,	//0x0550		VoC_lbinc_p(REG3)	|	VoC_sw16_d(REG7,0x405c)(hi)
0x40551402,	//0x0552		VoC_lw16_d(REG2,0x4055)
0x00200A87,	//0x0554		VoC_lw16i(REG7,0x20)
0x40591401,	//0x0556		VoC_lw16_d(REG1,0x4059)
0x056635B2,	//0x0558		VoC_bne16_rr(SBC_DEC_SCALE_FACTOR_NO_JOINT,REG6,REG2)
0x00834021,	//0x055a		VoC_be16_rd(SBC_DEC_SBS_8_JOINT,REG1,0x83)
0xE5C3E291,	//0x055c		VoC_jump(SBC_DEC_SBS_4_JOINT)	|	VoC_rbinc_i(REG5,0x4,DEFAULT)
		//0x055e		SBC_DEC_SBS_8_JOINT
0xFFC062A1,	//0x055e		VoC_NAD(IN_PARALLEL)	|	VoC_rbinc_i(REG5,0x8,DEFAULT)
		//0x0560		SBC_DEC_SBS_4_JOINT
0x00FE1605,	//0x0560		VoC_and16_ri(REG5,0xfe)
0xC1CFDC85,	//0x0562		VoC_add16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x405B1505,	//0x0564		VoC_sw16_d(REG5,0x405b)
		//0x0566		SBC_DEC_SCALE_FACTOR_NO_JOINT
0x4068180A,	//0x0566		VoC_lw16i_set_inc(REG2,0x4068,0x2)
0x40561404,	//0x0568		VoC_lw16_d(REG4,0x4056)
0xFFC07811,	//0x056a		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x2,DEFAULT)
0x057F2E20,	//0x056c		VoC_loop_r(0,REG4)
0x057D2E09,	//0x056e		VoC_loop_r(1,REG1)
0xE291E290,	//0x0570		VoC_rbinc_i(REG5,0x4,DEFAULT)	|	VoC_rbinc_i(REG4,0x4,DEFAULT)
0xDCA4E292,	//0x0572		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_rbinc_i(REG6,0x4,DEFAULT)
0xE243DC84,	//0x0574		VoC_lbinc_p(REG3)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xDC85DCA5,	//0x0576		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xDCA6E290,	//0x0578		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_rbinc_i(REG4,0x4,DEFAULT)
0xDCA4DC86,	//0x057a		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x073FDC84,	//0x057c		VoC_add16_rd(REG7,REG7,0x84)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x057d		VoC_endloop1
0x180A0084,	//0x057e		VoC_lw16i_set_inc(REG2,0x4069,0x2)(lo)	|	VoC_add16_rd(REG7,REG7,0x84)(hi)
		//0x057f		VoC_endloop0
0xF2024069,	//0x0580		VoC_lw16i_short(REG2,0x10,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4069,0x2)(hi)
0x40671507,	//0x0582		VoC_sw16_d(REG7,0x4067)
0x1503C3D7,	//0x0584		VoC_sw16_d(REG3,0x4061)(lo)	|	VoC_sub16_rr(REG7,REG7,REG2,DEFAULT)
0x15074061,	//0x0586		VoC_sw16_d(REG7,0x4066)(lo)	|	VoC_sw16_d(REG3,0x4061)(hi)
0x18044066,	//0x0588		VoC_lw16i_set_inc(REG0,0x4872,0x1)(lo)	|	VoC_sw16_d(REG7,0x4066)(hi)
0x70614872,	//0x058a		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x4872,0x1)(hi)
0xF032E082,	//0x058c		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,IN_PARALLEL)
0x40554431,	//0x058e		VoC_bne16_rd(SBC_DEC_ADJUST_CRC_HEAD_JOINT_SUB4,REG1,0x4055)
0x40594422,	//0x0590		VoC_bne16_rd(SBC_DEC_ADJUST_CRC_HEAD_JOINT_SUB4,REG2,0x4059)
0x00800700,	//0x0592		VoC_add16_rd(REG0,REG0,0x80)
		//0x0594		SBC_DEC_ADJUST_CRC_HEAD_JOINT_SUB4
0x07BFF81F,	//0x0594		VoC_sub16_rd(REG7,REG7,0x80)(lo)	|	VoC_shr16_ri(REG7,0x3,DEFAULT)
0xE0020080,	//0x0596		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x80)(hi)
0x059F2E38,	//0x0598		VoC_loop_r(0,REG7)
0x5885D884,	//0x059a		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xE46CF8E4,	//0x059c		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG4,0xfffffffc,IN_PARALLEL)
0xDCA4FFC0,	//0x059e		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_NOP
		//0x059f		VoC_endloop0
0x034E2B80,	//0x05a0		VoC_jal(sbc_crc8)
0x405C4025,	//0x05a2		VoC_be16_rd(SBC_DECODE_NO_ERROR_CRC,REG5,0x405c)
0x068F2B00,	//0x05a4		VoC_jump_lg(SBC_DECODE_ERROR_CRC_OUT4)
		//0x05a6		SBC_DECODE_NO_ERROR_CRC
0x037F2B80,	//0x05a6		VoC_jal(SBC_DECODE_Calculate_Bits)
0x40561404,	//0x05a8		VoC_lw16_d(REG4,0x4056)
0x40591405,	//0x05aa		VoC_lw16_d(REG5,0x4059)
0x40781808,	//0x05ac		VoC_lw16i_set_inc(REG0,0x4078,0x2)
0x40881809,	//0x05ae		VoC_lw16i_set_inc(REG1,0x4088,0x2)
0x05C52E20,	//0x05b0		VoC_loop_r(0,REG4)
0x05C02E29,	//0x05b2		VoC_loop_r(1,REG5)
0xE01A5884,	//0x05b4		VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x0AC5F00B,	//0x05b6		VoC_lw16i(REG5,0xffff)(lo)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
0x40347FFF,	//0x05b8		VoC_be16_rd(SBC_DEC_STORE_LEVEL,REG4,0x88)(lo)	|	VoC_lw16i(REG5,0xffff)(hi)
0xFEE50088,	//0x05ba		VoC_shru32_rr(ACC1,REG4,DEFAULT)	|	VoC_be16_rd(SBC_DEC_STORE_LEVEL,REG4,0x88)(hi)
0x008A09AD,	//0x05bc		VoC_sub32_rd(ACC1,ACC1,0x8a)
0xFFC0E145,	//0x05be		VoC_NOP	|	VoC_movreg16(REG5,ACC1_LO,DEFAULT)
		//0x05bf		SBC_DEC_STORE_LEVEL
		//0x05c0		VoC_endloop1
0x1405DC95,	//0x05c0		VoC_lw16_d(REG5,0x4059)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x18084059,	//0x05c2		VoC_lw16i_set_inc(REG0,0x4079,0x2)(lo)	|	VoC_lw16_d(REG5,0x4059)(hi)
0x18094079,	//0x05c4		VoC_lw16i_set_inc(REG1,0x4089,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x4079,0x2)(hi)
		//0x05c5		VoC_endloop0
0x14064089,	//0x05c6		VoC_lw16_d(REG6,0x4054)(lo)	|	VoC_lw16i_set_inc(REG1,0x4089,0x2)(hi)
0x14054054,	//0x05c8		VoC_lw16_d(REG5,0x4059)(lo)	|	VoC_lw16_d(REG6,0x4054)(hi)
0x71F84059,	//0x05ca		VoC_lw16i_short(FORMAT16,0xf,DEFAULT)	|	VoC_lw16_d(REG5,0x4059)(hi)
0xC570E007,	//0x05cc		VoC_mult16_rr(REG0,REG5,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x40A81807,	//0x05ce		VoC_lw16i_set_inc(REG3,0x40a8,0x1)
0xF9FE79F8,	//0x05d0		VoC_shru16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xffffffff,DEFAULT)
0x606EC018,	//0x05d2		VoC_movreg16(RL7_LO,REG3,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xFFC0F60F,	//0x05d4		VoC_NAD	|	VoC_movreg16(RL7_HI,REG0,IN_PARALLEL)
0x06482E30,	//0x05d6		VoC_loop_r(0,REG6)
0x40781808,	//0x05d8		VoC_lw16i_set_inc(REG0,0x4078,0x2)
0x40881809,	//0x05da		VoC_lw16i_set_inc(REG1,0x4088,0x2)
0x4068180A,	//0x05dc		VoC_lw16i_set_inc(REG2,0x4068,0x2)
0xC0794038,	//0x05de		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x5F47C0BA,	//0x05e0		VoC_push32(RL7,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xF044DFC7,	//0x05e2		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_push16(REG7,IN_PARALLEL)
0x05EA3187,	//0x05e4		VoC_bez16_r(RDA_UNPACK_CH2,REG7)
0x40563C24,	//0x05e6		VoC_bngt16_rd(RDA_UNPACK_CH2,REG4,0x4056)
0x063C2B00,	//0x05e8		VoC_jump_lg(RDA_UNPACK_CH1)
		//0x05ea		RDA_UNPACK_CH2
0x063A2E29,	//0x05ea		VoC_loop_r(1,REG5)
0xE0055894,	//0x05ec		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xFF455FC3,	//0x05ee		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x3184D886,	//0x05f0		VoC_bez16_r(SBC_DEC_LEVEL_0,REG4)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xDFC60637,	//0x05f2		VoC_push16(REG6,DEFAULT)	|	VoC_bez16_r(SBC_DEC_LEVEL_0,REG4)(hi)
0x1403DFC4,	//0x05f4		VoC_lw16_d(REG3,0x4061)(lo)	|	VoC_push16(REG4,DEFAULT)
0x5FC24061,	//0x05f6		VoC_push16(REG2,DEFAULT)	|	VoC_lw16_d(REG3,0x4061)(hi)
0x5F40E002,	//0x05f8		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0xE243E011,	//0x05fa		VoC_lbinc_p(REG3)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0x1400F027,	//0x05fc		VoC_lw16_d(REG0,0x4067)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xFFC04067,	//0x05fe		VoC_NAD	|	VoC_lw16_d(REG0,0x4067)(hi)
		//0x0600		SBC_DEC_LEVEL_PLUS_0
0xC28A6284,	//0x0600		VoC_sub16_rr(REG2,REG2,REG1,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0xC3946427,	//0x0602		VoC_sub16_rr(REG4,REG6,REG2,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG4,DEFAULT)
0xC0087E67,	//0x0604		VoC_add16_rr(REG0,REG0,REG1,IN_PARALLEL)	|	VoC_shru16_rr(REG7,REG4,DEFAULT)
0xE017647D,	//0x0606		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG7,DEFAULT)
0x060035B2,	//0x0608		VoC_bne16_rr(SBC_DEC_LEVEL_PLUS_0,REG6,REG2)
0x40671500,	//0x060a		VoC_sw16_d(REG0,0x4067)
0x40611503,	//0x060c		VoC_sw16_d(REG3,0x4061)
0xF6AA5F82,	//0x060e		VoC_movreg16(ACC1_LO,REG5,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xDF007DFD,	//0x0610		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xffffffff,DEFAULT)
0x008A2A05,	//0x0612		VoC_or32_rd(ACC1,0x8a)
0x0B3FD827,	//0x0614		VoC_sub16_dr(REG7,0x85,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0x70250085,	//0x0616		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_sub16_dr(REG7,0x85,REG7)(hi)
0x7E7DDF84,	//0x0618		VoC_shru16_rr(REG5,REG7,DEFAULT)	|	VoC_pop16(REG4,IN_PARALLEL)
0xE147FEFD,	//0x061a		VoC_movreg16(REG7,ACC1_LO,DEFAULT)	|	VoC_shru32_rr(ACC1,REG7,IN_PARALLEL)
0x062035A7,	//0x061c		VoC_bne16_rr(SBC_DEC_NO_EQUAL,REG4,REG7)
0x06323345,	//0x061e		VoC_bnez32_r(SBC_DEC_EQUAL,ACC1)
		//0x0620		SBC_DEC_NO_EQUAL
0x030D0A84,	//0x0620		VoC_lw16i(REG4,0x30d)
0xF007C334,	//0x0622		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)
0xFEF5C3F6,	//0x0624		VoC_shru32_rr(ACC1,REG6,DEFAULT)	|	VoC_sub16_rr(REG6,REG7,REG6,DEFAULT)
0xFC0BFF2B,	//0x0626		VoC_shru32_ri(REG67,0x1,DEFAULT)	|	VoC_movreg32(REG67,ACC1,DEFAULT)
0xF90EF1B9,	//0x0628		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xd,DEFAULT)
0x99A4F01A,	//0x062a		VoC_multf32_rp(ACC0,REG6,REG4,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0xFC82507C,	//0x062c		VoC_shru32_ri(REG45,0x10,IN_PARALLEL)	|	VoC_macX_rp(REG7,REG4,DEFAULT)
0x4965CB55,	//0x062e		VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_sub32_rr(ACC1,ACC1,REG45,DEFAULT)
0xE5C6DF86,	//0x0630		VoC_jump(SBC_DEC_EQUAL_END)	|	VoC_pop16(REG6,IN_PARALLEL)
		//0x0632		SBC_DEC_EQUAL
0x008A1485,	//0x0632		VoC_lw32_d(ACC1,0x8a)
0x4B55FC82,	//0x0634		VoC_sub32_rr(ACC1,ACC1,REG45,DEFAULT)	|	VoC_shru32_ri(REG45,0x10,DEFAULT)
0xDF83DF86,	//0x0636		VoC_pop16(REG3,DEFAULT)	|	VoC_pop16(REG6,IN_PARALLEL)
		//0x0637		SBC_DEC_EQUAL_END
		//0x0637		SBC_DEC_LEVEL_0
0xDDDDDE10,	//0x0638		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
		//0x063a		VoC_endloop1
0xFFC05E18,	//0x063a		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
		//0x063c		RDA_UNPACK_CH1
0xDF875F07,	//0x063c		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(RL7,DEFAULT)
0x40591405,	//0x063e		VoC_lw16_d(REG5,0x4059)
0x064531C7,	//0x0640		VoC_bnez16_r(SBC_DEC_SET_SB_SAMPLE_CH1,REG7)
0xE1E3E06E,	//0x0642		VoC_movreg16(REG3,RL7_HI,DEFAULT)	|	VoC_movreg16(RL7_LO,REG3,DEFAULT)
0xE06FE5C4,	//0x0644		VoC_movreg16(RL7_HI,REG3,DEFAULT)	|	VoC_jump(SBC_DEC_SET_SB_SAMPLE_CH_END)
		//0x0645		SBC_DEC_SET_SB_SAMPLE_CH1
0xFFC061C3,	//0x0646		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
		//0x0648		SBC_DEC_SET_SB_SAMPLE_CH_END
		//0x0648		VoC_endloop0
0x00011707,	//0x0648		VoC_xor16_ri(REG7,0x1)
0x40541405,	//0x064a		VoC_lw16_d(REG5,0x4054)
0x40591406,	//0x064c		VoC_lw16_d(REG6,0x4059)
0x40551407,	//0x064e		VoC_lw16_d(REG7,0x4055)
0xE03445AB,	//0x0650		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_mult16_rr(REG3,REG6,REG5,DEFAULT)
0x40A81809,	//0x0652		VoC_lw16i_set_inc(REG1,0x40a8,0x2)
0x067335A7,	//0x0654		VoC_bne16_rr(SBC_DECODE_JOINT_END,REG4,REG7)
0xF00A405A,	//0x0656		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG3,DEFAULT)
0x1407C09A,	//0x0658		VoC_lw16_d(REG7,0x405b)(lo)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0xFFC0405B,	//0x065a		VoC_NAD	|	VoC_lw16_d(REG7,0x405b)(hi)
0x06722E28,	//0x065c		VoC_loop_r(0,REG5)
0x00800B35,	//0x065e		VoC_sub16_dr(REG5,0x80,REG6)
0x06702E31,	//0x0660		VoC_loop_r(1,REG6)
0xD98C7024,	//0x0662		VoC_lw32_p(ACC0,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xD9957E6C,	//0x0664		VoC_lw32_p(ACC1,REG2,IN_PARALLEL)	|	VoC_shru16_rr(REG4,REG5,DEFAULT)
0x3184E43C,	//0x0666		VoC_bez16_r(SBC_DECODE_JOINT_1,REG4)(lo)	|	VoC_and16_rr(REG4,REG7,DEFAULT)
0xC92F066E,	//0x0668		VoC_add32_rr(RL7,ACC0,ACC1,DEFAULT)	|	VoC_bez16_r(SBC_DECODE_JOINT_1,REG4)(hi)
0xDD8FCB2C,	//0x066a		VoC_sw32_p(RL7,REG1,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFFC05D94,	//0x066c		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
		//0x066e		SBC_DECODE_JOINT_1
0x0080072D,	//0x066e		VoC_add16_rd(REG5,REG5,0x80)
		//0x0670		VoC_endloop1
0xDE105E08,	//0x0670		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
		//0x0672		VoC_endloop0
0xDFDBFFC0,	//0x0672		VoC_push16(BITCACHE,DEFAULT)	|	VoC_NOP
		//0x0673		SBC_DECODE_JOINT_END
0x40671401,	//0x0674		VoC_lw16_d(REG1,0x4067)
0xF0075F82,	//0x0676		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0x40611403,	//0x0678		VoC_lw16_d(REG3,0x4061)
0x00071602,	//0x067a		VoC_and16_ri(REG2,0x7)
0x06803182,	//0x067c		VoC_bez16_r(SBC_DEC_UNPACK_END,REG2)
0xC0516310,	//0x067e		VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_rbinc_r(REG4,REG2,DEFAULT)
		//0x0680		SBC_DEC_UNPACK_END
0xE0057919,	//0x0680		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0x3,DEFAULT)
0x405D1404,	//0x0682		VoC_lw16_d(REG4,0x405d)
0x40641586,	//0x0684		VoC_sw32_d(RL6,0x4064)
0xFFC0C061,	//0x0686		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x405D1501,	//0x0688		VoC_sw16_d(REG1,0x405d)
0xF025E5C7,	//0x068a		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_jump(SBC_DECODE_ERROR_OUT)
		//0x068b		SBC_DECODE_ERROR_OUT1
0xF045E5C5,	//0x068c		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_jump(SBC_DECODE_ERROR_OUT)
		//0x068d		SBC_DECODE_ERROR_OUT2
0xF0A5E5C3,	//0x068e		VoC_lw16i_short(REG5,0x5,DEFAULT)	|	VoC_jump(SBC_DECODE_ERROR_OUT)
		//0x068f		SBC_DECODE_ERROR_CRC_OUT4
0xDFA9E5C1,	//0x0690		VoC_pop16(RA,DEFAULT)	|	VoC_jump(SBC_DECODE_ERROR_OUT)
		//0x0691		SBC_DECODE_ERROR_OUT
0x401D1505,	//0x0692		VoC_sw16_d(REG5,0x401d)
0xDFE9E580,	//0x0694		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0695		sbc_decoder_init
0x405F1400,	//0x0696		VoC_lw16_d(REG0,0x405f)
0x06B031C0,	//0x0698		VoC_bnez16_r(LABLE_INIT_END,REG0)
0x45A81808,	//0x069a		VoC_lw16i_set_inc(REG0,0x45a8,0x2)
0xE0167F44,	//0x069c		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x06A12D54,	//0x069e		VoC_loop_i(0x0,0xaa)
0xDDC4DDC4,	//0x06a0		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x06a1		VoC_endloop0
0x40591402,	//0x06a2		VoC_lw16_d(REG2,0x4059)
0x48501809,	//0x06a4		VoC_lw16i_set_inc(REG1,0x4850,0x2)
0x180BF9FA,	//0x06a6		VoC_lw16i_set_inc(REG3,0xbe,0x2)(lo)	|	VoC_shru16_ri(REG2,0xffffffff,DEFAULT)
0x2E1000BE,	//0x06a8		VoC_loop_r(0,REG2)(lo)	|	VoC_lw16i_set_inc(REG3,0xbe,0x2)(hi)
0xD9DA06AD,	//0x06aa		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_r(0,REG2)(hi)
0xDDCAFFC0,	//0x06ac		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_NOP
		//0x06ad		VoC_endloop0
0x405F1506,	//0x06ae		VoC_sw16_d(REG6,0x405f)
		//0x06b0		LABLE_INIT_END
0xFFC0DFA9,	//0x06b0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x06b2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x06b3		sbc_dec_analyze_eight
0xDFC25F42,	//0x06b4		VoC_push16(REG2,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xDFC35F43,	//0x06b6		VoC_push16(REG3,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x1500DFC2,	//0x06b8		VoC_sw16_d(REG0,0x4887)(lo)	|	VoC_push16(REG2,DEFAULT)
0x18084887,	//0x06ba		VoC_lw16i_set_inc(REG0,0xde,0x2)(lo)	|	VoC_sw16_d(REG0,0x4887)(hi)
0xFFC000DE,	//0x06bc		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0xde,0x2)(hi)
0x06EC2C20,	//0x06be		VoC_loop_i(0x0,0x10)
0xDFC15824,	//0x06c0		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0x008007A4,	//0x06c2		VoC_sub16_rd(REG4,REG4,0x80)
0x06D43244,	//0x06c4		VoC_bnltz16_r(LABEL_COMPUTER_V,REG4)
0x5FC3DFC2,	//0x06c6		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x0A84F662,	//0x06c8		VoC_lw16i(REG4,0x9f)(lo)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
0x0712009F,	//0x06ca		VoC_add16_rd(REG2,REG2,0x8d)(lo)	|	VoC_lw16i(REG4,0x9f)(hi)
0xD9DC008D,	//0x06cc		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x8d)(hi)
0x06D12C13,	//0x06ce		VoC_loop_i(0x1,0x9)
0xDDD4D9DC,	//0x06d0		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
		//0x06d1		VoC_endloop1
0xDF82DF83,	//0x06d2		VoC_pop16(REG2,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
		//0x06d4		LABEL_COMPUTER_V
0xFF445FC4,	//0x06d4		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xF4017F45,	//0x06d6		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xF5C259CA,	//0x06d8		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x06E22C11,	//0x06da		VoC_loop_i(0x1,0x8)
0xFBC259C3,	//0x06dc		VoC_shr32_ri(REG45,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xF9444E7D,	//0x06de		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0xCE344E3C,	//0x06e0		VoC_mac32_rr(REG6,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
		//0x06e2		VoC_endloop1
0xCEB559CA,	//0x06e2		VoC_macX_rr(REG6,REG5,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x40E7DF84,	//0x06e4		VoC_add16_rr(REG7,REG3,REG4,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x41E7FA45,	//0x06e6		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr32_ri(ACC1,0x8,IN_PARALLEL)
0x7A3CC92C,	//0x06e8		VoC_shr32_ri(ACC0,0x7,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,IN_PARALLEL)
0xDCA4DF81,	//0x06ea		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_pop16(REG1,IN_PARALLEL)
		//0x06ec		VoC_endloop0
0x0709DDBC,	//0x06ec		VoC_add16_rd(REG1,REG1,0x84)(lo)	|	VoC_sw32_p(ACC0,REG7,DEFAULT)
0x5F820084,	//0x06ee		VoC_pop16(REG2,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x84)(hi)
0xDFC1F009,	//0x06f0		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x0710DFC2,	//0x06f2		VoC_add16_rd(REG0,REG2,0x84)(lo)	|	VoC_push16(REG2,DEFAULT)
0x0A8C0084,	//0x06f4		VoC_lw16i(RL6_LO,0x1de)(lo)	|	VoC_add16_rd(REG0,REG2,0x84)(hi)
0x0A8D01DE,	//0x06f6		VoC_lw16i(RL6_HI,0x22e)(lo)	|	VoC_lw16i(RL6_LO,0x1de)(hi)
0xFFC0022E,	//0x06f8		VoC_NAD	|	VoC_lw16i(RL6_HI,0x22e)(hi)
0x072F2C11,	//0x06fa		VoC_loop_i(0x1,0x8)
0xFF4458A4,	//0x06fc		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xFF455885,	//0x06fe		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xF0105FC0,	//0x0700		VoC_lw16i_short(INC0,0x4,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xF0125FC2,	//0x0702		VoC_lw16i_short(INC2,0x4,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xC0E840E2,	//0x0704		VoC_add16_rr(REG0,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG3,REG4,DEFAULT)
0xC02840A2,	//0x0706		VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x00810700,	//0x0708		VoC_add16_rd(REG0,REG0,0x81)
0xD9D26181,	//0x070a		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_movreg16(REG1,RL6_LO,DEFAULT)
0x07142C0A,	//0x070c		VoC_loop_i(0x0,0x5)
0xFBC259CB,	//0x070e		VoC_shr32_ri(REG45,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF9444E7D,	//0x0710		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0xCE344E3C,	//0x0712		VoC_mac32_rr(REG6,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
		//0x0714		VoC_endloop0
0xCEB559D2,	//0x0714		VoC_macX_rr(REG6,REG5,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xF62C61A1,	//0x0716		VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(REG1,RL6_HI,DEFAULT)
0xD9C268A8,	//0x0718		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xFBC259CB,	//0x071a		VoC_shr32_ri(REG45,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF9444E7D,	//0x071c		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0xCE344E3C,	//0x071e		VoC_mac32_rr(REG6,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
		//0x0720		VoC_endloop0
0xCEB559C2,	//0x0720		VoC_macX_rr(REG6,REG5,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x48871400,	//0x0722		VoC_lw16_d(REG0,0x4887)
0x1410FA45,	//0x0724		VoC_lw16_d(INC0,0x4056)(lo)	|	VoC_shr32_ri(ACC1,0x8,DEFAULT)
0x492C4056,	//0x0726		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw16_d(INC0,0x4056)(hi)
0x7BC4F62D,	//0x0728		VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)	|	VoC_movreg16(RL6_HI,REG1,IN_PARALLEL)
0xDF82F00A,	//0x072a		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0x1500DC89,	//0x072c		VoC_sw16_d(REG0,0x4887)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0x5F804887,	//0x072e		VoC_pop16(REG0,DEFAULT)	|	VoC_sw16_d(REG0,0x4887)(hi)
		//0x072f		VoC_endloop1
0xDF82F008,	//0x0730		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x48871400,	//0x0732		VoC_lw16_d(REG0,0x4887)
0x5F03DF81,	//0x0734		VoC_pop32(REG67,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x5F02DF83,	//0x0736		VoC_pop32(REG45,DEFAULT)	|	VoC_pop16(REG3,IN_PARALLEL)
0xDFA9DF82,	//0x0738		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0xE580FFC0,	//0x073a		VoC_return	|	VoC_NOP
		//0x073c		sbc_dec_analyze_four
0x5F42DFE9,	//0x073c		VoC_push32(REG45,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x5F43DFC2,	//0x073e		VoC_push32(REG67,DEFAULT)	|	VoC_push16(REG2,IN_PARALLEL)
0xDFC2DFC3,	//0x0740		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0x48871500,	//0x0742		VoC_sw16_d(REG0,0x4887)
0x027E1808,	//0x0744		VoC_lw16i_set_inc(REG0,0x27e,0x2)
0x07742C10,	//0x0746		VoC_loop_i(0x0,0x8)
0xDFC15824,	//0x0748		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0x008007A4,	//0x074a		VoC_sub16_rd(REG4,REG4,0x80)
0x075C3244,	//0x074c		VoC_bnltz16_r(LABEL_COMPUTER_4_V,REG4)
0x5FC3DFC2,	//0x074e		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x0A84F662,	//0x0750		VoC_lw16i(REG4,0x4f)(lo)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
0x0712004F,	//0x0752		VoC_add16_rd(REG2,REG2,0x1005)(lo)	|	VoC_lw16i(REG4,0x4f)(hi)
0xD9DC1005,	//0x0754		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x1005)(hi)
0x07592C13,	//0x0756		VoC_loop_i(0x1,0x9)
0xDDD4D9DC,	//0x0758		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
		//0x0759		VoC_endloop1
0xDF82DF83,	//0x075a		VoC_pop16(REG2,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
		//0x075c		LABEL_COMPUTER_4_V
0xFF445FC4,	//0x075c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xF4017F45,	//0x075e		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xF5C259CA,	//0x0760		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x076A2C09,	//0x0762		VoC_loop_i(0x1,0x4)
0xFBC259C3,	//0x0764		VoC_shr32_ri(REG45,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xF9444E7D,	//0x0766		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0xCE344E3C,	//0x0768		VoC_mac32_rr(REG6,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
		//0x076a		VoC_endloop1
0xCEB559CA,	//0x076a		VoC_macX_rr(REG6,REG5,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x40E7DF84,	//0x076c		VoC_add16_rr(REG7,REG3,REG4,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x41E7FA45,	//0x076e		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr32_ri(ACC1,0x8,IN_PARALLEL)
0x7A3CC92C,	//0x0770		VoC_shr32_ri(ACC0,0x7,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,IN_PARALLEL)
0xDCA4DF81,	//0x0772		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_pop16(REG1,IN_PARALLEL)
		//0x0774		VoC_endloop0
0x0709DDBC,	//0x0774		VoC_add16_rd(REG1,REG1,0x83)(lo)	|	VoC_sw32_p(ACC0,REG7,DEFAULT)
0x5F820083,	//0x0776		VoC_pop16(REG2,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x83)(hi)
0xDFC1F009,	//0x0778		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x0710DFC2,	//0x077a		VoC_add16_rd(REG0,REG2,0x83)(lo)	|	VoC_push16(REG2,DEFAULT)
0x0A8C0083,	//0x077c		VoC_lw16i(RL6_LO,0x2be)(lo)	|	VoC_add16_rd(REG0,REG2,0x83)(hi)
0x0A8D02BE,	//0x077e		VoC_lw16i(RL6_HI,0x2e6)(lo)	|	VoC_lw16i(RL6_LO,0x2be)(hi)
0xFFC002E6,	//0x0780		VoC_NAD	|	VoC_lw16i(RL6_HI,0x2e6)(hi)
0x07B72C09,	//0x0782		VoC_loop_i(0x1,0x4)
0xFF4458A4,	//0x0784		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xFF455885,	//0x0786		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xF0105FC0,	//0x0788		VoC_lw16i_short(INC0,0x4,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xF0125FC2,	//0x078a		VoC_lw16i_short(INC2,0x4,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xC0E840E2,	//0x078c		VoC_add16_rr(REG0,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG3,REG4,DEFAULT)
0xC02840A2,	//0x078e		VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x00810700,	//0x0790		VoC_add16_rd(REG0,REG0,0x81)
0xD9D26181,	//0x0792		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_movreg16(REG1,RL6_LO,DEFAULT)
0x079C2C0A,	//0x0794		VoC_loop_i(0x0,0x5)
0xFBC259CB,	//0x0796		VoC_shr32_ri(REG45,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF9444E7D,	//0x0798		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0xCE344E3C,	//0x079a		VoC_mac32_rr(REG6,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
		//0x079c		VoC_endloop0
0xCEB559D2,	//0x079c		VoC_macX_rr(REG6,REG5,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xF62C61A1,	//0x079e		VoC_movreg16(RL6_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(REG1,RL6_HI,DEFAULT)
0xD9C268A8,	//0x07a0		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xFBC259CB,	//0x07a2		VoC_shr32_ri(REG45,0xfffffff8,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF9444E7D,	//0x07a4		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0xCE344E3C,	//0x07a6		VoC_mac32_rr(REG6,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
		//0x07a8		VoC_endloop0
0xCEB559C2,	//0x07a8		VoC_macX_rr(REG6,REG5,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x48871400,	//0x07aa		VoC_lw16_d(REG0,0x4887)
0x1410FA45,	//0x07ac		VoC_lw16_d(INC0,0x4056)(lo)	|	VoC_shr32_ri(ACC1,0x8,DEFAULT)
0x492C4056,	//0x07ae		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw16_d(INC0,0x4056)(hi)
0x7BC4F62D,	//0x07b0		VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)	|	VoC_movreg16(RL6_HI,REG1,IN_PARALLEL)
0xDF82F00A,	//0x07b2		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0x1500DC89,	//0x07b4		VoC_sw16_d(REG0,0x4887)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0x5F804887,	//0x07b6		VoC_pop16(REG0,DEFAULT)	|	VoC_sw16_d(REG0,0x4887)(hi)
		//0x07b7		VoC_endloop1
0xDF82F008,	//0x07b8		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x48871400,	//0x07ba		VoC_lw16_d(REG0,0x4887)
0x5F03DF81,	//0x07bc		VoC_pop32(REG67,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x5F02DF83,	//0x07be		VoC_pop32(REG45,DEFAULT)	|	VoC_pop16(REG3,IN_PARALLEL)
0xDFA9DF82,	//0x07c0		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0xE580FFC0,	//0x07c2		VoC_return	|	VoC_NOP
		//0x07c4		sbc_synthesize_audio
0x1400DFE9,	//0x07c4		VoC_lw16_d(REG0,0x4059)(lo)	|	VoC_push16(RA,DEFAULT)
0x44284059,	//0x07c6		VoC_bne16_rd(LABEL_SYN_4,REG0,0x83)(lo)	|	VoC_lw16_d(REG0,0x4059)(hi)
0x2B000083,	//0x07c8		VoC_jump_lg(LABEL_SYN_8)(lo)	|	VoC_bne16_rd(LABEL_SYN_4,REG0,0x83)(hi)
0xFFC007F2,	//0x07ca		VoC_NAD	|	VoC_jump_lg(LABEL_SYN_8)(hi)
		//0x07cc		LABEL_SYN_4
0x40561404,	//0x07cc		VoC_lw16_d(REG4,0x4056)
0x40A80A81,	//0x07ce		VoC_lw16i(REG1,0x40a8)
0x42A81808,	//0x07d0		VoC_lw16i_set_inc(REG0,0x42a8,0x2)
0x40561410,	//0x07d2		VoC_lw16_d(INC0,0x4056)
0x4850180A,	//0x07d4		VoC_lw16i_set_inc(REG2,0x4850,0x2)
0x45A8180B,	//0x07d6		VoC_lw16i_set_inc(REG3,0x45a8,0x2)
0x40541405,	//0x07d8		VoC_lw16_d(REG5,0x4054)
0xF007F006,	//0x07da		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x07db		LABLE_SYNTHESIZE4_CH
		//0x07dc		LABLE_SYNTHESIZE4_BLK
0xFFC07051,	//0x07dc		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x073C2B80,	//0x07de		VoC_jal(sbc_dec_analyze_four)
0x0080073F,	//0x07e0		VoC_add16_rd(REG7,REG7,0x80)
0x07DC35AF,	//0x07e2		VoC_bne16_rr(LABLE_SYNTHESIZE4_BLK,REG5,REG7)
0x00800736,	//0x07e4		VoC_add16_rd(REG6,REG6,0x80)
0x42A81808,	//0x07e6		VoC_lw16i_set_inc(REG0,0x42a8,0x2)
0x00800712,	//0x07e8		VoC_add16_rd(REG2,REG2,0x80)
0x00800700,	//0x07ea		VoC_add16_rd(REG0,REG0,0x80)
0x008C071B,	//0x07ec		VoC_add16_rd(REG3,REG3,0x8c)
0x07DB35A6,	//0x07ee		VoC_bne16_rr(LABLE_SYNTHESIZE4_CH,REG4,REG6)
0x08162B00,	//0x07f0		VoC_jump_lg(sbc_synthesize_audio_end)
		//0x07f2		LABEL_SYN_8
0x40561404,	//0x07f2		VoC_lw16_d(REG4,0x4056)
0x40A80A81,	//0x07f4		VoC_lw16i(REG1,0x40a8)
0x42A81808,	//0x07f6		VoC_lw16i_set_inc(REG0,0x42a8,0x2)
0x40561410,	//0x07f8		VoC_lw16_d(INC0,0x4056)
0x4850180A,	//0x07fa		VoC_lw16i_set_inc(REG2,0x4850,0x2)
0x45A8180B,	//0x07fc		VoC_lw16i_set_inc(REG3,0x45a8,0x2)
0x40541405,	//0x07fe		VoC_lw16_d(REG5,0x4054)
0xF007F006,	//0x0800		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0801		LABLE_SYNTHESIZE_CH
		//0x0802		LABLE_SYNTHESIZE_BLK
0xFFC07051,	//0x0802		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x06B32B80,	//0x0804		VoC_jal(sbc_dec_analyze_eight)
0x0080073F,	//0x0806		VoC_add16_rd(REG7,REG7,0x80)
0x080235AF,	//0x0808		VoC_bne16_rr(LABLE_SYNTHESIZE_BLK,REG5,REG7)
0x00800736,	//0x080a		VoC_add16_rd(REG6,REG6,0x80)
0x42A81808,	//0x080c		VoC_lw16i_set_inc(REG0,0x42a8,0x2)
0x00800712,	//0x080e		VoC_add16_rd(REG2,REG2,0x80)
0x00800700,	//0x0810		VoC_add16_rd(REG0,REG0,0x80)
0x008C071B,	//0x0812		VoC_add16_rd(REG3,REG3,0x8c)
0x080135A6,	//0x0814		VoC_bne16_rr(LABLE_SYNTHESIZE_CH,REG4,REG6)
		//0x0816		sbc_synthesize_audio_end
0x4059082D,	//0x0816		VoC_mult16_rd(REG5,REG5,0x4059)
0x0080381C,	//0x0818		VoC_bgt16_rd(LABLE_LENGTH_process,REG4,0x80)
0xDFA9F90D,	//0x081a		VoC_pop16(RA,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
		//0x081b		LABLE_LENGTH_process
0x405E1505,	//0x081c		VoC_sw16_d(REG5,0x405e)
0xDFE9E580,	//0x081e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x081f		sbc_mixing_audio
0x50886C0F,	//0x0820		VoC_bez16_d(SBC_MIXING_AUDIO_L0,0x5088)
0x42A81809,	//0x0822		VoC_lw16i_set_inc(REG1,0x42a8,0x2)
0x42A81804,	//0x0824		VoC_lw16i_set_inc(REG0,0x42a8,0x1)
0x2D00D9CA,	//0x0826		VoC_loop_i(0x0,0x80)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xF80C082E,	//0x0828		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_loop_i(0x0,0x80)(hi)
0xC12EF80D,	//0x082a		VoC_add16_rr(REG6,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0xDC86D9CA,	//0x082c		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
		//0x082e		VoC_endloop0
0xDFA9DC86,	//0x082e		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x082f		SBC_MIXING_AUDIO_L0
0xE580FFC0,	//0x0830		VoC_return	|	VoC_NOP
		//0x0832		sbc_eq_iir
0x0A84DFE9,	//0x0832		VoC_lw16i(REG4,0x42a8)(lo)	|	VoC_push16(RA,DEFAULT)
0xF00142A8,	//0x0834		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_lw16i(REG4,0x42a8)(hi)
0x55941400,	//0x0836		VoC_lw16_d(REG0,0x5594)
0x55921501,	//0x0838		VoC_sw16_d(REG1,0x5592)
		//0x083a		IIR_Loop2_begins
0x405E1402,	//0x083a		VoC_lw16_d(REG2,0x405e)
0x55921401,	//0x083c		VoC_lw16_d(REG1,0x5592)
0x3491C092,	//0x083e		VoC_bngt16_rr(IIR_Loop2_end,REG2,REG1)(lo)	|	VoC_add16_rr(REG2,REG2,REG2,DEFAULT)
0xF00208DE,	//0x0840		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_bngt16_rr(IIR_Loop2_end,REG2,REG1)(hi)
		//0x0842		EQ_IIR_Loop1_begins
0x40561405,	//0x0842		VoC_lw16_d(REG5,0x4056)
0x3515D84C,	//0x0844		VoC_be16_rr(IIR_Loop1_end,REG2,REG5)(lo)	|	VoC_lw16_p(RL6_LO,REG4,DEFAULT)
0xDFC408CE,	//0x0846		VoC_push16(REG4,DEFAULT)	|	VoC_be16_rr(IIR_Loop1_end,REG2,REG5)(hi)
0xF784700D,	//0x0848		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x10B24C24,	//0x084a		VoC_bnlt16_rd(IIR_RL6_GTZ,REG4,0x10b2)
0x7FFF0ACD,	//0x084c		VoC_lw16i(RL6_HI,0xffff)
		//0x084e		IIR_RL6_GTZ
0x54A00A83,	//0x084e		VoC_lw16i(REG3,0x54a0)
0x10BC0816,	//0x0850		VoC_mult16_rd(REG6,REG2,0x10bc)
0x40F3FFC0,	//0x0852		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_NOP
0x40FEC007,	//0x0854		VoC_add16_rr(REG6,REG3,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG0,REG0,IN_PARALLEL)
0xFFC0FBA6,	//0x0856		VoC_NOP	|	VoC_shr32_ri(RL6,0xfffffff4,IN_PARALLEL)
0xE0075DB6,	//0x0858		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_sw32_p(RL6,REG6,DEFAULT)
0x54640A81,	//0x085a		VoC_lw16i(REG1,0x5464)
0x10B50709,	//0x085c		VoC_add16_rd(REG1,REG1,0x10b5)
0x55951406,	//0x085e		VoC_lw16_d(REG6,0x5595)
0x08B92E31,	//0x0860		VoC_loop_r(1,REG6)
0x606EDFC7,	//0x0862		VoC_movreg16(RL7_LO,REG3,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xC0F3C006,	//0x0864		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG0,REG0,IN_PARALLEL)
0xFF457F44,	//0x0866		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xF4027199,	//0x0868		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xc,DEFAULT)
0xDFC06872,	//0x086a		VoC_push16(REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
0x5814D99B,	//0x086c		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0xF926FBE3,	//0x086e		VoC_shru16_ri(REG6,0x4,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffffc,IN_PARALLEL)
0xCE26CE67,	//0x0870		VoC_mac32_rr(REG4,REG6,DEFAULT)	|	VoC_macX_rr(REG4,REG7,DEFAULT)
0x10B30700,	//0x0872		VoC_add16_rd(REG0,REG0,0x10b3)
0x10B4071B,	//0x0874		VoC_add16_rd(REG3,REG3,0x10b4)
0x10B54430,	//0x0876		VoC_bne16_rd(IIR_LABLE_XI_NE_2,REG0,0x10b5)
0x10B7079B,	//0x0878		VoC_sub16_rd(REG3,REG3,0x10b7)
0xFFC07000,	//0x087a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x087c		IIR_LABLE_XI_NE_2
		//0x087c		VoC_endloop0
0x10B30709,	//0x087c		VoC_add16_rd(REG1,REG1,0x10b3)
0xFF265F80,	//0x087e		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x10B24420,	//0x0880		VoC_bne16_rd(IIR_LABLE_REG0_NE_0,REG0,0x10b2)
0x10B7071B,	//0x0882		VoC_add16_rd(REG3,REG3,0x10b7)
		//0x0884		IIR_LABLE_REG0_NE_0
0x10B6071B,	//0x0884		VoC_add16_rd(REG3,REG3,0x10b6)
0x10B60789,	//0x0886		VoC_sub16_rd(REG1,REG1,0x10b6)
0xE84FFF44,	//0x0888		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x5814D99B,	//0x088a		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0xF926FBE3,	//0x088c		VoC_shru16_ri(REG6,0x4,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffffc,IN_PARALLEL)
0xCE26CE67,	//0x088e		VoC_mac32_rr(REG4,REG6,DEFAULT)	|	VoC_macX_rr(REG4,REG7,DEFAULT)
0x079BFFC0,	//0x0890		VoC_sub16_rd(REG3,REG3,0x10b4)(lo)	|	VoC_NOP
0x442810B4,	//0x0892		VoC_bne16_rd(IIR_LABLE_I_NE_1,REG0,0x10b3)(lo)	|	VoC_sub16_rd(REG3,REG3,0x10b4)(hi)
0x071B10B3,	//0x0894		VoC_add16_rd(REG3,REG3,0x10b7)(lo)	|	VoC_bne16_rd(IIR_LABLE_I_NE_1,REG0,0x10b3)(hi)
0xFFC010B7,	//0x0896		VoC_NAD	|	VoC_add16_rd(REG3,REG3,0x10b7)(hi)
		//0x0898		IIR_LABLE_I_NE_1
		//0x0898		VoC_endloop0
0x10B30789,	//0x0898		VoC_sub16_rd(REG1,REG1,0x10b3)
0xDF874BA6,	//0x089a		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_sub32_rr(RL6,RL6,ACC0,DEFAULT)
0xC00461C3,	//0x089c		VoC_add16_rr(REG4,REG0,REG0,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0x071BC0E3,	//0x089e		VoC_add16_rd(REG3,REG3,0x10b7)(lo)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDFC710B7,	//0x08a0		VoC_push16(REG7,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x10b7)(hi)
0x1406DD9E,	//0x08a2		VoC_lw16_d(REG6,0x5595)(lo)	|	VoC_sw32_p(RL6,REG3,DEFAULT)
0x07B65595,	//0x08a4		VoC_sub16_rd(REG6,REG6,0x10b3)(lo)	|	VoC_lw16_d(REG6,0x5595)(hi)
0x353E10B3,	//0x08a6		VoC_be16_rr(IIR_LABLE_BAND_ET_9,REG7,REG6)(lo)	|	VoC_sub16_rd(REG6,REG6,0x10b3)(hi)
0x071B08B3,	//0x08a8		VoC_add16_rd(REG3,REG3,0x10b7)(lo)	|	VoC_be16_rr(IIR_LABLE_BAND_ET_9,REG7,REG6)(hi)
0x140710B7,	//0x08aa		VoC_lw16_d(REG7,0x4056)(lo)	|	VoC_add16_rd(REG3,REG3,0x10b7)(hi)
0x442F4056,	//0x08ac		VoC_bne16_rd(IIR_CHANNELS_E_1,REG7,0x10b4)(lo)	|	VoC_lw16_d(REG7,0x4056)(hi)
0x071B10B4,	//0x08ae		VoC_add16_rd(REG3,REG3,0x10bc)(lo)	|	VoC_bne16_rd(IIR_CHANNELS_E_1,REG7,0x10b4)(hi)
0xFFC010BC,	//0x08b0		VoC_NOP	|	VoC_add16_rd(REG3,REG3,0x10bc)(hi)
		//0x08b2		IIR_CHANNELS_E_1
0xDF87DD9E,	//0x08b2		VoC_pop16(REG7,DEFAULT)	|	VoC_sw32_p(RL6,REG3,DEFAULT)
		//0x08b3		IIR_LABLE_BAND_ET_9
0x10B3073F,	//0x08b4		VoC_add16_rd(REG7,REG7,0x10b3)
0x0709C006,	//0x08b6		VoC_add16_rd(REG1,REG1,0x10ba)(lo)	|	VoC_add16_rr(REG6,REG0,REG0,DEFAULT)
0xC2F310BA,	//0x08b8		VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x10ba)(hi)
		//0x08b9		VoC_endloop1
0xDF847F33,	//0x08ba		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_movreg32(REG67,RL6,DEFAULT)
0x602BFA63,	//0x08bc		VoC_blt32_rd(IIR_SATURATE16_H,REG67,0x10c2)(lo)	|	VoC_shr32_ri(REG67,0xc,DEFAULT)
0x0A8610C2,	//0x08be		VoC_lw16i(REG6,0x7fff)(lo)	|	VoC_blt32_rd(IIR_SATURATE16_H,REG67,0x10c2)(hi)
0xFFC07FFF,	//0x08c0		VoC_NAD	|	VoC_lw16i(REG6,0x7fff)(hi)
		//0x08c2		IIR_SATURATE16_H
0x10C45023,	//0x08c2		VoC_bgt32_rd(IIR_SATURATE16_L,REG67,0x10c4)
0x00000AC6,	//0x08c4		VoC_lw16i(REG6,0x8000)
		//0x08c6		IIR_SATURATE16_L
0x10B30712,	//0x08c6		VoC_add16_rd(REG2,REG2,0x10b3)
0x0724DC46,	//0x08c8		VoC_add16_rd(REG4,REG4,0x10b3)(lo)	|	VoC_sw16_p(REG6,REG4,DEFAULT)
0x2B0010B3,	//0x08ca		VoC_jump_lg(EQ_IIR_Loop1_begins)(lo)	|	VoC_add16_rd(REG4,REG4,0x10b3)(hi)
0xFFC00842,	//0x08cc		VoC_NAD	|	VoC_jump_lg(EQ_IIR_Loop1_begins)(hi)
		//0x08ce		IIR_Loop1_end
0x08D231C0,	//0x08ce		VoC_bnez16_r(IIR_LABLE_OUTI_LT_0,REG0)
0xFFC07060,	//0x08d0		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
		//0x08d2		IIR_LABLE_OUTI_LT_0
0x10B30780,	//0x08d2		VoC_sub16_rd(REG0,REG0,0x10b3)
0x55921401,	//0x08d4		VoC_lw16_d(REG1,0x5592)
0x40560709,	//0x08d6		VoC_add16_rd(REG1,REG1,0x4056)
0x1501FFC0,	//0x08d8		VoC_sw16_d(REG1,0x5592)(lo)	|	VoC_NOP
0x2B005592,	//0x08da		VoC_jump_lg(IIR_Loop2_begins)(lo)	|	VoC_sw16_d(REG1,0x5592)(hi)
0xFFC0083A,	//0x08dc		VoC_NAD	|	VoC_jump_lg(IIR_Loop2_begins)(hi)
		//0x08de		IIR_Loop2_end
0x55941500,	//0x08de		VoC_sw16_d(REG0,0x5594)
0xFFC0DFA9,	//0x08e0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x08e2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x08e3		sbc_eq_div_32
0xDF415FC0,	//0x08e4		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF43DF42,	//0x08e6		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xE1F67F40,	//0x08e8		VoC_lw16i_short(REG6,0x1f,IN_PARALLEL)	|	VoC_lw32z(REG01,DEFAULT)
0x3630F003,	//0x08ea		VoC_bgt32_rr(EQ_DIV_RL6_GTZ,RL6,REG01)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x702308EF,	//0x08ec		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bgt32_rr(EQ_DIV_RL6_GTZ,RL6,REG01)(hi)
0xFFC0CA36,	//0x08ee		VoC_NOP	|	VoC_sub32_rr(RL6,REG01,RL6,IN_PARALLEL)
		//0x08ef		EQ_DIV_RL6_GTZ
0xFF325FC3,	//0x08f0		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x1587FAFA,	//0x08f2		VoC_sw32_d(RL7,0x5590)(lo)	|	VoC_shr32_ri(REG45,0x1f,DEFAULT)
0xFFC05590,	//0x08f4		VoC_NAD	|	VoC_sw32_d(RL7,0x5590)(hi)
0x09052C41,	//0x08f6		VoC_loop_i(0x1,0x20)
0x10B307B6,	//0x08f8		VoC_sub16_rd(REG6,REG6,0x10b3)
0x7EB1FF31,	//0x08fa		VoC_shr32_rr(REG23,REG6,DEFAULT)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0x2981F8F9,	//0x08fc		VoC_and32_rd(REG23,0x10b3)(lo)	|	VoC_shr16_ri(REG1,0xffffffff,IN_PARALLEL)
0x602A10B3,	//0x08fe		VoC_blt32_rd(EQ_DIV_TMP_LT_DIVISOR,REG45,0x5590)(lo)	|	VoC_and32_rd(REG23,0x10b3)(hi)
0x07095590,	//0x0900		VoC_add16_rd(REG1,REG1,0x10b3)(lo)	|	VoC_blt32_rd(EQ_DIV_TMP_LT_DIVISOR,REG45,0x5590)(hi)
0xCABA10B3,	//0x0902		VoC_sub32_rr(REG45,REG45,RL7,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x10b3)(hi)
		//0x0904		EQ_DIV_TMP_LT_DIVISOR
0xC88AFBFA,	//0x0904		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
		//0x0905		VoC_endloop1
0x401BDF83,	//0x0906		VoC_be16_rd(EQ_DIV_QUO_GTZ,REG3,0x10b2)(lo)	|	VoC_pop16(REG3,DEFAULT)
0xC20910B2,	//0x0908		VoC_sub16_rr(REG1,REG0,REG1,DEFAULT)	|	VoC_be16_rd(EQ_DIV_QUO_GTZ,REG3,0x10b2)(hi)
		//0x090a		EQ_DIV_QUO_GTZ
0xDF02DF03,	//0x090a		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF805F01,	//0x090c		VoC_pop16(REG0,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0xFFC0DFA9,	//0x090e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0910		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0911		get_coeffs
0x10C61806,	//0x0912		VoC_lw16i_set_inc(REG2,0x10c6,0x1)
0x108A1807,	//0x0914		VoC_lw16i_set_inc(REG3,0x108a,0x1)
0x54641804,	//0x0916		VoC_lw16i_set_inc(REG0,0x5464,0x1)
0x10621805,	//0x0918		VoC_lw16i_set_inc(REG1,0x1062,0x1)
0x40081404,	//0x091a		VoC_lw16_d(REG4,0x4008)
0x10B24884,	//0x091c		VoC_blt16_rd(GET_COEFFS_EQ_TYPE_CHOOSE,REG4,0x10b2)
0x10B83834,	//0x091e		VoC_bgt16_rd(GET_COEFFS_EQ_TYPE_CHOOSE,REG4,0x10b8)
0x10BB0824,	//0x0920		VoC_mult16_rd(REG4,REG4,0x10bb)
0xC0A2FFC0,	//0x0922		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_NOP
		//0x0924		GET_COEFFS_EQ_TYPE_CHOOSE
0x40521404,	//0x0924		VoC_lw16_d(REG4,0x4052)
0x31C4F145,	//0x0926		VoC_bnez16_r(SBC_EQ_FS_END,REG4)(lo)	|	VoC_lw16i_short(REG5,0xa,DEFAULT)
0xF125092A,	//0x0928		VoC_lw16i_short(REG5,0x9,DEFAULT)	|	VoC_bnez16_r(SBC_EQ_FS_END,REG4)(hi)
		//0x092a		SBC_EQ_FS_END
0x10BB0824,	//0x092a		VoC_mult16_rd(REG4,REG4,0x10bb)
0x55951505,	//0x092c		VoC_sw16_d(REG5,0x5595)
0xC06140E3,	//0x092e		VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x098C2E28,	//0x0930		VoC_loop_r(0,REG5)
0xFF457F44,	//0x0932		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xF461719A,	//0x0934		VoC_lw16i_short(FORMAT32,0xc,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xc,DEFAULT)
0x10000A86,	//0x0936		VoC_lw16i(REG6,0x1000)
0xDC86FFC0,	//0x0938		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
0x072DD825,	//0x093a		VoC_add16_rd(REG5,REG5,0x10bf)(lo)	|	VoC_lw16_p(REG5,REG2,DEFAULT)
0x0A8410BF,	//0x093c		VoC_lw16i(REG4,0x1036)(lo)	|	VoC_add16_rd(REG5,REG5,0x10bf)(hi)
0xC1651036,	//0x093e		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x1036)(hi)
0xD855FFC0,	//0x0940		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_NOP
0xDFC1D069,	//0x0942		VoC_push16(REG1,DEFAULT)	|	VoC_macX_rp(REG5,REG1,DEFAULT)
0xE00F60CE,	//0x0944		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
0x58BCC9E7,	//0x0946		VoC_lw16inc_p(RL6_LO,REG3,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0xE187E00D,	//0x0948		VoC_movreg16(REG7,RL6_LO,DEFAULT)	|	VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)
0x10B24C27,	//0x094a		VoC_bnlt16_rd(COEFFS_RL6_NLTZ_DEN1,REG7,0x10b2)
0x7FFF0ACD,	//0x094c		VoC_lw16i(RL6_HI,0xffff)
		//0x094e		COEFFS_RL6_NLTZ_DEN1
0x2B80FBA6,	//0x094e		VoC_jal(sbc_eq_div_32)(lo)	|	VoC_shr32_ri(RL6,0xfffffff4,DEFAULT)
0xE02708E3,	//0x0950		VoC_movreg16(REG7,REG1,DEFAULT)	|	VoC_jal(sbc_eq_div_32)(hi)
0xDFC7FFC0,	//0x0952		VoC_push16(REG7,DEFAULT)	|	VoC_NOP
0xFF22DC81,	//0x0954		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0xE00D43A7,	//0x0956		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG6,REG4,DEFAULT)
0x4C27E0EC,	//0x0958		VoC_bnlt16_rd(COEFFS_RL6_NLTZ_DEN2,REG7,0x10b2)(lo)	|	VoC_movreg16(RL6_LO,REG7,DEFAULT)
0x0ACD10B2,	//0x095a		VoC_lw16i(RL6_HI,0xffff)(lo)	|	VoC_bnlt16_rd(COEFFS_RL6_NLTZ_DEN2,REG7,0x10b2)(hi)
0xFBA67FFF,	//0x095c		VoC_shr32_ri(RL6,0xfffffff4,DEFAULT)	|	VoC_lw16i(RL6_HI,0xffff)(hi)
		//0x095d		COEFFS_RL6_NLTZ_DEN2
0x08E32B80,	//0x095e		VoC_jal(sbc_eq_div_32)
0xDF875C81,	//0x0960		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0xD8A5DF81,	//0x0962		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x10BF072D,	//0x0964		VoC_add16_rd(REG5,REG5,0x10bf)
0x100A0A84,	//0x0966		VoC_lw16i(REG4,0x100a)
0xFFC0C165,	//0x0968		VoC_NOP	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDFC7D855,	//0x096a		VoC_push16(REG7,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xD1297FC0,	//0x096c		VoC_mac32inc_rp(REG5,REG1,IN_PARALLEL)	|	VoC_NOP
0xFF2ADFC1,	//0x096e		VoC_movreg32(REG45,ACC1,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xE00D41A7,	//0x0970		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG6,REG4,DEFAULT)
0x4C27E0EC,	//0x0972		VoC_bnlt16_rd(COEFFS_RL6_NLTZ_NUM0,REG7,0x10b2)(lo)	|	VoC_movreg16(RL6_LO,REG7,DEFAULT)
0x0ACD10B2,	//0x0974		VoC_lw16i(RL6_HI,0xffff)(lo)	|	VoC_bnlt16_rd(COEFFS_RL6_NLTZ_NUM0,REG7,0x10b2)(hi)
0xFBA67FFF,	//0x0976		VoC_shr32_ri(RL6,0xfffffff4,DEFAULT)	|	VoC_lw16i(RL6_HI,0xffff)(hi)
		//0x0977		COEFFS_RL6_NLTZ_NUM0
0x08E32B80,	//0x0978		VoC_jal(sbc_eq_div_32)
0xDF81DC81,	//0x097a		VoC_pop16(REG1,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0xFFC0DF87,	//0x097c		VoC_NOP	|	VoC_pop16(REG7,DEFAULT)
0xDFC15C87,	//0x097e		VoC_push16(REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x43A7FF2A,	//0x0980		VoC_sub16_rr(REG7,REG6,REG4,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0xE0ECE00D,	//0x0982		VoC_movreg16(RL6_LO,REG7,DEFAULT)	|	VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)
0x10B24C27,	//0x0984		VoC_bnlt16_rd(COEFFS_RL6_NLTZ_NUM2,REG7,0x10b2)
0x7FFF0ACD,	//0x0986		VoC_lw16i(RL6_HI,0xffff)
		//0x0988		COEFFS_RL6_NLTZ_NUM2
0x2B80FBA6,	//0x0988		VoC_jal(sbc_eq_div_32)(lo)	|	VoC_shr32_ri(RL6,0xfffffff4,DEFAULT)
0xDC8108E3,	//0x098a		VoC_sw16inc_p(REG1,REG0,DEFAULT)	|	VoC_jal(sbc_eq_div_32)(hi)
		//0x098c		VoC_endloop0
0xDFA9DF81,	//0x098c		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0xE580FFC0,	//0x098e		VoC_return	|	VoC_NOP
		//0x0990		sbc_detect_mute
0x7002DFE9,	//0x0990		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1804E013,	//0x0992		VoC_lw16i_set_inc(REG0,0x42a8,0x1)(lo)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x140142A8,	//0x0994		VoC_lw16_d(REG1,0x405e)(lo)	|	VoC_lw16i_set_inc(REG0,0x42a8,0x1)(hi)
0xF8F9405E,	//0x0996		VoC_shr16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG1,0x405e)(hi)
0x50EE1502,	//0x0998		VoC_sw16_d(REG2,0x50ee)
0x099F2E08,	//0x099a		VoC_loop_r(0,REG1)
0x31C5D885,	//0x099c		VoC_bnez16_r(sbc_detect_mute_L0,REG5)(lo)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFFC009A2,	//0x099e		VoC_NAD	|	VoC_bnez16_r(sbc_detect_mute_L0,REG5)(hi)
		//0x099f		VoC_endloop0
0x50EE1503,	//0x09a0		VoC_sw16_d(REG3,0x50ee)
		//0x09a2		sbc_detect_mute_L0
0xFFC0DFA9,	//0x09a2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x09a4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x09a6		sbc_44_1k_to_48k_filter
0xE0045FE9,	//0x09a6		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF4027019,	//0x09a8		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x52321504,	//0x09aa		VoC_sw16_d(REG4,0x5232)
0x405E1504,	//0x09ac		VoC_sw16_d(REG4,0x405e)
0x42A81808,	//0x09ae		VoC_lw16i_set_inc(REG0,0x42a8,0x2)
0x511A1809,	//0x09b0		VoC_lw16i_set_inc(REG1,0x511a,0x2)
		//0x09b2		sbc_44_1k_to_48k_filter_begain
0x50EC1405,	//0x09b2		VoC_lw16_d(REG5,0x50ec)
0x52323825,	//0x09b4		VoC_bgt16_rd(sbc_44_1k_to_48k_filter_begain0,REG5,0x5232)
0x0A032B00,	//0x09b6		VoC_jump_lg(sbc_44_1k_to_48k_filter_end)
		//0x09b8		sbc_44_1k_to_48k_filter_begain0
0x10041403,	//0x09b8		VoC_lw16_d(REG3,0x1004)
0x50F1071B,	//0x09ba		VoC_add16_rd(REG3,REG3,0x50f1)
0x10054923,	//0x09bc		VoC_blt16_rd(sbc_44_1k_to_48k_filter_L0,REG3,0x1005)
0x1005079B,	//0x09be		VoC_sub16_rd(REG3,REG3,0x1005)
0x180AD9C2,	//0x09c0		VoC_lw16i_set_inc(REG2,0x5116,0x2)(lo)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF0265116,	//0x09c2		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x5116,0x2)(hi)
0x52320736,	//0x09c4		VoC_add16_rd(REG6,REG6,0x5232)
0x09CB2C26,	//0x09c6		VoC_loop_i(0x0,0x13)
0x0792D9D4,	//0x09c8		VoC_sub16_rd(REG2,REG2,0x82)(lo)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0xDD940082,	//0x09ca		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x82)(hi)
		//0x09cb		VoC_endloop0
0x50F21582,	//0x09cc		VoC_sw32_d(REG45,0x50f2)
0x52321506,	//0x09ce		VoC_sw16_d(REG6,0x5232)
		//0x09d0		sbc_44_1k_to_48k_filter_L0
0x50F2180A,	//0x09d0		VoC_lw16i_set_inc(REG2,0x50f2,0x2)
0x50F11503,	//0x09d2		VoC_sw16_d(REG3,0x50f1)
0x44E3F284,	//0x09d4		VoC_mult16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x14,DEFAULT)
0x0A84F007,	//0x09d6		VoC_lw16i(REG4,0x384)(lo)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xC0E30384,	//0x09d8		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x384)(hi)
0xFF457F44,	//0x09da		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x09DF2C28,	//0x09dc		VoC_loop_i(0x0,0x14)
0x5023D9D2,	//0x09de		VoC_mac32_rp(REG4,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x09df		VoC_endloop0
0xF026D16B,	//0x09e0		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_macXinc_rp(REG5,REG3,IN_PARALLEL)
0x405E0736,	//0x09e2		VoC_add16_rd(REG6,REG6,0x405e)
0xFA657A64,	//0x09e4		VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0x10065434,	//0x09e6		VoC_bngt32_rd(sbc_44_1k_to_48k_filter_L_1,ACC0,0x1006)
0x7FFF0A84,	//0x09e8		VoC_lw16i(REG4,0x7fff)
0xFFC065C8,	//0x09ea		VoC_NAD(IN_PARALLEL)	|	VoC_jump(sbc_44_1k_to_48k_filter_L_end)
		//0x09ec		sbc_44_1k_to_48k_filter_L_1
0x1008502C,	//0x09ec		VoC_bgt32_rd(sbc_44_1k_to_48k_filter_L_2,ACC0,0x1008)
0x00010AC4,	//0x09ee		VoC_lw16i(REG4,0x8001)
0xE104E5C2,	//0x09f0		VoC_movreg16(REG4,ACC0_LO,DEFAULT)	|	VoC_jump(sbc_44_1k_to_48k_filter_L_end)
		//0x09f1		sbc_44_1k_to_48k_filter_L_2
		//0x09f2		sbc_44_1k_to_48k_filter_L_end
0x10065435,	//0x09f2		VoC_bngt32_rd(sbc_44_1k_to_48k_filter_R_1,ACC1,0x1006)
0x7FFF0A85,	//0x09f4		VoC_lw16i(REG5,0x7fff)
0xFFC065C8,	//0x09f6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(sbc_44_1k_to_48k_filter_R_end)
		//0x09f8		sbc_44_1k_to_48k_filter_R_1
0x1008502D,	//0x09f8		VoC_bgt32_rd(sbc_44_1k_to_48k_filter_R_2,ACC1,0x1008)
0x00010AC5,	//0x09fa		VoC_lw16i(REG5,0x8001)
0xE145E5C2,	//0x09fc		VoC_movreg16(REG5,ACC1_LO,DEFAULT)	|	VoC_jump(sbc_44_1k_to_48k_filter_R_end)
		//0x09fd		sbc_44_1k_to_48k_filter_R_2
		//0x09fe		sbc_44_1k_to_48k_filter_R_end
0x405E1506,	//0x09fe		VoC_sw16_d(REG6,0x405e)
0x2B00DDCA,	//0x0a00		VoC_jump_lg(sbc_44_1k_to_48k_filter_begain)(lo)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDFA909B2,	//0x0a02		VoC_pop16(RA,DEFAULT)	|	VoC_jump_lg(sbc_44_1k_to_48k_filter_begain)(hi)
		//0x0a03		sbc_44_1k_to_48k_filter_end
0xE580FFC0,	//0x0a04		VoC_return	|	VoC_NOP
