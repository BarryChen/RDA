<?xml version="1.0" encoding="UTF-8"?>
<archive asm="no">
    
    <comment>
        This file contains the portion of the module's memory map that will be
        accessible through CoolWatcher (or any CoolXml tool). It is also used
        for the get version mechanism.
    </comment>


    <!-- Add here some XMD files, to include some types. -->
    <include file='sx_task.xmd'/>

    
    <!-- Create here the types you want to access for this module. -->
    <var name='SXR_NB_MAX_JOB' value='12'></var>

    <var name='SXR_NB_MAX_JOB_EVT' value='16'></var>

    <typedef name='SXR_JOB_PREAL_STACK'>
        <ptr name='stackTop' type='uint32'></ptr>
        <ptr name='stackBottom' type='uint32'></ptr>
    </typedef>

    <alias name='SXR_JOB_STACK_DESCRIPTOR'>
        <instance name='unused' type='SXR_JOB_PREAL_STACK' count='10'></instance>
    </alias>

    <typedef name='sxr_JbDesc'>
        <ptr name='JbBody' type='uint32'></ptr>
        <ptr name='JbExit' type='uint32'></ptr>
        <ptr name='Name' type='int8'></ptr>
        <uint16 name='Id'></uint16>
        <uint8 name='StackSize32'></uint8>
        <uint8 name='Priority'></uint8>
    </typedef>

    <typedef name='sxr_JbCtx'>
        <ptr name='Sp' type='uint32'></ptr>
        <ptr name='Desc' type='sxr_JbDesc' ckeywords='CONST'></ptr>
        <ptr name='Data' type='VOID'></ptr>
        <ptr name='StackSwp' type='uint32'></ptr>
        <ptr name='StackTop' type='uint32'></ptr>
        <ptr name='StackBottom' type='uint32'></ptr>
        <uint16 name='State'></uint16>
        <uint8 name='Free'></uint8>
        <uint8 name='IdxSort'></uint8>
    </typedef>

    <typedef name='sxr_Job'>
        <uint8 name='Active'></uint8>
        <uint8 name='LastActive'></uint8>
        <uint8 name='InitCnt'></uint8>
        <uint8 name='IdxFree'></uint8>
        <uint8 name='IdxQueue'></uint8>
        <uint8 name='Load'></uint8>
        <uint8 name='EvtQueue' count='SXR_NB_MAX_JOB_EVT'></uint8>
        <ptr name='EvtData' type='VOID' count='SXR_NB_MAX_JOB_EVT'></ptr>
        <instance name='Ctx' type='sxr_JbCtx' count='SXR_NB_MAX_JOB'></instance>
        <uint8 name='Sorted' count='SXR_NB_MAX_JOB'></uint8>
        <uint8 name='FirstReady'></uint8>
        <uint8 name='SkipFrameEndEvt'></uint8>
        <uint32 name='BitMapReady'></uint32>
        <uint16 name='EvtStatus' count='4'></uint16>
    </typedef>


    <!-- Type used to define the accessible structures of the module. -->
   <typedef name="SX_MAP_ACCESS_T">
        <comment>
            This global variable is the shared structure of SX.
        </comment>
        <!-- Add here the types you want the access. -->
        <ptr name='sxExternalTraceEnablePtr' type='uint32'></ptr>
        <ptr name='sxsDebugIdleHookEnablePtr' type='uint32'></ptr>
   </typedef>

   <cjoker>

// =============================================================================
// sx_RegisterYourself
// -----------------------------------------------------------------------------
/// This function registers the module itself to HAL so that the version and
/// the map accessor are filled. Then, the CSW get version function and the
/// CoolWatcher get version command will work.
// =============================================================================
PUBLIC VOID sx_RegisterYourself(VOID);

    </cjoker>

</archive>
