/*
================================================================================

  This source code is property of StackCom. The information contained in this
  file is confidential. Distribution, reproduction, as well as exploitation,or
  transmisison of any content of this file is not allowed except if expressly
  permitted. Infringements result in damage claims.

  Copyright StackCom (c) 2003

================================================================================
*/

/*
================================================================================
  File         sxs_srl.hp
--------------------------------------------------------------------------------

  Scope      : Serial port management private header file.

  History    :
--------------------------------------------------------------------------------
 Aug 13 2003 |  ADA  | Creation
================================================================================
*/

#ifndef __SXS_SRL_HP__
#define __SXS_SRL_HP__

#ifdef __SXS_SRL_VAR__
#define DefExtern
#else
#define DefExtern extern
#endif

#include "sxs_type.h"
#include "sxs_srl.h"
#include "sxr_csp.h"


#define SXS_NB_SERIAL_PORTS PAL_NB_MAX_SERIAL
#define SXS_RX_BUFFER_SIZE  256
#define SXS_TX_BUFFER_SIZE  256

DefExtern struct
{
 u8   RxBuffer [SXS_RX_BUFFER_SIZE];
 u8   TxBuffer [SXS_TX_BUFFER_SIZE];
 u8   WIdxRx;
 u8   RIdxRx;
 u8   WIdxTx;
 u8   RIdxTx;
 u16  Setting;
 u8   Status;
 u8   RmtCpuIdx;
 u8   NotificationMsk;
 u8   ModemStatus    ;
 u8   LastModemStatus;
 u8   PlusCnt;
 u16  (*ReadTxData) (u8 *BufOut, u16 Size, u8 RmtCpuIdx);
 u16  (*WriteRxData) (u8 *BufIn, u16 Size, u8 RmtCpuIdx);
 u16  (*GetBufStatus) (u8 RmtCpuIdx);
 void (*StatusNotification) (u8 PortIdx, u8 Status, u8 LastStatus);
} sxs_SerialDesc [SXS_NB_SERIAL_PORTS];


#define SXS_RX_DISABLED (1 << 0)
#define SXS_TX_DISABLED (1 << 1)
#define SXS_SERIAL_ON   (1 << 2)
#define SXS_ECHO_SET    (1 << 3)

#ifdef __SXS_SRL_VAR__
DefExtern const u32 sxs_SerialRateList [SXS_NB_SERIAL_RATE] =
{
 460800, 230400, 115200,
 57600,  38400,  19200,
 9600,   4800,   2400,
 1200,   600,    300,
 75
};
#else
DefExtern const u32 sxs_SerialRateList [SXS_NB_SERIAL_RATE];
#endif

#undef DefExtern

void sxs_SerialISR (u8 PortIdx);

// =============================================================================
// sxs_Flush
// -----------------------------------------------------------------------------
/// Fill the FIFO with Tx buffer data when any.
/// @param PortIdx  Port index.
/// @return         Active status of the port.
// =============================================================================
u8 sxs_Flush     (u8 PortIdx);

u16  sxs_GetRxBufAvailability (u8 PortIdx);
u8   sxs_PutRxData (u8 *Data, u8 Size, u8 PortIdx);

#endif

